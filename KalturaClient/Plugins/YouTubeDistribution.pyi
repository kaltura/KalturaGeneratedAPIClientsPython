# ===================================================================================================
#                           _  __     _ _
#                          | |/ /__ _| | |_ _  _ _ _ __ _
#                          | ' </ _` | |  _| || | '_/ _` |
#                          |_|\_\__,_|_|\__|\_,_|_| \__,_|
#
# This file is part of the Kaltura Collaborative Media Suite which allows users
# to do with audio, video, and animation what Wiki platforms allow them to do with
# text.
#
# Copyright (C) 2006-2023  Kaltura Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http:#www.gnu.org/licenses/>.
#
# @ignore
# ===================================================================================================
from typing import List, IO, Any
from .Core import *
from .ContentDistribution import *
from KalturaClient.Base import KalturaObjectBase, KalturaServiceBase

class KalturaYouTubeDistributionFeedSpecVersion(object):
    VERSION_1 = "1"
    VERSION_2 = "2"
    VERSION_3 = "3"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaYouTubeDistributionProfileOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    UPDATED_AT_ASC = "+updatedAt"
    CREATED_AT_DESC = "-createdAt"
    UPDATED_AT_DESC = "-updatedAt"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaYouTubeDistributionProviderOrderBy(object):

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaYouTubeDistributionProvider(KalturaDistributionProvider):
    def __init__(self,
            type: KalturaDistributionProviderType = NotImplemented,
            name: str = NotImplemented,
            scheduleUpdateEnabled: bool = NotImplemented,
            availabilityUpdateEnabled: bool = NotImplemented,
            deleteInsteadUpdate: bool = NotImplemented,
            intervalBeforeSunrise: int = NotImplemented,
            intervalBeforeSunset: int = NotImplemented,
            updateRequiredEntryFields: str = NotImplemented,
            updateRequiredMetadataXPaths: str = NotImplemented): ...
        pass

class KalturaYouTubeDistributionJobProviderData(KalturaConfigurableDistributionJobProviderData):
    videoAssetFilePath: str
    thumbAssetFilePath: str
    thumbAssetId: str
    captionAssetIds: str
    sftpDirectory: str
    sftpMetadataFilename: str
    currentPlaylists: str
    newPlaylists: str
    submitXml: str
    updateXml: str
    deleteXml: str
    googleClientId: str
    googleClientSecret: str
    googleTokenData: str
    captionsCsvMap: str
    submitCsvMap: str
    updateCsvMap: str
    deleteVideoIds: str
    def __init__(self,
            fieldValues: str = NotImplemented,
            videoAssetFilePath: str = NotImplemented,
            thumbAssetFilePath: str = NotImplemented,
            thumbAssetId: str = NotImplemented,
            captionAssetIds: str = NotImplemented,
            sftpDirectory: str = NotImplemented,
            sftpMetadataFilename: str = NotImplemented,
            currentPlaylists: str = NotImplemented,
            newPlaylists: str = NotImplemented,
            submitXml: str = NotImplemented,
            updateXml: str = NotImplemented,
            deleteXml: str = NotImplemented,
            googleClientId: str = NotImplemented,
            googleClientSecret: str = NotImplemented,
            googleTokenData: str = NotImplemented,
            captionsCsvMap: str = NotImplemented,
            submitCsvMap: str = NotImplemented,
            updateCsvMap: str = NotImplemented,
            deleteVideoIds: str = NotImplemented): ...

    def getVideoAssetFilePath(self) -> str: ...
    def setVideoAssetFilePath(self, newVideoAssetFilePath: str) -> None: ...
    def getThumbAssetFilePath(self) -> str: ...
    def setThumbAssetFilePath(self, newThumbAssetFilePath: str) -> None: ...
    def getThumbAssetId(self) -> str: ...
    def setThumbAssetId(self, newThumbAssetId: str) -> None: ...
    def getCaptionAssetIds(self) -> str: ...
    def setCaptionAssetIds(self, newCaptionAssetIds: str) -> None: ...
    def getSftpDirectory(self) -> str: ...
    def setSftpDirectory(self, newSftpDirectory: str) -> None: ...
    def getSftpMetadataFilename(self) -> str: ...
    def setSftpMetadataFilename(self, newSftpMetadataFilename: str) -> None: ...
    def getCurrentPlaylists(self) -> str: ...
    def setCurrentPlaylists(self, newCurrentPlaylists: str) -> None: ...
    def getNewPlaylists(self) -> str: ...
    def setNewPlaylists(self, newNewPlaylists: str) -> None: ...
    def getSubmitXml(self) -> str: ...
    def setSubmitXml(self, newSubmitXml: str) -> None: ...
    def getUpdateXml(self) -> str: ...
    def setUpdateXml(self, newUpdateXml: str) -> None: ...
    def getDeleteXml(self) -> str: ...
    def setDeleteXml(self, newDeleteXml: str) -> None: ...
    def getGoogleClientId(self) -> str: ...
    def setGoogleClientId(self, newGoogleClientId: str) -> None: ...
    def getGoogleClientSecret(self) -> str: ...
    def setGoogleClientSecret(self, newGoogleClientSecret: str) -> None: ...
    def getGoogleTokenData(self) -> str: ...
    def setGoogleTokenData(self, newGoogleTokenData: str) -> None: ...
    def getCaptionsCsvMap(self) -> str: ...
    def setCaptionsCsvMap(self, newCaptionsCsvMap: str) -> None: ...
    def getSubmitCsvMap(self) -> str: ...
    def setSubmitCsvMap(self, newSubmitCsvMap: str) -> None: ...
    def getUpdateCsvMap(self) -> str: ...
    def setUpdateCsvMap(self, newUpdateCsvMap: str) -> None: ...
    def getDeleteVideoIds(self) -> str: ...
    def setDeleteVideoIds(self, newDeleteVideoIds: str) -> None: ...

class KalturaYouTubeDistributionProfile(KalturaConfigurableDistributionProfile):
    feedSpecVersion: KalturaYouTubeDistributionFeedSpecVersion
    username: str
    notificationEmail: str
    sftpHost: str
    sftpPort: int
    sftpLogin: str
    sftpPublicKey: str
    sftpPrivateKey: str
    sftpBaseDir: str
    ownerName: str
    defaultCategory: str
    allowComments: str
    allowEmbedding: str
    allowRatings: str
    allowResponses: str
    commercialPolicy: str
    ugcPolicy: str
    target: str
    adServerPartnerId: str
    enableAdServer: bool
    allowPreRollAds: bool
    allowPostRollAds: bool
    strict: str
    overrideManualEdits: str
    urgentReference: str
    allowSyndication: str
    hideViewCount: str
    allowAdsenseForVideo: str
    allowInvideo: str
    allowMidRollAds: bool
    instreamStandard: str
    instreamTrueview: str
    claimType: str
    blockOutsideOwnership: str
    captionAutosync: str
    deleteReference: bool
    releaseClaims: bool
    apiAuthorizeUrl: str
    privacyStatus: str
    enableContentId: str
    thirdPartyAds: str
    productListingAds: str
    domainWhitelist: str
    notifySubscribers: str
    def __init__(self,
            id: int = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            partnerId: int = NotImplemented,
            providerType: KalturaDistributionProviderType = NotImplemented,
            name: str = NotImplemented,
            status: KalturaDistributionProfileStatus = NotImplemented,
            submitEnabled: KalturaDistributionProfileActionStatus = NotImplemented,
            updateEnabled: KalturaDistributionProfileActionStatus = NotImplemented,
            deleteEnabled: KalturaDistributionProfileActionStatus = NotImplemented,
            reportEnabled: KalturaDistributionProfileActionStatus = NotImplemented,
            autoCreateFlavors: str = NotImplemented,
            autoCreateThumb: str = NotImplemented,
            optionalFlavorParamsIds: str = NotImplemented,
            requiredFlavorParamsIds: str = NotImplemented,
            optionalThumbDimensions: List[KalturaDistributionThumbDimensions] = NotImplemented,
            requiredThumbDimensions: List[KalturaDistributionThumbDimensions] = NotImplemented,
            optionalAssetDistributionRules: List[KalturaAssetDistributionRule] = NotImplemented,
            requiredAssetDistributionRules: List[KalturaAssetDistributionRule] = NotImplemented,
            sunriseDefaultOffset: int = NotImplemented,
            sunsetDefaultOffset: int = NotImplemented,
            recommendedStorageProfileForDownload: int = NotImplemented,
            recommendedDcForDownload: int = NotImplemented,
            recommendedDcForExecute: int = NotImplemented,
            distributeTrigger: KalturaDistributeTrigger = NotImplemented,
            supportImageEntry: bool = NotImplemented,
            fieldConfigArray: List[KalturaDistributionFieldConfig] = NotImplemented,
            itemXpathsToExtend: List[KalturaExtendingItemMrssParameter] = NotImplemented,
            useCategoryEntries: bool = NotImplemented,
            feedSpecVersion: KalturaYouTubeDistributionFeedSpecVersion = NotImplemented,
            username: str = NotImplemented,
            notificationEmail: str = NotImplemented,
            sftpHost: str = NotImplemented,
            sftpPort: int = NotImplemented,
            sftpLogin: str = NotImplemented,
            sftpPublicKey: str = NotImplemented,
            sftpPrivateKey: str = NotImplemented,
            sftpBaseDir: str = NotImplemented,
            ownerName: str = NotImplemented,
            defaultCategory: str = NotImplemented,
            allowComments: str = NotImplemented,
            allowEmbedding: str = NotImplemented,
            allowRatings: str = NotImplemented,
            allowResponses: str = NotImplemented,
            commercialPolicy: str = NotImplemented,
            ugcPolicy: str = NotImplemented,
            target: str = NotImplemented,
            adServerPartnerId: str = NotImplemented,
            enableAdServer: bool = NotImplemented,
            allowPreRollAds: bool = NotImplemented,
            allowPostRollAds: bool = NotImplemented,
            strict: str = NotImplemented,
            overrideManualEdits: str = NotImplemented,
            urgentReference: str = NotImplemented,
            allowSyndication: str = NotImplemented,
            hideViewCount: str = NotImplemented,
            allowAdsenseForVideo: str = NotImplemented,
            allowInvideo: str = NotImplemented,
            allowMidRollAds: bool = NotImplemented,
            instreamStandard: str = NotImplemented,
            instreamTrueview: str = NotImplemented,
            claimType: str = NotImplemented,
            blockOutsideOwnership: str = NotImplemented,
            captionAutosync: str = NotImplemented,
            deleteReference: bool = NotImplemented,
            releaseClaims: bool = NotImplemented,
            apiAuthorizeUrl: str = NotImplemented,
            privacyStatus: str = NotImplemented,
            enableContentId: str = NotImplemented,
            thirdPartyAds: str = NotImplemented,
            productListingAds: str = NotImplemented,
            domainWhitelist: str = NotImplemented,
            notifySubscribers: str = NotImplemented): ...

    def getFeedSpecVersion(self) -> KalturaYouTubeDistributionFeedSpecVersion: ...
    def setFeedSpecVersion(self, newFeedSpecVersion: KalturaYouTubeDistributionFeedSpecVersion) -> None: ...
    def getUsername(self) -> str: ...
    def setUsername(self, newUsername: str) -> None: ...
    def getNotificationEmail(self) -> str: ...
    def setNotificationEmail(self, newNotificationEmail: str) -> None: ...
    def getSftpHost(self) -> str: ...
    def setSftpHost(self, newSftpHost: str) -> None: ...
    def getSftpPort(self) -> int: ...
    def setSftpPort(self, newSftpPort: int) -> None: ...
    def getSftpLogin(self) -> str: ...
    def setSftpLogin(self, newSftpLogin: str) -> None: ...
    def getSftpPublicKey(self) -> str: ...
    def setSftpPublicKey(self, newSftpPublicKey: str) -> None: ...
    def getSftpPrivateKey(self) -> str: ...
    def setSftpPrivateKey(self, newSftpPrivateKey: str) -> None: ...
    def getSftpBaseDir(self) -> str: ...
    def setSftpBaseDir(self, newSftpBaseDir: str) -> None: ...
    def getOwnerName(self) -> str: ...
    def setOwnerName(self, newOwnerName: str) -> None: ...
    def getDefaultCategory(self) -> str: ...
    def setDefaultCategory(self, newDefaultCategory: str) -> None: ...
    def getAllowComments(self) -> str: ...
    def setAllowComments(self, newAllowComments: str) -> None: ...
    def getAllowEmbedding(self) -> str: ...
    def setAllowEmbedding(self, newAllowEmbedding: str) -> None: ...
    def getAllowRatings(self) -> str: ...
    def setAllowRatings(self, newAllowRatings: str) -> None: ...
    def getAllowResponses(self) -> str: ...
    def setAllowResponses(self, newAllowResponses: str) -> None: ...
    def getCommercialPolicy(self) -> str: ...
    def setCommercialPolicy(self, newCommercialPolicy: str) -> None: ...
    def getUgcPolicy(self) -> str: ...
    def setUgcPolicy(self, newUgcPolicy: str) -> None: ...
    def getTarget(self) -> str: ...
    def setTarget(self, newTarget: str) -> None: ...
    def getAdServerPartnerId(self) -> str: ...
    def setAdServerPartnerId(self, newAdServerPartnerId: str) -> None: ...
    def getEnableAdServer(self) -> bool: ...
    def setEnableAdServer(self, newEnableAdServer: bool) -> None: ...
    def getAllowPreRollAds(self) -> bool: ...
    def setAllowPreRollAds(self, newAllowPreRollAds: bool) -> None: ...
    def getAllowPostRollAds(self) -> bool: ...
    def setAllowPostRollAds(self, newAllowPostRollAds: bool) -> None: ...
    def getStrict(self) -> str: ...
    def setStrict(self, newStrict: str) -> None: ...
    def getOverrideManualEdits(self) -> str: ...
    def setOverrideManualEdits(self, newOverrideManualEdits: str) -> None: ...
    def getUrgentReference(self) -> str: ...
    def setUrgentReference(self, newUrgentReference: str) -> None: ...
    def getAllowSyndication(self) -> str: ...
    def setAllowSyndication(self, newAllowSyndication: str) -> None: ...
    def getHideViewCount(self) -> str: ...
    def setHideViewCount(self, newHideViewCount: str) -> None: ...
    def getAllowAdsenseForVideo(self) -> str: ...
    def setAllowAdsenseForVideo(self, newAllowAdsenseForVideo: str) -> None: ...
    def getAllowInvideo(self) -> str: ...
    def setAllowInvideo(self, newAllowInvideo: str) -> None: ...
    def getAllowMidRollAds(self) -> bool: ...
    def setAllowMidRollAds(self, newAllowMidRollAds: bool) -> None: ...
    def getInstreamStandard(self) -> str: ...
    def setInstreamStandard(self, newInstreamStandard: str) -> None: ...
    def getInstreamTrueview(self) -> str: ...
    def setInstreamTrueview(self, newInstreamTrueview: str) -> None: ...
    def getClaimType(self) -> str: ...
    def setClaimType(self, newClaimType: str) -> None: ...
    def getBlockOutsideOwnership(self) -> str: ...
    def setBlockOutsideOwnership(self, newBlockOutsideOwnership: str) -> None: ...
    def getCaptionAutosync(self) -> str: ...
    def setCaptionAutosync(self, newCaptionAutosync: str) -> None: ...
    def getDeleteReference(self) -> bool: ...
    def setDeleteReference(self, newDeleteReference: bool) -> None: ...
    def getReleaseClaims(self) -> bool: ...
    def setReleaseClaims(self, newReleaseClaims: bool) -> None: ...
    def getApiAuthorizeUrl(self) -> str: ...
    def setApiAuthorizeUrl(self, newApiAuthorizeUrl: str) -> None: ...
    def getPrivacyStatus(self) -> str: ...
    def setPrivacyStatus(self, newPrivacyStatus: str) -> None: ...
    def getEnableContentId(self) -> str: ...
    def setEnableContentId(self, newEnableContentId: str) -> None: ...
    def getThirdPartyAds(self) -> str: ...
    def setThirdPartyAds(self, newThirdPartyAds: str) -> None: ...
    def getProductListingAds(self) -> str: ...
    def setProductListingAds(self, newProductListingAds: str) -> None: ...
    def getDomainWhitelist(self) -> str: ...
    def setDomainWhitelist(self, newDomainWhitelist: str) -> None: ...
    def getNotifySubscribers(self) -> str: ...
    def setNotifySubscribers(self, newNotifySubscribers: str) -> None: ...

class KalturaYouTubeDistributionProviderBaseFilter(KalturaDistributionProviderFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            typeEqual: KalturaDistributionProviderType = NotImplemented,
            typeIn: str = NotImplemented): ...
        pass

class KalturaYouTubeDistributionProviderFilter(KalturaYouTubeDistributionProviderBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            typeEqual: KalturaDistributionProviderType = NotImplemented,
            typeIn: str = NotImplemented): ...
        pass

class KalturaYouTubeDistributionProfileBaseFilter(KalturaConfigurableDistributionProfileFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            statusEqual: KalturaDistributionProfileStatus = NotImplemented,
            statusIn: str = NotImplemented): ...
        pass

class KalturaYouTubeDistributionProfileFilter(KalturaYouTubeDistributionProfileBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            statusEqual: KalturaDistributionProfileStatus = NotImplemented,
            statusIn: str = NotImplemented): ...
        pass

class KalturaYouTubeDistributionClientPluginServicesProxy: