# ===================================================================================================
#                           _  __     _ _
#                          | |/ /__ _| | |_ _  _ _ _ __ _
#                          | ' </ _` | |  _| || | '_/ _` |
#                          |_|\_\__,_|_|\__|\_,_|_| \__,_|
#
# This file is part of the Kaltura Collaborative Media Suite which allows users
# to do with audio, video, and animation what Wiki platforms allow them to do with
# text.
#
# Copyright (C) 2006-2023  Kaltura Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http:#www.gnu.org/licenses/>.
#
# @ignore
# ===================================================================================================
from typing import List, IO, Any
from .Core import *
from KalturaClient.Base import KalturaObjectBase, KalturaServiceBase

class KalturaShortLinkStatus(object):
    DISABLED = 1
    ENABLED = 2
    DELETED = 3

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaShortLinkOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    EXPIRES_AT_ASC = "+expiresAt"
    UPDATED_AT_ASC = "+updatedAt"
    CREATED_AT_DESC = "-createdAt"
    EXPIRES_AT_DESC = "-expiresAt"
    UPDATED_AT_DESC = "-updatedAt"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaShortLink(KalturaObjectBase):
    id: str
    createdAt: int
    updatedAt: int
    expiresAt: int
    partnerId: int
    userId: str
    name: str
    systemName: str
    fullUrl: str
    status: KalturaShortLinkStatus
    def __init__(self,
            id: str = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            expiresAt: int = NotImplemented,
            partnerId: int = NotImplemented,
            userId: str = NotImplemented,
            name: str = NotImplemented,
            systemName: str = NotImplemented,
            fullUrl: str = NotImplemented,
            status: KalturaShortLinkStatus = NotImplemented): ...

    def getId(self) -> str: ...
    def getCreatedAt(self) -> int: ...
    def getUpdatedAt(self) -> int: ...
    def getExpiresAt(self) -> int: ...
    def setExpiresAt(self, newExpiresAt: int) -> None: ...
    def getPartnerId(self) -> int: ...
    def getUserId(self) -> str: ...
    def setUserId(self, newUserId: str) -> None: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getSystemName(self) -> str: ...
    def setSystemName(self, newSystemName: str) -> None: ...
    def getFullUrl(self) -> str: ...
    def setFullUrl(self, newFullUrl: str) -> None: ...
    def getStatus(self) -> KalturaShortLinkStatus: ...
    def setStatus(self, newStatus: KalturaShortLinkStatus) -> None: ...

class KalturaShortLinkBaseFilter(KalturaFilter):
    idEqual: str
    idIn: str
    createdAtGreaterThanOrEqual: int
    createdAtLessThanOrEqual: int
    updatedAtGreaterThanOrEqual: int
    updatedAtLessThanOrEqual: int
    expiresAtGreaterThanOrEqual: int
    expiresAtLessThanOrEqual: int
    partnerIdEqual: int
    partnerIdIn: str
    userIdEqual: str
    userIdIn: str
    systemNameEqual: str
    systemNameIn: str
    statusEqual: KalturaShortLinkStatus
    statusIn: str
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: str = NotImplemented,
            idIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            expiresAtGreaterThanOrEqual: int = NotImplemented,
            expiresAtLessThanOrEqual: int = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            userIdEqual: str = NotImplemented,
            userIdIn: str = NotImplemented,
            systemNameEqual: str = NotImplemented,
            systemNameIn: str = NotImplemented,
            statusEqual: KalturaShortLinkStatus = NotImplemented,
            statusIn: str = NotImplemented): ...

    def getIdEqual(self) -> str: ...
    def setIdEqual(self, newIdEqual: str) -> None: ...
    def getIdIn(self) -> str: ...
    def setIdIn(self, newIdIn: str) -> None: ...
    def getCreatedAtGreaterThanOrEqual(self) -> int: ...
    def setCreatedAtGreaterThanOrEqual(self, newCreatedAtGreaterThanOrEqual: int) -> None: ...
    def getCreatedAtLessThanOrEqual(self) -> int: ...
    def setCreatedAtLessThanOrEqual(self, newCreatedAtLessThanOrEqual: int) -> None: ...
    def getUpdatedAtGreaterThanOrEqual(self) -> int: ...
    def setUpdatedAtGreaterThanOrEqual(self, newUpdatedAtGreaterThanOrEqual: int) -> None: ...
    def getUpdatedAtLessThanOrEqual(self) -> int: ...
    def setUpdatedAtLessThanOrEqual(self, newUpdatedAtLessThanOrEqual: int) -> None: ...
    def getExpiresAtGreaterThanOrEqual(self) -> int: ...
    def setExpiresAtGreaterThanOrEqual(self, newExpiresAtGreaterThanOrEqual: int) -> None: ...
    def getExpiresAtLessThanOrEqual(self) -> int: ...
    def setExpiresAtLessThanOrEqual(self, newExpiresAtLessThanOrEqual: int) -> None: ...
    def getPartnerIdEqual(self) -> int: ...
    def setPartnerIdEqual(self, newPartnerIdEqual: int) -> None: ...
    def getPartnerIdIn(self) -> str: ...
    def setPartnerIdIn(self, newPartnerIdIn: str) -> None: ...
    def getUserIdEqual(self) -> str: ...
    def setUserIdEqual(self, newUserIdEqual: str) -> None: ...
    def getUserIdIn(self) -> str: ...
    def setUserIdIn(self, newUserIdIn: str) -> None: ...
    def getSystemNameEqual(self) -> str: ...
    def setSystemNameEqual(self, newSystemNameEqual: str) -> None: ...
    def getSystemNameIn(self) -> str: ...
    def setSystemNameIn(self, newSystemNameIn: str) -> None: ...
    def getStatusEqual(self) -> KalturaShortLinkStatus: ...
    def setStatusEqual(self, newStatusEqual: KalturaShortLinkStatus) -> None: ...
    def getStatusIn(self) -> str: ...
    def setStatusIn(self, newStatusIn: str) -> None: ...

class KalturaShortLinkListResponse(KalturaListResponse):
    objects: List[KalturaShortLink]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaShortLink] = NotImplemented): ...

    def getObjects(self) -> List[KalturaShortLink]: ...

class KalturaShortLinkFilter(KalturaShortLinkBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: str = NotImplemented,
            idIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            expiresAtGreaterThanOrEqual: int = NotImplemented,
            expiresAtLessThanOrEqual: int = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            userIdEqual: str = NotImplemented,
            userIdIn: str = NotImplemented,
            systemNameEqual: str = NotImplemented,
            systemNameIn: str = NotImplemented,
            statusEqual: KalturaShortLinkStatus = NotImplemented,
            statusIn: str = NotImplemented): ...
        pass

class KalturaShortLinkService(KalturaServiceBase):
    def add(self, shortLink: KalturaShortLink) -> KalturaShortLink: ...
    def delete(self, id: str) -> KalturaShortLink: ...
    def get(self, id: str) -> KalturaShortLink: ...
    def goto(self, id: str, proxy: bool = False) -> IO[Any]: ...
    def list(self, filter: KalturaShortLinkFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaShortLinkListResponse: ...
    def update(self, id: str, shortLink: KalturaShortLink) -> KalturaShortLink: ...

class KalturaShortLinkClientPluginServicesProxy:
    shortLink: KalturaShortLinkService