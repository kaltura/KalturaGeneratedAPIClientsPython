# ===================================================================================================
#                           _  __     _ _
#                          | |/ /__ _| | |_ _  _ _ _ __ _
#                          | ' </ _` | |  _| || | '_/ _` |
#                          |_|\_\__,_|_|\__|\_,_|_| \__,_|
#
# This file is part of the Kaltura Collaborative Media Suite which allows users
# to do with audio, video, and animation what Wiki platforms allow them to do with
# text.
#
# Copyright (C) 2006-2023  Kaltura Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http:#www.gnu.org/licenses/>.
#
# @ignore
# ===================================================================================================
from typing import List, IO, Any
from .Core import *
from KalturaClient.Base import KalturaObjectBase, KalturaServiceBase

class KalturaDeleteFlavorsLogicType(object):
    KEEP_LIST_DELETE_OTHERS = 1
    DELETE_LIST = 2
    DELETE_KEEP_SMALLEST = 3

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaDryRunFileType(object):
    LIST_RESPONSE = 1
    CSV = 2

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaScheduledTaskAddOrRemoveType(object):
    ADD = 1
    REMOVE = 2
    MOVE = 3

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaScheduledTaskProfileStatus(object):
    DISABLED = 1
    ACTIVE = 2
    DELETED = 3
    SUSPENDED = 4
    DRY_RUN_ONLY = 5

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaObjectFilterEngineType(object):
    ENTRY = "1"
    ENTRY_VENDOR_TASK = "2"
    RECYCLE_BIN_CLEANUP = "3"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaObjectTaskType(object):
    DISTRIBUTE = "scheduledTaskContentDistribution.Distribute"
    DISPATCH_EVENT_NOTIFICATION = "scheduledTaskEventNotification.DispatchEventNotification"
    EXECUTE_METADATA_XSLT = "scheduledTaskMetadata.ExecuteMetadataXslt"
    DELETE_ENTRY = "1"
    MODIFY_CATEGORIES = "2"
    DELETE_ENTRY_FLAVORS = "3"
    CONVERT_ENTRY_FLAVORS = "4"
    DELETE_LOCAL_CONTENT = "5"
    STORAGE_EXPORT = "6"
    MODIFY_ENTRY = "7"
    MAIL_NOTIFICATION = "8"
    RECYCLE_BIN_CLEANUP = "9"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaScheduledTaskProfileOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    ID_ASC = "+id"
    LAST_EXECUTION_STARTED_AT_ASC = "+lastExecutionStartedAt"
    UPDATED_AT_ASC = "+updatedAt"
    CREATED_AT_DESC = "-createdAt"
    ID_DESC = "-id"
    LAST_EXECUTION_STARTED_AT_DESC = "-lastExecutionStartedAt"
    UPDATED_AT_DESC = "-updatedAt"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaObjectTask(KalturaObjectBase):
    type: KalturaObjectTaskType
    stopProcessingOnError: bool
    def __init__(self,
            type: KalturaObjectTaskType = NotImplemented,
            stopProcessingOnError: bool = NotImplemented): ...

    def getType(self) -> KalturaObjectTaskType: ...
    def getStopProcessingOnError(self) -> bool: ...
    def setStopProcessingOnError(self, newStopProcessingOnError: bool) -> None: ...

class KalturaScheduledTaskProfile(KalturaObjectBase):
    id: int
    partnerId: int
    name: str
    systemName: str
    description: str
    status: KalturaScheduledTaskProfileStatus
    objectFilterEngineType: KalturaObjectFilterEngineType
    objectFilter: KalturaFilter
    objectTasks: List[KalturaObjectTask]
    createdAt: int
    updatedAt: int
    lastExecutionStartedAt: int
    maxTotalCountAllowed: int
    def __init__(self,
            id: int = NotImplemented,
            partnerId: int = NotImplemented,
            name: str = NotImplemented,
            systemName: str = NotImplemented,
            description: str = NotImplemented,
            status: KalturaScheduledTaskProfileStatus = NotImplemented,
            objectFilterEngineType: KalturaObjectFilterEngineType = NotImplemented,
            objectFilter: KalturaFilter = NotImplemented,
            objectTasks: List[KalturaObjectTask] = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            lastExecutionStartedAt: int = NotImplemented,
            maxTotalCountAllowed: int = NotImplemented): ...

    def getId(self) -> int: ...
    def getPartnerId(self) -> int: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getSystemName(self) -> str: ...
    def setSystemName(self, newSystemName: str) -> None: ...
    def getDescription(self) -> str: ...
    def setDescription(self, newDescription: str) -> None: ...
    def getStatus(self) -> KalturaScheduledTaskProfileStatus: ...
    def setStatus(self, newStatus: KalturaScheduledTaskProfileStatus) -> None: ...
    def getObjectFilterEngineType(self) -> KalturaObjectFilterEngineType: ...
    def setObjectFilterEngineType(self, newObjectFilterEngineType: KalturaObjectFilterEngineType) -> None: ...
    def getObjectFilter(self) -> KalturaFilter: ...
    def setObjectFilter(self, newObjectFilter: KalturaFilter) -> None: ...
    def getObjectTasks(self) -> List[KalturaObjectTask]: ...
    def setObjectTasks(self, newObjectTasks: List[KalturaObjectTask]) -> None: ...
    def getCreatedAt(self) -> int: ...
    def getUpdatedAt(self) -> int: ...
    def getLastExecutionStartedAt(self) -> int: ...
    def setLastExecutionStartedAt(self, newLastExecutionStartedAt: int) -> None: ...
    def getMaxTotalCountAllowed(self) -> int: ...
    def setMaxTotalCountAllowed(self, newMaxTotalCountAllowed: int) -> None: ...

class KalturaConvertEntryFlavorsObjectTask(KalturaObjectTask):
    flavorParamsIds: str
    reconvert: bool
    def __init__(self,
            type: KalturaObjectTaskType = NotImplemented,
            stopProcessingOnError: bool = NotImplemented,
            flavorParamsIds: str = NotImplemented,
            reconvert: bool = NotImplemented): ...

    def getFlavorParamsIds(self) -> str: ...
    def setFlavorParamsIds(self, newFlavorParamsIds: str) -> None: ...
    def getReconvert(self) -> bool: ...
    def setReconvert(self, newReconvert: bool) -> None: ...

class KalturaDeleteEntryFlavorsObjectTask(KalturaObjectTask):
    deleteType: KalturaDeleteFlavorsLogicType
    flavorParamsIds: str
    def __init__(self,
            type: KalturaObjectTaskType = NotImplemented,
            stopProcessingOnError: bool = NotImplemented,
            deleteType: KalturaDeleteFlavorsLogicType = NotImplemented,
            flavorParamsIds: str = NotImplemented): ...

    def getDeleteType(self) -> KalturaDeleteFlavorsLogicType: ...
    def setDeleteType(self, newDeleteType: KalturaDeleteFlavorsLogicType) -> None: ...
    def getFlavorParamsIds(self) -> str: ...
    def setFlavorParamsIds(self, newFlavorParamsIds: str) -> None: ...

class KalturaDeleteEntryObjectTask(KalturaObjectTask):
    def __init__(self,
            type: KalturaObjectTaskType = NotImplemented,
            stopProcessingOnError: bool = NotImplemented): ...
        pass

class KalturaDeleteLocalContentObjectTask(KalturaObjectTask):
    def __init__(self,
            type: KalturaObjectTaskType = NotImplemented,
            stopProcessingOnError: bool = NotImplemented): ...
        pass

class KalturaMailNotificationObjectTask(KalturaObjectTask):
    mailTo: str
    sender: str
    subject: str
    message: str
    footer: str
    link: str
    sendToUsers: bool
    def __init__(self,
            type: KalturaObjectTaskType = NotImplemented,
            stopProcessingOnError: bool = NotImplemented,
            mailTo: str = NotImplemented,
            sender: str = NotImplemented,
            subject: str = NotImplemented,
            message: str = NotImplemented,
            footer: str = NotImplemented,
            link: str = NotImplemented,
            sendToUsers: bool = NotImplemented): ...

    def getMailTo(self) -> str: ...
    def setMailTo(self, newMailTo: str) -> None: ...
    def getSender(self) -> str: ...
    def setSender(self, newSender: str) -> None: ...
    def getSubject(self) -> str: ...
    def setSubject(self, newSubject: str) -> None: ...
    def getMessage(self) -> str: ...
    def setMessage(self, newMessage: str) -> None: ...
    def getFooter(self) -> str: ...
    def setFooter(self, newFooter: str) -> None: ...
    def getLink(self) -> str: ...
    def setLink(self, newLink: str) -> None: ...
    def getSendToUsers(self) -> bool: ...
    def setSendToUsers(self, newSendToUsers: bool) -> None: ...

class KalturaModifyCategoriesObjectTask(KalturaObjectTask):
    addRemoveType: KalturaScheduledTaskAddOrRemoveType
    categoryIds: List[KalturaIntegerValue]
    def __init__(self,
            type: KalturaObjectTaskType = NotImplemented,
            stopProcessingOnError: bool = NotImplemented,
            addRemoveType: KalturaScheduledTaskAddOrRemoveType = NotImplemented,
            categoryIds: List[KalturaIntegerValue] = NotImplemented): ...

    def getAddRemoveType(self) -> KalturaScheduledTaskAddOrRemoveType: ...
    def setAddRemoveType(self, newAddRemoveType: KalturaScheduledTaskAddOrRemoveType) -> None: ...
    def getCategoryIds(self) -> List[KalturaIntegerValue]: ...
    def setCategoryIds(self, newCategoryIds: List[KalturaIntegerValue]) -> None: ...

class KalturaModifyEntryObjectTask(KalturaObjectTask):
    inputMetadataProfileId: int
    inputMetadata: List[KalturaKeyValue]
    outputMetadataProfileId: int
    outputMetadata: List[KalturaKeyValue]
    inputUserId: str
    inputEntitledUsersEdit: str
    inputEntitledUsersPublish: str
    inputEntitledUsersView: str
    resetMediaRepurposingProcess: bool
    def __init__(self,
            type: KalturaObjectTaskType = NotImplemented,
            stopProcessingOnError: bool = NotImplemented,
            inputMetadataProfileId: int = NotImplemented,
            inputMetadata: List[KalturaKeyValue] = NotImplemented,
            outputMetadataProfileId: int = NotImplemented,
            outputMetadata: List[KalturaKeyValue] = NotImplemented,
            inputUserId: str = NotImplemented,
            inputEntitledUsersEdit: str = NotImplemented,
            inputEntitledUsersPublish: str = NotImplemented,
            inputEntitledUsersView: str = NotImplemented,
            resetMediaRepurposingProcess: bool = NotImplemented): ...

    def getInputMetadataProfileId(self) -> int: ...
    def setInputMetadataProfileId(self, newInputMetadataProfileId: int) -> None: ...
    def getInputMetadata(self) -> List[KalturaKeyValue]: ...
    def setInputMetadata(self, newInputMetadata: List[KalturaKeyValue]) -> None: ...
    def getOutputMetadataProfileId(self) -> int: ...
    def setOutputMetadataProfileId(self, newOutputMetadataProfileId: int) -> None: ...
    def getOutputMetadata(self) -> List[KalturaKeyValue]: ...
    def setOutputMetadata(self, newOutputMetadata: List[KalturaKeyValue]) -> None: ...
    def getInputUserId(self) -> str: ...
    def setInputUserId(self, newInputUserId: str) -> None: ...
    def getInputEntitledUsersEdit(self) -> str: ...
    def setInputEntitledUsersEdit(self, newInputEntitledUsersEdit: str) -> None: ...
    def getInputEntitledUsersPublish(self) -> str: ...
    def setInputEntitledUsersPublish(self, newInputEntitledUsersPublish: str) -> None: ...
    def getInputEntitledUsersView(self) -> str: ...
    def setInputEntitledUsersView(self, newInputEntitledUsersView: str) -> None: ...
    def getResetMediaRepurposingProcess(self) -> bool: ...
    def setResetMediaRepurposingProcess(self, newResetMediaRepurposingProcess: bool) -> None: ...

class KalturaRecycleBinCleanupObjectTask(KalturaObjectTask):
    def __init__(self,
            type: KalturaObjectTaskType = NotImplemented,
            stopProcessingOnError: bool = NotImplemented): ...
        pass

class KalturaScheduledTaskJobData(KalturaJobData):
    maxResults: int
    totalCount: int
    fileFormat: KalturaDryRunFileType
    resultsFilePath: str
    referenceTime: int
    def __init__(self,
            maxResults: int = NotImplemented,
            totalCount: int = NotImplemented,
            fileFormat: KalturaDryRunFileType = NotImplemented,
            resultsFilePath: str = NotImplemented,
            referenceTime: int = NotImplemented): ...

    def getMaxResults(self) -> int: ...
    def setMaxResults(self, newMaxResults: int) -> None: ...
    def getTotalCount(self) -> int: ...
    def setTotalCount(self, newTotalCount: int) -> None: ...
    def getFileFormat(self) -> KalturaDryRunFileType: ...
    def setFileFormat(self, newFileFormat: KalturaDryRunFileType) -> None: ...
    def getResultsFilePath(self) -> str: ...
    def setResultsFilePath(self, newResultsFilePath: str) -> None: ...
    def getReferenceTime(self) -> int: ...
    def setReferenceTime(self, newReferenceTime: int) -> None: ...

class KalturaScheduledTaskProfileBaseFilter(KalturaFilter):
    idEqual: int
    idIn: str
    partnerIdEqual: int
    partnerIdIn: str
    systemNameEqual: str
    systemNameIn: str
    statusEqual: KalturaScheduledTaskProfileStatus
    statusIn: str
    createdAtGreaterThanOrEqual: int
    createdAtLessThanOrEqual: int
    updatedAtGreaterThanOrEqual: int
    updatedAtLessThanOrEqual: int
    lastExecutionStartedAtGreaterThanOrEqual: int
    lastExecutionStartedAtLessThanOrEqual: int
    lastExecutionStartedAtLessThanOrEqualOrNull: int
    objectFilterEngineTypeIn: str
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            systemNameEqual: str = NotImplemented,
            systemNameIn: str = NotImplemented,
            statusEqual: KalturaScheduledTaskProfileStatus = NotImplemented,
            statusIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            lastExecutionStartedAtGreaterThanOrEqual: int = NotImplemented,
            lastExecutionStartedAtLessThanOrEqual: int = NotImplemented,
            lastExecutionStartedAtLessThanOrEqualOrNull: int = NotImplemented,
            objectFilterEngineTypeIn: str = NotImplemented): ...

    def getIdEqual(self) -> int: ...
    def setIdEqual(self, newIdEqual: int) -> None: ...
    def getIdIn(self) -> str: ...
    def setIdIn(self, newIdIn: str) -> None: ...
    def getPartnerIdEqual(self) -> int: ...
    def setPartnerIdEqual(self, newPartnerIdEqual: int) -> None: ...
    def getPartnerIdIn(self) -> str: ...
    def setPartnerIdIn(self, newPartnerIdIn: str) -> None: ...
    def getSystemNameEqual(self) -> str: ...
    def setSystemNameEqual(self, newSystemNameEqual: str) -> None: ...
    def getSystemNameIn(self) -> str: ...
    def setSystemNameIn(self, newSystemNameIn: str) -> None: ...
    def getStatusEqual(self) -> KalturaScheduledTaskProfileStatus: ...
    def setStatusEqual(self, newStatusEqual: KalturaScheduledTaskProfileStatus) -> None: ...
    def getStatusIn(self) -> str: ...
    def setStatusIn(self, newStatusIn: str) -> None: ...
    def getCreatedAtGreaterThanOrEqual(self) -> int: ...
    def setCreatedAtGreaterThanOrEqual(self, newCreatedAtGreaterThanOrEqual: int) -> None: ...
    def getCreatedAtLessThanOrEqual(self) -> int: ...
    def setCreatedAtLessThanOrEqual(self, newCreatedAtLessThanOrEqual: int) -> None: ...
    def getUpdatedAtGreaterThanOrEqual(self) -> int: ...
    def setUpdatedAtGreaterThanOrEqual(self, newUpdatedAtGreaterThanOrEqual: int) -> None: ...
    def getUpdatedAtLessThanOrEqual(self) -> int: ...
    def setUpdatedAtLessThanOrEqual(self, newUpdatedAtLessThanOrEqual: int) -> None: ...
    def getLastExecutionStartedAtGreaterThanOrEqual(self) -> int: ...
    def setLastExecutionStartedAtGreaterThanOrEqual(self, newLastExecutionStartedAtGreaterThanOrEqual: int) -> None: ...
    def getLastExecutionStartedAtLessThanOrEqual(self) -> int: ...
    def setLastExecutionStartedAtLessThanOrEqual(self, newLastExecutionStartedAtLessThanOrEqual: int) -> None: ...
    def getLastExecutionStartedAtLessThanOrEqualOrNull(self) -> int: ...
    def setLastExecutionStartedAtLessThanOrEqualOrNull(self, newLastExecutionStartedAtLessThanOrEqualOrNull: int) -> None: ...
    def getObjectFilterEngineTypeIn(self) -> str: ...
    def setObjectFilterEngineTypeIn(self, newObjectFilterEngineTypeIn: str) -> None: ...

class KalturaScheduledTaskProfileListResponse(KalturaListResponse):
    objects: List[KalturaScheduledTaskProfile]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaScheduledTaskProfile] = NotImplemented): ...

    def getObjects(self) -> List[KalturaScheduledTaskProfile]: ...

class KalturaStorageExportObjectTask(KalturaObjectTask):
    storageId: str
    def __init__(self,
            type: KalturaObjectTaskType = NotImplemented,
            stopProcessingOnError: bool = NotImplemented,
            storageId: str = NotImplemented): ...

    def getStorageId(self) -> str: ...
    def setStorageId(self, newStorageId: str) -> None: ...

class KalturaScheduledTaskProfileFilter(KalturaScheduledTaskProfileBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            systemNameEqual: str = NotImplemented,
            systemNameIn: str = NotImplemented,
            statusEqual: KalturaScheduledTaskProfileStatus = NotImplemented,
            statusIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            lastExecutionStartedAtGreaterThanOrEqual: int = NotImplemented,
            lastExecutionStartedAtLessThanOrEqual: int = NotImplemented,
            lastExecutionStartedAtLessThanOrEqualOrNull: int = NotImplemented,
            objectFilterEngineTypeIn: str = NotImplemented): ...
        pass

class KalturaScheduledTaskProfileService(KalturaServiceBase):
    def add(self, scheduledTaskProfile: KalturaScheduledTaskProfile) -> KalturaScheduledTaskProfile: ...
    def delete(self, id: int) -> None: ...
    def get(self, id: int) -> KalturaScheduledTaskProfile: ...
    def getDryRunResults(self, requestId: int) -> KalturaObjectListResponse: ...
    def list(self, filter: KalturaScheduledTaskProfileFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaScheduledTaskProfileListResponse: ...
    def requestDryRun(self, scheduledTaskProfileId: int, maxResults: int = 500) -> int: ...
    def serveDryRunResults(self, requestId: int) -> IO[Any]: ...
    def update(self, id: int, scheduledTaskProfile: KalturaScheduledTaskProfile) -> KalturaScheduledTaskProfile: ...

class KalturaScheduledTaskClientPluginServicesProxy:
    scheduledTaskProfile: KalturaScheduledTaskProfileService