# ===================================================================================================
#                           _  __     _ _
#                          | |/ /__ _| | |_ _  _ _ _ __ _
#                          | ' </ _` | |  _| || | '_/ _` |
#                          |_|\_\__,_|_|\__|\_,_|_| \__,_|
#
# This file is part of the Kaltura Collaborative Media Suite which allows users
# to do with audio, video, and animation what Wiki platforms allow them to do with
# text.
#
# Copyright (C) 2006-2023  Kaltura Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http:#www.gnu.org/licenses/>.
#
# @ignore
# ===================================================================================================
from typing import List, IO, Any
from .Core import *
from KalturaClient.Base import KalturaObjectBase, KalturaServiceBase

class KalturaDrmLicenseExpirationPolicy(object):
    FIXED_DURATION = 1
    ENTRY_SCHEDULING_END = 2
    UNLIMITED = 3

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaDrmPolicyStatus(object):
    ACTIVE = 1
    DELETED = 2

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaDrmProfileStatus(object):
    ACTIVE = 1
    DELETED = 2

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaDrmLicenseScenario(object):
    NONE = "0"
    PROTECTION = "playReady.PROTECTION"
    PURCHASE = "playReady.PURCHASE"
    RENTAL = "playReady.RENTAL"
    SUBSCRIPTION = "playReady.SUBSCRIPTION"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaDrmLicenseType(object):
    NON_PERSISTENT = "playReady.NON_PERSISTENT"
    PERSISTENT = "playReady.PERSISTENT"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaDrmPolicyOrderBy(object):

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaDrmProfileOrderBy(object):
    ID_ASC = "+id"
    NAME_ASC = "+name"
    ID_DESC = "-id"
    NAME_DESC = "-name"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaDrmProviderType(object):
    FAIRPLAY = "fairplay.FAIRPLAY"
    PLAY_READY = "playReady.PLAY_READY"
    WIDEVINE = "widevine.WIDEVINE"
    CENC = "1"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaDrmLicenseAccessDetails(KalturaObjectBase):
    policy: str
    duration: int
    absolute_duration: int
    licenseParams: List[KalturaKeyValue]
    def __init__(self,
            policy: str = NotImplemented,
            duration: int = NotImplemented,
            absolute_duration: int = NotImplemented,
            licenseParams: List[KalturaKeyValue] = NotImplemented): ...

    def getPolicy(self) -> str: ...
    def setPolicy(self, newPolicy: str) -> None: ...
    def getDuration(self) -> int: ...
    def setDuration(self, newDuration: int) -> None: ...
    def getAbsolute_duration(self) -> int: ...
    def setAbsolute_duration(self, newAbsolute_duration: int) -> None: ...
    def getLicenseParams(self) -> List[KalturaKeyValue]: ...
    def setLicenseParams(self, newLicenseParams: List[KalturaKeyValue]) -> None: ...

class KalturaDrmPolicy(KalturaObjectBase):
    id: int
    partnerId: int
    name: str
    systemName: str
    description: str
    provider: KalturaDrmProviderType
    status: KalturaDrmPolicyStatus
    scenario: KalturaDrmLicenseScenario
    licenseType: KalturaDrmLicenseType
    licenseExpirationPolicy: KalturaDrmLicenseExpirationPolicy
    duration: int
    createdAt: int
    updatedAt: int
    licenseParams: List[KalturaKeyValue]
    def __init__(self,
            id: int = NotImplemented,
            partnerId: int = NotImplemented,
            name: str = NotImplemented,
            systemName: str = NotImplemented,
            description: str = NotImplemented,
            provider: KalturaDrmProviderType = NotImplemented,
            status: KalturaDrmPolicyStatus = NotImplemented,
            scenario: KalturaDrmLicenseScenario = NotImplemented,
            licenseType: KalturaDrmLicenseType = NotImplemented,
            licenseExpirationPolicy: KalturaDrmLicenseExpirationPolicy = NotImplemented,
            duration: int = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            licenseParams: List[KalturaKeyValue] = NotImplemented): ...

    def getId(self) -> int: ...
    def getPartnerId(self) -> int: ...
    def setPartnerId(self, newPartnerId: int) -> None: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getSystemName(self) -> str: ...
    def setSystemName(self, newSystemName: str) -> None: ...
    def getDescription(self) -> str: ...
    def setDescription(self, newDescription: str) -> None: ...
    def getProvider(self) -> KalturaDrmProviderType: ...
    def setProvider(self, newProvider: KalturaDrmProviderType) -> None: ...
    def getStatus(self) -> KalturaDrmPolicyStatus: ...
    def setStatus(self, newStatus: KalturaDrmPolicyStatus) -> None: ...
    def getScenario(self) -> KalturaDrmLicenseScenario: ...
    def setScenario(self, newScenario: KalturaDrmLicenseScenario) -> None: ...
    def getLicenseType(self) -> KalturaDrmLicenseType: ...
    def setLicenseType(self, newLicenseType: KalturaDrmLicenseType) -> None: ...
    def getLicenseExpirationPolicy(self) -> KalturaDrmLicenseExpirationPolicy: ...
    def setLicenseExpirationPolicy(self, newLicenseExpirationPolicy: KalturaDrmLicenseExpirationPolicy) -> None: ...
    def getDuration(self) -> int: ...
    def setDuration(self, newDuration: int) -> None: ...
    def getCreatedAt(self) -> int: ...
    def getUpdatedAt(self) -> int: ...
    def getLicenseParams(self) -> List[KalturaKeyValue]: ...
    def setLicenseParams(self, newLicenseParams: List[KalturaKeyValue]) -> None: ...

class KalturaDrmProfile(KalturaObjectBase):
    id: int
    partnerId: int
    name: str
    description: str
    provider: KalturaDrmProviderType
    status: KalturaDrmProfileStatus
    licenseServerUrl: str
    defaultPolicy: str
    createdAt: int
    updatedAt: int
    signingKey: str
    def __init__(self,
            id: int = NotImplemented,
            partnerId: int = NotImplemented,
            name: str = NotImplemented,
            description: str = NotImplemented,
            provider: KalturaDrmProviderType = NotImplemented,
            status: KalturaDrmProfileStatus = NotImplemented,
            licenseServerUrl: str = NotImplemented,
            defaultPolicy: str = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            signingKey: str = NotImplemented): ...

    def getId(self) -> int: ...
    def getPartnerId(self) -> int: ...
    def setPartnerId(self, newPartnerId: int) -> None: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getDescription(self) -> str: ...
    def setDescription(self, newDescription: str) -> None: ...
    def getProvider(self) -> KalturaDrmProviderType: ...
    def setProvider(self, newProvider: KalturaDrmProviderType) -> None: ...
    def getStatus(self) -> KalturaDrmProfileStatus: ...
    def setStatus(self, newStatus: KalturaDrmProfileStatus) -> None: ...
    def getLicenseServerUrl(self) -> str: ...
    def setLicenseServerUrl(self, newLicenseServerUrl: str) -> None: ...
    def getDefaultPolicy(self) -> str: ...
    def setDefaultPolicy(self, newDefaultPolicy: str) -> None: ...
    def getCreatedAt(self) -> int: ...
    def getUpdatedAt(self) -> int: ...
    def getSigningKey(self) -> str: ...
    def setSigningKey(self, newSigningKey: str) -> None: ...

class KalturaAccessControlDrmPolicyAction(KalturaRuleAction):
    policyId: int
    def __init__(self,
            type: KalturaRuleActionType = NotImplemented,
            policyId: int = NotImplemented): ...

    def getPolicyId(self) -> int: ...
    def setPolicyId(self, newPolicyId: int) -> None: ...

class KalturaDrmPolicyBaseFilter(KalturaFilter):
    partnerIdEqual: int
    partnerIdIn: str
    nameLike: str
    systemNameLike: str
    providerEqual: KalturaDrmProviderType
    providerIn: str
    statusEqual: KalturaDrmPolicyStatus
    statusIn: str
    scenarioEqual: KalturaDrmLicenseScenario
    scenarioIn: str
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            nameLike: str = NotImplemented,
            systemNameLike: str = NotImplemented,
            providerEqual: KalturaDrmProviderType = NotImplemented,
            providerIn: str = NotImplemented,
            statusEqual: KalturaDrmPolicyStatus = NotImplemented,
            statusIn: str = NotImplemented,
            scenarioEqual: KalturaDrmLicenseScenario = NotImplemented,
            scenarioIn: str = NotImplemented): ...

    def getPartnerIdEqual(self) -> int: ...
    def setPartnerIdEqual(self, newPartnerIdEqual: int) -> None: ...
    def getPartnerIdIn(self) -> str: ...
    def setPartnerIdIn(self, newPartnerIdIn: str) -> None: ...
    def getNameLike(self) -> str: ...
    def setNameLike(self, newNameLike: str) -> None: ...
    def getSystemNameLike(self) -> str: ...
    def setSystemNameLike(self, newSystemNameLike: str) -> None: ...
    def getProviderEqual(self) -> KalturaDrmProviderType: ...
    def setProviderEqual(self, newProviderEqual: KalturaDrmProviderType) -> None: ...
    def getProviderIn(self) -> str: ...
    def setProviderIn(self, newProviderIn: str) -> None: ...
    def getStatusEqual(self) -> KalturaDrmPolicyStatus: ...
    def setStatusEqual(self, newStatusEqual: KalturaDrmPolicyStatus) -> None: ...
    def getStatusIn(self) -> str: ...
    def setStatusIn(self, newStatusIn: str) -> None: ...
    def getScenarioEqual(self) -> KalturaDrmLicenseScenario: ...
    def setScenarioEqual(self, newScenarioEqual: KalturaDrmLicenseScenario) -> None: ...
    def getScenarioIn(self) -> str: ...
    def setScenarioIn(self, newScenarioIn: str) -> None: ...

class KalturaDrmPolicyListResponse(KalturaListResponse):
    objects: List[KalturaDrmPolicy]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaDrmPolicy] = NotImplemented): ...

    def getObjects(self) -> List[KalturaDrmPolicy]: ...

class KalturaDrmProfileBaseFilter(KalturaFilter):
    idEqual: int
    idIn: str
    partnerIdEqual: int
    partnerIdIn: str
    nameLike: str
    providerEqual: KalturaDrmProviderType
    providerIn: str
    statusEqual: KalturaDrmProfileStatus
    statusIn: str
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            nameLike: str = NotImplemented,
            providerEqual: KalturaDrmProviderType = NotImplemented,
            providerIn: str = NotImplemented,
            statusEqual: KalturaDrmProfileStatus = NotImplemented,
            statusIn: str = NotImplemented): ...

    def getIdEqual(self) -> int: ...
    def setIdEqual(self, newIdEqual: int) -> None: ...
    def getIdIn(self) -> str: ...
    def setIdIn(self, newIdIn: str) -> None: ...
    def getPartnerIdEqual(self) -> int: ...
    def setPartnerIdEqual(self, newPartnerIdEqual: int) -> None: ...
    def getPartnerIdIn(self) -> str: ...
    def setPartnerIdIn(self, newPartnerIdIn: str) -> None: ...
    def getNameLike(self) -> str: ...
    def setNameLike(self, newNameLike: str) -> None: ...
    def getProviderEqual(self) -> KalturaDrmProviderType: ...
    def setProviderEqual(self, newProviderEqual: KalturaDrmProviderType) -> None: ...
    def getProviderIn(self) -> str: ...
    def setProviderIn(self, newProviderIn: str) -> None: ...
    def getStatusEqual(self) -> KalturaDrmProfileStatus: ...
    def setStatusEqual(self, newStatusEqual: KalturaDrmProfileStatus) -> None: ...
    def getStatusIn(self) -> str: ...
    def setStatusIn(self, newStatusIn: str) -> None: ...

class KalturaDrmProfileListResponse(KalturaListResponse):
    objects: List[KalturaDrmProfile]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaDrmProfile] = NotImplemented): ...

    def getObjects(self) -> List[KalturaDrmProfile]: ...

class KalturaDrmPolicyFilter(KalturaDrmPolicyBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            nameLike: str = NotImplemented,
            systemNameLike: str = NotImplemented,
            providerEqual: KalturaDrmProviderType = NotImplemented,
            providerIn: str = NotImplemented,
            statusEqual: KalturaDrmPolicyStatus = NotImplemented,
            statusIn: str = NotImplemented,
            scenarioEqual: KalturaDrmLicenseScenario = NotImplemented,
            scenarioIn: str = NotImplemented): ...
        pass

class KalturaDrmProfileFilter(KalturaDrmProfileBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            nameLike: str = NotImplemented,
            providerEqual: KalturaDrmProviderType = NotImplemented,
            providerIn: str = NotImplemented,
            statusEqual: KalturaDrmProfileStatus = NotImplemented,
            statusIn: str = NotImplemented): ...
        pass

class KalturaDrmPolicyService(KalturaServiceBase):
    def add(self, drmPolicy: KalturaDrmPolicy) -> KalturaDrmPolicy: ...
    def delete(self, drmPolicyId: int) -> KalturaDrmPolicy: ...
    def get(self, drmPolicyId: int) -> KalturaDrmPolicy: ...
    def list(self, filter: KalturaDrmPolicyFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaDrmPolicyListResponse: ...
    def update(self, drmPolicyId: int, drmPolicy: KalturaDrmPolicy) -> KalturaDrmPolicy: ...

class KalturaDrmProfileService(KalturaServiceBase):
    def add(self, drmProfile: KalturaDrmProfile) -> KalturaDrmProfile: ...
    def delete(self, drmProfileId: int) -> KalturaDrmProfile: ...
    def get(self, drmProfileId: int) -> KalturaDrmProfile: ...
    def getByProvider(self, provider: str) -> KalturaDrmProfile: ...
    def list(self, filter: KalturaDrmProfileFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaDrmProfileListResponse: ...
    def update(self, drmProfileId: int, drmProfile: KalturaDrmProfile) -> KalturaDrmProfile: ...

class KalturaDrmLicenseAccessService(KalturaServiceBase):
    def getAccess(self, entryId: str, flavorIds: str, referrer: str) -> KalturaDrmLicenseAccessDetails: ...

class KalturaDrmClientPluginServicesProxy:
    drmPolicy: KalturaDrmPolicyService
    drmProfile: KalturaDrmProfileService
    drmLicenseAccess: KalturaDrmLicenseAccessService