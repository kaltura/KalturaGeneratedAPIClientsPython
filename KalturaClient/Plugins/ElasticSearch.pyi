# ===================================================================================================
#                           _  __     _ _
#                          | |/ /__ _| | |_ _  _ _ _ __ _
#                          | ' </ _` | |  _| || | '_/ _` |
#                          |_|\_\__,_|_|\__|\_,_|_| \__,_|
#
# This file is part of the Kaltura Collaborative Media Suite which allows users
# to do with audio, video, and animation what Wiki platforms allow them to do with
# text.
#
# Copyright (C) 2006-2023  Kaltura Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http:#www.gnu.org/licenses/>.
#
# @ignore
# ===================================================================================================
from typing import List, IO, Any
from .Core import *
from KalturaClient.Base import KalturaObjectBase, KalturaServiceBase

class KalturaESearchItemType(object):
    EXACT_MATCH = 1
    PARTIAL = 2
    STARTS_WITH = 3
    EXISTS = 4
    RANGE = 5

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaESearchOperatorType(object):
    AND_OP = 1
    OR_OP = 2
    NOT_OP = 3

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaESearchCaptionFieldName(object):
    CAPTION_ASSET_ID = "caption_asset_id"
    CONTENT = "content"
    END_TIME = "end_time"
    LABEL = "label"
    LANGUAGE = "language"
    START_TIME = "start_time"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaESearchCategoryAggregateByFieldName(object):
    CATEGORY_NAME = "category_name"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaESearchCategoryEntryFieldName(object):
    ANCESTOR_ID = "ancestor_id"
    ANCESTOR_NAME = "ancestor_name"
    FULL_IDS = "full_ids"
    ID = "id"
    NAME = "name"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaESearchCategoryFieldName(object):
    CONTRIBUTION_POLICY = "contribution_policy"
    CREATED_AT = "created_at"
    DEPTH = "depth"
    DESCRIPTION = "description"
    DIRECT_ENTRIES_COUNT = "direct_entries_count"
    DIRECT_SUB_CATEGORIES_COUNT = "direct_sub_categories_count"
    DISPLAY_IN_SEARCH = "display_in_search"
    ENTRIES_COUNT = "entries_count"
    FULL_IDS = "full_ids"
    FULL_NAME = "full_name"
    ID = "id"
    INHERITANCE_TYPE = "inheritance_type"
    INHERITED_PARENT_ID = "inherited_parent_id"
    MEMBERS_COUNT = "members_count"
    MODERATION = "moderation"
    NAME = "name"
    PARENT_ID = "parent_id"
    PENDING_ENTRIES_COUNT = "pending_entries_count"
    PENDING_MEMBERS_COUNT = "pending_members_count"
    PRIVACY = "privacy"
    PRIVACY_CONTEXT = "privacy_context"
    PRIVACY_CONTEXTS = "privacy_contexts"
    REFERENCE_ID = "reference_id"
    TAGS = "tags"
    UPDATED_AT = "updated_at"
    USER_ID = "user_id"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaESearchCategoryOrderByFieldName(object):
    CREATED_AT = "created_at"
    ENTRIES_COUNT = "entries_count"
    MEMBERS_COUNT = "members_count"
    NAME = "name"
    UPDATED_AT = "updated_at"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaESearchCategoryUserFieldName(object):
    USER_ID = "user_id"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaESearchCuePointAggregateByFieldName(object):
    TAGS = "tags"
    TYPE = "type"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaESearchCuePointFieldName(object):
    ANSWERS = "answers"
    END_TIME = "end_time"
    EXPLANATION = "explanation"
    HINT = "hint"
    ID = "id"
    NAME = "name"
    QUESTION = "question"
    START_TIME = "start_time"
    SUB_TYPE = "sub_type"
    TAGS = "tags"
    TEXT = "text"
    TYPE = "type"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaESearchEntryAggregateByFieldName(object):
    ACCESS_CONTROL_PROFILE = "access_control_profile_id"
    ENTRY_TYPE = "entry_type"
    MEDIA_TYPE = "media_type"
    TAGS = "tags"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaESearchEntryFieldName(object):
    ACCESS_CONTROL_ID = "access_control_id"
    ADMIN_TAGS = "admin_tags"
    BROADCAST_ENTRY_ID = "broadcast_entry_id"
    CAPTIONS_CONTENT = "captions_content"
    CONVERSION_PROFILE_ID = "conversion_profile_id"
    CREATED_AT = "created_at"
    CREATOR_ID = "creator_kuser_id"
    CREDIT = "credit"
    DESCRIPTION = "description"
    DISPLAY_IN_SEARCH = "display_in_search"
    END_DATE = "end_date"
    ENTITLED_USER_EDIT = "entitled_kusers_edit"
    ENTITLED_USER_PUBLISH = "entitled_kusers_publish"
    ENTITLED_USER_VIEW = "entitled_kusers_view"
    ENTRY_TYPE = "entry_type"
    EXTERNAL_SOURCE_TYPE = "external_source_type"
    ID = "id"
    IS_LIVE = "is_live"
    IS_QUIZ = "is_quiz"
    USER_ID = "kuser_id"
    LAST_PLAYED_AT = "last_played_at"
    LENGTH_IN_MSECS = "length_in_msecs"
    MEDIA_TYPE = "media_type"
    MODERATION_STATUS = "moderation_status"
    NAME = "name"
    PARENT_ENTRY_ID = "parent_id"
    PARTNER_SORT_VALUE = "partner_sort_value"
    PLAYS = "plays"
    PUSH_PUBLISH = "push_publish"
    RANK = "rank"
    RECORDED_ENTRY_ID = "recorded_entry_id"
    RECYCLED_AT = "recycled_at"
    REDIRECT_ENTRY_ID = "redirect_entry_id"
    REFERENCE_ID = "reference_id"
    ROOM_TYPE = "room_type"
    ROOT_ID = "root_id"
    SITE_URL = "site_url"
    SOURCE_TYPE = "source_type"
    START_DATE = "start_date"
    TAGS = "tags"
    TEMPLATE_ENTRY_ID = "template_entry_id"
    UPDATED_AT = "updated_at"
    USER_NAMES = "user_names"
    VOTES = "votes"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaESearchEntryOrderByFieldName(object):
    CREATED_AT = "created_at"
    END_DATE = "end_date"
    LAST_PLAYED_AT = "last_played_at"
    NAME = "name"
    PLAYS = "plays"
    PLAYS_LAST_1_DAY = "plays_last_1_day"
    PLAYS_LAST_30_DAYS = "plays_last_30_days"
    PLAYS_LAST_7_DAYS = "plays_last_7_days"
    RANK = "rank"
    RECYCLED_AT = "recycled_at"
    START_DATE = "start_date"
    UPDATED_AT = "updated_at"
    VIEWS = "views"
    VIEWS_LAST_1_DAY = "views_last_1_day"
    VIEWS_LAST_30_DAYS = "views_last_30_days"
    VIEWS_LAST_7_DAYS = "views_last_7_days"
    VOTES = "votes"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaESearchMetadataAggregateByFieldName(object):

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaESearchSortOrder(object):
    ORDER_BY_ASC = "asc"
    ORDER_BY_DESC = "desc"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaESearchUserFieldName(object):
    CAPABILITIES = "capabilities"
    COMPANY = "company"
    COUNTRY = "country"
    CREATED_AT = "created_at"
    EMAIL = "email"
    EXTERNAL_ID = "external_id"
    FIRST_NAME = "first_name"
    FULL_NAME = "full_name"
    GROUP_IDS = "group_ids"
    IS_ADMIN = "is_admin"
    IS_HASHED = "is_hashed"
    LAST_NAME = "last_name"
    LOGIN_ENABLED = "login_enabled"
    PERMISSION_NAMES = "permission_names"
    ROLE_IDS = "role_ids"
    SCREEN_NAME = "screen_name"
    TAGS = "tags"
    TITLE = "title"
    UPDATED_AT = "updated_at"
    USER_ID = "user_id"
    TYPE = "user_type"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaESearchUserOrderByFieldName(object):
    CREATED_AT = "created_at"
    FULL_NAME = "full_name"
    USER_ID = "puser_id"
    SCREEN_NAME = "screen_name"
    UPDATED_AT = "updated_at"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaEsearchGroupUserFieldName(object):
    GROUP_IDS = "group_ids"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaESearchBaseItem(KalturaObjectBase):
    def __init__(self): ...
        pass

class KalturaBeaconScheduledResourceBaseItem(KalturaESearchBaseItem):
    def __init__(self): ...
        pass

class KalturaESearchOrderByItem(KalturaObjectBase):
    sortOrder: KalturaESearchSortOrder
    def __init__(self,
            sortOrder: KalturaESearchSortOrder = NotImplemented): ...

    def getSortOrder(self) -> KalturaESearchSortOrder: ...
    def setSortOrder(self, newSortOrder: KalturaESearchSortOrder) -> None: ...

class KalturaESearchAggregationItem(KalturaObjectBase):
    size: int
    def __init__(self,
            size: int = NotImplemented): ...

    def getSize(self) -> int: ...
    def setSize(self, newSize: int) -> None: ...

class KalturaESearchAggregation(KalturaObjectBase):
    aggregations: List[KalturaESearchAggregationItem]
    def __init__(self,
            aggregations: List[KalturaESearchAggregationItem] = NotImplemented): ...

    def getAggregations(self) -> List[KalturaESearchAggregationItem]: ...
    def setAggregations(self, newAggregations: List[KalturaESearchAggregationItem]) -> None: ...

class KalturaESearchAggregationBucket(KalturaObjectBase):
    value: str
    count: int
    def __init__(self,
            value: str = NotImplemented,
            count: int = NotImplemented): ...

    def getValue(self) -> str: ...
    def setValue(self, newValue: str) -> None: ...
    def getCount(self) -> int: ...
    def setCount(self, newCount: int) -> None: ...

class KalturaESearchAggregationResponseItem(KalturaObjectBase):
    name: str
    fieldName: str
    buckets: List[KalturaESearchAggregationBucket]
    def __init__(self,
            name: str = NotImplemented,
            fieldName: str = NotImplemented,
            buckets: List[KalturaESearchAggregationBucket] = NotImplemented): ...

    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getFieldName(self) -> str: ...
    def setFieldName(self, newFieldName: str) -> None: ...
    def getBuckets(self) -> List[KalturaESearchAggregationBucket]: ...
    def setBuckets(self, newBuckets: List[KalturaESearchAggregationBucket]) -> None: ...

class KalturaESearchBaseFilter(KalturaObjectBase):
    def __init__(self): ...
        pass

class KalturaESearchCategoryBaseItem(KalturaESearchBaseItem):
    def __init__(self): ...
        pass

class KalturaESearchHighlight(KalturaObjectBase):
    fieldName: str
    hits: List[KalturaString]
    def __init__(self,
            fieldName: str = NotImplemented,
            hits: List[KalturaString] = NotImplemented): ...

    def getFieldName(self) -> str: ...
    def setFieldName(self, newFieldName: str) -> None: ...
    def getHits(self) -> List[KalturaString]: ...
    def setHits(self, newHits: List[KalturaString]) -> None: ...

class KalturaESearchItemData(KalturaObjectBase):
    highlight: List[KalturaESearchHighlight]
    def __init__(self,
            highlight: List[KalturaESearchHighlight] = NotImplemented): ...

    def getHighlight(self) -> List[KalturaESearchHighlight]: ...
    def setHighlight(self, newHighlight: List[KalturaESearchHighlight]) -> None: ...

class KalturaESearchItemDataResult(KalturaObjectBase):
    totalCount: int
    items: List[KalturaESearchItemData]
    itemsType: str
    def __init__(self,
            totalCount: int = NotImplemented,
            items: List[KalturaESearchItemData] = NotImplemented,
            itemsType: str = NotImplemented): ...

    def getTotalCount(self) -> int: ...
    def setTotalCount(self, newTotalCount: int) -> None: ...
    def getItems(self) -> List[KalturaESearchItemData]: ...
    def setItems(self, newItems: List[KalturaESearchItemData]) -> None: ...
    def getItemsType(self) -> str: ...
    def setItemsType(self, newItemsType: str) -> None: ...

class KalturaESearchResult(KalturaObjectBase):
    highlight: List[KalturaESearchHighlight]
    itemsData: List[KalturaESearchItemDataResult]
    def __init__(self,
            highlight: List[KalturaESearchHighlight] = NotImplemented,
            itemsData: List[KalturaESearchItemDataResult] = NotImplemented): ...

    def getHighlight(self) -> List[KalturaESearchHighlight]: ...
    def setHighlight(self, newHighlight: List[KalturaESearchHighlight]) -> None: ...
    def getItemsData(self) -> List[KalturaESearchItemDataResult]: ...
    def setItemsData(self, newItemsData: List[KalturaESearchItemDataResult]) -> None: ...

class KalturaESearchCategoryResult(KalturaESearchResult):
    object: KalturaCategory
    def __init__(self,
            highlight: List[KalturaESearchHighlight] = NotImplemented,
            itemsData: List[KalturaESearchItemDataResult] = NotImplemented,
            object: KalturaCategory = NotImplemented): ...

    def getObject(self) -> KalturaCategory: ...
    def setObject(self, newObject: KalturaCategory) -> None: ...

class KalturaESearchEntryBaseItem(KalturaESearchBaseItem):
    def __init__(self): ...
        pass

class KalturaESearchEntryBaseNestedObject(KalturaESearchEntryBaseItem):
    def __init__(self): ...
        pass

class KalturaESearchEntryNestedBaseItem(KalturaESearchEntryBaseNestedObject):
    def __init__(self): ...
        pass

class KalturaESearchEntryResult(KalturaESearchResult):
    object: KalturaBaseEntry
    def __init__(self,
            highlight: List[KalturaESearchHighlight] = NotImplemented,
            itemsData: List[KalturaESearchItemDataResult] = NotImplemented,
            object: KalturaBaseEntry = NotImplemented): ...

    def getObject(self) -> KalturaBaseEntry: ...
    def setObject(self, newObject: KalturaBaseEntry) -> None: ...

class KalturaESearchGroupResult(KalturaESearchResult):
    object: KalturaGroup
    def __init__(self,
            highlight: List[KalturaESearchHighlight] = NotImplemented,
            itemsData: List[KalturaESearchItemDataResult] = NotImplemented,
            object: KalturaGroup = NotImplemented): ...

    def getObject(self) -> KalturaGroup: ...
    def setObject(self, newObject: KalturaGroup) -> None: ...

class KalturaESearchOrderBy(KalturaObjectBase):
    orderItems: List[KalturaESearchOrderByItem]
    def __init__(self,
            orderItems: List[KalturaESearchOrderByItem] = NotImplemented): ...

    def getOrderItems(self) -> List[KalturaESearchOrderByItem]: ...
    def setOrderItems(self, newOrderItems: List[KalturaESearchOrderByItem]) -> None: ...

class KalturaESearchParams(KalturaObjectBase):
    objectStatuses: str
    objectId: str
    orderBy: KalturaESearchOrderBy
    ignoreSynonym: bool
    def __init__(self,
            objectStatuses: str = NotImplemented,
            objectId: str = NotImplemented,
            orderBy: KalturaESearchOrderBy = NotImplemented,
            ignoreSynonym: bool = NotImplemented): ...

    def getObjectStatuses(self) -> str: ...
    def setObjectStatuses(self, newObjectStatuses: str) -> None: ...
    def getObjectId(self) -> str: ...
    def setObjectId(self, newObjectId: str) -> None: ...
    def getOrderBy(self) -> KalturaESearchOrderBy: ...
    def setOrderBy(self, newOrderBy: KalturaESearchOrderBy) -> None: ...
    def getIgnoreSynonym(self) -> bool: ...
    def setIgnoreSynonym(self, newIgnoreSynonym: bool) -> None: ...

class KalturaESearchRange(KalturaObjectBase):
    greaterThanOrEqual: int
    lessThanOrEqual: int
    greaterThan: int
    lessThan: int
    def __init__(self,
            greaterThanOrEqual: int = NotImplemented,
            lessThanOrEqual: int = NotImplemented,
            greaterThan: int = NotImplemented,
            lessThan: int = NotImplemented): ...

    def getGreaterThanOrEqual(self) -> int: ...
    def setGreaterThanOrEqual(self, newGreaterThanOrEqual: int) -> None: ...
    def getLessThanOrEqual(self) -> int: ...
    def setLessThanOrEqual(self, newLessThanOrEqual: int) -> None: ...
    def getGreaterThan(self) -> int: ...
    def setGreaterThan(self, newGreaterThan: int) -> None: ...
    def getLessThan(self) -> int: ...
    def setLessThan(self, newLessThan: int) -> None: ...

class KalturaESearchResponse(KalturaObjectBase):
    totalCount: int
    def __init__(self,
            totalCount: int = NotImplemented): ...

    def getTotalCount(self) -> int: ...

class KalturaESearchUserBaseItem(KalturaESearchBaseItem):
    def __init__(self): ...
        pass

class KalturaESearchUserResult(KalturaESearchResult):
    object: KalturaUser
    def __init__(self,
            highlight: List[KalturaESearchHighlight] = NotImplemented,
            itemsData: List[KalturaESearchItemDataResult] = NotImplemented,
            object: KalturaUser = NotImplemented): ...

    def getObject(self) -> KalturaUser: ...
    def setObject(self, newObject: KalturaUser) -> None: ...

class KalturaESearchEntryOperator(KalturaESearchEntryBaseItem):
    operator: KalturaESearchOperatorType
    searchItems: List[KalturaESearchEntryBaseItem]
    def __init__(self,
            operator: KalturaESearchOperatorType = NotImplemented,
            searchItems: List[KalturaESearchEntryBaseItem] = NotImplemented): ...

    def getOperator(self) -> KalturaESearchOperatorType: ...
    def setOperator(self, newOperator: KalturaESearchOperatorType) -> None: ...
    def getSearchItems(self) -> List[KalturaESearchEntryBaseItem]: ...
    def setSearchItems(self, newSearchItems: List[KalturaESearchEntryBaseItem]) -> None: ...

class KalturaESearchCaptionItemData(KalturaESearchItemData):
    line: str
    startsAt: int
    endsAt: int
    language: str
    captionAssetId: str
    label: str
    def __init__(self,
            highlight: List[KalturaESearchHighlight] = NotImplemented,
            line: str = NotImplemented,
            startsAt: int = NotImplemented,
            endsAt: int = NotImplemented,
            language: str = NotImplemented,
            captionAssetId: str = NotImplemented,
            label: str = NotImplemented): ...

    def getLine(self) -> str: ...
    def setLine(self, newLine: str) -> None: ...
    def getStartsAt(self) -> int: ...
    def setStartsAt(self, newStartsAt: int) -> None: ...
    def getEndsAt(self) -> int: ...
    def setEndsAt(self, newEndsAt: int) -> None: ...
    def getLanguage(self) -> str: ...
    def setLanguage(self, newLanguage: str) -> None: ...
    def getCaptionAssetId(self) -> str: ...
    def setCaptionAssetId(self, newCaptionAssetId: str) -> None: ...
    def getLabel(self) -> str: ...
    def setLabel(self, newLabel: str) -> None: ...

class KalturaESearchCategoryAggregationItem(KalturaESearchAggregationItem):
    fieldName: KalturaESearchCategoryAggregateByFieldName
    def __init__(self,
            size: int = NotImplemented,
            fieldName: KalturaESearchCategoryAggregateByFieldName = NotImplemented): ...

    def getFieldName(self) -> KalturaESearchCategoryAggregateByFieldName: ...
    def setFieldName(self, newFieldName: KalturaESearchCategoryAggregateByFieldName) -> None: ...

class KalturaESearchCategoryOrderByItem(KalturaESearchOrderByItem):
    sortField: KalturaESearchCategoryOrderByFieldName
    def __init__(self,
            sortOrder: KalturaESearchSortOrder = NotImplemented,
            sortField: KalturaESearchCategoryOrderByFieldName = NotImplemented): ...

    def getSortField(self) -> KalturaESearchCategoryOrderByFieldName: ...
    def setSortField(self, newSortField: KalturaESearchCategoryOrderByFieldName) -> None: ...

class KalturaESearchCategoryOperator(KalturaESearchCategoryBaseItem):
    operator: KalturaESearchOperatorType
    searchItems: List[KalturaESearchCategoryBaseItem]
    def __init__(self,
            operator: KalturaESearchOperatorType = NotImplemented,
            searchItems: List[KalturaESearchCategoryBaseItem] = NotImplemented): ...

    def getOperator(self) -> KalturaESearchOperatorType: ...
    def setOperator(self, newOperator: KalturaESearchOperatorType) -> None: ...
    def getSearchItems(self) -> List[KalturaESearchCategoryBaseItem]: ...
    def setSearchItems(self, newSearchItems: List[KalturaESearchCategoryBaseItem]) -> None: ...

class KalturaESearchCategoryParams(KalturaESearchParams):
    searchOperator: KalturaESearchCategoryOperator
    def __init__(self,
            objectStatuses: str = NotImplemented,
            objectId: str = NotImplemented,
            orderBy: KalturaESearchOrderBy = NotImplemented,
            ignoreSynonym: bool = NotImplemented,
            searchOperator: KalturaESearchCategoryOperator = NotImplemented): ...

    def getSearchOperator(self) -> KalturaESearchCategoryOperator: ...
    def setSearchOperator(self, newSearchOperator: KalturaESearchCategoryOperator) -> None: ...

class KalturaESearchCategoryResponse(KalturaESearchResponse):
    objects: List[KalturaESearchCategoryResult]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaESearchCategoryResult] = NotImplemented): ...

    def getObjects(self) -> List[KalturaESearchCategoryResult]: ...

class KalturaESearchCuePointItemData(KalturaESearchItemData):
    cuePointType: str
    id: str
    name: str
    text: str
    tags: List[KalturaString]
    startTime: str
    endTime: str
    subType: str
    question: str
    answers: List[KalturaString]
    hint: str
    explanation: str
    assetId: str
    def __init__(self,
            highlight: List[KalturaESearchHighlight] = NotImplemented,
            cuePointType: str = NotImplemented,
            id: str = NotImplemented,
            name: str = NotImplemented,
            text: str = NotImplemented,
            tags: List[KalturaString] = NotImplemented,
            startTime: str = NotImplemented,
            endTime: str = NotImplemented,
            subType: str = NotImplemented,
            question: str = NotImplemented,
            answers: List[KalturaString] = NotImplemented,
            hint: str = NotImplemented,
            explanation: str = NotImplemented,
            assetId: str = NotImplemented): ...

    def getCuePointType(self) -> str: ...
    def setCuePointType(self, newCuePointType: str) -> None: ...
    def getId(self) -> str: ...
    def setId(self, newId: str) -> None: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getText(self) -> str: ...
    def setText(self, newText: str) -> None: ...
    def getTags(self) -> List[KalturaString]: ...
    def setTags(self, newTags: List[KalturaString]) -> None: ...
    def getStartTime(self) -> str: ...
    def setStartTime(self, newStartTime: str) -> None: ...
    def getEndTime(self) -> str: ...
    def setEndTime(self, newEndTime: str) -> None: ...
    def getSubType(self) -> str: ...
    def setSubType(self, newSubType: str) -> None: ...
    def getQuestion(self) -> str: ...
    def setQuestion(self, newQuestion: str) -> None: ...
    def getAnswers(self) -> List[KalturaString]: ...
    def setAnswers(self, newAnswers: List[KalturaString]) -> None: ...
    def getHint(self) -> str: ...
    def setHint(self, newHint: str) -> None: ...
    def getExplanation(self) -> str: ...
    def setExplanation(self, newExplanation: str) -> None: ...
    def getAssetId(self) -> str: ...
    def setAssetId(self, newAssetId: str) -> None: ...

class KalturaESearchCuepointsAggregationItem(KalturaESearchAggregationItem):
    fieldName: KalturaESearchCuePointAggregateByFieldName
    def __init__(self,
            size: int = NotImplemented,
            fieldName: KalturaESearchCuePointAggregateByFieldName = NotImplemented): ...

    def getFieldName(self) -> KalturaESearchCuePointAggregateByFieldName: ...
    def setFieldName(self, newFieldName: KalturaESearchCuePointAggregateByFieldName) -> None: ...

class KalturaESearchEntryAggregationItem(KalturaESearchAggregationItem):
    fieldName: KalturaESearchEntryAggregateByFieldName
    def __init__(self,
            size: int = NotImplemented,
            fieldName: KalturaESearchEntryAggregateByFieldName = NotImplemented): ...

    def getFieldName(self) -> KalturaESearchEntryAggregateByFieldName: ...
    def setFieldName(self, newFieldName: KalturaESearchEntryAggregateByFieldName) -> None: ...

class KalturaESearchEntryOrderByItem(KalturaESearchOrderByItem):
    sortField: KalturaESearchEntryOrderByFieldName
    def __init__(self,
            sortOrder: KalturaESearchSortOrder = NotImplemented,
            sortField: KalturaESearchEntryOrderByFieldName = NotImplemented): ...

    def getSortField(self) -> KalturaESearchEntryOrderByFieldName: ...
    def setSortField(self, newSortField: KalturaESearchEntryOrderByFieldName) -> None: ...

class KalturaESearchEntryParams(KalturaESearchParams):
    searchOperator: KalturaESearchEntryOperator
    aggregations: KalturaESearchAggregation
    def __init__(self,
            objectStatuses: str = NotImplemented,
            objectId: str = NotImplemented,
            orderBy: KalturaESearchOrderBy = NotImplemented,
            ignoreSynonym: bool = NotImplemented,
            searchOperator: KalturaESearchEntryOperator = NotImplemented,
            aggregations: KalturaESearchAggregation = NotImplemented): ...

    def getSearchOperator(self) -> KalturaESearchEntryOperator: ...
    def setSearchOperator(self, newSearchOperator: KalturaESearchEntryOperator) -> None: ...
    def getAggregations(self) -> KalturaESearchAggregation: ...
    def setAggregations(self, newAggregations: KalturaESearchAggregation) -> None: ...

class KalturaESearchEntryResponse(KalturaESearchResponse):
    objects: List[KalturaESearchEntryResult]
    aggregations: List[KalturaESearchAggregationResponseItem]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaESearchEntryResult] = NotImplemented,
            aggregations: List[KalturaESearchAggregationResponseItem] = NotImplemented): ...

    def getObjects(self) -> List[KalturaESearchEntryResult]: ...
    def getAggregations(self) -> List[KalturaESearchAggregationResponseItem]: ...

class KalturaESearchGroupOrderByItem(KalturaESearchOrderByItem):
    sortField: KalturaESearchGroupOrderByFieldName
    def __init__(self,
            sortOrder: KalturaESearchSortOrder = NotImplemented,
            sortField: KalturaESearchGroupOrderByFieldName = NotImplemented): ...

    def getSortField(self) -> KalturaESearchGroupOrderByFieldName: ...
    def setSortField(self, newSortField: KalturaESearchGroupOrderByFieldName) -> None: ...

class KalturaESearchGroupParams(KalturaESearchParams):
    searchOperator: KalturaESearchGroupOperator
    def __init__(self,
            objectStatuses: str = NotImplemented,
            objectId: str = NotImplemented,
            orderBy: KalturaESearchOrderBy = NotImplemented,
            ignoreSynonym: bool = NotImplemented,
            searchOperator: KalturaESearchGroupOperator = NotImplemented): ...

    def getSearchOperator(self) -> KalturaESearchGroupOperator: ...
    def setSearchOperator(self, newSearchOperator: KalturaESearchGroupOperator) -> None: ...

class KalturaESearchGroupResponse(KalturaESearchResponse):
    objects: List[KalturaESearchGroupResult]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaESearchGroupResult] = NotImplemented): ...

    def getObjects(self) -> List[KalturaESearchGroupResult]: ...

class KalturaESearchMetadataAggregationItem(KalturaESearchAggregationItem):
    fieldName: KalturaESearchMetadataAggregateByFieldName
    def __init__(self,
            size: int = NotImplemented,
            fieldName: KalturaESearchMetadataAggregateByFieldName = NotImplemented): ...

    def getFieldName(self) -> KalturaESearchMetadataAggregateByFieldName: ...
    def setFieldName(self, newFieldName: KalturaESearchMetadataAggregateByFieldName) -> None: ...

class KalturaESearchMetadataItemData(KalturaESearchItemData):
    xpath: str
    metadataProfileId: int
    metadataFieldId: int
    valueText: str
    valueInt: int
    def __init__(self,
            highlight: List[KalturaESearchHighlight] = NotImplemented,
            xpath: str = NotImplemented,
            metadataProfileId: int = NotImplemented,
            metadataFieldId: int = NotImplemented,
            valueText: str = NotImplemented,
            valueInt: int = NotImplemented): ...

    def getXpath(self) -> str: ...
    def setXpath(self, newXpath: str) -> None: ...
    def getMetadataProfileId(self) -> int: ...
    def setMetadataProfileId(self, newMetadataProfileId: int) -> None: ...
    def getMetadataFieldId(self) -> int: ...
    def setMetadataFieldId(self, newMetadataFieldId: int) -> None: ...
    def getValueText(self) -> str: ...
    def setValueText(self, newValueText: str) -> None: ...
    def getValueInt(self) -> int: ...
    def setValueInt(self, newValueInt: int) -> None: ...

class KalturaESearchMetadataOrderByItem(KalturaESearchOrderByItem):
    xpath: str
    metadataProfileId: int
    def __init__(self,
            sortOrder: KalturaESearchSortOrder = NotImplemented,
            xpath: str = NotImplemented,
            metadataProfileId: int = NotImplemented): ...

    def getXpath(self) -> str: ...
    def setXpath(self, newXpath: str) -> None: ...
    def getMetadataProfileId(self) -> int: ...
    def setMetadataProfileId(self, newMetadataProfileId: int) -> None: ...

class KalturaESearchUserOrderByItem(KalturaESearchOrderByItem):
    sortField: KalturaESearchUserOrderByFieldName
    def __init__(self,
            sortOrder: KalturaESearchSortOrder = NotImplemented,
            sortField: KalturaESearchUserOrderByFieldName = NotImplemented): ...

    def getSortField(self) -> KalturaESearchUserOrderByFieldName: ...
    def setSortField(self, newSortField: KalturaESearchUserOrderByFieldName) -> None: ...

class KalturaESearchUserOperator(KalturaESearchUserBaseItem):
    operator: KalturaESearchOperatorType
    searchItems: List[KalturaESearchUserBaseItem]
    def __init__(self,
            operator: KalturaESearchOperatorType = NotImplemented,
            searchItems: List[KalturaESearchUserBaseItem] = NotImplemented): ...

    def getOperator(self) -> KalturaESearchOperatorType: ...
    def setOperator(self, newOperator: KalturaESearchOperatorType) -> None: ...
    def getSearchItems(self) -> List[KalturaESearchUserBaseItem]: ...
    def setSearchItems(self, newSearchItems: List[KalturaESearchUserBaseItem]) -> None: ...

class KalturaESearchUserParams(KalturaESearchParams):
    searchOperator: KalturaESearchUserOperator
    def __init__(self,
            objectStatuses: str = NotImplemented,
            objectId: str = NotImplemented,
            orderBy: KalturaESearchOrderBy = NotImplemented,
            ignoreSynonym: bool = NotImplemented,
            searchOperator: KalturaESearchUserOperator = NotImplemented): ...

    def getSearchOperator(self) -> KalturaESearchUserOperator: ...
    def setSearchOperator(self, newSearchOperator: KalturaESearchUserOperator) -> None: ...

class KalturaESearchUserResponse(KalturaESearchResponse):
    objects: List[KalturaESearchUserResult]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaESearchUserResult] = NotImplemented): ...

    def getObjects(self) -> List[KalturaESearchUserResult]: ...

class KalturaEntryCaptionAdvancedFilter(KalturaSearchItem):
    hasCaption: KalturaNullableBoolean
    def __init__(self,
            hasCaption: KalturaNullableBoolean = NotImplemented): ...

    def getHasCaption(self) -> KalturaNullableBoolean: ...
    def setHasCaption(self, newHasCaption: KalturaNullableBoolean) -> None: ...

class KalturaBeaconAbstractScheduledResourceItem(KalturaBeaconScheduledResourceBaseItem):
    searchTerm: str
    itemType: KalturaESearchItemType
    range: KalturaESearchRange
    def __init__(self,
            searchTerm: str = NotImplemented,
            itemType: KalturaESearchItemType = NotImplemented,
            range: KalturaESearchRange = NotImplemented): ...

    def getSearchTerm(self) -> str: ...
    def setSearchTerm(self, newSearchTerm: str) -> None: ...
    def getItemType(self) -> KalturaESearchItemType: ...
    def setItemType(self, newItemType: KalturaESearchItemType) -> None: ...
    def getRange(self) -> KalturaESearchRange: ...
    def setRange(self, newRange: KalturaESearchRange) -> None: ...

class KalturaESearchAbstractCategoryItem(KalturaESearchCategoryBaseItem):
    searchTerm: str
    itemType: KalturaESearchItemType
    range: KalturaESearchRange
    addHighlight: bool
    def __init__(self,
            searchTerm: str = NotImplemented,
            itemType: KalturaESearchItemType = NotImplemented,
            range: KalturaESearchRange = NotImplemented,
            addHighlight: bool = NotImplemented): ...

    def getSearchTerm(self) -> str: ...
    def setSearchTerm(self, newSearchTerm: str) -> None: ...
    def getItemType(self) -> KalturaESearchItemType: ...
    def setItemType(self, newItemType: KalturaESearchItemType) -> None: ...
    def getRange(self) -> KalturaESearchRange: ...
    def setRange(self, newRange: KalturaESearchRange) -> None: ...
    def getAddHighlight(self) -> bool: ...
    def setAddHighlight(self, newAddHighlight: bool) -> None: ...

class KalturaESearchAbstractEntryItem(KalturaESearchEntryBaseItem):
    searchTerm: str
    itemType: KalturaESearchItemType
    range: KalturaESearchRange
    addHighlight: bool
    def __init__(self,
            searchTerm: str = NotImplemented,
            itemType: KalturaESearchItemType = NotImplemented,
            range: KalturaESearchRange = NotImplemented,
            addHighlight: bool = NotImplemented): ...

    def getSearchTerm(self) -> str: ...
    def setSearchTerm(self, newSearchTerm: str) -> None: ...
    def getItemType(self) -> KalturaESearchItemType: ...
    def setItemType(self, newItemType: KalturaESearchItemType) -> None: ...
    def getRange(self) -> KalturaESearchRange: ...
    def setRange(self, newRange: KalturaESearchRange) -> None: ...
    def getAddHighlight(self) -> bool: ...
    def setAddHighlight(self, newAddHighlight: bool) -> None: ...

class KalturaESearchAbstractUserItem(KalturaESearchUserBaseItem):
    searchTerm: str
    itemType: KalturaESearchItemType
    range: KalturaESearchRange
    addHighlight: bool
    def __init__(self,
            searchTerm: str = NotImplemented,
            itemType: KalturaESearchItemType = NotImplemented,
            range: KalturaESearchRange = NotImplemented,
            addHighlight: bool = NotImplemented): ...

    def getSearchTerm(self) -> str: ...
    def setSearchTerm(self, newSearchTerm: str) -> None: ...
    def getItemType(self) -> KalturaESearchItemType: ...
    def setItemType(self, newItemType: KalturaESearchItemType) -> None: ...
    def getRange(self) -> KalturaESearchRange: ...
    def setRange(self, newRange: KalturaESearchRange) -> None: ...
    def getAddHighlight(self) -> bool: ...
    def setAddHighlight(self, newAddHighlight: bool) -> None: ...

class KalturaMediaEsearchExportToCsvJobData(KalturaExportCsvJobData):
    searchParams: KalturaESearchEntryParams
    options: List[KalturaExportToCsvOptions]
    def __init__(self,
            userName: str = NotImplemented,
            userMail: str = NotImplemented,
            outputPath: str = NotImplemented,
            sharedOutputPath: str = NotImplemented,
            searchParams: KalturaESearchEntryParams = NotImplemented,
            options: List[KalturaExportToCsvOptions] = NotImplemented): ...

    def getSearchParams(self) -> KalturaESearchEntryParams: ...
    def setSearchParams(self, newSearchParams: KalturaESearchEntryParams) -> None: ...
    def getOptions(self) -> List[KalturaExportToCsvOptions]: ...
    def setOptions(self, newOptions: List[KalturaExportToCsvOptions]) -> None: ...

class KalturaESearchCategoryEntryItem(KalturaESearchAbstractEntryItem):
    fieldName: KalturaESearchCategoryEntryFieldName
    categoryEntryStatus: KalturaCategoryEntryStatus
    def __init__(self,
            searchTerm: str = NotImplemented,
            itemType: KalturaESearchItemType = NotImplemented,
            range: KalturaESearchRange = NotImplemented,
            addHighlight: bool = NotImplemented,
            fieldName: KalturaESearchCategoryEntryFieldName = NotImplemented,
            categoryEntryStatus: KalturaCategoryEntryStatus = NotImplemented): ...

    def getFieldName(self) -> KalturaESearchCategoryEntryFieldName: ...
    def setFieldName(self, newFieldName: KalturaESearchCategoryEntryFieldName) -> None: ...
    def getCategoryEntryStatus(self) -> KalturaCategoryEntryStatus: ...
    def setCategoryEntryStatus(self, newCategoryEntryStatus: KalturaCategoryEntryStatus) -> None: ...

class KalturaESearchCategoryItem(KalturaESearchAbstractCategoryItem):
    fieldName: KalturaESearchCategoryFieldName
    def __init__(self,
            searchTerm: str = NotImplemented,
            itemType: KalturaESearchItemType = NotImplemented,
            range: KalturaESearchRange = NotImplemented,
            addHighlight: bool = NotImplemented,
            fieldName: KalturaESearchCategoryFieldName = NotImplemented): ...

    def getFieldName(self) -> KalturaESearchCategoryFieldName: ...
    def setFieldName(self, newFieldName: KalturaESearchCategoryFieldName) -> None: ...

class KalturaESearchCategoryMetadataItem(KalturaESearchAbstractCategoryItem):
    xpath: str
    metadataProfileId: int
    metadataFieldId: int
    def __init__(self,
            searchTerm: str = NotImplemented,
            itemType: KalturaESearchItemType = NotImplemented,
            range: KalturaESearchRange = NotImplemented,
            addHighlight: bool = NotImplemented,
            xpath: str = NotImplemented,
            metadataProfileId: int = NotImplemented,
            metadataFieldId: int = NotImplemented): ...

    def getXpath(self) -> str: ...
    def setXpath(self, newXpath: str) -> None: ...
    def getMetadataProfileId(self) -> int: ...
    def setMetadataProfileId(self, newMetadataProfileId: int) -> None: ...
    def getMetadataFieldId(self) -> int: ...
    def setMetadataFieldId(self, newMetadataFieldId: int) -> None: ...

class KalturaESearchCategoryUserItem(KalturaESearchAbstractCategoryItem):
    fieldName: KalturaESearchCategoryUserFieldName
    permissionLevel: KalturaCategoryUserPermissionLevel
    permissionName: str
    def __init__(self,
            searchTerm: str = NotImplemented,
            itemType: KalturaESearchItemType = NotImplemented,
            range: KalturaESearchRange = NotImplemented,
            addHighlight: bool = NotImplemented,
            fieldName: KalturaESearchCategoryUserFieldName = NotImplemented,
            permissionLevel: KalturaCategoryUserPermissionLevel = NotImplemented,
            permissionName: str = NotImplemented): ...

    def getFieldName(self) -> KalturaESearchCategoryUserFieldName: ...
    def setFieldName(self, newFieldName: KalturaESearchCategoryUserFieldName) -> None: ...
    def getPermissionLevel(self) -> KalturaCategoryUserPermissionLevel: ...
    def setPermissionLevel(self, newPermissionLevel: KalturaCategoryUserPermissionLevel) -> None: ...
    def getPermissionName(self) -> str: ...
    def setPermissionName(self, newPermissionName: str) -> None: ...

class KalturaESearchEntryItem(KalturaESearchAbstractEntryItem):
    fieldName: KalturaESearchEntryFieldName
    def __init__(self,
            searchTerm: str = NotImplemented,
            itemType: KalturaESearchItemType = NotImplemented,
            range: KalturaESearchRange = NotImplemented,
            addHighlight: bool = NotImplemented,
            fieldName: KalturaESearchEntryFieldName = NotImplemented): ...

    def getFieldName(self) -> KalturaESearchEntryFieldName: ...
    def setFieldName(self, newFieldName: KalturaESearchEntryFieldName) -> None: ...

class KalturaESearchGroupUserItem(KalturaESearchAbstractUserItem):
    fieldName: KalturaEsearchGroupUserFieldName
    creationMode: KalturaGroupUserCreationMode
    def __init__(self,
            searchTerm: str = NotImplemented,
            itemType: KalturaESearchItemType = NotImplemented,
            range: KalturaESearchRange = NotImplemented,
            addHighlight: bool = NotImplemented,
            fieldName: KalturaEsearchGroupUserFieldName = NotImplemented,
            creationMode: KalturaGroupUserCreationMode = NotImplemented): ...

    def getFieldName(self) -> KalturaEsearchGroupUserFieldName: ...
    def setFieldName(self, newFieldName: KalturaEsearchGroupUserFieldName) -> None: ...
    def getCreationMode(self) -> KalturaGroupUserCreationMode: ...
    def setCreationMode(self, newCreationMode: KalturaGroupUserCreationMode) -> None: ...

class KalturaESearchUnifiedItem(KalturaESearchAbstractEntryItem):
    def __init__(self,
            searchTerm: str = NotImplemented,
            itemType: KalturaESearchItemType = NotImplemented,
            range: KalturaESearchRange = NotImplemented,
            addHighlight: bool = NotImplemented): ...
        pass

class KalturaESearchUserItem(KalturaESearchAbstractUserItem):
    fieldName: KalturaESearchUserFieldName
    def __init__(self,
            searchTerm: str = NotImplemented,
            itemType: KalturaESearchItemType = NotImplemented,
            range: KalturaESearchRange = NotImplemented,
            addHighlight: bool = NotImplemented,
            fieldName: KalturaESearchUserFieldName = NotImplemented): ...

    def getFieldName(self) -> KalturaESearchUserFieldName: ...
    def setFieldName(self, newFieldName: KalturaESearchUserFieldName) -> None: ...

class KalturaESearchUserMetadataItem(KalturaESearchAbstractUserItem):
    xpath: str
    metadataProfileId: int
    metadataFieldId: int
    def __init__(self,
            searchTerm: str = NotImplemented,
            itemType: KalturaESearchItemType = NotImplemented,
            range: KalturaESearchRange = NotImplemented,
            addHighlight: bool = NotImplemented,
            xpath: str = NotImplemented,
            metadataProfileId: int = NotImplemented,
            metadataFieldId: int = NotImplemented): ...

    def getXpath(self) -> str: ...
    def setXpath(self, newXpath: str) -> None: ...
    def getMetadataProfileId(self) -> int: ...
    def setMetadataProfileId(self, newMetadataProfileId: int) -> None: ...
    def getMetadataFieldId(self) -> int: ...
    def setMetadataFieldId(self, newMetadataFieldId: int) -> None: ...

class KalturaESearchEntryAbstractNestedItem(KalturaESearchEntryNestedBaseItem):
    searchTerm: str
    itemType: KalturaESearchItemType
    range: KalturaESearchRange
    addHighlight: bool
    def __init__(self,
            searchTerm: str = NotImplemented,
            itemType: KalturaESearchItemType = NotImplemented,
            range: KalturaESearchRange = NotImplemented,
            addHighlight: bool = NotImplemented): ...

    def getSearchTerm(self) -> str: ...
    def setSearchTerm(self, newSearchTerm: str) -> None: ...
    def getItemType(self) -> KalturaESearchItemType: ...
    def setItemType(self, newItemType: KalturaESearchItemType) -> None: ...
    def getRange(self) -> KalturaESearchRange: ...
    def setRange(self, newRange: KalturaESearchRange) -> None: ...
    def getAddHighlight(self) -> bool: ...
    def setAddHighlight(self, newAddHighlight: bool) -> None: ...

class KalturaESearchNestedOperator(KalturaESearchEntryNestedBaseItem):
    operator: KalturaESearchOperatorType
    searchItems: List[KalturaESearchEntryNestedBaseItem]
    def __init__(self,
            operator: KalturaESearchOperatorType = NotImplemented,
            searchItems: List[KalturaESearchEntryNestedBaseItem] = NotImplemented): ...

    def getOperator(self) -> KalturaESearchOperatorType: ...
    def setOperator(self, newOperator: KalturaESearchOperatorType) -> None: ...
    def getSearchItems(self) -> List[KalturaESearchEntryNestedBaseItem]: ...
    def setSearchItems(self, newSearchItems: List[KalturaESearchEntryNestedBaseItem]) -> None: ...

class KalturaESearchCaptionItem(KalturaESearchEntryAbstractNestedItem):
    fieldName: KalturaESearchCaptionFieldName
    def __init__(self,
            searchTerm: str = NotImplemented,
            itemType: KalturaESearchItemType = NotImplemented,
            range: KalturaESearchRange = NotImplemented,
            addHighlight: bool = NotImplemented,
            fieldName: KalturaESearchCaptionFieldName = NotImplemented): ...

    def getFieldName(self) -> KalturaESearchCaptionFieldName: ...
    def setFieldName(self, newFieldName: KalturaESearchCaptionFieldName) -> None: ...

class KalturaESearchCuePointItem(KalturaESearchEntryAbstractNestedItem):
    fieldName: KalturaESearchCuePointFieldName
    def __init__(self,
            searchTerm: str = NotImplemented,
            itemType: KalturaESearchItemType = NotImplemented,
            range: KalturaESearchRange = NotImplemented,
            addHighlight: bool = NotImplemented,
            fieldName: KalturaESearchCuePointFieldName = NotImplemented): ...

    def getFieldName(self) -> KalturaESearchCuePointFieldName: ...
    def setFieldName(self, newFieldName: KalturaESearchCuePointFieldName) -> None: ...

class KalturaESearchEntryMetadataItem(KalturaESearchEntryAbstractNestedItem):
    xpath: str
    metadataProfileId: int
    metadataFieldId: int
    def __init__(self,
            searchTerm: str = NotImplemented,
            itemType: KalturaESearchItemType = NotImplemented,
            range: KalturaESearchRange = NotImplemented,
            addHighlight: bool = NotImplemented,
            xpath: str = NotImplemented,
            metadataProfileId: int = NotImplemented,
            metadataFieldId: int = NotImplemented): ...

    def getXpath(self) -> str: ...
    def setXpath(self, newXpath: str) -> None: ...
    def getMetadataProfileId(self) -> int: ...
    def setMetadataProfileId(self, newMetadataProfileId: int) -> None: ...
    def getMetadataFieldId(self) -> int: ...
    def setMetadataFieldId(self, newMetadataFieldId: int) -> None: ...

class KalturaESearchService(KalturaServiceBase):
    def searchCategory(self, searchParams: KalturaESearchCategoryParams, pager: KalturaPager = NotImplemented) -> KalturaESearchCategoryResponse: ...
    def searchEntry(self, searchParams: KalturaESearchEntryParams, pager: KalturaPager = NotImplemented) -> KalturaESearchEntryResponse: ...
    def searchGroup(self, searchParams: KalturaESearchGroupParams, pager: KalturaPager = NotImplemented) -> KalturaESearchGroupResponse: ...
    def searchUser(self, searchParams: KalturaESearchUserParams, pager: KalturaPager = NotImplemented) -> KalturaESearchUserResponse: ...

class KalturaElasticSearchClientPluginServicesProxy:
    eSearch: KalturaESearchService