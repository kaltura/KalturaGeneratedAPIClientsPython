# ===================================================================================================
#                           _  __     _ _
#                          | |/ /__ _| | |_ _  _ _ _ __ _
#                          | ' </ _` | |  _| || | '_/ _` |
#                          |_|\_\__,_|_|\__|\_,_|_| \__,_|
#
# This file is part of the Kaltura Collaborative Media Suite which allows users
# to do with audio, video, and animation what Wiki platforms allow them to do with
# text.
#
# Copyright (C) 2006-2023  Kaltura Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http:#www.gnu.org/licenses/>.
#
# @ignore
# ===================================================================================================
from typing import List, IO, Any
from KalturaClient.Base import KalturaObjectBase, KalturaServiceBase

class KalturaAppTokenStatus(object):
    DISABLED = 1
    ACTIVE = 2
    DELETED = 3

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaAppearInListType(object):
    PARTNER_ONLY = 1
    CATEGORY_MEMBERS_ONLY = 3

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaAssetParamsDeletePolicy(object):
    KEEP = 0
    DELETE = 1

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaAssetParamsOrigin(object):
    CONVERT = 0
    INGEST = 1
    CONVERT_WHEN_MISSING = 2

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaBatchJobErrorTypes(object):
    APP = 0
    RUNTIME = 1
    HTTP = 2
    CURL = 3
    KALTURA_API = 4
    KALTURA_CLIENT = 5

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaBatchJobStatus(object):
    PENDING = 0
    QUEUED = 1
    PROCESSING = 2
    PROCESSED = 3
    MOVEFILE = 4
    FINISHED = 5
    FAILED = 6
    ABORTED = 7
    ALMOST_DONE = 8
    RETRY = 9
    FATAL = 10
    DONT_PROCESS = 11
    FINISHED_PARTIALLY = 12
    SUSPEND = 13
    SUSPEND_ALMOST_DONE = 14

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaBitRateMode(object):
    CBR = 1
    VBR = 2

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaBorderStyle(object):
    OUTLINE_WITH_SHADOW = 1
    OPAQUE_BOX = 3

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaCaptionsAlignment(object):
    BOTTOM_LEFT = 1
    BOTTOM_CENTER = 2
    BOTTOM_RIGHT = 3
    TOP_LEFT = 4
    TOP_CENTER = 6
    TOP_RIGHT = 7
    CENTER_LEFT = 8
    CENTER_CENTER = 10
    CENTER_RIGHT = 11

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaCategoryEntryStatus(object):
    PENDING = 1
    ACTIVE = 2
    DELETED = 3
    REJECTED = 4

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaCategoryStatus(object):
    UPDATING = 1
    ACTIVE = 2
    DELETED = 3
    PURGED = 4

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaCategoryUserPermissionLevel(object):
    MANAGER = 0
    MODERATOR = 1
    CONTRIBUTOR = 2
    MEMBER = 3
    NONE = 4

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaCategoryUserStatus(object):
    ACTIVE = 1
    PENDING = 2
    NOT_ACTIVE = 3
    DELETED = 4

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaChapterNamePolicy(object):
    BY_ENTRY_ID = 1
    BY_ENTRY_NAME = 2
    NUMERICAL = 3

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaChinaCacheAlgorithmType(object):
    SHA1 = 1
    SHA256 = 2

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaCommercialUseType(object):
    NON_COMMERCIAL_USE = 0
    COMMERCIAL_USE = 1

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaContributionPolicyType(object):
    ALL = 1
    MEMBERS_WITH_CONTRIBUTION_PERMISSION = 2

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaControlPanelCommandStatus(object):
    PENDING = 1
    HANDLED = 2
    DONE = 3
    FAILED = 4

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaControlPanelCommandTargetType(object):
    DATA_CENTER = 1
    SCHEDULER = 2
    JOB_TYPE = 3
    JOB = 4
    BATCH = 5

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaControlPanelCommandType(object):
    KILL = 4

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaCountryRestrictionType(object):
    RESTRICT_COUNTRY_LIST = 0
    ALLOW_COUNTRY_LIST = 1

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaDVRStatus(object):
    DISABLED = 0
    ENABLED = 1

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaDeliveryStatus(object):
    ACTIVE = 0
    DELETED = 1
    STAGING_IN = 2
    STAGING_OUT = 3

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaDirectoryRestrictionType(object):
    DONT_DISPLAY = 0
    DISPLAY_WITH_LINK = 1

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaEditorType(object):
    SIMPLE = 1
    ADVANCED = 2

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaEffectType(object):
    VIDEO_FADE_IN = 1
    VIDEO_FADE_OUT = 2

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaEmailIngestionProfileStatus(object):
    INACTIVE = 0
    ACTIVE = 1

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaEntryDisplayInSearchType(object):
    RECYCLED = -2
    SYSTEM = -1
    NONE = 0
    PARTNER_ONLY = 1
    KALTURA_NETWORK = 2

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaEntryModerationStatus(object):
    PENDING_MODERATION = 1
    APPROVED = 2
    REJECTED = 3
    DELETED = 4
    FLAGGED_FOR_REVIEW = 5
    AUTO_APPROVED = 6

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaEntryServerNodeRecordingStatus(object):
    STOPPED = 0
    ON_GOING = 1
    DONE = 2
    DISMISSED = 3

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaEntryServerNodeStatus(object):
    ERROR = -1
    STOPPED = 0
    PLAYABLE = 1
    BROADCASTING = 2
    AUTHENTICATED = 3
    MARKED_FOR_DELETION = 4
    TASK_PENDING = 5
    TASK_QUEUED = 6
    TASK_PROCESSING = 7
    TASK_UPLOADING = 8
    TASK_FINISHED = 9

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaFeatureStatusType(object):
    LOCK_CATEGORY = 1
    CATEGORY = 2
    CATEGORY_ENTRY = 3
    ENTRY = 4
    CATEGORY_USER = 5
    USER = 6

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaFlavorAssetStatus(object):
    ERROR = -1
    QUEUED = 0
    CONVERTING = 1
    READY = 2
    DELETED = 3
    NOT_APPLICABLE = 4
    TEMP = 5
    WAIT_FOR_CONVERT = 6
    IMPORTING = 7
    VALIDATING = 8
    EXPORTING = 9

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaFlavorReadyBehaviorType(object):
    NO_IMPACT = 0
    INHERIT_FLAVOR_PARAMS = 0
    REQUIRED = 1
    OPTIONAL = 2

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaGender(object):
    UNKNOWN = 0
    MALE = 1
    FEMALE = 2

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaGroupUserCreationMode(object):
    MANUAL = 1
    AUTOMATIC = 2

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaGroupUserRole(object):
    MEMBER = 1
    MANAGER = 2

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaGroupUserStatus(object):
    ACTIVE = 0
    DELETED = 1

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaInheritanceType(object):
    INHERIT = 1
    MANUAL = 2

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaIpAddressRestrictionType(object):
    RESTRICT_LIST = 0
    ALLOW_LIST = 1

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaLicenseType(object):
    UNKNOWN = -1
    NONE = 0
    COPYRIGHTED = 1
    PUBLIC_DOMAIN = 2
    CREATIVECOMMONS_ATTRIBUTION = 3
    CREATIVECOMMONS_ATTRIBUTION_SHARE_ALIKE = 4
    CREATIVECOMMONS_ATTRIBUTION_NO_DERIVATIVES = 5
    CREATIVECOMMONS_ATTRIBUTION_NON_COMMERCIAL = 6
    CREATIVECOMMONS_ATTRIBUTION_NON_COMMERCIAL_SHARE_ALIKE = 7
    CREATIVECOMMONS_ATTRIBUTION_NON_COMMERCIAL_NO_DERIVATIVES = 8
    GFDL = 9
    GPL = 10
    AFFERO_GPL = 11
    LGPL = 12
    BSD = 13
    APACHE = 14
    MOZILLA = 15

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaLimitFlavorsRestrictionType(object):
    RESTRICT_LIST = 0
    ALLOW_LIST = 1

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaLivePublishStatus(object):
    DISABLED = 0
    ENABLED = 1

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaLiveReportExportType(object):
    PARTNER_TOTAL_ALL = 1
    PARTNER_TOTAL_LIVE = 2
    ENTRY_TIME_LINE_ALL = 11
    ENTRY_TIME_LINE_LIVE = 12
    LOCATION_ALL = 21
    LOCATION_LIVE = 22
    SYNDICATION_ALL = 31
    SYNDICATION_LIVE = 32

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaLiveStatsEventType(object):
    LIVE = 1
    DVR = 2

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaLiveStreamBroadcastStatus(object):
    OFFLINE = 1
    PREVIEW = 2
    LIVE = 3

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaMailJobStatus(object):
    PENDING = 1
    SENT = 2
    ERROR = 3
    QUEUED = 4

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaMediaType(object):
    VIDEO = 1
    IMAGE = 2
    AUDIO = 5
    LIVE_STREAM_FLASH = 201
    LIVE_STREAM_WINDOWS_MEDIA = 202
    LIVE_STREAM_REAL_MEDIA = 203
    LIVE_STREAM_QUICKTIME = 204

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaModerationFlagType(object):
    SEXUAL_CONTENT = 1
    VIOLENT_REPULSIVE = 2
    HARMFUL_DANGEROUS = 3
    SPAM_COMMERCIALS = 4
    COPYRIGHT = 5
    TERMS_OF_USE_VIOLATION = 6

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaMrssExtensionMode(object):
    APPEND = 1
    REPLACE = 2

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaNotificationObjectType(object):
    ENTRY = 1
    KSHOW = 2
    USER = 3
    BATCH_JOB = 4

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaNotificationStatus(object):
    PENDING = 1
    SENT = 2
    ERROR = 3
    SHOULD_RESEND = 4
    ERROR_RESENDING = 5
    SENT_SYNCH = 6
    QUEUED = 7

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaNotificationType(object):
    ENTRY_ADD = 1
    ENTR_UPDATE_PERMISSIONS = 2
    ENTRY_DELETE = 3
    ENTRY_BLOCK = 4
    ENTRY_UPDATE = 5
    ENTRY_UPDATE_THUMBNAIL = 6
    ENTRY_UPDATE_MODERATION = 7
    USER_ADD = 21
    USER_BANNED = 26

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaNullableBoolean(object):
    NULL_VALUE = -1
    FALSE_VALUE = 0
    TRUE_VALUE = 1

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaPartnerAuthenticationType(object):
    PASSWORD_ONLY = 0
    TWO_FACTOR_AUTH = 1
    SSO = 2

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaPartnerGroupType(object):
    PUBLISHER = 1
    VAR_GROUP = 2
    GROUP = 3
    TEMPLATE = 4

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaPartnerStatus(object):
    DELETED = 0
    ACTIVE = 1
    BLOCKED = 2
    FULL_BLOCK = 3
    READ_ONLY = 4

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaPartnerType(object):
    KMC = 1
    WIKI = 100
    WORDPRESS = 101
    DRUPAL = 102
    DEKIWIKI = 103
    MOODLE = 104
    COMMUNITY_EDITION = 105
    JOOMLA = 106
    BLACKBOARD = 107
    SAKAI = 108
    ADMIN_CONSOLE = 109

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaPermissionStatus(object):
    ACTIVE = 1
    BLOCKED = 2
    DELETED = 3

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaPermissionType(object):
    NORMAL = 1
    SPECIAL_FEATURE = 2
    PLUGIN = 3
    PARTNER_GROUP = 4

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaPlaylistType(object):
    STATIC_LIST = 3
    DYNAMIC = 10
    EXTERNAL = 101
    PATH = 102

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaPrivacyType(object):
    ALL = 1
    AUTHENTICATED_USERS = 2
    MEMBERS_ONLY = 3

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaRecordStatus(object):
    DISABLED = 0
    APPENDED = 1
    PER_SESSION = 2

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaRecordingStatus(object):
    STOPPED = 0
    PAUSED = 1
    ACTIVE = 2
    DISABLED = 3

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaReportExportItemType(object):
    TABLE = 1
    TOTAL = 2
    GRAPH = 3

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaResponseProfileStatus(object):
    DISABLED = 1
    ENABLED = 2
    DELETED = 3

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaResponseProfileType(object):
    INCLUDE_FIELDS = 1
    EXCLUDE_FIELDS = 2

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaResponseType(object):
    RESPONSE_TYPE_JSON = 1
    RESPONSE_TYPE_XML = 2
    RESPONSE_TYPE_PHP = 3
    RESPONSE_TYPE_PHP_ARRAY = 4
    RESPONSE_TYPE_HTML = 7
    RESPONSE_TYPE_MRSS = 8
    RESPONSE_TYPE_JSONP = 9

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaSchedulerStatusType(object):
    RUNNING_BATCHES_COUNT = 1
    RUNNING_BATCHES_CPU = 2
    RUNNING_BATCHES_MEMORY = 3
    RUNNING_BATCHES_NETWORK = 4
    RUNNING_BATCHES_DISC_IO = 5
    RUNNING_BATCHES_DISC_SPACE = 6
    RUNNING_BATCHES_IS_RUNNING = 7
    RUNNING_BATCHES_LAST_EXECUTION_TIME = 8

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaSearchOperatorType(object):
    SEARCH_AND = 1
    SEARCH_OR = 2

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaSearchProviderType(object):
    FLICKR = 3
    YOUTUBE = 4
    MYSPACE = 7
    PHOTOBUCKET = 8
    JAMENDO = 9
    CCMIXTER = 10
    NYPL = 11
    CURRENT = 12
    MEDIA_COMMONS = 13
    KALTURA = 20
    KALTURA_USER_CLIPS = 21
    ARCHIVE_ORG = 22
    KALTURA_PARTNER = 23
    METACAFE = 24
    SEARCH_PROXY = 28
    PARTNER_SPECIFIC = 100

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaServerNodeStatus(object):
    ACTIVE = 1
    DISABLED = 2
    DELETED = 3
    NOT_REGISTERED = 4
    NOT_OPERATIONAL = 5

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaSessionType(object):
    USER = 0
    ADMIN = 2

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaSiteRestrictionType(object):
    RESTRICT_SITE_LIST = 0
    ALLOW_SITE_LIST = 1

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaStatsEventType(object):
    WIDGET_LOADED = 1
    MEDIA_LOADED = 2
    PLAY = 3
    PLAY_REACHED_25 = 4
    PLAY_REACHED_50 = 5
    PLAY_REACHED_75 = 6
    PLAY_REACHED_100 = 7
    OPEN_EDIT = 8
    OPEN_VIRAL = 9
    OPEN_DOWNLOAD = 10
    OPEN_REPORT = 11
    BUFFER_START = 12
    BUFFER_END = 13
    OPEN_FULL_SCREEN = 14
    CLOSE_FULL_SCREEN = 15
    REPLAY = 16
    SEEK = 17
    OPEN_UPLOAD = 18
    SAVE_PUBLISH = 19
    CLOSE_EDITOR = 20
    PRE_BUMPER_PLAYED = 21
    POST_BUMPER_PLAYED = 22
    BUMPER_CLICKED = 23
    PREROLL_STARTED = 24
    MIDROLL_STARTED = 25
    POSTROLL_STARTED = 26
    OVERLAY_STARTED = 27
    PREROLL_CLICKED = 28
    MIDROLL_CLICKED = 29
    POSTROLL_CLICKED = 30
    OVERLAY_CLICKED = 31
    PREROLL_25 = 32
    PREROLL_50 = 33
    PREROLL_75 = 34
    MIDROLL_25 = 35
    MIDROLL_50 = 36
    MIDROLL_75 = 37
    POSTROLL_25 = 38
    POSTROLL_50 = 39
    POSTROLL_75 = 40

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaStatsFeatureType(object):
    NONE = 0
    RELATED = 1

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaStatsKmcEventType(object):
    CONTENT_PAGE_VIEW = 1001
    CONTENT_ADD_PLAYLIST = 1010
    CONTENT_EDIT_PLAYLIST = 1011
    CONTENT_DELETE_PLAYLIST = 1012
    CONTENT_EDIT_ENTRY = 1013
    CONTENT_CHANGE_THUMBNAIL = 1014
    CONTENT_ADD_TAGS = 1015
    CONTENT_REMOVE_TAGS = 1016
    CONTENT_ADD_ADMIN_TAGS = 1017
    CONTENT_REMOVE_ADMIN_TAGS = 1018
    CONTENT_DOWNLOAD = 1019
    CONTENT_APPROVE_MODERATION = 1020
    CONTENT_REJECT_MODERATION = 1021
    CONTENT_BULK_UPLOAD = 1022
    CONTENT_ADMIN_KCW_UPLOAD = 1023
    ACCOUNT_CHANGE_PARTNER_INFO = 1030
    ACCOUNT_CHANGE_LOGIN_INFO = 1031
    ACCOUNT_CONTACT_US_USAGE = 1032
    ACCOUNT_UPDATE_SERVER_SETTINGS = 1033
    ACCOUNT_ACCOUNT_OVERVIEW = 1034
    ACCOUNT_ACCESS_CONTROL = 1035
    ACCOUNT_TRANSCODING_SETTINGS = 1036
    ACCOUNT_ACCOUNT_UPGRADE = 1037
    ACCOUNT_SAVE_SERVER_SETTINGS = 1038
    ACCOUNT_ACCESS_CONTROL_DELETE = 1039
    ACCOUNT_SAVE_TRANSCODING_SETTINGS = 1040
    LOGIN = 1041
    DASHBOARD_IMPORT_CONTENT = 1042
    DASHBOARD_UPDATE_CONTENT = 1043
    DASHBOARD_ACCOUNT_CONTACT_US = 1044
    DASHBOARD_VIEW_REPORTS = 1045
    DASHBOARD_EMBED_PLAYER = 1046
    DASHBOARD_EMBED_PLAYLIST = 1047
    DASHBOARD_CUSTOMIZE_PLAYERS = 1048
    APP_STUDIO_NEW_PLAYER_SINGLE_VIDEO = 1050
    APP_STUDIO_NEW_PLAYER_PLAYLIST = 1051
    APP_STUDIO_NEW_PLAYER_MULTI_TAB_PLAYLIST = 1052
    APP_STUDIO_EDIT_PLAYER_SINGLE_VIDEO = 1053
    APP_STUDIO_EDIT_PLAYER_PLAYLIST = 1054
    APP_STUDIO_EDIT_PLAYER_MULTI_TAB_PLAYLIST = 1055
    APP_STUDIO_DUPLICATE_PLAYER = 1056
    CONTENT_CONTENT_GO_TO_PAGE = 1057
    CONTENT_DELETE_ITEM = 1058
    CONTENT_DELETE_MIX = 1059
    REPORTS_AND_ANALYTICS_BANDWIDTH_USAGE_TAB = 1070
    REPORTS_AND_ANALYTICS_CONTENT_REPORTS_TAB = 1071
    REPORTS_AND_ANALYTICS_USERS_AND_COMMUNITY_REPORTS_TAB = 1072
    REPORTS_AND_ANALYTICS_TOP_CONTRIBUTORS = 1073
    REPORTS_AND_ANALYTICS_MAP_OVERLAYS = 1074
    REPORTS_AND_ANALYTICS_TOP_SYNDICATIONS = 1075
    REPORTS_AND_ANALYTICS_TOP_CONTENT = 1076
    REPORTS_AND_ANALYTICS_CONTENT_DROPOFF = 1077
    REPORTS_AND_ANALYTICS_CONTENT_INTERACTIONS = 1078
    REPORTS_AND_ANALYTICS_CONTENT_CONTRIBUTIONS = 1079
    REPORTS_AND_ANALYTICS_VIDEO_DRILL_DOWN = 1080
    REPORTS_AND_ANALYTICS_CONTENT_DRILL_DOWN_INTERACTION = 1081
    REPORTS_AND_ANALYTICS_CONTENT_CONTRIBUTIONS_DRILLDOWN = 1082
    REPORTS_AND_ANALYTICS_VIDEO_DRILL_DOWN_DROPOFF = 1083
    REPORTS_AND_ANALYTICS_MAP_OVERLAYS_DRILLDOWN = 1084
    REPORTS_AND_ANALYTICS_TOP_SYNDICATIONS_DRILL_DOWN = 1085
    REPORTS_AND_ANALYTICS_BANDWIDTH_USAGE_VIEW_MONTHLY = 1086
    REPORTS_AND_ANALYTICS_BANDWIDTH_USAGE_VIEW_YEARLY = 1087
    CONTENT_ENTRY_DRILLDOWN = 1088
    CONTENT_OPEN_PREVIEW_AND_EMBED = 1089

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaStorageProfileDeliveryStatus(object):
    ACTIVE = 1
    BLOCKED = 2

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaStorageProfileReadyBehavior(object):
    NO_IMPACT = 0
    REQUIRED = 1

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaStorageProfileStatus(object):
    DISABLED = 1
    AUTOMATIC = 2
    MANUAL = 3

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaSyndicationFeedStatus(object):
    DELETED = -1
    ACTIVE = 1

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaSyndicationFeedType(object):
    GOOGLE_VIDEO = 1
    YAHOO = 2
    ITUNES = 3
    TUBE_MOGUL = 4
    KALTURA = 5
    KALTURA_XSLT = 6
    ROKU_DIRECT_PUBLISHER = 7
    OPERA_TV_SNAP = 8

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaThumbAssetStatus(object):
    ERROR = -1
    QUEUED = 0
    CAPTURING = 1
    READY = 2
    DELETED = 3
    IMPORTING = 7
    EXPORTING = 9

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaThumbCropType(object):
    RESIZE = 1
    RESIZE_WITH_PADDING = 2
    CROP = 3
    CROP_FROM_TOP = 4
    RESIZE_WITH_FORCE = 5

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaTwoFactorAuthenticationMode(object):
    ALL = 0
    ADMIN_USERS_ONLY = 1
    NON_ADMIN_USERS_ONLY = 2

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaUiConfCreationMode(object):
    WIZARD = 2
    ADVANCED = 3
    SYSTEM = 4

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaUiConfObjType(object):
    PLAYER = 1
    CONTRIBUTION_WIZARD = 2
    SIMPLE_EDITOR = 3
    ADVANCED_EDITOR = 4
    PLAYLIST = 5
    APP_STUDIO = 6
    KRECORD = 7
    PLAYER_V3 = 8
    KMC_ACCOUNT = 9
    KMC_ANALYTICS = 10
    KMC_CONTENT = 11
    KMC_DASHBOARD = 12
    KMC_LOGIN = 13
    PLAYER_SL = 14
    CLIENTSIDE_ENCODER = 15
    KMC_GENERAL = 16
    KMC_ROLES_AND_PERMISSIONS = 17
    CLIPPER = 18
    KSR = 19
    KUPLOAD = 20
    WEBCASTING = 21
    SAP = 22
    REELS = 23

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaUpdateMethodType(object):
    MANUAL = 0
    AUTOMATIC = 1

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaUploadErrorCode(object):
    NO_ERROR = 0
    GENERAL_ERROR = 1
    PARTIAL_UPLOAD = 2

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaUploadTokenStatus(object):
    PENDING = 0
    PARTIAL_UPLOAD = 1
    FULL_UPLOAD = 2
    CLOSED = 3
    TIMED_OUT = 4
    DELETED = 5

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaUserAgentRestrictionType(object):
    RESTRICT_LIST = 0
    ALLOW_LIST = 1

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaUserJoinPolicyType(object):
    AUTO_JOIN = 1
    REQUEST_TO_JOIN = 2
    NOT_ALLOWED = 3

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaUserMode(object):
    NONE = 0
    PROTECTED_USER = 1

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaUserRoleStatus(object):
    ACTIVE = 1
    BLOCKED = 2
    DELETED = 3

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaUserStatus(object):
    BLOCKED = 0
    ACTIVE = 1
    DELETED = 2

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaUserType(object):
    USER = 0
    GROUP = 1

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaViewMode(object):
    PREVIEW = 0
    ALLOW_ALL = 1

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaWidgetSecurityType(object):
    NONE = 1
    TIMEHASH = 2

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaZoomGroupParticipationType(object):
    NO_CLASSIFICATION = 0
    OPT_IN = 1
    OPT_OUT = 2

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaAccessControlOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    CREATED_AT_DESC = "-createdAt"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaAccessControlProfileOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    UPDATED_AT_ASC = "+updatedAt"
    CREATED_AT_DESC = "-createdAt"
    UPDATED_AT_DESC = "-updatedAt"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaAdminUserOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    ID_ASC = "+id"
    UPDATED_AT_ASC = "+updatedAt"
    CREATED_AT_DESC = "-createdAt"
    ID_DESC = "-id"
    UPDATED_AT_DESC = "-updatedAt"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaAkamaiUniversalStreamType(object):
    HD_IPHONE_IPAD_LIVE = "HD iPhone/iPad Live"
    UNIVERSAL_STREAMING_LIVE = "Universal Streaming Live"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaAmazonS3StorageProfileFilesPermissionLevel(object):
    ACL_AUTHENTICATED_READ = "authenticated-read"
    ACL_PRIVATE = "private"
    ACL_PUBLIC_READ = "public-read"
    ACL_PUBLIC_READ_WRITE = "public-read-write"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaAmazonS3StorageProfileOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    UPDATED_AT_ASC = "+updatedAt"
    CREATED_AT_DESC = "-createdAt"
    UPDATED_AT_DESC = "-updatedAt"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaApiActionPermissionItemOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    ID_ASC = "+id"
    UPDATED_AT_ASC = "+updatedAt"
    CREATED_AT_DESC = "-createdAt"
    ID_DESC = "-id"
    UPDATED_AT_DESC = "-updatedAt"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaApiParameterPermissionItemAction(object):
    USAGE = "all"
    INSERT = "insert"
    READ = "read"
    UPDATE = "update"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaApiParameterPermissionItemOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    ID_ASC = "+id"
    UPDATED_AT_ASC = "+updatedAt"
    CREATED_AT_DESC = "-createdAt"
    ID_DESC = "-id"
    UPDATED_AT_DESC = "-updatedAt"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaAppTokenHashType(object):
    MD5 = "MD5"
    SHA1 = "SHA1"
    SHA256 = "SHA256"
    SHA512 = "SHA512"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaAppTokenOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    UPDATED_AT_ASC = "+updatedAt"
    CREATED_AT_DESC = "-createdAt"
    UPDATED_AT_DESC = "-updatedAt"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaAssetOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    DELETED_AT_ASC = "+deletedAt"
    SIZE_ASC = "+size"
    UPDATED_AT_ASC = "+updatedAt"
    CREATED_AT_DESC = "-createdAt"
    DELETED_AT_DESC = "-deletedAt"
    SIZE_DESC = "-size"
    UPDATED_AT_DESC = "-updatedAt"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaAssetParamsOrderBy(object):

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaAssetParamsOutputOrderBy(object):

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaAssetType(object):
    ATTACHMENT = "attachment.Attachment"
    CAPTION = "caption.Caption"
    DOCUMENT = "document.Document"
    IMAGE = "document.Image"
    PDF = "document.PDF"
    SWF = "document.SWF"
    TIMED_THUMB_ASSET = "thumbCuePoint.timedThumb"
    TRANSCRIPT = "transcript.Transcript"
    WIDEVINE_FLAVOR = "widevine.WidevineFlavor"
    FLAVOR = "1"
    THUMBNAIL = "2"
    LIVE = "3"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaAudioCodec(object):
    NONE = ""
    AAC = "aac"
    AACHE = "aache"
    AC3 = "ac3"
    AMRNB = "amrnb"
    COPY = "copy"
    EAC3 = "eac3"
    MP3 = "mp3"
    MPEG2 = "mpeg2"
    PCM = "pcm"
    VORBIS = "vorbis"
    WMA = "wma"
    WMAPRO = "wmapro"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaBaseEntryCloneOptions(object):
    AD_CUE_POINTS = "adCuePoint.AD_CUE_POINTS"
    ANNOTATION_CUE_POINTS = "annotation.ANNOTATION_CUE_POINTS"
    CODE_CUE_POINTS = "codeCuePoint.CODE_CUE_POINTS"
    SESSION_CUE_POINTS = "sessionCuePoint.SESSION_CUE_POINTS"
    THUMB_CUE_POINTS = "thumbCuePoint.THUMB_CUE_POINTS"
    USERS = "1"
    CATEGORIES = "2"
    CHILD_ENTRIES = "3"
    ACCESS_CONTROL = "4"
    METADATA = "5"
    FLAVORS = "6"
    CAPTIONS = "7"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaBaseEntryCompareAttribute(object):
    ACCESS_CONTROL_ID = "accessControlId"
    CREATED_AT = "createdAt"
    END_DATE = "endDate"
    MODERATION_COUNT = "moderationCount"
    MODERATION_STATUS = "moderationStatus"
    PARTNER_ID = "partnerId"
    PARTNER_SORT_VALUE = "partnerSortValue"
    RANK = "rank"
    REPLACEMENT_STATUS = "replacementStatus"
    START_DATE = "startDate"
    STATUS = "status"
    TOTAL_RANK = "totalRank"
    TYPE = "type"
    UPDATED_AT = "updatedAt"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaBaseEntryMatchAttribute(object):
    ADMIN_TAGS = "adminTags"
    CATEGORIES_IDS = "categoriesIds"
    CREATOR_ID = "creatorId"
    DESCRIPTION = "description"
    GROUP_ID = "groupId"
    ID = "id"
    NAME = "name"
    REFERENCE_ID = "referenceId"
    REPLACED_ENTRY_ID = "replacedEntryId"
    REPLACING_ENTRY_ID = "replacingEntryId"
    SEARCH_TEXT = "searchText"
    TAGS = "tags"
    USER_ID = "userId"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaBaseEntryOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    END_DATE_ASC = "+endDate"
    MODERATION_COUNT_ASC = "+moderationCount"
    NAME_ASC = "+name"
    PARTNER_SORT_VALUE_ASC = "+partnerSortValue"
    RANK_ASC = "+rank"
    RECENT_ASC = "+recent"
    START_DATE_ASC = "+startDate"
    TOTAL_RANK_ASC = "+totalRank"
    UPDATED_AT_ASC = "+updatedAt"
    WEIGHT_ASC = "+weight"
    CREATED_AT_DESC = "-createdAt"
    END_DATE_DESC = "-endDate"
    MODERATION_COUNT_DESC = "-moderationCount"
    NAME_DESC = "-name"
    PARTNER_SORT_VALUE_DESC = "-partnerSortValue"
    RANK_DESC = "-rank"
    RECENT_DESC = "-recent"
    START_DATE_DESC = "-startDate"
    TOTAL_RANK_DESC = "-totalRank"
    UPDATED_AT_DESC = "-updatedAt"
    WEIGHT_DESC = "-weight"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaBaseSyndicationFeedOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    NAME_ASC = "+name"
    PLAYLIST_ID_ASC = "+playlistId"
    TYPE_ASC = "+type"
    UPDATED_AT_ASC = "+updatedAt"
    CREATED_AT_DESC = "-createdAt"
    NAME_DESC = "-name"
    PLAYLIST_ID_DESC = "-playlistId"
    TYPE_DESC = "-type"
    UPDATED_AT_DESC = "-updatedAt"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaBaseUserOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    ID_ASC = "+id"
    UPDATED_AT_ASC = "+updatedAt"
    CREATED_AT_DESC = "-createdAt"
    ID_DESC = "-id"
    UPDATED_AT_DESC = "-updatedAt"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaBatchJobObjectType(object):
    ENTRY_DISTRIBUTION = "contentDistribution.EntryDistribution"
    DROP_FOLDER_FILE = "dropFolderXmlBulkUpload.DropFolderFile"
    METADATA = "metadata.Metadata"
    METADATA_PROFILE = "metadata.MetadataProfile"
    SCHEDULED_TASK_PROFILE = "scheduledTask.ScheduledTaskProfile"
    ENTRY = "1"
    CATEGORY = "2"
    FILE_SYNC = "3"
    ASSET = "4"
    USER = "5"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaBatchJobOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    ESTIMATED_EFFORT_ASC = "+estimatedEffort"
    EXECUTION_ATTEMPTS_ASC = "+executionAttempts"
    FINISH_TIME_ASC = "+finishTime"
    LOCK_VERSION_ASC = "+lockVersion"
    PRIORITY_ASC = "+priority"
    QUEUE_TIME_ASC = "+queueTime"
    STATUS_ASC = "+status"
    UPDATED_AT_ASC = "+updatedAt"
    CREATED_AT_DESC = "-createdAt"
    ESTIMATED_EFFORT_DESC = "-estimatedEffort"
    EXECUTION_ATTEMPTS_DESC = "-executionAttempts"
    FINISH_TIME_DESC = "-finishTime"
    LOCK_VERSION_DESC = "-lockVersion"
    PRIORITY_DESC = "-priority"
    QUEUE_TIME_DESC = "-queueTime"
    STATUS_DESC = "-status"
    UPDATED_AT_DESC = "-updatedAt"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaBatchJobType(object):
    CONVERT = "0"
    REACH_INTERNAL_QUEUE_HANDLER = "ReachInternal.ReachInternalQueueHandler"
    CONVERT_CAPTION_ASSET = "caption.convertcaptionasset"
    PARSE_MULTI_LANGUAGE_CAPTION_ASSET = "caption.parsemultilanguagecaptionasset"
    PARSE_CAPTION_ASSET = "captionSearch.parseCaptionAsset"
    DISTRIBUTION_DELETE = "contentDistribution.DistributionDelete"
    DISTRIBUTION_DISABLE = "contentDistribution.DistributionDisable"
    DISTRIBUTION_ENABLE = "contentDistribution.DistributionEnable"
    DISTRIBUTION_FETCH_REPORT = "contentDistribution.DistributionFetchReport"
    DISTRIBUTION_SUBMIT = "contentDistribution.DistributionSubmit"
    DISTRIBUTION_SYNC = "contentDistribution.DistributionSync"
    DISTRIBUTION_UPDATE = "contentDistribution.DistributionUpdate"
    DROP_FOLDER_CONTENT_PROCESSOR = "dropFolder.DropFolderContentProcessor"
    DROP_FOLDER_WATCHER = "dropFolder.DropFolderWatcher"
    EVENT_NOTIFICATION_HANDLER = "eventNotification.EventNotificationHandler"
    INTEGRATION = "integration.Integration"
    ENTRY_VENDOR_TASK_CSV = "reach.EntryVendorTasksCsv"
    SYNC_REACH_CREDIT_TASK = "reach.SyncReachCreditTask"
    SCHEDULED_TASK = "scheduledTask.ScheduledTask"
    SEARCH_TERM_CSV = "searchHistory.searchTermsCsv"
    INDEX_TAGS = "tagSearch.IndexTagsByPrivacyContext"
    TAG_RESOLVE = "tagSearch.TagResolve"
    VIRUS_SCAN = "virusScan.VirusScan"
    WIDEVINE_REPOSITORY_SYNC = "widevine.WidevineRepositorySync"
    IMPORT = "1"
    DELETE = "2"
    FLATTEN = "3"
    BULKUPLOAD = "4"
    DVDCREATOR = "5"
    DOWNLOAD = "6"
    OOCONVERT = "7"
    CONVERT_PROFILE = "10"
    POSTCONVERT = "11"
    EXTRACT_MEDIA = "14"
    MAIL = "15"
    NOTIFICATION = "16"
    CLEANUP = "17"
    SCHEDULER_HELPER = "18"
    BULKDOWNLOAD = "19"
    DB_CLEANUP = "20"
    PROVISION_PROVIDE = "21"
    CONVERT_COLLECTION = "22"
    STORAGE_EXPORT = "23"
    PROVISION_DELETE = "24"
    STORAGE_DELETE = "25"
    EMAIL_INGESTION = "26"
    METADATA_IMPORT = "27"
    METADATA_TRANSFORM = "28"
    FILESYNC_IMPORT = "29"
    CAPTURE_THUMB = "30"
    DELETE_FILE = "31"
    INDEX = "32"
    MOVE_CATEGORY_ENTRIES = "33"
    COPY = "34"
    CONCAT = "35"
    CONVERT_LIVE_SEGMENT = "36"
    COPY_PARTNER = "37"
    VALIDATE_LIVE_MEDIA_SERVERS = "38"
    SYNC_CATEGORY_PRIVACY_CONTEXT = "39"
    LIVE_REPORT_EXPORT = "40"
    RECALCULATE_CACHE = "41"
    LIVE_TO_VOD = "42"
    COPY_CAPTIONS = "43"
    CHUNKED_ENCODE_JOB_SCHEDULER = "44"
    SERVER_NODE_MONITOR = "45"
    USERS_CSV = "46"
    CLIP_CONCAT = "47"
    COPY_CUE_POINTS = "48"
    EXPORT_CSV = "49"
    REPORT_EXPORT = "50"
    LIVE_ENTRY_ARCHIVE = "51"
    STORAGE_UPDATE = "52"
    STORAGE_PERIODIC_EXPORT = "53"
    STORAGE_PERIODIC_PURGE = "54"
    STORAGE_PERIODIC_DELETE_LOCAL = "55"
    REACH_JOB_CLEANER = "56"
    MULTI_CLIP_CONCAT = "57"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaBulkUploadAction(object):
    CANCEL = "scheduleBulkUpload.CANCEL"
    ADD = "1"
    UPDATE = "2"
    DELETE = "3"
    REPLACE = "4"
    TRANSFORM_XSLT = "5"
    ADD_OR_UPDATE = "6"
    ACTIVATE = "7"
    REJECT = "8"
    UPDATE_STATUS = "9"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaBulkUploadObjectType(object):
    JOB = "bulkUploadFilter.JOB"
    SCHEDULE_EVENT = "scheduleBulkUpload.SCHEDULE_EVENT"
    SCHEDULE_RESOURCE = "scheduleBulkUpload.SCHEDULE_RESOURCE"
    ENTRY = "1"
    CATEGORY = "2"
    USER = "3"
    CATEGORY_USER = "4"
    CATEGORY_ENTRY = "5"
    USER_ENTRY = "6"
    VENDOR_CATALOG_ITEM = "7"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaBulkUploadOrderBy(object):

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaBulkUploadResultStatus(object):
    ERROR = "1"
    OK = "2"
    IN_PROGRESS = "3"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaBulkUploadType(object):
    CSV = "bulkUploadCsv.CSV"
    FILTER = "bulkUploadFilter.FILTER"
    XML = "bulkUploadXml.XML"
    DROP_FOLDER_XML = "dropFolderXmlBulkUpload.DROP_FOLDER_XML"
    ICAL = "scheduleBulkUpload.ICAL"
    DROP_FOLDER_ICAL = "scheduleDropFolder.DROP_FOLDER_ICAL"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaCategoryEntryAdvancedOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    CREATED_AT_DESC = "-createdAt"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaCategoryEntryOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    CREATED_AT_DESC = "-createdAt"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaCategoryIdentifierField(object):
    FULL_NAME = "fullName"
    ID = "id"
    REFERENCE_ID = "referenceId"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaCategoryOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    DEPTH_ASC = "+depth"
    DIRECT_ENTRIES_COUNT_ASC = "+directEntriesCount"
    DIRECT_SUB_CATEGORIES_COUNT_ASC = "+directSubCategoriesCount"
    ENTRIES_COUNT_ASC = "+entriesCount"
    FULL_NAME_ASC = "+fullName"
    MEMBERS_COUNT_ASC = "+membersCount"
    NAME_ASC = "+name"
    PARTNER_SORT_VALUE_ASC = "+partnerSortValue"
    UPDATED_AT_ASC = "+updatedAt"
    CREATED_AT_DESC = "-createdAt"
    DEPTH_DESC = "-depth"
    DIRECT_ENTRIES_COUNT_DESC = "-directEntriesCount"
    DIRECT_SUB_CATEGORIES_COUNT_DESC = "-directSubCategoriesCount"
    ENTRIES_COUNT_DESC = "-entriesCount"
    FULL_NAME_DESC = "-fullName"
    MEMBERS_COUNT_DESC = "-membersCount"
    NAME_DESC = "-name"
    PARTNER_SORT_VALUE_DESC = "-partnerSortValue"
    UPDATED_AT_DESC = "-updatedAt"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaCategoryUserOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    UPDATED_AT_ASC = "+updatedAt"
    CREATED_AT_DESC = "-createdAt"
    UPDATED_AT_DESC = "-updatedAt"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaCloneComponentSelectorType(object):
    INCLUDE_COMPONENT = "0"
    EXCLUDE_COMPONENT = "1"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaConditionType(object):
    ABC_WATERMARK = "abcScreenersWatermarkAccessControl.abcWatermark"
    EVENT_NOTIFICATION_FIELD = "eventNotification.BooleanField"
    EVENT_NOTIFICATION_OBJECT_CHANGED = "eventNotification.ObjectChanged"
    METADATA_FIELD_CHANGED = "metadata.FieldChanged"
    METADATA_FIELD_COMPARE = "metadata.FieldCompare"
    METADATA_FIELD_MATCH = "metadata.FieldMatch"
    EVENT_CATEGORY_ENTRY = "reach.CategoryEntry"
    AUTHENTICATED = "1"
    COUNTRY = "2"
    IP_ADDRESS = "3"
    SITE = "4"
    USER_AGENT = "5"
    FIELD_MATCH = "6"
    FIELD_COMPARE = "7"
    ASSET_PROPERTIES_COMPARE = "8"
    USER_ROLE = "9"
    GEO_DISTANCE = "10"
    OR_OPERATOR = "11"
    HASH = "12"
    DELIVERY_PROFILE = "13"
    ACTIVE_EDGE_VALIDATE = "14"
    ANONYMOUS_IP = "15"
    ASSET_TYPE = "16"
    BOOLEAN = "17"
    HTTP_HEADER = "18"
    ENTRY_SCHEDULED = "19"
    ACTION_NAME = "20"
    URL_AUTH_PARAMS = "21"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaConfMapsSourceLocation(object):
    FS = "FileSystem"
    DB = "database"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaContainerFormat(object):
    _3GP = "3gp"
    APPLEHTTP = "applehttp"
    AVI = "avi"
    BIF = "bif"
    BMP = "bmp"
    COPY = "copy"
    FLV = "flv"
    HLS = "hls"
    ISMA = "isma"
    ISMV = "ismv"
    JPG = "jpg"
    M2TS = "m2ts"
    M4V = "m4v"
    MKV = "mkv"
    MOV = "mov"
    MP3 = "mp3"
    MP4 = "mp4"
    MPEG = "mpeg"
    MPEGTS = "mpegts"
    MXF = "mxf"
    OGG = "ogg"
    OGV = "ogv"
    PDF = "pdf"
    PNG = "png"
    SWF = "swf"
    WAV = "wav"
    WEBM = "webm"
    WMA = "wma"
    WMV = "wmv"
    WVM = "wvm"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaContextType(object):
    PLAY = "1"
    DOWNLOAD = "2"
    THUMBNAIL = "3"
    METADATA = "4"
    EXPORT = "5"
    SERVE = "6"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaControlPanelCommandOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    UPDATED_AT_ASC = "+updatedAt"
    CREATED_AT_DESC = "-createdAt"
    UPDATED_AT_DESC = "-updatedAt"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaConversionProfileAssetParamsOrderBy(object):

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaConversionProfileOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    CREATED_AT_DESC = "-createdAt"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaConversionProfileStatus(object):
    DISABLED = "1"
    ENABLED = "2"
    DELETED = "3"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaConversionProfileType(object):
    MEDIA = "1"
    LIVE_STREAM = "2"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaDataEntryCompareAttribute(object):
    ACCESS_CONTROL_ID = "accessControlId"
    CREATED_AT = "createdAt"
    END_DATE = "endDate"
    MODERATION_COUNT = "moderationCount"
    MODERATION_STATUS = "moderationStatus"
    PARTNER_ID = "partnerId"
    PARTNER_SORT_VALUE = "partnerSortValue"
    RANK = "rank"
    REPLACEMENT_STATUS = "replacementStatus"
    START_DATE = "startDate"
    STATUS = "status"
    TOTAL_RANK = "totalRank"
    TYPE = "type"
    UPDATED_AT = "updatedAt"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaDataEntryMatchAttribute(object):
    ADMIN_TAGS = "adminTags"
    CATEGORIES_IDS = "categoriesIds"
    CREATOR_ID = "creatorId"
    DESCRIPTION = "description"
    GROUP_ID = "groupId"
    ID = "id"
    NAME = "name"
    REFERENCE_ID = "referenceId"
    REPLACED_ENTRY_ID = "replacedEntryId"
    REPLACING_ENTRY_ID = "replacingEntryId"
    SEARCH_TEXT = "searchText"
    TAGS = "tags"
    USER_ID = "userId"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaDataEntryOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    END_DATE_ASC = "+endDate"
    MODERATION_COUNT_ASC = "+moderationCount"
    NAME_ASC = "+name"
    PARTNER_SORT_VALUE_ASC = "+partnerSortValue"
    RANK_ASC = "+rank"
    RECENT_ASC = "+recent"
    START_DATE_ASC = "+startDate"
    TOTAL_RANK_ASC = "+totalRank"
    UPDATED_AT_ASC = "+updatedAt"
    WEIGHT_ASC = "+weight"
    CREATED_AT_DESC = "-createdAt"
    END_DATE_DESC = "-endDate"
    MODERATION_COUNT_DESC = "-moderationCount"
    NAME_DESC = "-name"
    PARTNER_SORT_VALUE_DESC = "-partnerSortValue"
    RANK_DESC = "-rank"
    RECENT_DESC = "-recent"
    START_DATE_DESC = "-startDate"
    TOTAL_RANK_DESC = "-totalRank"
    UPDATED_AT_DESC = "-updatedAt"
    WEIGHT_DESC = "-weight"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaDeliveryProfileAkamaiAppleHttpManifestOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    UPDATED_AT_ASC = "+updatedAt"
    CREATED_AT_DESC = "-createdAt"
    UPDATED_AT_DESC = "-updatedAt"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaDeliveryProfileAkamaiHdsOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    UPDATED_AT_ASC = "+updatedAt"
    CREATED_AT_DESC = "-createdAt"
    UPDATED_AT_DESC = "-updatedAt"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaDeliveryProfileAkamaiHttpOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    UPDATED_AT_ASC = "+updatedAt"
    CREATED_AT_DESC = "-createdAt"
    UPDATED_AT_DESC = "-updatedAt"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaDeliveryProfileGenericAppleHttpOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    UPDATED_AT_ASC = "+updatedAt"
    CREATED_AT_DESC = "-createdAt"
    UPDATED_AT_DESC = "-updatedAt"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaDeliveryProfileGenericHdsOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    UPDATED_AT_ASC = "+updatedAt"
    CREATED_AT_DESC = "-createdAt"
    UPDATED_AT_DESC = "-updatedAt"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaDeliveryProfileGenericHttpOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    UPDATED_AT_ASC = "+updatedAt"
    CREATED_AT_DESC = "-createdAt"
    UPDATED_AT_DESC = "-updatedAt"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaDeliveryProfileGenericRtmpOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    UPDATED_AT_ASC = "+updatedAt"
    CREATED_AT_DESC = "-createdAt"
    UPDATED_AT_DESC = "-updatedAt"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaDeliveryProfileGenericSilverLightOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    UPDATED_AT_ASC = "+updatedAt"
    CREATED_AT_DESC = "-createdAt"
    UPDATED_AT_DESC = "-updatedAt"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaDeliveryProfileLiveAppleHttpOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    UPDATED_AT_ASC = "+updatedAt"
    CREATED_AT_DESC = "-createdAt"
    UPDATED_AT_DESC = "-updatedAt"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaDeliveryProfileOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    UPDATED_AT_ASC = "+updatedAt"
    CREATED_AT_DESC = "-createdAt"
    UPDATED_AT_DESC = "-updatedAt"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaDeliveryProfileRtmpOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    UPDATED_AT_ASC = "+updatedAt"
    CREATED_AT_DESC = "-createdAt"
    UPDATED_AT_DESC = "-updatedAt"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaDeliveryProfileType(object):
    EDGE_CAST_HTTP = "edgeCast.EDGE_CAST_HTTP"
    EDGE_CAST_RTMP = "edgeCast.EDGE_CAST_RTMP"
    KONTIKI_HTTP = "kontiki.KONTIKI_HTTP"
    UPLYNK_HTTP = "uplynk.UPLYNK_HTTP"
    UPLYNK_RTMP = "uplynk.UPLYNK_RTMP"
    VELOCIX_HDS = "velocix.VELOCIX_HDS"
    VELOCIX_HLS = "velocix.VELOCIX_HLS"
    APPLE_HTTP = "1"
    HDS = "3"
    HTTP = "4"
    RTMP = "5"
    RTSP = "6"
    SILVER_LIGHT = "7"
    AKAMAI_HLS_DIRECT = "10"
    AKAMAI_HLS_MANIFEST = "11"
    AKAMAI_HD = "12"
    AKAMAI_HDS = "13"
    AKAMAI_HTTP = "14"
    AKAMAI_RTMP = "15"
    AKAMAI_RTSP = "16"
    AKAMAI_SS = "17"
    GENERIC_HLS = "21"
    GENERIC_HDS = "23"
    GENERIC_HTTP = "24"
    GENERIC_HLS_MANIFEST = "25"
    GENERIC_HDS_MANIFEST = "26"
    GENERIC_SS = "27"
    GENERIC_RTMP = "28"
    LEVEL3_HLS = "31"
    LEVEL3_HTTP = "34"
    LEVEL3_RTMP = "35"
    LIMELIGHT_HTTP = "44"
    LIMELIGHT_RTMP = "45"
    LOCAL_PATH_APPLE_HTTP = "51"
    LOCAL_PATH_HDS = "53"
    LOCAL_PATH_HTTP = "54"
    LOCAL_PATH_RTMP = "55"
    VOD_PACKAGER_HLS = "61"
    VOD_PACKAGER_HDS = "63"
    VOD_PACKAGER_MSS = "67"
    VOD_PACKAGER_DASH = "68"
    VOD_PACKAGER_HLS_MANIFEST = "69"
    LIVE_HLS = "1001"
    LIVE_HDS = "1002"
    LIVE_DASH = "1003"
    LIVE_RTMP = "1005"
    LIVE_HLS_TO_MULTICAST = "1006"
    LIVE_PACKAGER_HLS = "1007"
    LIVE_PACKAGER_HDS = "1008"
    LIVE_PACKAGER_DASH = "1009"
    LIVE_PACKAGER_MSS = "1010"
    LIVE_AKAMAI_HDS = "1013"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaDeliveryServerNodeOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    HEARTBEAT_TIME_ASC = "+heartbeatTime"
    UPDATED_AT_ASC = "+updatedAt"
    CREATED_AT_DESC = "-createdAt"
    HEARTBEAT_TIME_DESC = "-heartbeatTime"
    UPDATED_AT_DESC = "-updatedAt"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaDocumentEntryCompareAttribute(object):
    ACCESS_CONTROL_ID = "accessControlId"
    CREATED_AT = "createdAt"
    END_DATE = "endDate"
    MODERATION_COUNT = "moderationCount"
    MODERATION_STATUS = "moderationStatus"
    PARTNER_ID = "partnerId"
    PARTNER_SORT_VALUE = "partnerSortValue"
    RANK = "rank"
    REPLACEMENT_STATUS = "replacementStatus"
    START_DATE = "startDate"
    STATUS = "status"
    TOTAL_RANK = "totalRank"
    TYPE = "type"
    UPDATED_AT = "updatedAt"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaDocumentEntryMatchAttribute(object):
    ADMIN_TAGS = "adminTags"
    CATEGORIES_IDS = "categoriesIds"
    CREATOR_ID = "creatorId"
    DESCRIPTION = "description"
    GROUP_ID = "groupId"
    ID = "id"
    NAME = "name"
    REFERENCE_ID = "referenceId"
    REPLACED_ENTRY_ID = "replacedEntryId"
    REPLACING_ENTRY_ID = "replacingEntryId"
    SEARCH_TEXT = "searchText"
    TAGS = "tags"
    USER_ID = "userId"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaDrmSchemeName(object):
    PLAYREADY_CENC = "drm.PLAYREADY_CENC"
    WIDEVINE_CENC = "drm.WIDEVINE_CENC"
    FAIRPLAY = "fairplay.FAIRPLAY"
    PLAYREADY = "playReady.PLAYREADY"
    WIDEVINE = "widevine.WIDEVINE"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaDurationType(object):
    LONG = "long"
    MEDIUM = "medium"
    NOT_AVAILABLE = "notavailable"
    SHORT = "short"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaESearchLanguage(object):
    ARABIC = "Arabic"
    BASQUE = "Basque"
    BRAZILIAN = "Brazilian"
    BULGARIAN = "Bulgarian"
    CATALAN = "Catalan"
    CHINESE = "Chinese"
    CZECH = "Czech"
    DANISH = "Danish"
    DUTCH = "Dutch"
    ENGLISH = "English"
    FINNISH = "Finnish"
    FRENCH = "French"
    GALICIAN = "Galician"
    GERMAN = "German"
    GREEK = "Greek"
    HINDI = "Hindi"
    HUNGRIAN = "Hungarian"
    INDONESIAN = "Indonesian"
    ITALIAN = "Italian"
    JAPANESE = "Japanese"
    KOREAN = "Korean"
    LATVIAN = "Latvian"
    LITHUANIAN = "Lithuanian"
    NORWEGIAN = "Norwegian"
    PERSIAN = "Persian"
    PORTUGUESE = "Prtuguese"
    ROMANIAN = "Romanian"
    RUSSIAN = "Russian"
    SORANI = "Sorani"
    SPANISH = "Spanish"
    SWEDISH = "Swedish"
    THAI = "Thai"
    TURKISH = "Turkish"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaEdgeServerNodeOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    HEARTBEAT_TIME_ASC = "+heartbeatTime"
    UPDATED_AT_ASC = "+updatedAt"
    CREATED_AT_DESC = "-createdAt"
    HEARTBEAT_TIME_DESC = "-heartbeatTime"
    UPDATED_AT_DESC = "-updatedAt"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaEntryApplication(object):
    KMC = "0"
    KMS = "1"
    KAF = "2"
    PITCH = "3"
    KMS_GO = "4"
    WEBCAST_APP = "5"
    PERSONAL_CAPTURE = "6"
    KALTURA_MEETING = "7"
    EP = "8"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaEntryIdentifierField(object):
    ID = "id"
    REFERENCE_ID = "referenceId"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaEntryReplacementStatus(object):
    NONE = "0"
    APPROVED_BUT_NOT_READY = "1"
    READY_BUT_NOT_APPROVED = "2"
    NOT_READY_AND_NOT_APPROVED = "3"
    FAILED = "4"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaEntryServerNodeOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    UPDATED_AT_ASC = "+updatedAt"
    CREATED_AT_DESC = "-createdAt"
    UPDATED_AT_DESC = "-updatedAt"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaEntryServerNodeType(object):
    LIVE_PRIMARY = "0"
    LIVE_BACKUP = "1"
    LIVE_CLIPPING_TASK = "2"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaEntryStatus(object):
    ERROR_IMPORTING = "-2"
    ERROR_CONVERTING = "-1"
    IMPORT = "0"
    INFECTED = "virusScan.Infected"
    SCAN_FAILURE = "virusScan.ScanFailure"
    PRECONVERT = "1"
    READY = "2"
    DELETED = "3"
    PENDING = "4"
    MODERATE = "5"
    BLOCKED = "6"
    NO_CONTENT = "7"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaEntryType(object):
    AUTOMATIC = "-1"
    CONFERENCE_ENTRY_SERVER = "conference.CONFERENCE_ENTRY_SERVER"
    EXTERNAL_MEDIA = "externalMedia.externalMedia"
    ROOM = "room.room"
    SIP_ENTRY_SERVER = "sip.SIP_ENTRY_SERVER"
    MEDIA_CLIP = "1"
    MIX = "2"
    PLAYLIST = "5"
    DATA = "6"
    LIVE_STREAM = "7"
    LIVE_CHANNEL = "8"
    DOCUMENT = "10"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaExternalMediaEntryCompareAttribute(object):
    ACCESS_CONTROL_ID = "accessControlId"
    CREATED_AT = "createdAt"
    END_DATE = "endDate"
    LAST_PLAYED_AT = "lastPlayedAt"
    MEDIA_DATE = "mediaDate"
    MEDIA_TYPE = "mediaType"
    MODERATION_COUNT = "moderationCount"
    MODERATION_STATUS = "moderationStatus"
    MS_DURATION = "msDuration"
    PARTNER_ID = "partnerId"
    PARTNER_SORT_VALUE = "partnerSortValue"
    PLAYS = "plays"
    RANK = "rank"
    REPLACEMENT_STATUS = "replacementStatus"
    START_DATE = "startDate"
    STATUS = "status"
    TOTAL_RANK = "totalRank"
    TYPE = "type"
    UPDATED_AT = "updatedAt"
    VIEWS = "views"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaExternalMediaEntryMatchAttribute(object):
    ADMIN_TAGS = "adminTags"
    CATEGORIES_IDS = "categoriesIds"
    CREATOR_ID = "creatorId"
    DESCRIPTION = "description"
    DURATION_TYPE = "durationType"
    FLAVOR_PARAMS_IDS = "flavorParamsIds"
    GROUP_ID = "groupId"
    ID = "id"
    NAME = "name"
    REFERENCE_ID = "referenceId"
    REPLACED_ENTRY_ID = "replacedEntryId"
    REPLACING_ENTRY_ID = "replacingEntryId"
    SEARCH_TEXT = "searchText"
    TAGS = "tags"
    USER_ID = "userId"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaFileAssetObjectType(object):
    UI_CONF = "2"
    ENTRY = "3"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaFileAssetOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    UPDATED_AT_ASC = "+updatedAt"
    CREATED_AT_DESC = "-createdAt"
    UPDATED_AT_DESC = "-updatedAt"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaFileAssetStatus(object):
    PENDING = "0"
    UPLOADING = "1"
    READY = "2"
    DELETED = "3"
    ERROR = "4"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaFileSyncObjectType(object):
    DISTRIBUTION_PROFILE = "contentDistribution.DistributionProfile"
    ENTRY_DISTRIBUTION = "contentDistribution.EntryDistribution"
    GENERIC_DISTRIBUTION_ACTION = "contentDistribution.GenericDistributionAction"
    EMAIL_NOTIFICATION_TEMPLATE = "emailNotification.EmailNotificationTemplate"
    HTTP_NOTIFICATION_TEMPLATE = "httpNotification.HttpNotificationTemplate"
    ENTRY = "1"
    UICONF = "2"
    BATCHJOB = "3"
    ASSET = "4"
    FLAVOR_ASSET = "4"
    METADATA = "5"
    METADATA_PROFILE = "6"
    SYNDICATION_FEED = "7"
    CONVERSION_PROFILE = "8"
    FILE_ASSET = "9"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaFlavorAssetOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    DELETED_AT_ASC = "+deletedAt"
    SIZE_ASC = "+size"
    UPDATED_AT_ASC = "+updatedAt"
    CREATED_AT_DESC = "-createdAt"
    DELETED_AT_DESC = "-deletedAt"
    SIZE_DESC = "-size"
    UPDATED_AT_DESC = "-updatedAt"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaFlavorParamsOrderBy(object):

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaFlavorParamsOutputOrderBy(object):

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaGenericSyndicationFeedOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    NAME_ASC = "+name"
    PLAYLIST_ID_ASC = "+playlistId"
    TYPE_ASC = "+type"
    UPDATED_AT_ASC = "+updatedAt"
    CREATED_AT_DESC = "-createdAt"
    NAME_DESC = "-name"
    PLAYLIST_ID_DESC = "-playlistId"
    TYPE_DESC = "-type"
    UPDATED_AT_DESC = "-updatedAt"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaGenericXsltSyndicationFeedOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    NAME_ASC = "+name"
    PLAYLIST_ID_ASC = "+playlistId"
    TYPE_ASC = "+type"
    UPDATED_AT_ASC = "+updatedAt"
    CREATED_AT_DESC = "-createdAt"
    NAME_DESC = "-name"
    PLAYLIST_ID_DESC = "-playlistId"
    TYPE_DESC = "-type"
    UPDATED_AT_DESC = "-updatedAt"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaGeoCoderType(object):
    KALTURA = "1"
    MAX_MIND = "2"
    DIGITAL_ELEMENT = "3"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaGoogleSyndicationFeedAdultValues(object):
    NO = "No"
    YES = "Yes"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaGoogleVideoSyndicationFeedOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    NAME_ASC = "+name"
    PLAYLIST_ID_ASC = "+playlistId"
    TYPE_ASC = "+type"
    UPDATED_AT_ASC = "+updatedAt"
    CREATED_AT_DESC = "-createdAt"
    NAME_DESC = "-name"
    PLAYLIST_ID_DESC = "-playlistId"
    TYPE_DESC = "-type"
    UPDATED_AT_DESC = "-updatedAt"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaGroupUserOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    UPDATED_AT_ASC = "+updatedAt"
    CREATED_AT_DESC = "-createdAt"
    UPDATED_AT_DESC = "-updatedAt"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaITunesSyndicationFeedAdultValues(object):
    CLEAN = "clean"
    NO = "no"
    YES = "yes"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaITunesSyndicationFeedCategories(object):
    ARTS = "Arts"
    ARTS_DESIGN = "Arts/Design"
    ARTS_FASHION_BEAUTY = "Arts/Fashion &amp; Beauty"
    ARTS_FOOD = "Arts/Food"
    ARTS_LITERATURE = "Arts/Literature"
    ARTS_PERFORMING_ARTS = "Arts/Performing Arts"
    ARTS_VISUAL_ARTS = "Arts/Visual Arts"
    BUSINESS = "Business"
    BUSINESS_BUSINESS_NEWS = "Business/Business News"
    BUSINESS_CAREERS = "Business/Careers"
    BUSINESS_INVESTING = "Business/Investing"
    BUSINESS_MANAGEMENT_MARKETING = "Business/Management &amp; Marketing"
    BUSINESS_SHOPPING = "Business/Shopping"
    COMEDY = "Comedy"
    EDUCATION = "Education"
    EDUCATION_TECHNOLOGY = "Education/Education Technology"
    EDUCATION_HIGHER_EDUCATION = "Education/Higher Education"
    EDUCATION_K_12 = "Education/K-12"
    EDUCATION_LANGUAGE_COURSES = "Education/Language Courses"
    EDUCATION_TRAINING = "Education/Training"
    GAMES_HOBBIES = "Games &amp; Hobbies"
    GAMES_HOBBIES_AUTOMOTIVE = "Games &amp; Hobbies/Automotive"
    GAMES_HOBBIES_AVIATION = "Games &amp; Hobbies/Aviation"
    GAMES_HOBBIES_HOBBIES = "Games &amp; Hobbies/Hobbies"
    GAMES_HOBBIES_OTHER_GAMES = "Games &amp; Hobbies/Other Games"
    GAMES_HOBBIES_VIDEO_GAMES = "Games &amp; Hobbies/Video Games"
    GOVERNMENT_ORGANIZATIONS = "Government &amp; Organizations"
    GOVERNMENT_ORGANIZATIONS_LOCAL = "Government &amp; Organizations/Local"
    GOVERNMENT_ORGANIZATIONS_NATIONAL = "Government &amp; Organizations/National"
    GOVERNMENT_ORGANIZATIONS_NON_PROFIT = "Government &amp; Organizations/Non-Profit"
    GOVERNMENT_ORGANIZATIONS_REGIONAL = "Government &amp; Organizations/Regional"
    HEALTH = "Health"
    HEALTH_ALTERNATIVE_HEALTH = "Health/Alternative Health"
    HEALTH_FITNESS_NUTRITION = "Health/Fitness &amp; Nutrition"
    HEALTH_SELF_HELP = "Health/Self-Help"
    HEALTH_SEXUALITY = "Health/Sexuality"
    KIDS_FAMILY = "Kids &amp; Family"
    MUSIC = "Music"
    NEWS_POLITICS = "News &amp; Politics"
    RELIGION_SPIRITUALITY = "Religion &amp; Spirituality"
    RELIGION_SPIRITUALITY_BUDDHISM = "Religion &amp; Spirituality/Buddhism"
    RELIGION_SPIRITUALITY_CHRISTIANITY = "Religion &amp; Spirituality/Christianity"
    RELIGION_SPIRITUALITY_HINDUISM = "Religion &amp; Spirituality/Hinduism"
    RELIGION_SPIRITUALITY_ISLAM = "Religion &amp; Spirituality/Islam"
    RELIGION_SPIRITUALITY_JUDAISM = "Religion &amp; Spirituality/Judaism"
    RELIGION_SPIRITUALITY_OTHER = "Religion &amp; Spirituality/Other"
    RELIGION_SPIRITUALITY_SPIRITUALITY = "Religion &amp; Spirituality/Spirituality"
    SCIENCE_MEDICINE = "Science &amp; Medicine"
    SCIENCE_MEDICINE_MEDICINE = "Science &amp; Medicine/Medicine"
    SCIENCE_MEDICINE_NATURAL_SCIENCES = "Science &amp; Medicine/Natural Sciences"
    SCIENCE_MEDICINE_SOCIAL_SCIENCES = "Science &amp; Medicine/Social Sciences"
    SOCIETY_CULTURE = "Society &amp; Culture"
    SOCIETY_CULTURE_HISTORY = "Society &amp; Culture/History"
    SOCIETY_CULTURE_PERSONAL_JOURNALS = "Society &amp; Culture/Personal Journals"
    SOCIETY_CULTURE_PHILOSOPHY = "Society &amp; Culture/Philosophy"
    SOCIETY_CULTURE_PLACES_TRAVEL = "Society &amp; Culture/Places &amp; Travel"
    SPORTS_RECREATION = "Sports &amp; Recreation"
    SPORTS_RECREATION_AMATEUR = "Sports &amp; Recreation/Amateur"
    SPORTS_RECREATION_COLLEGE_HIGH_SCHOOL = "Sports &amp; Recreation/College &amp; High School"
    SPORTS_RECREATION_OUTDOOR = "Sports &amp; Recreation/Outdoor"
    SPORTS_RECREATION_PROFESSIONAL = "Sports &amp; Recreation/Professional"
    TV_FILM = "TV &amp; Film"
    TECHNOLOGY = "Technology"
    TECHNOLOGY_GADGETS = "Technology/Gadgets"
    TECHNOLOGY_PODCASTING = "Technology/Podcasting"
    TECHNOLOGY_SOFTWARE_HOW_TO = "Technology/Software How-To"
    TECHNOLOGY_TECH_NEWS = "Technology/Tech News"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaITunesSyndicationFeedOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    NAME_ASC = "+name"
    PLAYLIST_ID_ASC = "+playlistId"
    TYPE_ASC = "+type"
    UPDATED_AT_ASC = "+updatedAt"
    CREATED_AT_DESC = "-createdAt"
    NAME_DESC = "-name"
    PLAYLIST_ID_DESC = "-playlistId"
    TYPE_DESC = "-type"
    UPDATED_AT_DESC = "-updatedAt"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaLanguage(object):
    ABQ = "Abaza"
    AB = "Abkhazian"
    ABE = "Abnaki Western"
    ABU = "Abure"
    ACN = "Achang"
    ACE = "Achinese"
    ACT = "Achterhooks"
    ACV = "Achumawi"
    ADJ = "Adioukrou"
    ADY = "Adyghe; Adygei"
    ADT = "Adynyamathanha"
    AAL = "Afade"
    AA = "Afar"
    AF = "Afrikaans"
    AGQ = "Aghem"
    AGX = "Aghul"
    AGU = "Aguacateco"
    AGR = "Aguaruna"
    AIN = "Ainu (Japan)"
    AKK = "Akkadian"
    AKL = "Aklanon"
    AKU = "Akum"
    AKZ = "Alabama"
    SQ = "Albanian"
    ALN = "Albanian (Gheg)"
    ALS = "Albanian (Tosk)"
    ALE = "Aleut"
    ALG = "Algonquian languages"
    ALQ = "Algonquin"
    ALT = "Altai (Southern)"
    AM = "Amharic"
    RME = "Angloromani"
    APJ = "Apache (Jicarilla)"
    APW = "Apache (Western)"
    AR = "Arabic"
    ARB = "Arabic (standard)"
    B_T = "Arabic Tunisian Spoken"
    ARC = "Aramaic"
    SAM = "Aramaic Samaritan"
    ARP = "Arapaho"
    ARN = "Araucanian"
    ARI = "Arikara"
    HY = "Armenian"
    RUP = "Aromanian"
    AS_ = "Assamese"
    ASB = "Assiniboine"
    AII = "Assyrian Neo-Aramaic"
    AST = "Asturian"
    ATH = "Athapascan languages"
    ATJ = "Atikamekw"
    AWA = "Awadhi"
    AY = "Aymara"
    AZ = "Azerbaijani"
    BCR = "Babine"
    BFQ = "Badaga"
    BDJ = "Bai"
    BAN = "Balinese"
    BCC = "Balochi Southern"
    BFT = "Balti"
    BAL = "Baluchi"
    BAS = "Basa (Cameroon)"
    BA = "Bashkir"
    EU = "Basque"
    BAR = "Bavarian"
    BEA = "Beaver"
    BEJ = "Beja"
    BEM = "Bemba (Zambia)"
    BN = "Bengali (Bangla)"
    BEW = "Betawi"
    KAP = "Bezhta"
    BHB = "Bhili"
    BHO = "Bhojpuri"
    DZ = "Bhutani"
    BH = "Bihari"
    BIK = "Bikol"
    BIN = "Bini"
    BPY = "Bishnupriya Manipuri"
    BI = "Bislama"
    BS = "Bosnian"
    BR = "Breton"
    BUG = "Buginese"
    BG = "Bulgarian"
    BUA = "Buriat"
    MY = "Burmese"
    BE = "Byelorussian (Belarusian)"
    CAD = "Caddo"
    KM = "Cambodian"
    YUE = "Cantonese"
    CRX = "Carrier"
    CAF = "Carrier Southern"
    CA = "Catalan"
    CHC = "Catawba"
    CAY = "Cayuga"
    CEB = "Cebuano"
    CHG = "Chagatai"
    CLD = "Chaldean Neo-Aramaic"
    CHR = "Cherokee"
    CHY = "Cheyenne"
    CIC = "Chickasaw"
    CLC = "Chilcotin"
    ZH = "Chinese"
    CHN = "Chinook jargon"
    CHP = "Chipewyan"
    CIW = "Chippewa"
    CHO = "Choctaw"
    CAA = "Chor"
    CKT = "Chukot"
    CIM = "Cimbrian"
    CLM = "Clallam Klallam"
    COJ = "Cochimi"
    COC = "Cocopa"
    KSH = "Colognian"
    COM = "Comanche"
    SWB = "Comorian"
    COO = "Comox"
    COP = "Coptic"
    CO = "Corsican"
    CR = "Cree"
    MUS = "Creek"
    CRH = "Crimean Tatar"
    HR = "Croatian"
    CUP = "Cupeo"
    CS = "Czech"
    DAK = "Dakota"
    DA = "Danish"
    DAR = "Dargwa"
    PRD = "Dari (Persian)"
    GBZ = "Dari Zoroastrian"
    DHV = "Dehu"
    DEL = "Delaware"
    DIN = "Dinka"
    DOI = "Dogri (generic)"
    DGR = "Dogrib"
    DLG = "Dolgan"
    DOH = "Dong"
    DUA = "Duala"
    DNG = "Dungan"
    NL = "Dutch"
    DYU = "Dyula"
    EEE = "E"
    EGL = "Emilian"
    EN = "English"
    EN_US = "English (American)"
    EN_AU = "English (Australian)"
    EN_GB = "English (British)"
    ENM = "English Middle (1100-1500)"
    MYV = "Erzya"
    EO = "Esperanto"
    ET = "Estonian"
    EVE = "Even"
    EVN = "Evenki"
    FO = "Faeroese"
    FAX = "Fala"
    FAN = "Fang (Equatorial Guinea)"
    FA = "Farsi"
    FJ = "Fiji"
    FIL = "Filipino"
    FI = "Finnish"
    FIT = "Finnish (Tornedalen)"
    FON = "Fon"
    FRP = "Franco-Prove"
    FRK = "Frankish"
    FR = "French"
    FR_CA = "French (Canada)"
    FY = "Frisian"
    FRR = "Frisian Northern"
    FUR = "Friulian"
    FVR = "Fur"
    GAA = "Ga"
    GV = "Gaelic (Manx)"
    GD = "Gaelic (Scottish)"
    GAG = "Gagauz"
    GL = "Galician"
    GAN = "Gan"
    GEZ = "Geez"
    KA = "Georgian"
    DE = "German"
    GEH = "German Hutterite"
    PDC = "German Pennsylvania"
    GIL = "Gilbertese"
    NIV = "Gilyak Nivkh"
    GIT = "Gitxsan"
    EL = "Greek"
    GRC = "Greek Ancient (to 1453)"
    KL = "Greenlandic"
    GN = "Guarani"
    GU = "Gujarati"
    GWI = "Gwichin"
    HAI = "Haida"
    HNN = "Hainanese"
    HAS = "Haisla"
    HAK = "Hakka"
    HUR = "Halkomelem"
    HAA = "Han"
    HNI = "Hani"
    HA = "Hausa"
    HAW = "Hawaiian"
    HE = "Hebrew"
    IW = "Hebrew"
    HEI = "Heiltsuk"
    HID = "Hidatsa"
    HIL = "Hiligaynon"
    HI = "Hindi"
    HMN = "Hmong"
    HKK = "Hokkien"
    HOP = "Hopi"
    CZH = "Huizhou Chinese"
    HU = "Hungarian"
    IS = "Icelandic"
    KPO = "Ikposo"
    ILO = "Iloko"
    SMN = "Inari Sami"
    IN = "Indonesian"
    ID = "Indonesian"
    IZH = "Ingrian"
    INH = "Ingush"
    IA = "Interlingua"
    IE = "Interlingue"
    IKT = "Inuinnaqtun"
    IU = "Inuktitut"
    IK = "Inupiak"
    GA = "Irish"
    IRO = "Iroquoian languages"
    IT = "Italian"
    ITL = "Itelmen"
    JA = "Japanese"
    JV = "Javanese"
    CJY = "Jinyu Chinese"
    KAJ = "Jju"
    JCT = "Judeo-Crimean Tatar"
    JGE = "Judeo-Georgian"
    JUT = "Jutish"
    KBD = "Kabardian"
    KEA = "Kabuverdianu"
    KAB = "Kabyle"
    KFR = "Kachchi"
    KJV = "Kaikavian literary language (Kajkavian)"
    XAL = "Kalmyk Oirat"
    KN = "Kannada"
    KSK = "Kansa"
    KRC = "Karachay-Balkar"
    KIM = "Karagas"
    KDR = "Karaim"
    KAA = "Karakalpak"
    KRL = "Karelian"
    KS = "Kashmiri"
    CSB = "Kashubian"
    KKZ = "Kaska"
    KAW = "Kawi"
    KK = "Kazakh"
    KJH = "Khakas"
    KLJ = "Khalaj Turkic"
    KCA = "Khanty"
    KHA = "Khasi"
    KXM = "Khmer Northern"
    KIC = "Kickapoo"
    RW = "Kinyarwanda (Ruanda)"
    KIO = "Kiowa"
    KY = "Kirghiz"
    RN = "Kirundi (Rundi)"
    TLH = "Klingon tlhIngan-Hol"
    KFA = "Kodava"
    KOI = "Komi-Permyak"
    KOK = "Konkani (generic)"
    KNN = "Konkani (specific)"
    GOM = "Konkani Goan"
    KO = "Korean"
    KPY = "Koryak"
    KOS = "Kosraean"
    AVK = "Kotava"
    KPE = "Kpelle"
    DIH = "Kumiai"
    KUM = "Kumyk"
    KU = "Kurdish"
    KUT = "Kutenai"
    KWK = "Kwakiutl"
    GDM = "Laal"
    LLD = "Ladin"
    LAD = "Ladino"
    LAH = "Lahnda"
    LHU = "Lahu"
    LBE = "Lak"
    LKI = "Laki"
    LKT = "Lakota"
    LO = "Laothian"
    LA = "Latin"
    LV = "Latvian (Lettish)"
    LZZ = "Laz"
    LEZ = "Lezghian"
    LIJ = "Ligurian"
    LIL = "Lillooet"
    LIF = "Limbu"
    LI = "Limburgish ( Limburger)"
    LN = "Lingala"
    LT = "Lithuanian"
    JBO = "Lojban"
    LOM = "Loma (Liberia)"
    LMO = "Lombard"
    NDS = "Low German Low Saxon"
    LOZ = "Lozi"
    LUA = "Luba-Lulua"
    LUQ = "Lucumi"
    LUD = "Ludian"
    SMJ = "Lule Sami"
    LUN = "Lunda"
    LUO = "Luo (Kenya and Tanzania)"
    LUT = "Lushootseed"
    LB = "Luxembourgish (Letzeburgesch)"
    MK = "Macedonian"
    MAD = "Madurese"
    MAG = "Magahi"
    MAI = "Maithili"
    MG = "Malagasy"
    MS = "Malay"
    ML = "Malayalam"
    PQM = "Malecite-Passamaquoddy"
    MT = "Maltese"
    MNC = "Manchu"
    MID = "Mandaic"
    MHQ = "Mandan"
    CMN = "Mandarin Chinese"
    MNS = "Mansi"
    MI = "Maori"
    MRW = "Maranao"
    MR = "Marathi"
    CHM = "Mari (Russia)"
    MWR = "Marwari"
    MAS = "Masai"
    MFY = "Mayo"
    MNI = "Meitei"
    MEN = "Mende (Sierra Leone)"
    MEZ = "Menominee"
    CRG = "Michif"
    MIC = "Micmac"
    MNP = "Min Bei Chinese"
    CDO = "Min Dong Chinese"
    MIN = "Minangkabau"
    XMF = "Mingrelian"
    MWL = "Mirandese"
    MOH = "Mohawk"
    MDF = "Moksha"
    MO = "Moldavian"
    MNW = "Mon"
    MN = "Mongolian"
    MOE = "Montagnais"
    MFE = "Morisyen"
    MOS = "Mossi"
    MXI = "Mozarabic"
    MU = "Multilingual"
    MTQ = "Muong"
    NAQ = "Nama (Namibia)"
    GLD = "Nanai"
    NSK = "Naskapi"
    NA = "Nauru"
    NAP = "Neapolitan"
    NE = "Nepali"
    NEW_ = "Newari Nepal Bhasa"
    NIO = "Nganasan"
    NCG = "Nisgaa"
    NIU = "Niuean"
    ZXX = "No linguistic content"
    NOG = "Nogai"
    NON = "Norse Old"
    NSO = "Northern Sotho Pedi Sepedi"
    NO = "Norwegian"
    NOV = "Novial"
    NYM = "Nyamwezi"
    NYO = "Nyoro"
    NYS = "Nyungah"
    OC = "Occitan"
    OJC = "Ojibwa Central"
    OJG = "Ojibwa Eastern"
    OJB = "Ojibwa Northwestern"
    OJS = "Ojibwa Severn"
    OJW = "Ojibwa Western"
    OJ = "Ojibwe, Ojibwa"
    OKA = "Okanagan"
    RYU = "Okinawan Central"
    ANG = "Old English"
    ONE = "Oneida"
    ONO = "Onondaga"
    OR_ = "Oriya"
    OM = "Oromo (Afan, Galla)"
    OTW = "Ottawa"
    PPI = "Paipai"
    PAU = "Palauan"
    PAM = "Pampanga"
    PAG = "Pangasinan"
    PAP = "Papiamento"
    PS = "Pashto (Pushto)"
    PRP = "Persian"
    PRS = "Persian (Dari)"
    FA_IR = "Persian (Iran)"
    PFL = "Pfaelzisch"
    PCD = "Picard"
    PMS = "Piedmontese"
    MYP = "Pirah"
    PIH = "Pitcairn-Norfolk"
    PDT = "Plautdietsch"
    PL = "Polish"
    PNT = "Pontic"
    PT = "Portuguese"
    PT_BR = "Portuguese (Brazil)"
    POT = "Potawatomi"
    PRG = "Prussian"
    FUC = "Pulaar"
    PA = "Punjabi"
    QXQ = "Qashqai"
    ALC = "Qawasqar"
    QU = "Quechua"
    QUC = "Quich Central"
    RAP = "Rapanui"
    RAR = "Rarotongan"
    QTZ = "Reserved for local use."
    RM = "Rhaeto-Romance"
    RGN = "Romagnol"
    RMF = "Romani Kalo Finnish"
    RMO = "Romani Sinte"
    RO = "Romanian"
    RUO = "Romanian Istro"
    RUQ = "Romanian Megleno"
    ROM = "Romany"
    RCF = "Runion Creole French"
    RU = "Russian"
    RUE = "Rusyn"
    ACF = "Saint Lucian Creole French"
    SAH = "Sakha"
    SLR = "Salar"
    STR = "Salish Straits"
    SAL = "Salishan languages"
    SJD = "Sami Kildin"
    SMI = "Sami languages"
    SM = "Samoan"
    SG = "Sangro"
    SA = "Sanskrit"
    SAT = "Santali"
    SRM = "Saramaccan"
    SDC = "Sardinian Sassarese"
    STQ = "Saterland Frisian"
    SXU = "Saxon Upper"
    SCO = "Scots"
    SEC = "Sechelt"
    TRV = "Seediq"
    SEK = "Sekani"
    SEL = "Selkup"
    SEE = "Seneca"
    SR = "Serbian"
    SH = "Serbo-Croatian"
    SEI = "Seri"
    ST = "Sesotho"
    TN = "Setswana"
    SJW = "Shawnee"
    SN = "Shona"
    CJS = "Shor"
    SHH = "Shoshoni"
    SHS = "Shuswap"
    SCN = "Sicilian"
    SID = "Sidamo"
    BLA = "Siksika"
    SZL = "Silesian"
    ZH_CN = "Simplified Chinese"
    SD = "Sindhi"
    SI = "Sinhalese"
    SS = "Siswati"
    SMS = "Skolt Sami"
    SCS = "Slavey North"
    XSL = "Slavey South"
    SK = "Slovak"
    SK_SK = "Slovakian"
    SL = "Slovenian"
    SO = "Somali"
    SNK = "Soninke"
    DSB = "Sorbian Lower"
    HSB = "Sorbian Upper"
    SMA = "Southern Sami"
    TCE = "Southern Tutchone"
    ES = "Spanish"
    ES_XL = "Spanish (Latin America)"
    SRN = "Sranan"
    STO = "Stoney"
    XSV = "Sudovian"
    SUX = "Sumerian"
    SU = "Sundanese"
    SVA = "Svan"
    SWG = "Swabian"
    SW = "Swahili (Kiswahili)"
    SV = "Swedish"
    SWL = "Swedish Sign Language"
    GSW = "Swiss German Alemannic Alsatian"
    SYR = "Syriac"
    TAB = "Tabassaran"
    SHY = "Tachawit"
    SHI = "Tachelhit"
    TL = "Tagalog"
    TBW = "Tagbanwa"
    TGX = "Tagish"
    THT = "Tahltan"
    TDD = "Tai Na"
    ZH_TW = "Taiwanese Mandarin"
    TG = "Tajik"
    TLY = "Talysh"
    TTQ = "Tamajaq Tawallammat"
    TAQ = "Tamasheq"
    TZM = "Tamazight Central Atlas"
    TA = "Tamil"
    TAR = "Tarahumara Central"
    TTT = "Tat Muslim"
    TT = "Tatar"
    TE = "Telugu"
    TEO = "Teo Chew"
    TET = "Tetum"
    TH = "Thai"
    NOD = "Thai (Northern)"
    TTS = "Thai Northeastern"
    THP = "Thompson"
    BO = "Tibetan"
    TIG = "Tigre"
    TI = "Tigrinya"
    TLI = "Tlingit"
    TCX = "Toda"
    OOD = "Tohono Oodham"
    TPI = "Tok Pisin"
    TO = "Tonga"
    TOG = "Tonga (Nyasa)"
    ZH_HK = "Traditional Chinese"
    DDO = "Tsez"
    TSI = "Tsimshian"
    TS = "Tsonga"
    TCY = "Tulu"
    TUM = "Tumbuka"
    MZB = "Tumzabt"
    TPN = "Tupinamb"
    TUV = "Turkana"
    TR = "Turkish"
    OTA = "Turkish Ottoman"
    TK = "Turkmen"
    TUS = "Tuscarora"
    TVL = "Tuvalu"
    TYV = "Tuvinian"
    TW = "Twi"
    UBY = "Ubykh"
    UDI = "Udi"
    UDM = "Udmurt"
    UG = "Uighur"
    UK = "Ukrainian"
    UN = "Undefined"
    UR = "Urdu"
    UUM = "Urum"
    UZ = "Uzbek"
    VEC = "Venetian"
    VEP = "Veps"
    VI = "Vietnamese"
    VO = "Volapuk"
    VOR = "Voro"
    VOT = "Votic"
    VRO = "Vro"
    AUC = "Waorani"
    WAR = "Waray (Philippines)"
    CY = "Welsh"
    PES = "Western Farsi"
    AMW = "Western Neo-Aramaic"
    WIY = "Wiyot"
    WO = "Wolof"
    WUU = "Wu Chinese"
    WYM = "Wymysorys"
    XH = "Xhosa"
    AME = "Yanesha"
    YI = "Yiddish"
    JI = "Yiddish"
    YO = "Yoruba"
    ZAI = "Zapotec Isthmus"
    DJE = "Zarma"
    ZU = "Zulu"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaLanguageCode(object):
    AA = "aa"
    AB = "ab"
    AF = "af"
    ALG = "alg"
    AM = "am"
    AR = "ar"
    AS_ = "as"
    ATH = "ath"
    AY = "ay"
    AZ = "az"
    BA = "ba"
    BE = "be"
    BG = "bg"
    BH = "bh"
    BI = "bi"
    BLA = "bla"
    BN = "bn"
    BO = "bo"
    BR = "br"
    CA = "ca"
    CO = "co"
    CR = "cr"
    CRG = "crg"
    CS = "cs"
    CY = "cy"
    DA = "da"
    DE = "de"
    DZ = "dz"
    EL = "el"
    EN = "en"
    EN_GB = "en_gb"
    EN_US = "en_us"
    EO = "eo"
    ES = "es"
    ES_XL = "es_xl"
    ET = "et"
    EU = "eu"
    FA = "fa"
    FI = "fi"
    FJ = "fj"
    FO = "fo"
    FR = "fr"
    FR_CA = "fr_ca"
    FY = "fy"
    GA = "ga"
    GD = "gd"
    GL = "gl"
    GN = "gn"
    GU = "gu"
    GV = "gv"
    HA = "ha"
    HE = "he"
    HI = "hi"
    HR = "hr"
    HU = "hu"
    HY = "hy"
    IA = "ia"
    ID = "id"
    IE = "ie"
    IK = "ik"
    IKT = "ikt"
    IN = "in"
    IRO = "iro"
    IS = "is"
    IT = "it"
    IU = "iu"
    IW = "iw"
    JA = "ja"
    JI = "ji"
    JV = "jv"
    KA = "ka"
    KK = "kk"
    KL = "kl"
    KM = "km"
    KN = "kn"
    KO = "ko"
    KS = "ks"
    KU = "ku"
    KY = "ky"
    LA = "la"
    LB = "lb"
    LI = "li"
    LN = "ln"
    LO = "lo"
    LT = "lt"
    LV = "lv"
    MG = "mg"
    MI = "mi"
    MIC = "mic"
    MK = "mk"
    ML = "ml"
    MN = "mn"
    MO = "mo"
    MOE = "moe"
    MR = "mr"
    MS = "ms"
    MT = "mt"
    MU = "mu"
    MY = "my"
    NA = "na"
    NE = "ne"
    NL = "nl"
    NO = "no"
    OC = "oc"
    OJ = "oj"
    OJS = "ojs"
    OJW = "ojw"
    OKA = "oka"
    OM = "om"
    OR_ = "or"
    PA = "pa"
    PL = "pl"
    PS = "ps"
    PT = "pt"
    PT_BR = "pt_br"
    QU = "qu"
    RM = "rm"
    RN = "rn"
    RO = "ro"
    RU = "ru"
    RW = "rw"
    SA = "sa"
    SAL = "sal"
    SD = "sd"
    SG = "sg"
    SH = "sh"
    SI = "si"
    SK = "sk"
    SL = "sl"
    SM = "sm"
    SMI = "smi"
    SN = "sn"
    SO = "so"
    SQ = "sq"
    SR = "sr"
    SS = "ss"
    ST = "st"
    SU = "su"
    SV = "sv"
    SW = "sw"
    TA = "ta"
    TCE = "tce"
    TE = "te"
    TG = "tg"
    TH = "th"
    TI = "ti"
    TK = "tk"
    TL = "tl"
    TN = "tn"
    TO = "to"
    TR = "tr"
    TS = "ts"
    TT = "tt"
    TW = "tw"
    UG = "ug"
    UK = "uk"
    UN = "un"
    UR = "ur"
    UZ = "uz"
    VI = "vi"
    VO = "vo"
    WO = "wo"
    XH = "xh"
    YI = "yi"
    YO = "yo"
    ZH = "zh"
    ZH_TW = "zh_tw"
    ZU = "zu"
    ZXX = "zxx"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaLiveAssetOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    DELETED_AT_ASC = "+deletedAt"
    SIZE_ASC = "+size"
    UPDATED_AT_ASC = "+updatedAt"
    CREATED_AT_DESC = "-createdAt"
    DELETED_AT_DESC = "-deletedAt"
    SIZE_DESC = "-size"
    UPDATED_AT_DESC = "-updatedAt"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaLiveChannelCompareAttribute(object):
    ACCESS_CONTROL_ID = "accessControlId"
    CREATED_AT = "createdAt"
    END_DATE = "endDate"
    LAST_PLAYED_AT = "lastPlayedAt"
    MEDIA_DATE = "mediaDate"
    MEDIA_TYPE = "mediaType"
    MODERATION_COUNT = "moderationCount"
    MODERATION_STATUS = "moderationStatus"
    MS_DURATION = "msDuration"
    PARTNER_ID = "partnerId"
    PARTNER_SORT_VALUE = "partnerSortValue"
    PLAYS = "plays"
    RANK = "rank"
    REPLACEMENT_STATUS = "replacementStatus"
    START_DATE = "startDate"
    STATUS = "status"
    TOTAL_RANK = "totalRank"
    TYPE = "type"
    UPDATED_AT = "updatedAt"
    VIEWS = "views"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaLiveChannelMatchAttribute(object):
    ADMIN_TAGS = "adminTags"
    CATEGORIES_IDS = "categoriesIds"
    CREATOR_ID = "creatorId"
    DESCRIPTION = "description"
    DURATION_TYPE = "durationType"
    FLAVOR_PARAMS_IDS = "flavorParamsIds"
    GROUP_ID = "groupId"
    ID = "id"
    NAME = "name"
    REFERENCE_ID = "referenceId"
    REPLACED_ENTRY_ID = "replacedEntryId"
    REPLACING_ENTRY_ID = "replacingEntryId"
    SEARCH_TEXT = "searchText"
    TAGS = "tags"
    USER_ID = "userId"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaLiveChannelOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    DURATION_ASC = "+duration"
    END_DATE_ASC = "+endDate"
    FIRST_BROADCAST_ASC = "+firstBroadcast"
    LAST_BROADCAST_ASC = "+lastBroadcast"
    LAST_PLAYED_AT_ASC = "+lastPlayedAt"
    MEDIA_TYPE_ASC = "+mediaType"
    MODERATION_COUNT_ASC = "+moderationCount"
    NAME_ASC = "+name"
    PARTNER_SORT_VALUE_ASC = "+partnerSortValue"
    PLAYS_ASC = "+plays"
    RANK_ASC = "+rank"
    RECENT_ASC = "+recent"
    START_DATE_ASC = "+startDate"
    TOTAL_RANK_ASC = "+totalRank"
    UPDATED_AT_ASC = "+updatedAt"
    VIEWS_ASC = "+views"
    WEIGHT_ASC = "+weight"
    CREATED_AT_DESC = "-createdAt"
    DURATION_DESC = "-duration"
    END_DATE_DESC = "-endDate"
    FIRST_BROADCAST_DESC = "-firstBroadcast"
    LAST_BROADCAST_DESC = "-lastBroadcast"
    LAST_PLAYED_AT_DESC = "-lastPlayedAt"
    MEDIA_TYPE_DESC = "-mediaType"
    MODERATION_COUNT_DESC = "-moderationCount"
    NAME_DESC = "-name"
    PARTNER_SORT_VALUE_DESC = "-partnerSortValue"
    PLAYS_DESC = "-plays"
    RANK_DESC = "-rank"
    RECENT_DESC = "-recent"
    START_DATE_DESC = "-startDate"
    TOTAL_RANK_DESC = "-totalRank"
    UPDATED_AT_DESC = "-updatedAt"
    VIEWS_DESC = "-views"
    WEIGHT_DESC = "-weight"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaLiveChannelSegmentOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    START_TIME_ASC = "+startTime"
    UPDATED_AT_ASC = "+updatedAt"
    CREATED_AT_DESC = "-createdAt"
    START_TIME_DESC = "-startTime"
    UPDATED_AT_DESC = "-updatedAt"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaLiveChannelSegmentStatus(object):
    ACTIVE = "2"
    DELETED = "3"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaLiveChannelSegmentTriggerType(object):
    CHANNEL_RELATIVE = "1"
    ABSOLUTE_TIME = "2"
    SEGMENT_START_RELATIVE = "3"
    SEGMENT_END_RELATIVE = "4"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaLiveChannelSegmentType(object):
    VIDEO_AND_AUDIO = "1"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaLiveEntryCompareAttribute(object):
    ACCESS_CONTROL_ID = "accessControlId"
    CREATED_AT = "createdAt"
    END_DATE = "endDate"
    LAST_PLAYED_AT = "lastPlayedAt"
    MEDIA_DATE = "mediaDate"
    MEDIA_TYPE = "mediaType"
    MODERATION_COUNT = "moderationCount"
    MODERATION_STATUS = "moderationStatus"
    MS_DURATION = "msDuration"
    PARTNER_ID = "partnerId"
    PARTNER_SORT_VALUE = "partnerSortValue"
    PLAYS = "plays"
    RANK = "rank"
    REPLACEMENT_STATUS = "replacementStatus"
    START_DATE = "startDate"
    STATUS = "status"
    TOTAL_RANK = "totalRank"
    TYPE = "type"
    UPDATED_AT = "updatedAt"
    VIEWS = "views"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaLiveEntryMatchAttribute(object):
    ADMIN_TAGS = "adminTags"
    CATEGORIES_IDS = "categoriesIds"
    CREATOR_ID = "creatorId"
    DESCRIPTION = "description"
    DURATION_TYPE = "durationType"
    FLAVOR_PARAMS_IDS = "flavorParamsIds"
    GROUP_ID = "groupId"
    ID = "id"
    NAME = "name"
    REFERENCE_ID = "referenceId"
    REPLACED_ENTRY_ID = "replacedEntryId"
    REPLACING_ENTRY_ID = "replacingEntryId"
    SEARCH_TEXT = "searchText"
    TAGS = "tags"
    USER_ID = "userId"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaLiveEntryOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    DURATION_ASC = "+duration"
    END_DATE_ASC = "+endDate"
    FIRST_BROADCAST_ASC = "+firstBroadcast"
    LAST_BROADCAST_ASC = "+lastBroadcast"
    LAST_PLAYED_AT_ASC = "+lastPlayedAt"
    MEDIA_TYPE_ASC = "+mediaType"
    MODERATION_COUNT_ASC = "+moderationCount"
    NAME_ASC = "+name"
    PARTNER_SORT_VALUE_ASC = "+partnerSortValue"
    PLAYS_ASC = "+plays"
    RANK_ASC = "+rank"
    RECENT_ASC = "+recent"
    START_DATE_ASC = "+startDate"
    TOTAL_RANK_ASC = "+totalRank"
    UPDATED_AT_ASC = "+updatedAt"
    VIEWS_ASC = "+views"
    WEIGHT_ASC = "+weight"
    CREATED_AT_DESC = "-createdAt"
    DURATION_DESC = "-duration"
    END_DATE_DESC = "-endDate"
    FIRST_BROADCAST_DESC = "-firstBroadcast"
    LAST_BROADCAST_DESC = "-lastBroadcast"
    LAST_PLAYED_AT_DESC = "-lastPlayedAt"
    MEDIA_TYPE_DESC = "-mediaType"
    MODERATION_COUNT_DESC = "-moderationCount"
    NAME_DESC = "-name"
    PARTNER_SORT_VALUE_DESC = "-partnerSortValue"
    PLAYS_DESC = "-plays"
    RANK_DESC = "-rank"
    RECENT_DESC = "-recent"
    START_DATE_DESC = "-startDate"
    TOTAL_RANK_DESC = "-totalRank"
    UPDATED_AT_DESC = "-updatedAt"
    VIEWS_DESC = "-views"
    WEIGHT_DESC = "-weight"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaLiveParamsOrderBy(object):

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaLiveReportOrderBy(object):
    NAME_ASC = "+name"
    AUDIENCE_DESC = "-audience"
    EVENT_TIME_DESC = "-eventTime"
    PLAYS_DESC = "-plays"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaLiveReportType(object):
    ENTRY_GEO_TIME_LINE = "ENTRY_GEO_TIME_LINE"
    ENTRY_SYNDICATION_TOTAL = "ENTRY_SYNDICATION_TOTAL"
    ENTRY_TIME_LINE = "ENTRY_TIME_LINE"
    ENTRY_TOTAL = "ENTRY_TOTAL"
    PARTNER_TOTAL = "PARTNER_TOTAL"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaLiveStreamAdminEntryCompareAttribute(object):
    ACCESS_CONTROL_ID = "accessControlId"
    CREATED_AT = "createdAt"
    END_DATE = "endDate"
    LAST_PLAYED_AT = "lastPlayedAt"
    MEDIA_DATE = "mediaDate"
    MEDIA_TYPE = "mediaType"
    MODERATION_COUNT = "moderationCount"
    MODERATION_STATUS = "moderationStatus"
    MS_DURATION = "msDuration"
    PARTNER_ID = "partnerId"
    PARTNER_SORT_VALUE = "partnerSortValue"
    PLAYS = "plays"
    RANK = "rank"
    REPLACEMENT_STATUS = "replacementStatus"
    START_DATE = "startDate"
    STATUS = "status"
    TOTAL_RANK = "totalRank"
    TYPE = "type"
    UPDATED_AT = "updatedAt"
    VIEWS = "views"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaLiveStreamAdminEntryMatchAttribute(object):
    ADMIN_TAGS = "adminTags"
    CATEGORIES_IDS = "categoriesIds"
    CREATOR_ID = "creatorId"
    DESCRIPTION = "description"
    DURATION_TYPE = "durationType"
    FLAVOR_PARAMS_IDS = "flavorParamsIds"
    GROUP_ID = "groupId"
    ID = "id"
    NAME = "name"
    REFERENCE_ID = "referenceId"
    REPLACED_ENTRY_ID = "replacedEntryId"
    REPLACING_ENTRY_ID = "replacingEntryId"
    SEARCH_TEXT = "searchText"
    TAGS = "tags"
    USER_ID = "userId"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaLiveStreamAdminEntryOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    DURATION_ASC = "+duration"
    END_DATE_ASC = "+endDate"
    FIRST_BROADCAST_ASC = "+firstBroadcast"
    LAST_BROADCAST_ASC = "+lastBroadcast"
    LAST_PLAYED_AT_ASC = "+lastPlayedAt"
    MEDIA_TYPE_ASC = "+mediaType"
    MODERATION_COUNT_ASC = "+moderationCount"
    NAME_ASC = "+name"
    PARTNER_SORT_VALUE_ASC = "+partnerSortValue"
    PLAYS_ASC = "+plays"
    RANK_ASC = "+rank"
    RECENT_ASC = "+recent"
    START_DATE_ASC = "+startDate"
    TOTAL_RANK_ASC = "+totalRank"
    UPDATED_AT_ASC = "+updatedAt"
    VIEWS_ASC = "+views"
    WEIGHT_ASC = "+weight"
    CREATED_AT_DESC = "-createdAt"
    DURATION_DESC = "-duration"
    END_DATE_DESC = "-endDate"
    FIRST_BROADCAST_DESC = "-firstBroadcast"
    LAST_BROADCAST_DESC = "-lastBroadcast"
    LAST_PLAYED_AT_DESC = "-lastPlayedAt"
    MEDIA_TYPE_DESC = "-mediaType"
    MODERATION_COUNT_DESC = "-moderationCount"
    NAME_DESC = "-name"
    PARTNER_SORT_VALUE_DESC = "-partnerSortValue"
    PLAYS_DESC = "-plays"
    RANK_DESC = "-rank"
    RECENT_DESC = "-recent"
    START_DATE_DESC = "-startDate"
    TOTAL_RANK_DESC = "-totalRank"
    UPDATED_AT_DESC = "-updatedAt"
    VIEWS_DESC = "-views"
    WEIGHT_DESC = "-weight"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaLiveStreamEntryCompareAttribute(object):
    ACCESS_CONTROL_ID = "accessControlId"
    CREATED_AT = "createdAt"
    END_DATE = "endDate"
    LAST_PLAYED_AT = "lastPlayedAt"
    MEDIA_DATE = "mediaDate"
    MEDIA_TYPE = "mediaType"
    MODERATION_COUNT = "moderationCount"
    MODERATION_STATUS = "moderationStatus"
    MS_DURATION = "msDuration"
    PARTNER_ID = "partnerId"
    PARTNER_SORT_VALUE = "partnerSortValue"
    PLAYS = "plays"
    RANK = "rank"
    REPLACEMENT_STATUS = "replacementStatus"
    START_DATE = "startDate"
    STATUS = "status"
    TOTAL_RANK = "totalRank"
    TYPE = "type"
    UPDATED_AT = "updatedAt"
    VIEWS = "views"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaLiveStreamEntryMatchAttribute(object):
    ADMIN_TAGS = "adminTags"
    CATEGORIES_IDS = "categoriesIds"
    CREATOR_ID = "creatorId"
    DESCRIPTION = "description"
    DURATION_TYPE = "durationType"
    FLAVOR_PARAMS_IDS = "flavorParamsIds"
    GROUP_ID = "groupId"
    ID = "id"
    NAME = "name"
    REFERENCE_ID = "referenceId"
    REPLACED_ENTRY_ID = "replacedEntryId"
    REPLACING_ENTRY_ID = "replacingEntryId"
    SEARCH_TEXT = "searchText"
    TAGS = "tags"
    USER_ID = "userId"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaLiveStreamEntryOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    DURATION_ASC = "+duration"
    END_DATE_ASC = "+endDate"
    FIRST_BROADCAST_ASC = "+firstBroadcast"
    LAST_BROADCAST_ASC = "+lastBroadcast"
    LAST_PLAYED_AT_ASC = "+lastPlayedAt"
    MEDIA_TYPE_ASC = "+mediaType"
    MODERATION_COUNT_ASC = "+moderationCount"
    NAME_ASC = "+name"
    PARTNER_SORT_VALUE_ASC = "+partnerSortValue"
    PLAYS_ASC = "+plays"
    RANK_ASC = "+rank"
    RECENT_ASC = "+recent"
    START_DATE_ASC = "+startDate"
    TOTAL_RANK_ASC = "+totalRank"
    UPDATED_AT_ASC = "+updatedAt"
    VIEWS_ASC = "+views"
    WEIGHT_ASC = "+weight"
    CREATED_AT_DESC = "-createdAt"
    DURATION_DESC = "-duration"
    END_DATE_DESC = "-endDate"
    FIRST_BROADCAST_DESC = "-firstBroadcast"
    LAST_BROADCAST_DESC = "-lastBroadcast"
    LAST_PLAYED_AT_DESC = "-lastPlayedAt"
    MEDIA_TYPE_DESC = "-mediaType"
    MODERATION_COUNT_DESC = "-moderationCount"
    NAME_DESC = "-name"
    PARTNER_SORT_VALUE_DESC = "-partnerSortValue"
    PLAYS_DESC = "-plays"
    RANK_DESC = "-rank"
    RECENT_DESC = "-recent"
    START_DATE_DESC = "-startDate"
    TOTAL_RANK_DESC = "-totalRank"
    UPDATED_AT_DESC = "-updatedAt"
    VIEWS_DESC = "-views"
    WEIGHT_DESC = "-weight"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaMailType(object):
    MAIL_TYPE_KALTURA_NEWSLETTER = "10"
    MAIL_TYPE_ADDED_TO_FAVORITES = "11"
    MAIL_TYPE_ADDED_TO_CLIP_FAVORITES = "12"
    MAIL_TYPE_NEW_COMMENT_IN_PROFILE = "13"
    MAIL_TYPE_CLIP_ADDED_YOUR_KALTURA = "20"
    MAIL_TYPE_VIDEO_ADDED = "21"
    MAIL_TYPE_ROUGHCUT_CREATED = "22"
    MAIL_TYPE_ADDED_KALTURA_TO_YOUR_FAVORITES = "23"
    MAIL_TYPE_NEW_COMMENT_IN_KALTURA = "24"
    MAIL_TYPE_CLIP_ADDED = "30"
    MAIL_TYPE_VIDEO_CREATED = "31"
    MAIL_TYPE_ADDED_KALTURA_TO_HIS_FAVORITES = "32"
    MAIL_TYPE_NEW_COMMENT_IN_KALTURA_YOU_CONTRIBUTED = "33"
    MAIL_TYPE_CLIP_CONTRIBUTED = "40"
    MAIL_TYPE_ROUGHCUT_CREATED_SUBSCRIBED = "41"
    MAIL_TYPE_ADDED_KALTURA_TO_HIS_FAVORITES_SUBSCRIBED = "42"
    MAIL_TYPE_NEW_COMMENT_IN_KALTURA_YOU_SUBSCRIBED = "43"
    MAIL_TYPE_REGISTER_CONFIRM = "50"
    MAIL_TYPE_PASSWORD_RESET = "51"
    MAIL_TYPE_LOGIN_MAIL_RESET = "52"
    MAIL_TYPE_REGISTER_CONFIRM_VIDEO_SERVICE = "54"
    MAIL_TYPE_VIDEO_READY = "60"
    MAIL_TYPE_VIDEO_IS_READY = "62"
    MAIL_TYPE_BULK_DOWNLOAD_READY = "63"
    MAIL_TYPE_BULKUPLOAD_FINISHED = "64"
    MAIL_TYPE_BULKUPLOAD_FAILED = "65"
    MAIL_TYPE_BULKUPLOAD_ABORTED = "66"
    MAIL_TYPE_NOTIFY_ERR = "70"
    MAIL_TYPE_ACCOUNT_UPGRADE_CONFIRM = "80"
    MAIL_TYPE_VIDEO_SERVICE_NOTICE = "81"
    MAIL_TYPE_VIDEO_SERVICE_NOTICE_LIMIT_REACHED = "82"
    MAIL_TYPE_VIDEO_SERVICE_NOTICE_ACCOUNT_LOCKED = "83"
    MAIL_TYPE_VIDEO_SERVICE_NOTICE_ACCOUNT_DELETED = "84"
    MAIL_TYPE_VIDEO_SERVICE_NOTICE_UPGRADE_OFFER = "85"
    MAIL_TYPE_ACCOUNT_REACTIVE_CONFIRM = "86"
    MAIL_TYPE_EXTENDED_FREE_TRIAL_ENDS_WARNING = "87"
    MAIL_TYPE_SYSTEM_USER_RESET_PASSWORD = "110"
    MAIL_TYPE_SYSTEM_USER_RESET_PASSWORD_SUCCESS = "111"
    MAIL_TYPE_SYSTEM_USER_NEW_PASSWORD = "112"
    MAIL_TYPE_SYSTEM_USER_CREDENTIALS_SAVED = "113"
    MAIL_TYPE_LIVE_REPORT_EXPORT_SUCCESS = "130"
    MAIL_TYPE_LIVE_REPORT_EXPORT_FAILURE = "131"
    MAIL_TYPE_LIVE_REPORT_EXPORT_ABORT = "132"
    MAIL_TYPE_USERS_CSV = "133"
    MAIL_TYPE_OBJECTS_CSV = "135"
    MAIL_TYPE_REPORT_EXPORT_SUCCESS = "136"
    MAIL_TYPE_REPORT_EXPORT_FAILURE = "137"
    MAIL_TYPE_REPORT_EXPORT_ABORT = "138"
    MAIL_TYPE_SIP_FAILURE = "139"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaMatchConditionType(object):
    MATCH_ANY = "1"
    MATCH_ALL = "2"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaMediaEntryCompareAttribute(object):
    ACCESS_CONTROL_ID = "accessControlId"
    CREATED_AT = "createdAt"
    END_DATE = "endDate"
    LAST_PLAYED_AT = "lastPlayedAt"
    MEDIA_DATE = "mediaDate"
    MEDIA_TYPE = "mediaType"
    MODERATION_COUNT = "moderationCount"
    MODERATION_STATUS = "moderationStatus"
    MS_DURATION = "msDuration"
    PARTNER_ID = "partnerId"
    PARTNER_SORT_VALUE = "partnerSortValue"
    PLAYS = "plays"
    RANK = "rank"
    REPLACEMENT_STATUS = "replacementStatus"
    START_DATE = "startDate"
    STATUS = "status"
    TOTAL_RANK = "totalRank"
    TYPE = "type"
    UPDATED_AT = "updatedAt"
    VIEWS = "views"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaMediaEntryMatchAttribute(object):
    ADMIN_TAGS = "adminTags"
    CATEGORIES_IDS = "categoriesIds"
    CREATOR_ID = "creatorId"
    DESCRIPTION = "description"
    DURATION_TYPE = "durationType"
    FLAVOR_PARAMS_IDS = "flavorParamsIds"
    GROUP_ID = "groupId"
    ID = "id"
    NAME = "name"
    REFERENCE_ID = "referenceId"
    REPLACED_ENTRY_ID = "replacedEntryId"
    REPLACING_ENTRY_ID = "replacingEntryId"
    SEARCH_TEXT = "searchText"
    TAGS = "tags"
    USER_ID = "userId"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaMediaEntryOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    DURATION_ASC = "+duration"
    END_DATE_ASC = "+endDate"
    LAST_PLAYED_AT_ASC = "+lastPlayedAt"
    MEDIA_TYPE_ASC = "+mediaType"
    MODERATION_COUNT_ASC = "+moderationCount"
    NAME_ASC = "+name"
    PARTNER_SORT_VALUE_ASC = "+partnerSortValue"
    PLAYS_ASC = "+plays"
    RANK_ASC = "+rank"
    RECENT_ASC = "+recent"
    START_DATE_ASC = "+startDate"
    TOTAL_RANK_ASC = "+totalRank"
    UPDATED_AT_ASC = "+updatedAt"
    VIEWS_ASC = "+views"
    WEIGHT_ASC = "+weight"
    CREATED_AT_DESC = "-createdAt"
    DURATION_DESC = "-duration"
    END_DATE_DESC = "-endDate"
    LAST_PLAYED_AT_DESC = "-lastPlayedAt"
    MEDIA_TYPE_DESC = "-mediaType"
    MODERATION_COUNT_DESC = "-moderationCount"
    NAME_DESC = "-name"
    PARTNER_SORT_VALUE_DESC = "-partnerSortValue"
    PLAYS_DESC = "-plays"
    RANK_DESC = "-rank"
    RECENT_DESC = "-recent"
    START_DATE_DESC = "-startDate"
    TOTAL_RANK_DESC = "-totalRank"
    UPDATED_AT_DESC = "-updatedAt"
    VIEWS_DESC = "-views"
    WEIGHT_DESC = "-weight"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaMediaFlavorParamsOrderBy(object):

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaMediaFlavorParamsOutputOrderBy(object):

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaMediaInfoOrderBy(object):

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaMediaParserType(object):
    MEDIAINFO = "0"
    REMOTE_MEDIAINFO = "remoteMediaInfo.RemoteMediaInfo"
    FFMPEG = "1"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaMediaServerNodeOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    HEARTBEAT_TIME_ASC = "+heartbeatTime"
    UPDATED_AT_ASC = "+updatedAt"
    CREATED_AT_DESC = "-createdAt"
    HEARTBEAT_TIME_DESC = "-heartbeatTime"
    UPDATED_AT_DESC = "-updatedAt"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaMixEntryCompareAttribute(object):
    ACCESS_CONTROL_ID = "accessControlId"
    CREATED_AT = "createdAt"
    END_DATE = "endDate"
    LAST_PLAYED_AT = "lastPlayedAt"
    MODERATION_COUNT = "moderationCount"
    MODERATION_STATUS = "moderationStatus"
    MS_DURATION = "msDuration"
    PARTNER_ID = "partnerId"
    PARTNER_SORT_VALUE = "partnerSortValue"
    PLAYS = "plays"
    RANK = "rank"
    REPLACEMENT_STATUS = "replacementStatus"
    START_DATE = "startDate"
    STATUS = "status"
    TOTAL_RANK = "totalRank"
    TYPE = "type"
    UPDATED_AT = "updatedAt"
    VIEWS = "views"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaMixEntryMatchAttribute(object):
    ADMIN_TAGS = "adminTags"
    CATEGORIES_IDS = "categoriesIds"
    CREATOR_ID = "creatorId"
    DESCRIPTION = "description"
    DURATION_TYPE = "durationType"
    GROUP_ID = "groupId"
    ID = "id"
    NAME = "name"
    REFERENCE_ID = "referenceId"
    REPLACED_ENTRY_ID = "replacedEntryId"
    REPLACING_ENTRY_ID = "replacingEntryId"
    SEARCH_TEXT = "searchText"
    TAGS = "tags"
    USER_ID = "userId"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaMixEntryOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    DURATION_ASC = "+duration"
    END_DATE_ASC = "+endDate"
    LAST_PLAYED_AT_ASC = "+lastPlayedAt"
    MODERATION_COUNT_ASC = "+moderationCount"
    NAME_ASC = "+name"
    PARTNER_SORT_VALUE_ASC = "+partnerSortValue"
    PLAYS_ASC = "+plays"
    RANK_ASC = "+rank"
    RECENT_ASC = "+recent"
    START_DATE_ASC = "+startDate"
    TOTAL_RANK_ASC = "+totalRank"
    UPDATED_AT_ASC = "+updatedAt"
    VIEWS_ASC = "+views"
    WEIGHT_ASC = "+weight"
    CREATED_AT_DESC = "-createdAt"
    DURATION_DESC = "-duration"
    END_DATE_DESC = "-endDate"
    LAST_PLAYED_AT_DESC = "-lastPlayedAt"
    MODERATION_COUNT_DESC = "-moderationCount"
    NAME_DESC = "-name"
    PARTNER_SORT_VALUE_DESC = "-partnerSortValue"
    PLAYS_DESC = "-plays"
    RANK_DESC = "-rank"
    RECENT_DESC = "-recent"
    START_DATE_DESC = "-startDate"
    TOTAL_RANK_DESC = "-totalRank"
    UPDATED_AT_DESC = "-updatedAt"
    VIEWS_DESC = "-views"
    WEIGHT_DESC = "-weight"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaModerationFlagStatus(object):
    PENDING = "1"
    MODERATED = "2"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaModerationObjectType(object):
    ENTRY = "2"
    USER = "3"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaPartnerOrderBy(object):
    ADMIN_EMAIL_ASC = "+adminEmail"
    ADMIN_NAME_ASC = "+adminName"
    CREATED_AT_ASC = "+createdAt"
    ID_ASC = "+id"
    NAME_ASC = "+name"
    STATUS_ASC = "+status"
    WEBSITE_ASC = "+website"
    ADMIN_EMAIL_DESC = "-adminEmail"
    ADMIN_NAME_DESC = "-adminName"
    CREATED_AT_DESC = "-createdAt"
    ID_DESC = "-id"
    NAME_DESC = "-name"
    STATUS_DESC = "-status"
    WEBSITE_DESC = "-website"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaPermissionItemOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    ID_ASC = "+id"
    UPDATED_AT_ASC = "+updatedAt"
    CREATED_AT_DESC = "-createdAt"
    ID_DESC = "-id"
    UPDATED_AT_DESC = "-updatedAt"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaPermissionItemType(object):
    API_ACTION_ITEM = "kApiActionPermissionItem"
    API_PARAMETER_ITEM = "kApiParameterPermissionItem"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaPermissionOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    ID_ASC = "+id"
    NAME_ASC = "+name"
    UPDATED_AT_ASC = "+updatedAt"
    CREATED_AT_DESC = "-createdAt"
    ID_DESC = "-id"
    NAME_DESC = "-name"
    UPDATED_AT_DESC = "-updatedAt"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaPlayableEntryCompareAttribute(object):
    ACCESS_CONTROL_ID = "accessControlId"
    CREATED_AT = "createdAt"
    END_DATE = "endDate"
    LAST_PLAYED_AT = "lastPlayedAt"
    MODERATION_COUNT = "moderationCount"
    MODERATION_STATUS = "moderationStatus"
    MS_DURATION = "msDuration"
    PARTNER_ID = "partnerId"
    PARTNER_SORT_VALUE = "partnerSortValue"
    PLAYS = "plays"
    RANK = "rank"
    REPLACEMENT_STATUS = "replacementStatus"
    START_DATE = "startDate"
    STATUS = "status"
    TOTAL_RANK = "totalRank"
    TYPE = "type"
    UPDATED_AT = "updatedAt"
    VIEWS = "views"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaPlayableEntryMatchAttribute(object):
    ADMIN_TAGS = "adminTags"
    CATEGORIES_IDS = "categoriesIds"
    CREATOR_ID = "creatorId"
    DESCRIPTION = "description"
    DURATION_TYPE = "durationType"
    GROUP_ID = "groupId"
    ID = "id"
    NAME = "name"
    REFERENCE_ID = "referenceId"
    REPLACED_ENTRY_ID = "replacedEntryId"
    REPLACING_ENTRY_ID = "replacingEntryId"
    SEARCH_TEXT = "searchText"
    TAGS = "tags"
    USER_ID = "userId"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaPlayableEntryOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    DURATION_ASC = "+duration"
    END_DATE_ASC = "+endDate"
    LAST_PLAYED_AT_ASC = "+lastPlayedAt"
    MODERATION_COUNT_ASC = "+moderationCount"
    NAME_ASC = "+name"
    PARTNER_SORT_VALUE_ASC = "+partnerSortValue"
    PLAYS_ASC = "+plays"
    RANK_ASC = "+rank"
    RECENT_ASC = "+recent"
    START_DATE_ASC = "+startDate"
    TOTAL_RANK_ASC = "+totalRank"
    UPDATED_AT_ASC = "+updatedAt"
    VIEWS_ASC = "+views"
    WEIGHT_ASC = "+weight"
    CREATED_AT_DESC = "-createdAt"
    DURATION_DESC = "-duration"
    END_DATE_DESC = "-endDate"
    LAST_PLAYED_AT_DESC = "-lastPlayedAt"
    MODERATION_COUNT_DESC = "-moderationCount"
    NAME_DESC = "-name"
    PARTNER_SORT_VALUE_DESC = "-partnerSortValue"
    PLAYS_DESC = "-plays"
    RANK_DESC = "-rank"
    RECENT_DESC = "-recent"
    START_DATE_DESC = "-startDate"
    TOTAL_RANK_DESC = "-totalRank"
    UPDATED_AT_DESC = "-updatedAt"
    VIEWS_DESC = "-views"
    WEIGHT_DESC = "-weight"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaPlaybackProtocol(object):
    APPLE_HTTP = "applehttp"
    APPLE_HTTP_TO_MC = "applehttp_to_mc"
    AUTO = "auto"
    DOWNLOAD = "download"
    AKAMAI_HD = "hdnetwork"
    AKAMAI_HDS = "hdnetworkmanifest"
    HDS = "hds"
    HLS = "hls"
    HTTP = "http"
    MPEG_DASH = "mpegdash"
    MULTICAST_SL = "multicast_silverlight"
    RTMP = "rtmp"
    RTSP = "rtsp"
    SILVER_LIGHT = "sl"
    URL = "url"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaPlaylistCompareAttribute(object):
    ACCESS_CONTROL_ID = "accessControlId"
    CREATED_AT = "createdAt"
    END_DATE = "endDate"
    MODERATION_COUNT = "moderationCount"
    MODERATION_STATUS = "moderationStatus"
    PARTNER_ID = "partnerId"
    PARTNER_SORT_VALUE = "partnerSortValue"
    RANK = "rank"
    REPLACEMENT_STATUS = "replacementStatus"
    START_DATE = "startDate"
    STATUS = "status"
    TOTAL_RANK = "totalRank"
    TYPE = "type"
    UPDATED_AT = "updatedAt"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaPlaylistMatchAttribute(object):
    ADMIN_TAGS = "adminTags"
    CATEGORIES_IDS = "categoriesIds"
    CREATOR_ID = "creatorId"
    DESCRIPTION = "description"
    GROUP_ID = "groupId"
    ID = "id"
    NAME = "name"
    REFERENCE_ID = "referenceId"
    REPLACED_ENTRY_ID = "replacedEntryId"
    REPLACING_ENTRY_ID = "replacingEntryId"
    SEARCH_TEXT = "searchText"
    TAGS = "tags"
    USER_ID = "userId"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaPlaylistOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    END_DATE_ASC = "+endDate"
    MODERATION_COUNT_ASC = "+moderationCount"
    NAME_ASC = "+name"
    PARTNER_SORT_VALUE_ASC = "+partnerSortValue"
    RANK_ASC = "+rank"
    RECENT_ASC = "+recent"
    START_DATE_ASC = "+startDate"
    TOTAL_RANK_ASC = "+totalRank"
    UPDATED_AT_ASC = "+updatedAt"
    WEIGHT_ASC = "+weight"
    CREATED_AT_DESC = "-createdAt"
    END_DATE_DESC = "-endDate"
    MODERATION_COUNT_DESC = "-moderationCount"
    NAME_DESC = "-name"
    PARTNER_SORT_VALUE_DESC = "-partnerSortValue"
    RANK_DESC = "-rank"
    RECENT_DESC = "-recent"
    START_DATE_DESC = "-startDate"
    TOTAL_RANK_DESC = "-totalRank"
    UPDATED_AT_DESC = "-updatedAt"
    WEIGHT_DESC = "-weight"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaQuizUserEntryOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    UPDATED_AT_ASC = "+updatedAt"
    CREATED_AT_DESC = "-createdAt"
    UPDATED_AT_DESC = "-updatedAt"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaReportInterval(object):
    DAYS = "days"
    HOURS = "hours"
    MINUTES = "minutes"
    MONTHS = "months"
    TEN_MINUTES = "ten_minutes"
    TEN_SECONDS = "ten_seconds"
    YEARS = "years"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaReportOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    CREATED_AT_DESC = "-createdAt"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaReportType(object):
    QUIZ = "quiz.QUIZ"
    QUIZ_AGGREGATE_BY_QUESTION = "quiz.QUIZ_AGGREGATE_BY_QUESTION"
    QUIZ_USER_AGGREGATE_BY_QUESTION = "quiz.QUIZ_USER_AGGREGATE_BY_QUESTION"
    QUIZ_USER_PERCENTAGE = "quiz.QUIZ_USER_PERCENTAGE"
    TOP_CONTENT = "1"
    CONTENT_DROPOFF = "2"
    CONTENT_INTERACTIONS = "3"
    MAP_OVERLAY = "4"
    TOP_CONTRIBUTORS = "5"
    TOP_SYNDICATION = "6"
    CONTENT_CONTRIBUTIONS = "7"
    USER_ENGAGEMENT = "11"
    SPECIFIC_USER_ENGAGEMENT = "12"
    USER_TOP_CONTENT = "13"
    USER_CONTENT_DROPOFF = "14"
    USER_CONTENT_INTERACTIONS = "15"
    APPLICATIONS = "16"
    USER_USAGE = "17"
    SPECIFIC_USER_USAGE = "18"
    VAR_USAGE = "19"
    TOP_CREATORS = "20"
    PLATFORMS = "21"
    OPERATING_SYSTEM = "22"
    BROWSERS = "23"
    LIVE = "24"
    TOP_PLAYBACK_CONTEXT = "25"
    VPAAS_USAGE = "26"
    ENTRY_USAGE = "27"
    REACH_USAGE = "28"
    TOP_CUSTOM_VAR1 = "29"
    MAP_OVERLAY_CITY = "30"
    OPERATING_SYSTEM_FAMILIES = "32"
    BROWSERS_FAMILIES = "33"
    USER_ENGAGEMENT_TIMELINE = "34"
    UNIQUE_USERS_PLAY = "35"
    MAP_OVERLAY_COUNTRY = "36"
    MAP_OVERLAY_REGION = "37"
    TOP_CONTENT_CREATOR = "38"
    TOP_CONTENT_CONTRIBUTORS = "39"
    APP_DOMAIN_UNIQUE_ACTIVE_USERS = "40"
    TOP_SOURCES = "41"
    VPAAS_USAGE_MULTI = "42"
    PERCENTILES = "43"
    CONTENT_REPORT_REASONS = "44"
    PLAYER_RELATED_INTERACTIONS = "45"
    PLAYBACK_RATE = "46"
    TOP_USER_CONTENT = "47"
    USER_HIGHLIGHTS = "48"
    USER_INTERACTIVE_VIDEO = "49"
    INTERACTIVE_VIDEO_TOP_NODES = "50"
    LATEST_PLAYED_ENTRIES = "51"
    CATEGORY_HIGHLIGHTS = "52"
    SUB_CATEGORIES = "53"
    INTERACTIVE_VIDEO_NODE_TOP_HOTSPOTS = "54"
    INTERCATIVE_VIDEO_NODE_SWITCH_TOP_HOTSPOTS = "55"
    INTERACTIVE_VIDEO_HOTSPOT_CLICKED_PERCENTILES = "56"
    INTERACTIVE_VIDEO_NODE_SWITCH_HOTSPOT_CLICKED_PERCENTILES = "57"
    TOP_CUSTOM_VAR2 = "58"
    TOP_CUSTOM_VAR3 = "59"
    SELF_SERVE_USAGE = "60"
    FLAVOR_PARAMS_TRANSCODING_USAGE = "61"
    PLAYER_HIGHLIGHTS = "62"
    PARTNER_USAGE_HIGHLIGHTS = "63"
    CDN_BANDWIDTH_USAGE = "64"
    REACH_CATALOG_USAGE = "65"
    REACH_PROFILE_USAGE = "66"
    SELF_SERVE_BANDWIDTH = "67"
    PARTNER_USAGE = "201"
    MAP_OVERLAY_COUNTRY_REALTIME = "10001"
    MAP_OVERLAY_REGION_REALTIME = "10002"
    MAP_OVERLAY_CITY_REALTIME = "10003"
    PLATFORMS_REALTIME = "10004"
    USERS_OVERVIEW_REALTIME = "10005"
    QOS_OVERVIEW_REALTIME = "10006"
    DISCOVERY_REALTIME = "10007"
    ENTRY_LEVEL_USERS_DISCOVERY_REALTIME = "10008"
    ENTRY_LEVEL_USERS_STATUS_REALTIME = "10009"
    PLATFORMS_DISCOVERY_REALTIME = "10010"
    PLAYBACK_TYPE_REALTIME = "10011"
    CONTENT_REALTIME = "10012"
    DISCOVERY_VIEW_REALTIME = "10013"
    TOP_ENDED_BROADCAST_ENTRIES = "10014"
    TOP_LIVE_NOW_ENTRIES = "10015"
    LIVE_MEETING_USERS_OVERVIEW_REALTIME = "10016"
    CONTENT_DROPOFF_VPAAS = "20001"
    TOP_SYNDICATION_VPAAS = "20002"
    USER_TOP_CONTENT_VPAAS = "20003"
    USER_USAGE_VPAAS = "20004"
    PLATFORMS_VPAAS = "20005"
    OPERATING_SYSTEM_VPAAS = "20006"
    BROWSERS_VPAAS = "20007"
    OPERATING_SYSTEM_FAMILIES_VPAAS = "20008"
    BROWSERS_FAMILIES_VPAAS = "20009"
    USER_ENGAGEMENT_TIMELINE_VPAAS = "20010"
    UNIQUE_USERS_PLAY_VPAAS = "20011"
    MAP_OVERLAY_COUNTRY_VPAAS = "20012"
    MAP_OVERLAY_REGION_VPAAS = "20013"
    MAP_OVERLAY_CITY_VPAAS = "20014"
    TOP_CONTENT_CREATOR_VPAAS = "20015"
    TOP_CONTENT_CONTRIBUTORS_VPAAS = "20016"
    TOP_SOURCES_VPAAS = "20017"
    CONTENT_REPORT_REASONS_VPAAS = "20018"
    PLAYER_RELATED_INTERACTIONS_VPAAS = "20019"
    PLAYBACK_RATE_VPAAS = "20020"
    PARTNER_USAGE_VPAAS = "20021"
    TOP_PLAYBACK_CONTEXT_VPAAS = "20022"
    SELF_SERVE_USAGE_VPAAS = "20023"
    QOE_OVERVIEW = "30001"
    QOE_EXPERIENCE = "30002"
    QOE_EXPERIENCE_PLATFORMS = "30003"
    QOE_EXPERIENCE_COUNTRY = "30004"
    QOE_EXPERIENCE_REGION = "30005"
    QOE_EXPERIENCE_CITY = "30006"
    QOE_EXPERIENCE_BROWSERS_FAMILIES = "30007"
    QOE_EXPERIENCE_BROWSERS = "30008"
    QOE_EXPERIENCE_OPERATING_SYSTEM_FAMILIES = "30009"
    QOE_EXPERIENCE_OPERATING_SYSTEM = "30010"
    QOE_EXPERIENCE_PLAYER_VERSION = "30011"
    QOE_EXPERIENCE_ENTRY = "30012"
    QOE_EXPERIENCE_ISP = "30013"
    QOE_ENGAGEMENT = "30014"
    QOE_ENGAGEMENT_PLATFORMS = "30015"
    QOE_ENGAGEMENT_COUNTRY = "30016"
    QOE_ENGAGEMENT_REGION = "30017"
    QOE_ENGAGEMENT_CITY = "30018"
    QOE_ENGAGEMENT_BROWSERS_FAMILIES = "30019"
    QOE_ENGAGEMENT_BROWSERS = "30020"
    QOE_ENGAGEMENT_OPERATING_SYSTEM_FAMILIES = "30021"
    QOE_ENGAGEMENT_OPERATING_SYSTEM = "30022"
    QOE_ENGAGEMENT_PLAYER_VERSION = "30023"
    QOE_ENGAGEMENT_ENTRY = "30024"
    QOE_ENGAGEMENT_ISP = "30025"
    QOE_STREAM_QUALITY = "30026"
    QOE_STREAM_QUALITY_PLATFORMS = "30027"
    QOE_STREAM_QUALITY_COUNTRY = "30028"
    QOE_STREAM_QUALITY_REGION = "30029"
    QOE_STREAM_QUALITY_CITY = "30030"
    QOE_STREAM_QUALITY_BROWSERS_FAMILIES = "30031"
    QOE_STREAM_QUALITY_BROWSERS = "30032"
    QOE_STREAM_QUALITY_OPERATING_SYSTEM_FAMILIES = "30033"
    QOE_STREAM_QUALITY_OPERATING_SYSTEM = "30034"
    QOE_STREAM_QUALITY_PLAYER_VERSION = "30035"
    QOE_STREAM_QUALITY_ENTRY = "30036"
    QOE_STREAM_QUALITY_ISP = "30037"
    QOE_ERROR_TRACKING = "30038"
    QOE_ERROR_TRACKING_CODES = "30039"
    QOE_ERROR_TRACKING_PLATFORMS = "30040"
    QOE_ERROR_TRACKING_BROWSERS_FAMILIES = "30041"
    QOE_ERROR_TRACKING_BROWSERS = "30042"
    QOE_ERROR_TRACKING_OPERATING_SYSTEM_FAMILIES = "30043"
    QOE_ERROR_TRACKING_OPERATING_SYSTEM = "30044"
    QOE_ERROR_TRACKING_PLAYER_VERSION = "30045"
    QOE_ERROR_TRACKING_ENTRY = "30046"
    QOE_VOD_SESSION_FLOW = "30047"
    QOE_LIVE_SESSION_FLOW = "30048"
    QOE_EXPERIENCE_CUSTOM_VAR1 = "30049"
    QOE_EXPERIENCE_CUSTOM_VAR2 = "30050"
    QOE_EXPERIENCE_CUSTOM_VAR3 = "30051"
    QOE_ENGAGEMENT_CUSTOM_VAR1 = "30052"
    QOE_ENGAGEMENT_CUSTOM_VAR2 = "30053"
    QOE_ENGAGEMENT_CUSTOM_VAR3 = "30054"
    QOE_STREAM_QUALITY_CUSTOM_VAR1 = "30055"
    QOE_STREAM_QUALITY_CUSTOM_VAR2 = "30056"
    QOE_STREAM_QUALITY_CUSTOM_VAR3 = "30057"
    QOE_ERROR_TRACKING_CUSTOM_VAR1 = "30058"
    QOE_ERROR_TRACKING_CUSTOM_VAR2 = "30059"
    QOE_ERROR_TRACKING_CUSTOM_VAR3 = "30060"
    QOE_EXPERIENCE_APPLICATION_VERSION = "30061"
    QOE_ENGAGEMENT_APPLICATION_VERSION = "30062"
    QOE_STREAM_QUALITY_APPLICATION_VERSION = "30063"
    QOE_ERROR_TRACKING_APPLICATION_VERSION = "30064"
    HIGHLIGHTS_WEBCAST = "40001"
    ENGAGEMENT_WEBCAST = "40002"
    QUALITY_WEBCAST = "40003"
    MAP_OVERLAY_COUNTRY_WEBCAST = "40004"
    MAP_OVERLAY_REGION_WEBCAST = "40005"
    MAP_OVERLAY_CITY_WEBCAST = "40006"
    PLATFORMS_WEBCAST = "40007"
    TOP_DOMAINS_WEBCAST = "40008"
    TOP_USERS_WEBCAST = "40009"
    ENGAGEMENT_BREAKDOWN_WEBCAST = "40010"
    ENGAGMENT_TIMELINE_WEBCAST = "40011"
    ENGAGEMENT_TOOLS_WEBCAST = "40012"
    REACTIONS_BREAKDOWN_WEBCAST = "40013"
    VE_HIGHLIGHTS = "50000"
    VE_REGISTERED_PLATFORMS = "50001"
    VE_REGISTERED_INDUSTRY = "50002"
    VE_REGISTERED_ROLES = "50003"
    VE_REGISTERED_COUNTRIES = "50004"
    VE_REGISTERED_WORLD_REGIONS = "50005"
    VE_USER_HIGHLIGHTS = "50006"
    VE_ATTENDANCE_HIGHLIGHTS = "50007"
    VE_REGISTERED_COMPANIES = "50008"
    EP_WEBCAST_HIGHLIGHTS = "60001"
    EP_WEBCAST_UNIQUE_USERS = "60002"
    EP_WEBCAST_ENGAGEMENT = "60003"
    EP_WEBCAST_ENGAGEMENT_TIMELINE = "60004"
    EP_WEBCAST_TOP_RECORDING = "60005"
    EP_WEBCAST_TOP_PLATFORMS = "60006"
    EP_WEBCAST_MAP_OVERLAY_COUNTRY = "60007"
    EP_WEBCAST_MAP_OVERLAY_REGION = "60008"
    EP_WEBCAST_MAP_OVERLAY_CITY = "60009"
    EP_WEBCAST_LIVE_USER_ENGAGEMENT = "60010"
    EP_WEBCAST_LIVE_USER_ENGAGEMENT_LEVEL = "60011"
    EP_WEBCAST_VOD_USER_TOP_CONTENT = "60012"
    EP_WEBCAST_VOD_LIVE_USERS_ENGAGEMENT = "60013"
    EP_ATTENDEES = "60014"
    EP_VIEWTIME = "60015"
    EP_TOP_MOMENTS = "60016"
    EP_TOP_SESSIONS = "60017"
    EP_WEBCAST_ENGAGEMENT_OVER_TIME = "60018"
    CNC_PARTICIPATION = "70001"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaResetPassLinkType(object):
    KMC = "1"
    KMS = "2"
    KME = "3"
    EP = "4"
    KME_NR = "5"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaResponseProfileOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    UPDATED_AT_ASC = "+updatedAt"
    CREATED_AT_DESC = "-createdAt"
    UPDATED_AT_DESC = "-updatedAt"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaRuleActionType(object):
    DRM_POLICY = "drm.DRM_POLICY"
    ADD_ENTRY_VENDOR_TASK = "reach.ADD_ENTRY_VENDOR_TASK"
    BLOCK = "1"
    PREVIEW = "2"
    LIMIT_FLAVORS = "3"
    ADD_TO_STORAGE = "4"
    LIMIT_DELIVERY_PROFILES = "5"
    SERVE_FROM_REMOTE_SERVER = "6"
    REQUEST_HOST_REGEX = "7"
    LIMIT_THUMBNAIL_CAPTURE = "8"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaSchemaType(object):
    BULK_UPLOAD_RESULT_XML = "bulkUploadXml.bulkUploadResultXML"
    BULK_UPLOAD_XML = "bulkUploadXml.bulkUploadXML"
    INGEST_API = "cuePoint.ingestAPI"
    SERVE_API = "cuePoint.serveAPI"
    DROP_FOLDER_XML = "dropFolderXmlBulkUpload.dropFolderXml"
    SYNDICATION = "syndication"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaSearchConditionComparison(object):
    EQUAL = "1"
    GREATER_THAN = "2"
    GREATER_THAN_OR_EQUAL = "3"
    LESS_THAN = "4"
    LESS_THAN_OR_EQUAL = "5"
    NOT_EQUAL = "6"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaServerNodeOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    HEARTBEAT_TIME_ASC = "+heartbeatTime"
    UPDATED_AT_ASC = "+updatedAt"
    CREATED_AT_DESC = "-createdAt"
    HEARTBEAT_TIME_DESC = "-heartbeatTime"
    UPDATED_AT_DESC = "-updatedAt"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaServerNodeType(object):
    CONFERENCE_SERVER = "conference.CONFERENCE_SERVER"
    LIVE_CLUSTER_MEDIA_SERVER = "liveCluster.LIVE_CLUSTER_MEDIA_SERVER"
    SIP_SERVER = "sip.SIP_SERVER"
    WOWZA_MEDIA_SERVER = "wowza.WOWZA_MEDIA_SERVER"
    EDGE = "1"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaSourceType(object):
    LIMELIGHT_LIVE = "limeLight.LIVE_STREAM"
    VELOCIX_LIVE = "velocix.VELOCIX_LIVE"
    FILE = "1"
    WEBCAM = "2"
    URL = "5"
    SEARCH_PROVIDER = "6"
    AKAMAI_LIVE = "29"
    MANUAL_LIVE_STREAM = "30"
    AKAMAI_UNIVERSAL_LIVE = "31"
    LIVE_STREAM = "32"
    LIVE_CHANNEL = "33"
    RECORDED_LIVE = "34"
    CLIP = "35"
    KALTURA_RECORDED_LIVE = "36"
    LECTURE_CAPTURE = "37"
    LIVE_STREAM_ONTEXTDATA_CAPTIONS = "42"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaStorageProfileOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    UPDATED_AT_ASC = "+updatedAt"
    CREATED_AT_DESC = "-createdAt"
    UPDATED_AT_DESC = "-updatedAt"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaStorageProfileProtocol(object):
    KONTIKI = "kontiki.KONTIKI"
    KALTURA_DC = "0"
    FTP = "1"
    SCP = "2"
    SFTP = "3"
    S3 = "6"
    LOCAL = "7"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaSyndicationFeedEntriesOrderBy(object):
    CREATED_AT_DESC = "-createdAt"
    RECENT = "recent"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaTaggedObjectType(object):
    ENTRY = "1"
    CATEGORY = "2"
    LIVESTREAMENTRY = "3"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaThumbAssetOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    DELETED_AT_ASC = "+deletedAt"
    SIZE_ASC = "+size"
    UPDATED_AT_ASC = "+updatedAt"
    CREATED_AT_DESC = "-createdAt"
    DELETED_AT_DESC = "-deletedAt"
    SIZE_DESC = "-size"
    UPDATED_AT_DESC = "-updatedAt"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaThumbParamsOrderBy(object):

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaThumbParamsOutputOrderBy(object):

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaTubeMogulSyndicationFeedCategories(object):
    ANIMALS_AND_PETS = "Animals &amp; Pets"
    ARTS_AND_ANIMATION = "Arts &amp; Animation"
    AUTOS = "Autos"
    COMEDY = "Comedy"
    COMMERCIALS_PROMOTIONAL = "Commercials/Promotional"
    ENTERTAINMENT = "Entertainment"
    FAMILY_AND_KIDS = "Family &amp; Kids"
    HOW_TO_INSTRUCTIONAL_DIY = "How To/Instructional/DIY"
    MUSIC = "Music"
    NEWS_AND_BLOGS = "News &amp; Blogs"
    SCIENCE_AND_TECHNOLOGY = "Science &amp; Technology"
    SPORTS = "Sports"
    TRAVEL_AND_PLACES = "Travel &amp; Places"
    VIDEO_GAMES = "Video Games"
    VLOGS_PEOPLE = "Vlogs &amp; People"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaTubeMogulSyndicationFeedOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    NAME_ASC = "+name"
    PLAYLIST_ID_ASC = "+playlistId"
    TYPE_ASC = "+type"
    UPDATED_AT_ASC = "+updatedAt"
    CREATED_AT_DESC = "-createdAt"
    NAME_DESC = "-name"
    PLAYLIST_ID_DESC = "-playlistId"
    TYPE_DESC = "-type"
    UPDATED_AT_DESC = "-updatedAt"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaUiConfOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    ID_ASC = "+id"
    NAME_ASC = "+name"
    UPDATED_AT_ASC = "+updatedAt"
    CREATED_AT_DESC = "-createdAt"
    ID_DESC = "-id"
    NAME_DESC = "-name"
    UPDATED_AT_DESC = "-updatedAt"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaUploadTokenOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    CREATED_AT_DESC = "-createdAt"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaUserCapabilityType(object):
    SYNCED_GROUP = "0"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaUserEntryExtendedStatus(object):
    SYNC_STATUS_ERROR = "quiz.SYNC_STATUS_ERROR"
    SYNC_STATUS_SUCCESS = "quiz.SYNC_STATUS_SUCCESS"
    PLAYBACK_COMPLETE = "viewHistory.PLAYBACK_COMPLETE"
    PLAYBACK_STARTED = "viewHistory.PLAYBACK_STARTED"
    VIEWED = "viewHistory.VIEWED"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaUserEntryOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    UPDATED_AT_ASC = "+updatedAt"
    CREATED_AT_DESC = "-createdAt"
    UPDATED_AT_DESC = "-updatedAt"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaUserEntryStatus(object):
    QUIZ_SUBMITTED = "quiz.3"
    ACTIVE = "1"
    DELETED = "2"
    RECYCLED = "3"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaUserEntryType(object):
    PERMISSION_LEVEL = "entryPermissionLevel.PERMISSION_LEVEL"
    QUIZ = "quiz.QUIZ"
    REGISTRATION = "registration.REGISTRATION"
    VIEW_HISTORY = "viewHistory.VIEW_HISTORY"
    WATCH_LATER = "watchLater.WATCH_LATER"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaUserLoginDataOrderBy(object):

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaUserOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    ID_ASC = "+id"
    UPDATED_AT_ASC = "+updatedAt"
    CREATED_AT_DESC = "-createdAt"
    ID_DESC = "-id"
    UPDATED_AT_DESC = "-updatedAt"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaUserRoleOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    ID_ASC = "+id"
    NAME_ASC = "+name"
    UPDATED_AT_ASC = "+updatedAt"
    CREATED_AT_DESC = "-createdAt"
    ID_DESC = "-id"
    NAME_DESC = "-name"
    UPDATED_AT_DESC = "-updatedAt"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaVideoCodec(object):
    NONE = ""
    APCH = "apch"
    APCN = "apcn"
    APCO = "apco"
    APCS = "apcs"
    AV1 = "av1"
    COPY = "copy"
    DNXHD = "dnxhd"
    DV = "dv"
    FLV = "flv"
    H263 = "h263"
    H264 = "h264"
    H264B = "h264b"
    H264H = "h264h"
    H264M = "h264m"
    H265 = "h265"
    MPEG2 = "mpeg2"
    MPEG4 = "mpeg4"
    THEORA = "theora"
    VP6 = "vp6"
    VP8 = "vp8"
    VP9 = "vp9"
    WMV2 = "wmv2"
    WMV3 = "wmv3"
    WVC1A = "wvc1a"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaWidgetOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    CREATED_AT_DESC = "-createdAt"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaYahooSyndicationFeedAdultValues(object):
    ADULT = "adult"
    NON_ADULT = "nonadult"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaYahooSyndicationFeedCategories(object):
    ACTION = "Action"
    ANIMALS = "Animals"
    ART_AND_ANIMATION = "Art &amp; Animation"
    COMMERCIALS = "Commercials"
    ENTERTAINMENT_AND_TV = "Entertainment &amp; TV"
    FAMILY = "Family"
    FOOD = "Food"
    FUNNY_VIDEOS = "Funny Videos"
    GAMES = "Games"
    HEALTH_AND_BEAUTY = "Health &amp; Beauty"
    HOW_TO = "How-To"
    MOVIES_AND_SHORTS = "Movies &amp; Shorts"
    MUSIC = "Music"
    NEWS_AND_POLITICS = "News &amp; Politics"
    PEOPLE_AND_VLOGS = "People &amp; Vlogs"
    PRODUCTS_AND_TECH = "Products &amp; Tech."
    SCIENCE_AND_ENVIRONMENT = "Science &amp; Environment"
    SPORTS = "Sports"
    TRANSPORTATION = "Transportation"
    TRAVEL = "Travel"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaYahooSyndicationFeedOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    NAME_ASC = "+name"
    PLAYLIST_ID_ASC = "+playlistId"
    TYPE_ASC = "+type"
    UPDATED_AT_ASC = "+updatedAt"
    CREATED_AT_DESC = "-createdAt"
    NAME_DESC = "-name"
    PLAYLIST_ID_DESC = "-playlistId"
    TYPE_DESC = "-type"
    UPDATED_AT_DESC = "-updatedAt"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaListResponse(KalturaObjectBase):
    totalCount: int
    def __init__(self,
            totalCount: int = NotImplemented): ...

    def getTotalCount(self) -> int: ...

class KalturaBaseRestriction(KalturaObjectBase):
    def __init__(self): ...
        pass

class KalturaAccessControl(KalturaObjectBase):
    id: int
    partnerId: int
    name: str
    systemName: str
    description: str
    createdAt: int
    isDefault: KalturaNullableBoolean
    restrictions: List[KalturaBaseRestriction]
    containsUnsuportedRestrictions: bool
    def __init__(self,
            id: int = NotImplemented,
            partnerId: int = NotImplemented,
            name: str = NotImplemented,
            systemName: str = NotImplemented,
            description: str = NotImplemented,
            createdAt: int = NotImplemented,
            isDefault: KalturaNullableBoolean = NotImplemented,
            restrictions: List[KalturaBaseRestriction] = NotImplemented,
            containsUnsuportedRestrictions: bool = NotImplemented): ...

    def getId(self) -> int: ...
    def getPartnerId(self) -> int: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getSystemName(self) -> str: ...
    def setSystemName(self, newSystemName: str) -> None: ...
    def getDescription(self) -> str: ...
    def setDescription(self, newDescription: str) -> None: ...
    def getCreatedAt(self) -> int: ...
    def getIsDefault(self) -> KalturaNullableBoolean: ...
    def setIsDefault(self, newIsDefault: KalturaNullableBoolean) -> None: ...
    def getRestrictions(self) -> List[KalturaBaseRestriction]: ...
    def setRestrictions(self, newRestrictions: List[KalturaBaseRestriction]) -> None: ...
    def getContainsUnsuportedRestrictions(self) -> bool: ...

class KalturaContextTypeHolder(KalturaObjectBase):
    type: KalturaContextType
    def __init__(self,
            type: KalturaContextType = NotImplemented): ...

    def getType(self) -> KalturaContextType: ...
    def setType(self, newType: KalturaContextType) -> None: ...

class KalturaAccessControlContextTypeHolder(KalturaContextTypeHolder):
    def __init__(self,
            type: KalturaContextType = NotImplemented): ...
        pass

class KalturaAccessControlMessage(KalturaObjectBase):
    message: str
    code: str
    def __init__(self,
            message: str = NotImplemented,
            code: str = NotImplemented): ...

    def getMessage(self) -> str: ...
    def setMessage(self, newMessage: str) -> None: ...
    def getCode(self) -> str: ...
    def setCode(self, newCode: str) -> None: ...

class KalturaRuleAction(KalturaObjectBase):
    type: KalturaRuleActionType
    def __init__(self,
            type: KalturaRuleActionType = NotImplemented): ...

    def getType(self) -> KalturaRuleActionType: ...

class KalturaCondition(KalturaObjectBase):
    type: KalturaConditionType
    description: str
    not_: bool
    def __init__(self,
            type: KalturaConditionType = NotImplemented,
            description: str = NotImplemented,
            not_: bool = NotImplemented): ...

    def getType(self) -> KalturaConditionType: ...
    def getDescription(self) -> str: ...
    def setDescription(self, newDescription: str) -> None: ...
    def getNot_(self) -> bool: ...
    def setNot_(self, newNot_: bool) -> None: ...

class KalturaRule(KalturaObjectBase):
    description: str
    ruleData: str
    message: str
    code: str
    actions: List[KalturaRuleAction]
    conditions: List[KalturaCondition]
    contexts: List[KalturaContextTypeHolder]
    stopProcessing: bool
    forceAdminValidation: KalturaNullableBoolean
    def __init__(self,
            description: str = NotImplemented,
            ruleData: str = NotImplemented,
            message: str = NotImplemented,
            code: str = NotImplemented,
            actions: List[KalturaRuleAction] = NotImplemented,
            conditions: List[KalturaCondition] = NotImplemented,
            contexts: List[KalturaContextTypeHolder] = NotImplemented,
            stopProcessing: bool = NotImplemented,
            forceAdminValidation: KalturaNullableBoolean = NotImplemented): ...

    def getDescription(self) -> str: ...
    def setDescription(self, newDescription: str) -> None: ...
    def getRuleData(self) -> str: ...
    def setRuleData(self, newRuleData: str) -> None: ...
    def getMessage(self) -> str: ...
    def setMessage(self, newMessage: str) -> None: ...
    def getCode(self) -> str: ...
    def setCode(self, newCode: str) -> None: ...
    def getActions(self) -> List[KalturaRuleAction]: ...
    def setActions(self, newActions: List[KalturaRuleAction]) -> None: ...
    def getConditions(self) -> List[KalturaCondition]: ...
    def setConditions(self, newConditions: List[KalturaCondition]) -> None: ...
    def getContexts(self) -> List[KalturaContextTypeHolder]: ...
    def setContexts(self, newContexts: List[KalturaContextTypeHolder]) -> None: ...
    def getStopProcessing(self) -> bool: ...
    def setStopProcessing(self, newStopProcessing: bool) -> None: ...
    def getForceAdminValidation(self) -> KalturaNullableBoolean: ...
    def setForceAdminValidation(self, newForceAdminValidation: KalturaNullableBoolean) -> None: ...

class KalturaAccessControlProfile(KalturaObjectBase):
    id: int
    partnerId: int
    name: str
    systemName: str
    description: str
    createdAt: int
    updatedAt: int
    isDefault: KalturaNullableBoolean
    rules: List[KalturaRule]
    def __init__(self,
            id: int = NotImplemented,
            partnerId: int = NotImplemented,
            name: str = NotImplemented,
            systemName: str = NotImplemented,
            description: str = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            isDefault: KalturaNullableBoolean = NotImplemented,
            rules: List[KalturaRule] = NotImplemented): ...

    def getId(self) -> int: ...
    def getPartnerId(self) -> int: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getSystemName(self) -> str: ...
    def setSystemName(self, newSystemName: str) -> None: ...
    def getDescription(self) -> str: ...
    def setDescription(self, newDescription: str) -> None: ...
    def getCreatedAt(self) -> int: ...
    def getUpdatedAt(self) -> int: ...
    def getIsDefault(self) -> KalturaNullableBoolean: ...
    def setIsDefault(self, newIsDefault: KalturaNullableBoolean) -> None: ...
    def getRules(self) -> List[KalturaRule]: ...
    def setRules(self, newRules: List[KalturaRule]) -> None: ...

class KalturaKeyValue(KalturaObjectBase):
    key: str
    value: str
    def __init__(self,
            key: str = NotImplemented,
            value: str = NotImplemented): ...

    def getKey(self) -> str: ...
    def setKey(self, newKey: str) -> None: ...
    def getValue(self) -> str: ...
    def setValue(self, newValue: str) -> None: ...

class KalturaAccessControlScope(KalturaObjectBase):
    referrer: str
    ip: str
    ks: str
    userAgent: str
    time: int
    contexts: List[KalturaAccessControlContextTypeHolder]
    hashes: List[KalturaKeyValue]
    def __init__(self,
            referrer: str = NotImplemented,
            ip: str = NotImplemented,
            ks: str = NotImplemented,
            userAgent: str = NotImplemented,
            time: int = NotImplemented,
            contexts: List[KalturaAccessControlContextTypeHolder] = NotImplemented,
            hashes: List[KalturaKeyValue] = NotImplemented): ...

    def getReferrer(self) -> str: ...
    def setReferrer(self, newReferrer: str) -> None: ...
    def getIp(self) -> str: ...
    def setIp(self, newIp: str) -> None: ...
    def getKs(self) -> str: ...
    def setKs(self, newKs: str) -> None: ...
    def getUserAgent(self) -> str: ...
    def setUserAgent(self, newUserAgent: str) -> None: ...
    def getTime(self) -> int: ...
    def setTime(self, newTime: int) -> None: ...
    def getContexts(self) -> List[KalturaAccessControlContextTypeHolder]: ...
    def setContexts(self, newContexts: List[KalturaAccessControlContextTypeHolder]) -> None: ...
    def getHashes(self) -> List[KalturaKeyValue]: ...
    def setHashes(self, newHashes: List[KalturaKeyValue]) -> None: ...

class KalturaSearchItem(KalturaObjectBase):
    def __init__(self): ...
        pass

class KalturaFilter(KalturaObjectBase):
    orderBy: str
    advancedSearch: KalturaSearchItem
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented): ...

    def getOrderBy(self) -> str: ...
    def setOrderBy(self, newOrderBy: str) -> None: ...
    def getAdvancedSearch(self) -> KalturaSearchItem: ...
    def setAdvancedSearch(self, newAdvancedSearch: KalturaSearchItem) -> None: ...

class KalturaReportBaseFilter(KalturaFilter):
    idEqual: int
    idIn: str
    partnerIdEqual: int
    partnerIdIn: str
    systemNameEqual: str
    systemNameIn: str
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            systemNameEqual: str = NotImplemented,
            systemNameIn: str = NotImplemented): ...

    def getIdEqual(self) -> int: ...
    def setIdEqual(self, newIdEqual: int) -> None: ...
    def getIdIn(self) -> str: ...
    def setIdIn(self, newIdIn: str) -> None: ...
    def getPartnerIdEqual(self) -> int: ...
    def setPartnerIdEqual(self, newPartnerIdEqual: int) -> None: ...
    def getPartnerIdIn(self) -> str: ...
    def setPartnerIdIn(self, newPartnerIdIn: str) -> None: ...
    def getSystemNameEqual(self) -> str: ...
    def setSystemNameEqual(self, newSystemNameEqual: str) -> None: ...
    def getSystemNameIn(self) -> str: ...
    def setSystemNameIn(self, newSystemNameIn: str) -> None: ...

class KalturaReportFilter(KalturaReportBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            systemNameEqual: str = NotImplemented,
            systemNameIn: str = NotImplemented): ...
        pass

class KalturaAnalyticsFilter(KalturaObjectBase):
    from_time: str
    to_time: str
    metrics: str
    utcOffset: float
    dimensions: str
    filters: List[KalturaReportFilter]
    orderBy: str
    def __init__(self,
            from_time: str = NotImplemented,
            to_time: str = NotImplemented,
            metrics: str = NotImplemented,
            utcOffset: float = NotImplemented,
            dimensions: str = NotImplemented,
            filters: List[KalturaReportFilter] = NotImplemented,
            orderBy: str = NotImplemented): ...

    def getFrom_time(self) -> str: ...
    def setFrom_time(self, newFrom_time: str) -> None: ...
    def getTo_time(self) -> str: ...
    def setTo_time(self, newTo_time: str) -> None: ...
    def getMetrics(self) -> str: ...
    def setMetrics(self, newMetrics: str) -> None: ...
    def getUtcOffset(self) -> float: ...
    def setUtcOffset(self, newUtcOffset: float) -> None: ...
    def getDimensions(self) -> str: ...
    def setDimensions(self, newDimensions: str) -> None: ...
    def getFilters(self) -> List[KalturaReportFilter]: ...
    def setFilters(self, newFilters: List[KalturaReportFilter]) -> None: ...
    def getOrderBy(self) -> str: ...
    def setOrderBy(self, newOrderBy: str) -> None: ...

class KalturaApiExceptionArg(KalturaObjectBase):
    name: str
    value: str
    def __init__(self,
            name: str = NotImplemented,
            value: str = NotImplemented): ...

    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getValue(self) -> str: ...
    def setValue(self, newValue: str) -> None: ...

class KalturaAppRole(KalturaObjectBase):
    appGuid: str
    userRoleId: int
    createdAt: int
    updatedAt: int
    def __init__(self,
            appGuid: str = NotImplemented,
            userRoleId: int = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented): ...

    def getAppGuid(self) -> str: ...
    def setAppGuid(self, newAppGuid: str) -> None: ...
    def getUserRoleId(self) -> int: ...
    def setUserRoleId(self, newUserRoleId: int) -> None: ...
    def getCreatedAt(self) -> int: ...
    def getUpdatedAt(self) -> int: ...

class KalturaAppToken(KalturaObjectBase):
    id: str
    token: str
    partnerId: int
    createdAt: int
    updatedAt: int
    status: KalturaAppTokenStatus
    expiry: int
    sessionType: KalturaSessionType
    sessionUserId: str
    sessionDuration: int
    sessionPrivileges: str
    hashType: KalturaAppTokenHashType
    description: str
    def __init__(self,
            id: str = NotImplemented,
            token: str = NotImplemented,
            partnerId: int = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            status: KalturaAppTokenStatus = NotImplemented,
            expiry: int = NotImplemented,
            sessionType: KalturaSessionType = NotImplemented,
            sessionUserId: str = NotImplemented,
            sessionDuration: int = NotImplemented,
            sessionPrivileges: str = NotImplemented,
            hashType: KalturaAppTokenHashType = NotImplemented,
            description: str = NotImplemented): ...

    def getId(self) -> str: ...
    def getToken(self) -> str: ...
    def getPartnerId(self) -> int: ...
    def getCreatedAt(self) -> int: ...
    def getUpdatedAt(self) -> int: ...
    def getStatus(self) -> KalturaAppTokenStatus: ...
    def getExpiry(self) -> int: ...
    def setExpiry(self, newExpiry: int) -> None: ...
    def getSessionType(self) -> KalturaSessionType: ...
    def setSessionType(self, newSessionType: KalturaSessionType) -> None: ...
    def getSessionUserId(self) -> str: ...
    def setSessionUserId(self, newSessionUserId: str) -> None: ...
    def getSessionDuration(self) -> int: ...
    def setSessionDuration(self, newSessionDuration: int) -> None: ...
    def getSessionPrivileges(self) -> str: ...
    def setSessionPrivileges(self, newSessionPrivileges: str) -> None: ...
    def getHashType(self) -> KalturaAppTokenHashType: ...
    def setHashType(self, newHashType: KalturaAppTokenHashType) -> None: ...
    def getDescription(self) -> str: ...
    def setDescription(self, newDescription: str) -> None: ...

class KalturaAsset(KalturaObjectBase):
    id: str
    entryId: str
    partnerId: int
    version: int
    size: int
    tags: str
    fileExt: str
    createdAt: int
    updatedAt: int
    deletedAt: int
    description: str
    partnerData: str
    partnerDescription: str
    actualSourceAssetParamsIds: str
    sizeInBytes: int
    def __init__(self,
            id: str = NotImplemented,
            entryId: str = NotImplemented,
            partnerId: int = NotImplemented,
            version: int = NotImplemented,
            size: int = NotImplemented,
            tags: str = NotImplemented,
            fileExt: str = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            deletedAt: int = NotImplemented,
            description: str = NotImplemented,
            partnerData: str = NotImplemented,
            partnerDescription: str = NotImplemented,
            actualSourceAssetParamsIds: str = NotImplemented,
            sizeInBytes: int = NotImplemented): ...

    def getId(self) -> str: ...
    def getEntryId(self) -> str: ...
    def getPartnerId(self) -> int: ...
    def getVersion(self) -> int: ...
    def getSize(self) -> int: ...
    def getTags(self) -> str: ...
    def setTags(self, newTags: str) -> None: ...
    def getFileExt(self) -> str: ...
    def setFileExt(self, newFileExt: str) -> None: ...
    def getCreatedAt(self) -> int: ...
    def getUpdatedAt(self) -> int: ...
    def getDeletedAt(self) -> int: ...
    def getDescription(self) -> str: ...
    def getPartnerData(self) -> str: ...
    def setPartnerData(self, newPartnerData: str) -> None: ...
    def getPartnerDescription(self) -> str: ...
    def setPartnerDescription(self, newPartnerDescription: str) -> None: ...
    def getActualSourceAssetParamsIds(self) -> str: ...
    def setActualSourceAssetParamsIds(self, newActualSourceAssetParamsIds: str) -> None: ...
    def getSizeInBytes(self) -> int: ...

class KalturaString(KalturaObjectBase):
    value: str
    def __init__(self,
            value: str = NotImplemented): ...

    def getValue(self) -> str: ...
    def setValue(self, newValue: str) -> None: ...

class KalturaAssetParams(KalturaObjectBase):
    id: int
    partnerId: int
    name: str
    systemName: str
    description: str
    createdAt: int
    isSystemDefault: KalturaNullableBoolean
    tags: str
    requiredPermissions: List[KalturaString]
    sourceRemoteStorageProfileId: int
    remoteStorageProfileIds: int
    mediaParserType: KalturaMediaParserType
    sourceAssetParamsIds: str
    def __init__(self,
            id: int = NotImplemented,
            partnerId: int = NotImplemented,
            name: str = NotImplemented,
            systemName: str = NotImplemented,
            description: str = NotImplemented,
            createdAt: int = NotImplemented,
            isSystemDefault: KalturaNullableBoolean = NotImplemented,
            tags: str = NotImplemented,
            requiredPermissions: List[KalturaString] = NotImplemented,
            sourceRemoteStorageProfileId: int = NotImplemented,
            remoteStorageProfileIds: int = NotImplemented,
            mediaParserType: KalturaMediaParserType = NotImplemented,
            sourceAssetParamsIds: str = NotImplemented): ...

    def getId(self) -> int: ...
    def getPartnerId(self) -> int: ...
    def setPartnerId(self, newPartnerId: int) -> None: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getSystemName(self) -> str: ...
    def setSystemName(self, newSystemName: str) -> None: ...
    def getDescription(self) -> str: ...
    def setDescription(self, newDescription: str) -> None: ...
    def getCreatedAt(self) -> int: ...
    def getIsSystemDefault(self) -> KalturaNullableBoolean: ...
    def getTags(self) -> str: ...
    def setTags(self, newTags: str) -> None: ...
    def getRequiredPermissions(self) -> List[KalturaString]: ...
    def setRequiredPermissions(self, newRequiredPermissions: List[KalturaString]) -> None: ...
    def getSourceRemoteStorageProfileId(self) -> int: ...
    def setSourceRemoteStorageProfileId(self, newSourceRemoteStorageProfileId: int) -> None: ...
    def getRemoteStorageProfileIds(self) -> int: ...
    def setRemoteStorageProfileIds(self, newRemoteStorageProfileIds: int) -> None: ...
    def getMediaParserType(self) -> KalturaMediaParserType: ...
    def setMediaParserType(self, newMediaParserType: KalturaMediaParserType) -> None: ...
    def getSourceAssetParamsIds(self) -> str: ...
    def setSourceAssetParamsIds(self, newSourceAssetParamsIds: str) -> None: ...

class KalturaResource(KalturaObjectBase):
    def __init__(self): ...
        pass

class KalturaContentResource(KalturaResource):
    def __init__(self): ...
        pass

class KalturaAssetParamsResourceContainer(KalturaResource):
    resource: KalturaContentResource
    assetParamsId: int
    def __init__(self,
            resource: KalturaContentResource = NotImplemented,
            assetParamsId: int = NotImplemented): ...

    def getResource(self) -> KalturaContentResource: ...
    def setResource(self, newResource: KalturaContentResource) -> None: ...
    def getAssetParamsId(self) -> int: ...
    def setAssetParamsId(self, newAssetParamsId: int) -> None: ...

class KalturaAssetServeOptions(KalturaObjectBase):
    download: bool
    referrer: str
    def __init__(self,
            download: bool = NotImplemented,
            referrer: str = NotImplemented): ...

    def getDownload(self) -> bool: ...
    def setDownload(self, newDownload: bool) -> None: ...
    def getReferrer(self) -> str: ...
    def setReferrer(self, newReferrer: str) -> None: ...

class KalturaAuthentication(KalturaObjectBase):
    qrCode: str
    def __init__(self,
            qrCode: str = NotImplemented): ...

    def getQrCode(self) -> str: ...
    def setQrCode(self, newQrCode: str) -> None: ...

class KalturaMultiLingualString(KalturaObjectBase):
    language: str
    value: str
    def __init__(self,
            language: str = NotImplemented,
            value: str = NotImplemented): ...

    def getLanguage(self) -> str: ...
    def setLanguage(self, newLanguage: str) -> None: ...
    def getValue(self) -> str: ...
    def setValue(self, newValue: str) -> None: ...

class KalturaOperationAttributes(KalturaObjectBase):
    def __init__(self): ...
        pass

class KalturaBaseEntry(KalturaObjectBase):
    id: str
    name: str
    multiLingual_name: List[KalturaMultiLingualString]
    description: str
    multiLingual_description: List[KalturaMultiLingualString]
    partnerId: int
    userId: str
    creatorId: str
    tags: str
    multiLingual_tags: List[KalturaMultiLingualString]
    adminTags: str
    categories: str
    categoriesIds: str
    status: KalturaEntryStatus
    moderationStatus: KalturaEntryModerationStatus
    moderationCount: int
    type: KalturaEntryType
    createdAt: int
    updatedAt: int
    rank: float
    totalRank: int
    votes: int
    groupId: int
    partnerData: str
    downloadUrl: str
    searchText: str
    licenseType: KalturaLicenseType
    version: int
    thumbnailUrl: str
    accessControlId: int
    startDate: int
    endDate: int
    referenceId: str
    replacingEntryId: str
    replacedEntryId: str
    replacementStatus: KalturaEntryReplacementStatus
    partnerSortValue: int
    conversionProfileId: int
    redirectEntryId: str
    rootEntryId: str
    parentEntryId: str
    operationAttributes: List[KalturaOperationAttributes]
    entitledUsersEdit: str
    entitledUsersPublish: str
    entitledUsersView: str
    capabilities: str
    templateEntryId: str
    displayInSearch: KalturaEntryDisplayInSearchType
    application: KalturaEntryApplication
    applicationVersion: str
    blockAutoTranscript: bool
    defaultLanguage: str
    responseLanguage: str
    def __init__(self,
            id: str = NotImplemented,
            name: str = NotImplemented,
            multiLingual_name: List[KalturaMultiLingualString] = NotImplemented,
            description: str = NotImplemented,
            multiLingual_description: List[KalturaMultiLingualString] = NotImplemented,
            partnerId: int = NotImplemented,
            userId: str = NotImplemented,
            creatorId: str = NotImplemented,
            tags: str = NotImplemented,
            multiLingual_tags: List[KalturaMultiLingualString] = NotImplemented,
            adminTags: str = NotImplemented,
            categories: str = NotImplemented,
            categoriesIds: str = NotImplemented,
            status: KalturaEntryStatus = NotImplemented,
            moderationStatus: KalturaEntryModerationStatus = NotImplemented,
            moderationCount: int = NotImplemented,
            type: KalturaEntryType = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            rank: float = NotImplemented,
            totalRank: int = NotImplemented,
            votes: int = NotImplemented,
            groupId: int = NotImplemented,
            partnerData: str = NotImplemented,
            downloadUrl: str = NotImplemented,
            searchText: str = NotImplemented,
            licenseType: KalturaLicenseType = NotImplemented,
            version: int = NotImplemented,
            thumbnailUrl: str = NotImplemented,
            accessControlId: int = NotImplemented,
            startDate: int = NotImplemented,
            endDate: int = NotImplemented,
            referenceId: str = NotImplemented,
            replacingEntryId: str = NotImplemented,
            replacedEntryId: str = NotImplemented,
            replacementStatus: KalturaEntryReplacementStatus = NotImplemented,
            partnerSortValue: int = NotImplemented,
            conversionProfileId: int = NotImplemented,
            redirectEntryId: str = NotImplemented,
            rootEntryId: str = NotImplemented,
            parentEntryId: str = NotImplemented,
            operationAttributes: List[KalturaOperationAttributes] = NotImplemented,
            entitledUsersEdit: str = NotImplemented,
            entitledUsersPublish: str = NotImplemented,
            entitledUsersView: str = NotImplemented,
            capabilities: str = NotImplemented,
            templateEntryId: str = NotImplemented,
            displayInSearch: KalturaEntryDisplayInSearchType = NotImplemented,
            application: KalturaEntryApplication = NotImplemented,
            applicationVersion: str = NotImplemented,
            blockAutoTranscript: bool = NotImplemented,
            defaultLanguage: str = NotImplemented,
            responseLanguage: str = NotImplemented): ...

    def getId(self) -> str: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getMultiLingual_name(self) -> List[KalturaMultiLingualString]: ...
    def setMultiLingual_name(self, newMultiLingual_name: List[KalturaMultiLingualString]) -> None: ...
    def getDescription(self) -> str: ...
    def setDescription(self, newDescription: str) -> None: ...
    def getMultiLingual_description(self) -> List[KalturaMultiLingualString]: ...
    def setMultiLingual_description(self, newMultiLingual_description: List[KalturaMultiLingualString]) -> None: ...
    def getPartnerId(self) -> int: ...
    def getUserId(self) -> str: ...
    def setUserId(self, newUserId: str) -> None: ...
    def getCreatorId(self) -> str: ...
    def setCreatorId(self, newCreatorId: str) -> None: ...
    def getTags(self) -> str: ...
    def setTags(self, newTags: str) -> None: ...
    def getMultiLingual_tags(self) -> List[KalturaMultiLingualString]: ...
    def setMultiLingual_tags(self, newMultiLingual_tags: List[KalturaMultiLingualString]) -> None: ...
    def getAdminTags(self) -> str: ...
    def setAdminTags(self, newAdminTags: str) -> None: ...
    def getCategories(self) -> str: ...
    def setCategories(self, newCategories: str) -> None: ...
    def getCategoriesIds(self) -> str: ...
    def setCategoriesIds(self, newCategoriesIds: str) -> None: ...
    def getStatus(self) -> KalturaEntryStatus: ...
    def getModerationStatus(self) -> KalturaEntryModerationStatus: ...
    def getModerationCount(self) -> int: ...
    def getType(self) -> KalturaEntryType: ...
    def setType(self, newType: KalturaEntryType) -> None: ...
    def getCreatedAt(self) -> int: ...
    def getUpdatedAt(self) -> int: ...
    def getRank(self) -> float: ...
    def getTotalRank(self) -> int: ...
    def getVotes(self) -> int: ...
    def getGroupId(self) -> int: ...
    def setGroupId(self, newGroupId: int) -> None: ...
    def getPartnerData(self) -> str: ...
    def setPartnerData(self, newPartnerData: str) -> None: ...
    def getDownloadUrl(self) -> str: ...
    def getSearchText(self) -> str: ...
    def getLicenseType(self) -> KalturaLicenseType: ...
    def setLicenseType(self, newLicenseType: KalturaLicenseType) -> None: ...
    def getVersion(self) -> int: ...
    def getThumbnailUrl(self) -> str: ...
    def getAccessControlId(self) -> int: ...
    def setAccessControlId(self, newAccessControlId: int) -> None: ...
    def getStartDate(self) -> int: ...
    def setStartDate(self, newStartDate: int) -> None: ...
    def getEndDate(self) -> int: ...
    def setEndDate(self, newEndDate: int) -> None: ...
    def getReferenceId(self) -> str: ...
    def setReferenceId(self, newReferenceId: str) -> None: ...
    def getReplacingEntryId(self) -> str: ...
    def getReplacedEntryId(self) -> str: ...
    def getReplacementStatus(self) -> KalturaEntryReplacementStatus: ...
    def getPartnerSortValue(self) -> int: ...
    def setPartnerSortValue(self, newPartnerSortValue: int) -> None: ...
    def getConversionProfileId(self) -> int: ...
    def setConversionProfileId(self, newConversionProfileId: int) -> None: ...
    def getRedirectEntryId(self) -> str: ...
    def setRedirectEntryId(self, newRedirectEntryId: str) -> None: ...
    def getRootEntryId(self) -> str: ...
    def getParentEntryId(self) -> str: ...
    def setParentEntryId(self, newParentEntryId: str) -> None: ...
    def getOperationAttributes(self) -> List[KalturaOperationAttributes]: ...
    def setOperationAttributes(self, newOperationAttributes: List[KalturaOperationAttributes]) -> None: ...
    def getEntitledUsersEdit(self) -> str: ...
    def setEntitledUsersEdit(self, newEntitledUsersEdit: str) -> None: ...
    def getEntitledUsersPublish(self) -> str: ...
    def setEntitledUsersPublish(self, newEntitledUsersPublish: str) -> None: ...
    def getEntitledUsersView(self) -> str: ...
    def setEntitledUsersView(self, newEntitledUsersView: str) -> None: ...
    def getCapabilities(self) -> str: ...
    def getTemplateEntryId(self) -> str: ...
    def setTemplateEntryId(self, newTemplateEntryId: str) -> None: ...
    def getDisplayInSearch(self) -> KalturaEntryDisplayInSearchType: ...
    def setDisplayInSearch(self, newDisplayInSearch: KalturaEntryDisplayInSearchType) -> None: ...
    def getApplication(self) -> KalturaEntryApplication: ...
    def setApplication(self, newApplication: KalturaEntryApplication) -> None: ...
    def getApplicationVersion(self) -> str: ...
    def setApplicationVersion(self, newApplicationVersion: str) -> None: ...
    def getBlockAutoTranscript(self) -> bool: ...
    def setBlockAutoTranscript(self, newBlockAutoTranscript: bool) -> None: ...
    def getDefaultLanguage(self) -> str: ...
    def getResponseLanguage(self) -> str: ...

class KalturaBaseEntryCloneOptionItem(KalturaObjectBase):
    def __init__(self): ...
        pass

class KalturaBaseResponseProfile(KalturaObjectBase):
    def __init__(self): ...
        pass

class KalturaBaseSyndicationFeed(KalturaObjectBase):
    id: str
    feedUrl: str
    partnerId: int
    playlistId: str
    name: str
    status: KalturaSyndicationFeedStatus
    type: KalturaSyndicationFeedType
    landingPage: str
    createdAt: int
    allowEmbed: bool
    playerUiconfId: int
    flavorParamId: int
    transcodeExistingContent: bool
    addToDefaultConversionProfile: bool
    categories: str
    storageId: int
    entriesOrderBy: KalturaSyndicationFeedEntriesOrderBy
    enforceEntitlement: bool
    privacyContext: str
    updatedAt: int
    useCategoryEntries: bool
    feedContentTypeHeader: str
    def __init__(self,
            id: str = NotImplemented,
            feedUrl: str = NotImplemented,
            partnerId: int = NotImplemented,
            playlistId: str = NotImplemented,
            name: str = NotImplemented,
            status: KalturaSyndicationFeedStatus = NotImplemented,
            type: KalturaSyndicationFeedType = NotImplemented,
            landingPage: str = NotImplemented,
            createdAt: int = NotImplemented,
            allowEmbed: bool = NotImplemented,
            playerUiconfId: int = NotImplemented,
            flavorParamId: int = NotImplemented,
            transcodeExistingContent: bool = NotImplemented,
            addToDefaultConversionProfile: bool = NotImplemented,
            categories: str = NotImplemented,
            storageId: int = NotImplemented,
            entriesOrderBy: KalturaSyndicationFeedEntriesOrderBy = NotImplemented,
            enforceEntitlement: bool = NotImplemented,
            privacyContext: str = NotImplemented,
            updatedAt: int = NotImplemented,
            useCategoryEntries: bool = NotImplemented,
            feedContentTypeHeader: str = NotImplemented): ...

    def getId(self) -> str: ...
    def getFeedUrl(self) -> str: ...
    def getPartnerId(self) -> int: ...
    def getPlaylistId(self) -> str: ...
    def setPlaylistId(self, newPlaylistId: str) -> None: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getStatus(self) -> KalturaSyndicationFeedStatus: ...
    def getType(self) -> KalturaSyndicationFeedType: ...
    def setType(self, newType: KalturaSyndicationFeedType) -> None: ...
    def getLandingPage(self) -> str: ...
    def setLandingPage(self, newLandingPage: str) -> None: ...
    def getCreatedAt(self) -> int: ...
    def getAllowEmbed(self) -> bool: ...
    def setAllowEmbed(self, newAllowEmbed: bool) -> None: ...
    def getPlayerUiconfId(self) -> int: ...
    def setPlayerUiconfId(self, newPlayerUiconfId: int) -> None: ...
    def getFlavorParamId(self) -> int: ...
    def setFlavorParamId(self, newFlavorParamId: int) -> None: ...
    def getTranscodeExistingContent(self) -> bool: ...
    def setTranscodeExistingContent(self, newTranscodeExistingContent: bool) -> None: ...
    def getAddToDefaultConversionProfile(self) -> bool: ...
    def setAddToDefaultConversionProfile(self, newAddToDefaultConversionProfile: bool) -> None: ...
    def getCategories(self) -> str: ...
    def setCategories(self, newCategories: str) -> None: ...
    def getStorageId(self) -> int: ...
    def setStorageId(self, newStorageId: int) -> None: ...
    def getEntriesOrderBy(self) -> KalturaSyndicationFeedEntriesOrderBy: ...
    def setEntriesOrderBy(self, newEntriesOrderBy: KalturaSyndicationFeedEntriesOrderBy) -> None: ...
    def getEnforceEntitlement(self) -> bool: ...
    def setEnforceEntitlement(self, newEnforceEntitlement: bool) -> None: ...
    def getPrivacyContext(self) -> str: ...
    def setPrivacyContext(self, newPrivacyContext: str) -> None: ...
    def getUpdatedAt(self) -> int: ...
    def getUseCategoryEntries(self) -> bool: ...
    def setUseCategoryEntries(self, newUseCategoryEntries: bool) -> None: ...
    def getFeedContentTypeHeader(self) -> str: ...
    def setFeedContentTypeHeader(self, newFeedContentTypeHeader: str) -> None: ...

class KalturaUserCapability(KalturaObjectBase):
    capability: KalturaUserCapabilityType
    def __init__(self,
            capability: KalturaUserCapabilityType = NotImplemented): ...

    def getCapability(self) -> KalturaUserCapabilityType: ...
    def setCapability(self, newCapability: KalturaUserCapabilityType) -> None: ...

class KalturaBaseUser(KalturaObjectBase):
    id: str
    partnerId: int
    screenName: str
    fullName: str
    email: str
    country: str
    state: str
    city: str
    zip: str
    thumbnailUrl: str
    description: str
    tags: str
    adminTags: str
    status: KalturaUserStatus
    createdAt: int
    updatedAt: int
    partnerData: str
    indexedPartnerDataInt: int
    indexedPartnerDataString: str
    storageSize: int
    language: KalturaLanguageCode
    lastLoginTime: int
    statusUpdatedAt: int
    deletedAt: int
    allowedPartnerIds: str
    allowedPartnerPackages: str
    userMode: KalturaUserMode
    capabilities: List[KalturaUserCapability]
    def __init__(self,
            id: str = NotImplemented,
            partnerId: int = NotImplemented,
            screenName: str = NotImplemented,
            fullName: str = NotImplemented,
            email: str = NotImplemented,
            country: str = NotImplemented,
            state: str = NotImplemented,
            city: str = NotImplemented,
            zip: str = NotImplemented,
            thumbnailUrl: str = NotImplemented,
            description: str = NotImplemented,
            tags: str = NotImplemented,
            adminTags: str = NotImplemented,
            status: KalturaUserStatus = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            partnerData: str = NotImplemented,
            indexedPartnerDataInt: int = NotImplemented,
            indexedPartnerDataString: str = NotImplemented,
            storageSize: int = NotImplemented,
            language: KalturaLanguageCode = NotImplemented,
            lastLoginTime: int = NotImplemented,
            statusUpdatedAt: int = NotImplemented,
            deletedAt: int = NotImplemented,
            allowedPartnerIds: str = NotImplemented,
            allowedPartnerPackages: str = NotImplemented,
            userMode: KalturaUserMode = NotImplemented,
            capabilities: List[KalturaUserCapability] = NotImplemented): ...

    def getId(self) -> str: ...
    def setId(self, newId: str) -> None: ...
    def getPartnerId(self) -> int: ...
    def getScreenName(self) -> str: ...
    def setScreenName(self, newScreenName: str) -> None: ...
    def getFullName(self) -> str: ...
    def setFullName(self, newFullName: str) -> None: ...
    def getEmail(self) -> str: ...
    def setEmail(self, newEmail: str) -> None: ...
    def getCountry(self) -> str: ...
    def setCountry(self, newCountry: str) -> None: ...
    def getState(self) -> str: ...
    def setState(self, newState: str) -> None: ...
    def getCity(self) -> str: ...
    def setCity(self, newCity: str) -> None: ...
    def getZip(self) -> str: ...
    def setZip(self, newZip: str) -> None: ...
    def getThumbnailUrl(self) -> str: ...
    def setThumbnailUrl(self, newThumbnailUrl: str) -> None: ...
    def getDescription(self) -> str: ...
    def setDescription(self, newDescription: str) -> None: ...
    def getTags(self) -> str: ...
    def setTags(self, newTags: str) -> None: ...
    def getAdminTags(self) -> str: ...
    def setAdminTags(self, newAdminTags: str) -> None: ...
    def getStatus(self) -> KalturaUserStatus: ...
    def setStatus(self, newStatus: KalturaUserStatus) -> None: ...
    def getCreatedAt(self) -> int: ...
    def getUpdatedAt(self) -> int: ...
    def getPartnerData(self) -> str: ...
    def setPartnerData(self, newPartnerData: str) -> None: ...
    def getIndexedPartnerDataInt(self) -> int: ...
    def setIndexedPartnerDataInt(self, newIndexedPartnerDataInt: int) -> None: ...
    def getIndexedPartnerDataString(self) -> str: ...
    def setIndexedPartnerDataString(self, newIndexedPartnerDataString: str) -> None: ...
    def getStorageSize(self) -> int: ...
    def getLanguage(self) -> KalturaLanguageCode: ...
    def setLanguage(self, newLanguage: KalturaLanguageCode) -> None: ...
    def getLastLoginTime(self) -> int: ...
    def getStatusUpdatedAt(self) -> int: ...
    def getDeletedAt(self) -> int: ...
    def getAllowedPartnerIds(self) -> str: ...
    def setAllowedPartnerIds(self, newAllowedPartnerIds: str) -> None: ...
    def getAllowedPartnerPackages(self) -> str: ...
    def setAllowedPartnerPackages(self, newAllowedPartnerPackages: str) -> None: ...
    def getUserMode(self) -> KalturaUserMode: ...
    def setUserMode(self, newUserMode: KalturaUserMode) -> None: ...
    def getCapabilities(self) -> List[KalturaUserCapability]: ...
    def setCapabilities(self, newCapabilities: List[KalturaUserCapability]) -> None: ...

class KalturaJobData(KalturaObjectBase):
    def __init__(self): ...
        pass

class KalturaBatchHistoryData(KalturaObjectBase):
    schedulerId: int
    workerId: int
    batchIndex: int
    timeStamp: int
    message: str
    errType: int
    errNumber: int
    hostName: str
    sessionId: str
    schedulerName: str
    def __init__(self,
            schedulerId: int = NotImplemented,
            workerId: int = NotImplemented,
            batchIndex: int = NotImplemented,
            timeStamp: int = NotImplemented,
            message: str = NotImplemented,
            errType: int = NotImplemented,
            errNumber: int = NotImplemented,
            hostName: str = NotImplemented,
            sessionId: str = NotImplemented,
            schedulerName: str = NotImplemented): ...

    def getSchedulerId(self) -> int: ...
    def setSchedulerId(self, newSchedulerId: int) -> None: ...
    def getWorkerId(self) -> int: ...
    def setWorkerId(self, newWorkerId: int) -> None: ...
    def getBatchIndex(self) -> int: ...
    def setBatchIndex(self, newBatchIndex: int) -> None: ...
    def getTimeStamp(self) -> int: ...
    def setTimeStamp(self, newTimeStamp: int) -> None: ...
    def getMessage(self) -> str: ...
    def setMessage(self, newMessage: str) -> None: ...
    def getErrType(self) -> int: ...
    def setErrType(self, newErrType: int) -> None: ...
    def getErrNumber(self) -> int: ...
    def setErrNumber(self, newErrNumber: int) -> None: ...
    def getHostName(self) -> str: ...
    def setHostName(self, newHostName: str) -> None: ...
    def getSessionId(self) -> str: ...
    def setSessionId(self, newSessionId: str) -> None: ...
    def getSchedulerName(self) -> str: ...
    def setSchedulerName(self, newSchedulerName: str) -> None: ...

class KalturaBatchJob(KalturaObjectBase):
    id: int
    partnerId: int
    createdAt: int
    updatedAt: int
    deletedAt: int
    lockExpiration: int
    executionAttempts: int
    lockVersion: int
    entryId: str
    entryName: str
    jobType: KalturaBatchJobType
    jobSubType: int
    data: KalturaJobData
    status: KalturaBatchJobStatus
    abort: int
    checkAgainTimeout: int
    message: str
    description: str
    priority: int
    history: List[KalturaBatchHistoryData]
    bulkJobId: int
    batchVersion: int
    parentJobId: int
    rootJobId: int
    queueTime: int
    finishTime: int
    errType: KalturaBatchJobErrorTypes
    errNumber: int
    estimatedEffort: int
    urgency: int
    schedulerId: int
    workerId: int
    batchIndex: int
    lastSchedulerId: int
    lastWorkerId: int
    dc: int
    jobObjectId: str
    jobObjectType: int
    def __init__(self,
            id: int = NotImplemented,
            partnerId: int = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            deletedAt: int = NotImplemented,
            lockExpiration: int = NotImplemented,
            executionAttempts: int = NotImplemented,
            lockVersion: int = NotImplemented,
            entryId: str = NotImplemented,
            entryName: str = NotImplemented,
            jobType: KalturaBatchJobType = NotImplemented,
            jobSubType: int = NotImplemented,
            data: KalturaJobData = NotImplemented,
            status: KalturaBatchJobStatus = NotImplemented,
            abort: int = NotImplemented,
            checkAgainTimeout: int = NotImplemented,
            message: str = NotImplemented,
            description: str = NotImplemented,
            priority: int = NotImplemented,
            history: List[KalturaBatchHistoryData] = NotImplemented,
            bulkJobId: int = NotImplemented,
            batchVersion: int = NotImplemented,
            parentJobId: int = NotImplemented,
            rootJobId: int = NotImplemented,
            queueTime: int = NotImplemented,
            finishTime: int = NotImplemented,
            errType: KalturaBatchJobErrorTypes = NotImplemented,
            errNumber: int = NotImplemented,
            estimatedEffort: int = NotImplemented,
            urgency: int = NotImplemented,
            schedulerId: int = NotImplemented,
            workerId: int = NotImplemented,
            batchIndex: int = NotImplemented,
            lastSchedulerId: int = NotImplemented,
            lastWorkerId: int = NotImplemented,
            dc: int = NotImplemented,
            jobObjectId: str = NotImplemented,
            jobObjectType: int = NotImplemented): ...

    def getId(self) -> int: ...
    def getPartnerId(self) -> int: ...
    def getCreatedAt(self) -> int: ...
    def getUpdatedAt(self) -> int: ...
    def getDeletedAt(self) -> int: ...
    def getLockExpiration(self) -> int: ...
    def getExecutionAttempts(self) -> int: ...
    def getLockVersion(self) -> int: ...
    def getEntryId(self) -> str: ...
    def setEntryId(self, newEntryId: str) -> None: ...
    def getEntryName(self) -> str: ...
    def setEntryName(self, newEntryName: str) -> None: ...
    def getJobType(self) -> KalturaBatchJobType: ...
    def getJobSubType(self) -> int: ...
    def setJobSubType(self, newJobSubType: int) -> None: ...
    def getData(self) -> KalturaJobData: ...
    def setData(self, newData: KalturaJobData) -> None: ...
    def getStatus(self) -> KalturaBatchJobStatus: ...
    def setStatus(self, newStatus: KalturaBatchJobStatus) -> None: ...
    def getAbort(self) -> int: ...
    def setAbort(self, newAbort: int) -> None: ...
    def getCheckAgainTimeout(self) -> int: ...
    def setCheckAgainTimeout(self, newCheckAgainTimeout: int) -> None: ...
    def getMessage(self) -> str: ...
    def setMessage(self, newMessage: str) -> None: ...
    def getDescription(self) -> str: ...
    def setDescription(self, newDescription: str) -> None: ...
    def getPriority(self) -> int: ...
    def setPriority(self, newPriority: int) -> None: ...
    def getHistory(self) -> List[KalturaBatchHistoryData]: ...
    def setHistory(self, newHistory: List[KalturaBatchHistoryData]) -> None: ...
    def getBulkJobId(self) -> int: ...
    def setBulkJobId(self, newBulkJobId: int) -> None: ...
    def getBatchVersion(self) -> int: ...
    def setBatchVersion(self, newBatchVersion: int) -> None: ...
    def getParentJobId(self) -> int: ...
    def setParentJobId(self, newParentJobId: int) -> None: ...
    def getRootJobId(self) -> int: ...
    def setRootJobId(self, newRootJobId: int) -> None: ...
    def getQueueTime(self) -> int: ...
    def setQueueTime(self, newQueueTime: int) -> None: ...
    def getFinishTime(self) -> int: ...
    def setFinishTime(self, newFinishTime: int) -> None: ...
    def getErrType(self) -> KalturaBatchJobErrorTypes: ...
    def setErrType(self, newErrType: KalturaBatchJobErrorTypes) -> None: ...
    def getErrNumber(self) -> int: ...
    def setErrNumber(self, newErrNumber: int) -> None: ...
    def getEstimatedEffort(self) -> int: ...
    def setEstimatedEffort(self, newEstimatedEffort: int) -> None: ...
    def getUrgency(self) -> int: ...
    def setUrgency(self, newUrgency: int) -> None: ...
    def getSchedulerId(self) -> int: ...
    def setSchedulerId(self, newSchedulerId: int) -> None: ...
    def getWorkerId(self) -> int: ...
    def setWorkerId(self, newWorkerId: int) -> None: ...
    def getBatchIndex(self) -> int: ...
    def setBatchIndex(self, newBatchIndex: int) -> None: ...
    def getLastSchedulerId(self) -> int: ...
    def setLastSchedulerId(self, newLastSchedulerId: int) -> None: ...
    def getLastWorkerId(self) -> int: ...
    def setLastWorkerId(self, newLastWorkerId: int) -> None: ...
    def getDc(self) -> int: ...
    def setDc(self, newDc: int) -> None: ...
    def getJobObjectId(self) -> str: ...
    def setJobObjectId(self, newJobObjectId: str) -> None: ...
    def getJobObjectType(self) -> int: ...
    def setJobObjectType(self, newJobObjectType: int) -> None: ...

class KalturaPlayerDeliveryType(KalturaObjectBase):
    id: str
    label: str
    flashvars: List[KalturaKeyValue]
    minVersion: str
    enabledByDefault: bool
    def __init__(self,
            id: str = NotImplemented,
            label: str = NotImplemented,
            flashvars: List[KalturaKeyValue] = NotImplemented,
            minVersion: str = NotImplemented,
            enabledByDefault: bool = NotImplemented): ...

    def getId(self) -> str: ...
    def setId(self, newId: str) -> None: ...
    def getLabel(self) -> str: ...
    def setLabel(self, newLabel: str) -> None: ...
    def getFlashvars(self) -> List[KalturaKeyValue]: ...
    def setFlashvars(self, newFlashvars: List[KalturaKeyValue]) -> None: ...
    def getMinVersion(self) -> str: ...
    def setMinVersion(self, newMinVersion: str) -> None: ...
    def getEnabledByDefault(self) -> bool: ...
    def setEnabledByDefault(self, newEnabledByDefault: bool) -> None: ...

class KalturaPlayerEmbedCodeType(KalturaObjectBase):
    id: str
    label: str
    entryOnly: bool
    minVersion: str
    def __init__(self,
            id: str = NotImplemented,
            label: str = NotImplemented,
            entryOnly: bool = NotImplemented,
            minVersion: str = NotImplemented): ...

    def getId(self) -> str: ...
    def setId(self, newId: str) -> None: ...
    def getLabel(self) -> str: ...
    def setLabel(self, newLabel: str) -> None: ...
    def getEntryOnly(self) -> bool: ...
    def setEntryOnly(self, newEntryOnly: bool) -> None: ...
    def getMinVersion(self) -> str: ...
    def setMinVersion(self, newMinVersion: str) -> None: ...

class KalturaESearchLanguageItem(KalturaObjectBase):
    eSerachLanguage: KalturaESearchLanguage
    def __init__(self,
            eSerachLanguage: KalturaESearchLanguage = NotImplemented): ...

    def getESerachLanguage(self) -> KalturaESearchLanguage: ...
    def setESerachLanguage(self, newESerachLanguage: KalturaESearchLanguage) -> None: ...

class KalturaRegexItem(KalturaObjectBase):
    regex: str
    description: str
    def __init__(self,
            regex: str = NotImplemented,
            description: str = NotImplemented): ...

    def getRegex(self) -> str: ...
    def setRegex(self, newRegex: str) -> None: ...
    def getDescription(self) -> str: ...
    def setDescription(self, newDescription: str) -> None: ...

class KalturaPartner(KalturaObjectBase):
    id: int
    name: str
    website: str
    notificationUrl: str
    appearInSearch: int
    createdAt: int
    adminName: str
    adminEmail: str
    description: str
    commercialUse: KalturaCommercialUseType
    landingPage: str
    userLandingPage: str
    contentCategories: str
    type: KalturaPartnerType
    phone: str
    describeYourself: str
    adultContent: bool
    defConversionProfileType: str
    notify: int
    status: KalturaPartnerStatus
    allowQuickEdit: int
    mergeEntryLists: int
    notificationsConfig: str
    allowedFromEmailWhiteList: str
    maxUploadSize: int
    partnerPackage: int
    secret: str
    adminSecret: str
    cmsPassword: str
    allowMultiNotification: int
    adminLoginUsersQuota: int
    adminUserId: str
    firstName: str
    lastName: str
    country: str
    state: str
    additionalParams: List[KalturaKeyValue]
    publishersQuota: int
    partnerGroupType: KalturaPartnerGroupType
    defaultEntitlementEnforcement: bool
    defaultDeliveryType: str
    defaultEmbedCodeType: str
    deliveryTypes: List[KalturaPlayerDeliveryType]
    embedCodeTypes: List[KalturaPlayerEmbedCodeType]
    templatePartnerId: int
    ignoreSeoLinks: bool
    useTwoFactorAuthentication: bool
    useSso: bool
    blockDirectLogin: bool
    host: str
    cdnHost: str
    isFirstLogin: bool
    logoutUrl: str
    partnerParentId: int
    crmId: str
    referenceId: str
    timeAlignedRenditions: bool
    publisherEnvironmentType: int
    ovpEnvironmentUrl: str
    ottEnvironmentUrl: str
    eSearchLanguages: List[KalturaESearchLanguageItem]
    authenticationType: KalturaPartnerAuthenticationType
    extendedFreeTrailExpiryReason: str
    extendedFreeTrailExpiryDate: int
    extendedFreeTrail: int
    extendedFreeTrailEndsWarning: bool
    eightyPercentWarning: int
    usageLimitWarning: int
    lastFreeTrialNotificationDay: int
    monitorUsage: int
    passwordStructureValidations: List[KalturaRegexItem]
    passwordStructureValidationsDescription: str
    passReplaceFreq: int
    maxLoginAttempts: int
    loginBlockPeriod: int
    numPrevPassToKeep: int
    allowDefaultPasswordRestrictions: bool
    twoFactorAuthenticationMode: KalturaTwoFactorAuthenticationMode
    isSelfServe: bool
    allowedDomains: str
    excludedAdminRoleName: str
    eventPlatformAllowedTemplates: str
    verticalClassificationId: int
    recycleBinRetentionPeriod: int
    customAnalyticsDomain: str
    allowedEmailDomainsForAdmins: str
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            website: str = NotImplemented,
            notificationUrl: str = NotImplemented,
            appearInSearch: int = NotImplemented,
            createdAt: int = NotImplemented,
            adminName: str = NotImplemented,
            adminEmail: str = NotImplemented,
            description: str = NotImplemented,
            commercialUse: KalturaCommercialUseType = NotImplemented,
            landingPage: str = NotImplemented,
            userLandingPage: str = NotImplemented,
            contentCategories: str = NotImplemented,
            type: KalturaPartnerType = NotImplemented,
            phone: str = NotImplemented,
            describeYourself: str = NotImplemented,
            adultContent: bool = NotImplemented,
            defConversionProfileType: str = NotImplemented,
            notify: int = NotImplemented,
            status: KalturaPartnerStatus = NotImplemented,
            allowQuickEdit: int = NotImplemented,
            mergeEntryLists: int = NotImplemented,
            notificationsConfig: str = NotImplemented,
            allowedFromEmailWhiteList: str = NotImplemented,
            maxUploadSize: int = NotImplemented,
            partnerPackage: int = NotImplemented,
            secret: str = NotImplemented,
            adminSecret: str = NotImplemented,
            cmsPassword: str = NotImplemented,
            allowMultiNotification: int = NotImplemented,
            adminLoginUsersQuota: int = NotImplemented,
            adminUserId: str = NotImplemented,
            firstName: str = NotImplemented,
            lastName: str = NotImplemented,
            country: str = NotImplemented,
            state: str = NotImplemented,
            additionalParams: List[KalturaKeyValue] = NotImplemented,
            publishersQuota: int = NotImplemented,
            partnerGroupType: KalturaPartnerGroupType = NotImplemented,
            defaultEntitlementEnforcement: bool = NotImplemented,
            defaultDeliveryType: str = NotImplemented,
            defaultEmbedCodeType: str = NotImplemented,
            deliveryTypes: List[KalturaPlayerDeliveryType] = NotImplemented,
            embedCodeTypes: List[KalturaPlayerEmbedCodeType] = NotImplemented,
            templatePartnerId: int = NotImplemented,
            ignoreSeoLinks: bool = NotImplemented,
            useTwoFactorAuthentication: bool = NotImplemented,
            useSso: bool = NotImplemented,
            blockDirectLogin: bool = NotImplemented,
            host: str = NotImplemented,
            cdnHost: str = NotImplemented,
            isFirstLogin: bool = NotImplemented,
            logoutUrl: str = NotImplemented,
            partnerParentId: int = NotImplemented,
            crmId: str = NotImplemented,
            referenceId: str = NotImplemented,
            timeAlignedRenditions: bool = NotImplemented,
            publisherEnvironmentType: int = NotImplemented,
            ovpEnvironmentUrl: str = NotImplemented,
            ottEnvironmentUrl: str = NotImplemented,
            eSearchLanguages: List[KalturaESearchLanguageItem] = NotImplemented,
            authenticationType: KalturaPartnerAuthenticationType = NotImplemented,
            extendedFreeTrailExpiryReason: str = NotImplemented,
            extendedFreeTrailExpiryDate: int = NotImplemented,
            extendedFreeTrail: int = NotImplemented,
            extendedFreeTrailEndsWarning: bool = NotImplemented,
            eightyPercentWarning: int = NotImplemented,
            usageLimitWarning: int = NotImplemented,
            lastFreeTrialNotificationDay: int = NotImplemented,
            monitorUsage: int = NotImplemented,
            passwordStructureValidations: List[KalturaRegexItem] = NotImplemented,
            passwordStructureValidationsDescription: str = NotImplemented,
            passReplaceFreq: int = NotImplemented,
            maxLoginAttempts: int = NotImplemented,
            loginBlockPeriod: int = NotImplemented,
            numPrevPassToKeep: int = NotImplemented,
            allowDefaultPasswordRestrictions: bool = NotImplemented,
            twoFactorAuthenticationMode: KalturaTwoFactorAuthenticationMode = NotImplemented,
            isSelfServe: bool = NotImplemented,
            allowedDomains: str = NotImplemented,
            excludedAdminRoleName: str = NotImplemented,
            eventPlatformAllowedTemplates: str = NotImplemented,
            verticalClassificationId: int = NotImplemented,
            recycleBinRetentionPeriod: int = NotImplemented,
            customAnalyticsDomain: str = NotImplemented,
            allowedEmailDomainsForAdmins: str = NotImplemented): ...

    def getId(self) -> int: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getWebsite(self) -> str: ...
    def setWebsite(self, newWebsite: str) -> None: ...
    def getNotificationUrl(self) -> str: ...
    def setNotificationUrl(self, newNotificationUrl: str) -> None: ...
    def getAppearInSearch(self) -> int: ...
    def setAppearInSearch(self, newAppearInSearch: int) -> None: ...
    def getCreatedAt(self) -> int: ...
    def getAdminName(self) -> str: ...
    def setAdminName(self, newAdminName: str) -> None: ...
    def getAdminEmail(self) -> str: ...
    def setAdminEmail(self, newAdminEmail: str) -> None: ...
    def getDescription(self) -> str: ...
    def setDescription(self, newDescription: str) -> None: ...
    def getCommercialUse(self) -> KalturaCommercialUseType: ...
    def setCommercialUse(self, newCommercialUse: KalturaCommercialUseType) -> None: ...
    def getLandingPage(self) -> str: ...
    def setLandingPage(self, newLandingPage: str) -> None: ...
    def getUserLandingPage(self) -> str: ...
    def setUserLandingPage(self, newUserLandingPage: str) -> None: ...
    def getContentCategories(self) -> str: ...
    def setContentCategories(self, newContentCategories: str) -> None: ...
    def getType(self) -> KalturaPartnerType: ...
    def setType(self, newType: KalturaPartnerType) -> None: ...
    def getPhone(self) -> str: ...
    def setPhone(self, newPhone: str) -> None: ...
    def getDescribeYourself(self) -> str: ...
    def setDescribeYourself(self, newDescribeYourself: str) -> None: ...
    def getAdultContent(self) -> bool: ...
    def setAdultContent(self, newAdultContent: bool) -> None: ...
    def getDefConversionProfileType(self) -> str: ...
    def setDefConversionProfileType(self, newDefConversionProfileType: str) -> None: ...
    def getNotify(self) -> int: ...
    def setNotify(self, newNotify: int) -> None: ...
    def getStatus(self) -> KalturaPartnerStatus: ...
    def getAllowQuickEdit(self) -> int: ...
    def setAllowQuickEdit(self, newAllowQuickEdit: int) -> None: ...
    def getMergeEntryLists(self) -> int: ...
    def setMergeEntryLists(self, newMergeEntryLists: int) -> None: ...
    def getNotificationsConfig(self) -> str: ...
    def setNotificationsConfig(self, newNotificationsConfig: str) -> None: ...
    def getAllowedFromEmailWhiteList(self) -> str: ...
    def setAllowedFromEmailWhiteList(self, newAllowedFromEmailWhiteList: str) -> None: ...
    def getMaxUploadSize(self) -> int: ...
    def setMaxUploadSize(self, newMaxUploadSize: int) -> None: ...
    def getPartnerPackage(self) -> int: ...
    def setPartnerPackage(self, newPartnerPackage: int) -> None: ...
    def getSecret(self) -> str: ...
    def getAdminSecret(self) -> str: ...
    def getCmsPassword(self) -> str: ...
    def getAllowMultiNotification(self) -> int: ...
    def setAllowMultiNotification(self, newAllowMultiNotification: int) -> None: ...
    def getAdminLoginUsersQuota(self) -> int: ...
    def getAdminUserId(self) -> str: ...
    def setAdminUserId(self, newAdminUserId: str) -> None: ...
    def getFirstName(self) -> str: ...
    def setFirstName(self, newFirstName: str) -> None: ...
    def getLastName(self) -> str: ...
    def setLastName(self, newLastName: str) -> None: ...
    def getCountry(self) -> str: ...
    def setCountry(self, newCountry: str) -> None: ...
    def getState(self) -> str: ...
    def setState(self, newState: str) -> None: ...
    def getAdditionalParams(self) -> List[KalturaKeyValue]: ...
    def setAdditionalParams(self, newAdditionalParams: List[KalturaKeyValue]) -> None: ...
    def getPublishersQuota(self) -> int: ...
    def getPartnerGroupType(self) -> KalturaPartnerGroupType: ...
    def getDefaultEntitlementEnforcement(self) -> bool: ...
    def getDefaultDeliveryType(self) -> str: ...
    def getDefaultEmbedCodeType(self) -> str: ...
    def getDeliveryTypes(self) -> List[KalturaPlayerDeliveryType]: ...
    def getEmbedCodeTypes(self) -> List[KalturaPlayerEmbedCodeType]: ...
    def getTemplatePartnerId(self) -> int: ...
    def getIgnoreSeoLinks(self) -> bool: ...
    def getUseTwoFactorAuthentication(self) -> bool: ...
    def getUseSso(self) -> bool: ...
    def setUseSso(self, newUseSso: bool) -> None: ...
    def getBlockDirectLogin(self) -> bool: ...
    def setBlockDirectLogin(self, newBlockDirectLogin: bool) -> None: ...
    def getHost(self) -> str: ...
    def getCdnHost(self) -> str: ...
    def getIsFirstLogin(self) -> bool: ...
    def getLogoutUrl(self) -> str: ...
    def getPartnerParentId(self) -> int: ...
    def setPartnerParentId(self, newPartnerParentId: int) -> None: ...
    def getCrmId(self) -> str: ...
    def getReferenceId(self) -> str: ...
    def setReferenceId(self, newReferenceId: str) -> None: ...
    def getTimeAlignedRenditions(self) -> bool: ...
    def getPublisherEnvironmentType(self) -> int: ...
    def getOvpEnvironmentUrl(self) -> str: ...
    def getOttEnvironmentUrl(self) -> str: ...
    def getESearchLanguages(self) -> List[KalturaESearchLanguageItem]: ...
    def setESearchLanguages(self, newESearchLanguages: List[KalturaESearchLanguageItem]) -> None: ...
    def getAuthenticationType(self) -> KalturaPartnerAuthenticationType: ...
    def getExtendedFreeTrailExpiryReason(self) -> str: ...
    def getExtendedFreeTrailExpiryDate(self) -> int: ...
    def getExtendedFreeTrail(self) -> int: ...
    def getExtendedFreeTrailEndsWarning(self) -> bool: ...
    def getEightyPercentWarning(self) -> int: ...
    def getUsageLimitWarning(self) -> int: ...
    def getLastFreeTrialNotificationDay(self) -> int: ...
    def getMonitorUsage(self) -> int: ...
    def getPasswordStructureValidations(self) -> List[KalturaRegexItem]: ...
    def setPasswordStructureValidations(self, newPasswordStructureValidations: List[KalturaRegexItem]) -> None: ...
    def getPasswordStructureValidationsDescription(self) -> str: ...
    def setPasswordStructureValidationsDescription(self, newPasswordStructureValidationsDescription: str) -> None: ...
    def getPassReplaceFreq(self) -> int: ...
    def setPassReplaceFreq(self, newPassReplaceFreq: int) -> None: ...
    def getMaxLoginAttempts(self) -> int: ...
    def setMaxLoginAttempts(self, newMaxLoginAttempts: int) -> None: ...
    def getLoginBlockPeriod(self) -> int: ...
    def setLoginBlockPeriod(self, newLoginBlockPeriod: int) -> None: ...
    def getNumPrevPassToKeep(self) -> int: ...
    def setNumPrevPassToKeep(self, newNumPrevPassToKeep: int) -> None: ...
    def getAllowDefaultPasswordRestrictions(self) -> bool: ...
    def getTwoFactorAuthenticationMode(self) -> KalturaTwoFactorAuthenticationMode: ...
    def getIsSelfServe(self) -> bool: ...
    def setIsSelfServe(self, newIsSelfServe: bool) -> None: ...
    def getAllowedDomains(self) -> str: ...
    def getExcludedAdminRoleName(self) -> str: ...
    def getEventPlatformAllowedTemplates(self) -> str: ...
    def setEventPlatformAllowedTemplates(self, newEventPlatformAllowedTemplates: str) -> None: ...
    def getVerticalClassificationId(self) -> int: ...
    def getRecycleBinRetentionPeriod(self) -> int: ...
    def getCustomAnalyticsDomain(self) -> str: ...
    def setCustomAnalyticsDomain(self, newCustomAnalyticsDomain: str) -> None: ...
    def getAllowedEmailDomainsForAdmins(self) -> str: ...
    def setAllowedEmailDomainsForAdmins(self, newAllowedEmailDomainsForAdmins: str) -> None: ...

class KalturaValue(KalturaObjectBase):
    description: str
    def __init__(self,
            description: str = NotImplemented): ...

    def getDescription(self) -> str: ...
    def setDescription(self, newDescription: str) -> None: ...

class KalturaBooleanValue(KalturaValue):
    value: bool
    def __init__(self,
            description: str = NotImplemented,
            value: bool = NotImplemented): ...

    def getValue(self) -> bool: ...
    def setValue(self, newValue: bool) -> None: ...

class KalturaBulkUploadPluginData(KalturaObjectBase):
    field: str
    value: str
    def __init__(self,
            field: str = NotImplemented,
            value: str = NotImplemented): ...

    def getField(self) -> str: ...
    def setField(self, newField: str) -> None: ...
    def getValue(self) -> str: ...
    def setValue(self, newValue: str) -> None: ...

class KalturaBulkUploadResult(KalturaObjectBase):
    id: int
    bulkUploadJobId: int
    lineIndex: int
    partnerId: int
    status: KalturaBulkUploadResultStatus
    action: KalturaBulkUploadAction
    objectId: str
    objectStatus: int
    bulkUploadResultObjectType: KalturaBulkUploadObjectType
    rowData: str
    partnerData: str
    objectErrorDescription: str
    pluginsData: List[KalturaBulkUploadPluginData]
    errorDescription: str
    errorCode: str
    errorType: int
    def __init__(self,
            id: int = NotImplemented,
            bulkUploadJobId: int = NotImplemented,
            lineIndex: int = NotImplemented,
            partnerId: int = NotImplemented,
            status: KalturaBulkUploadResultStatus = NotImplemented,
            action: KalturaBulkUploadAction = NotImplemented,
            objectId: str = NotImplemented,
            objectStatus: int = NotImplemented,
            bulkUploadResultObjectType: KalturaBulkUploadObjectType = NotImplemented,
            rowData: str = NotImplemented,
            partnerData: str = NotImplemented,
            objectErrorDescription: str = NotImplemented,
            pluginsData: List[KalturaBulkUploadPluginData] = NotImplemented,
            errorDescription: str = NotImplemented,
            errorCode: str = NotImplemented,
            errorType: int = NotImplemented): ...

    def getId(self) -> int: ...
    def getBulkUploadJobId(self) -> int: ...
    def setBulkUploadJobId(self, newBulkUploadJobId: int) -> None: ...
    def getLineIndex(self) -> int: ...
    def setLineIndex(self, newLineIndex: int) -> None: ...
    def getPartnerId(self) -> int: ...
    def setPartnerId(self, newPartnerId: int) -> None: ...
    def getStatus(self) -> KalturaBulkUploadResultStatus: ...
    def setStatus(self, newStatus: KalturaBulkUploadResultStatus) -> None: ...
    def getAction(self) -> KalturaBulkUploadAction: ...
    def setAction(self, newAction: KalturaBulkUploadAction) -> None: ...
    def getObjectId(self) -> str: ...
    def setObjectId(self, newObjectId: str) -> None: ...
    def getObjectStatus(self) -> int: ...
    def setObjectStatus(self, newObjectStatus: int) -> None: ...
    def getBulkUploadResultObjectType(self) -> KalturaBulkUploadObjectType: ...
    def setBulkUploadResultObjectType(self, newBulkUploadResultObjectType: KalturaBulkUploadObjectType) -> None: ...
    def getRowData(self) -> str: ...
    def setRowData(self, newRowData: str) -> None: ...
    def getPartnerData(self) -> str: ...
    def setPartnerData(self, newPartnerData: str) -> None: ...
    def getObjectErrorDescription(self) -> str: ...
    def setObjectErrorDescription(self, newObjectErrorDescription: str) -> None: ...
    def getPluginsData(self) -> List[KalturaBulkUploadPluginData]: ...
    def setPluginsData(self, newPluginsData: List[KalturaBulkUploadPluginData]) -> None: ...
    def getErrorDescription(self) -> str: ...
    def setErrorDescription(self, newErrorDescription: str) -> None: ...
    def getErrorCode(self) -> str: ...
    def setErrorCode(self, newErrorCode: str) -> None: ...
    def getErrorType(self) -> int: ...
    def setErrorType(self, newErrorType: int) -> None: ...

class KalturaBulkUpload(KalturaObjectBase):
    id: int
    uploadedBy: str
    uploadedByUserId: str
    uploadedOn: int
    numOfEntries: int
    status: KalturaBatchJobStatus
    logFileUrl: str
    csvFileUrl: str
    bulkFileUrl: str
    bulkUploadType: KalturaBulkUploadType
    results: List[KalturaBulkUploadResult]
    error: str
    errorType: KalturaBatchJobErrorTypes
    errorNumber: int
    fileName: str
    description: str
    numOfObjects: int
    bulkUploadObjectType: KalturaBulkUploadObjectType
    def __init__(self,
            id: int = NotImplemented,
            uploadedBy: str = NotImplemented,
            uploadedByUserId: str = NotImplemented,
            uploadedOn: int = NotImplemented,
            numOfEntries: int = NotImplemented,
            status: KalturaBatchJobStatus = NotImplemented,
            logFileUrl: str = NotImplemented,
            csvFileUrl: str = NotImplemented,
            bulkFileUrl: str = NotImplemented,
            bulkUploadType: KalturaBulkUploadType = NotImplemented,
            results: List[KalturaBulkUploadResult] = NotImplemented,
            error: str = NotImplemented,
            errorType: KalturaBatchJobErrorTypes = NotImplemented,
            errorNumber: int = NotImplemented,
            fileName: str = NotImplemented,
            description: str = NotImplemented,
            numOfObjects: int = NotImplemented,
            bulkUploadObjectType: KalturaBulkUploadObjectType = NotImplemented): ...

    def getId(self) -> int: ...
    def setId(self, newId: int) -> None: ...
    def getUploadedBy(self) -> str: ...
    def setUploadedBy(self, newUploadedBy: str) -> None: ...
    def getUploadedByUserId(self) -> str: ...
    def setUploadedByUserId(self, newUploadedByUserId: str) -> None: ...
    def getUploadedOn(self) -> int: ...
    def setUploadedOn(self, newUploadedOn: int) -> None: ...
    def getNumOfEntries(self) -> int: ...
    def setNumOfEntries(self, newNumOfEntries: int) -> None: ...
    def getStatus(self) -> KalturaBatchJobStatus: ...
    def setStatus(self, newStatus: KalturaBatchJobStatus) -> None: ...
    def getLogFileUrl(self) -> str: ...
    def setLogFileUrl(self, newLogFileUrl: str) -> None: ...
    def getCsvFileUrl(self) -> str: ...
    def setCsvFileUrl(self, newCsvFileUrl: str) -> None: ...
    def getBulkFileUrl(self) -> str: ...
    def setBulkFileUrl(self, newBulkFileUrl: str) -> None: ...
    def getBulkUploadType(self) -> KalturaBulkUploadType: ...
    def setBulkUploadType(self, newBulkUploadType: KalturaBulkUploadType) -> None: ...
    def getResults(self) -> List[KalturaBulkUploadResult]: ...
    def setResults(self, newResults: List[KalturaBulkUploadResult]) -> None: ...
    def getError(self) -> str: ...
    def setError(self, newError: str) -> None: ...
    def getErrorType(self) -> KalturaBatchJobErrorTypes: ...
    def setErrorType(self, newErrorType: KalturaBatchJobErrorTypes) -> None: ...
    def getErrorNumber(self) -> int: ...
    def setErrorNumber(self, newErrorNumber: int) -> None: ...
    def getFileName(self) -> str: ...
    def setFileName(self, newFileName: str) -> None: ...
    def getDescription(self) -> str: ...
    def setDescription(self, newDescription: str) -> None: ...
    def getNumOfObjects(self) -> int: ...
    def setNumOfObjects(self, newNumOfObjects: int) -> None: ...
    def getBulkUploadObjectType(self) -> KalturaBulkUploadObjectType: ...
    def setBulkUploadObjectType(self, newBulkUploadObjectType: KalturaBulkUploadObjectType) -> None: ...

class KalturaBulkUploadObjectData(KalturaObjectBase):
    def __init__(self): ...
        pass

class KalturaPluginData(KalturaObjectBase):
    def __init__(self): ...
        pass

class KalturaDrmPlaybackPluginData(KalturaPluginData):
    scheme: KalturaDrmSchemeName
    licenseURL: str
    def __init__(self,
            scheme: KalturaDrmSchemeName = NotImplemented,
            licenseURL: str = NotImplemented): ...

    def getScheme(self) -> KalturaDrmSchemeName: ...
    def setScheme(self, newScheme: KalturaDrmSchemeName) -> None: ...
    def getLicenseURL(self) -> str: ...
    def setLicenseURL(self, newLicenseURL: str) -> None: ...

class KalturaPlaybackSource(KalturaObjectBase):
    deliveryProfileId: str
    format: str
    protocols: str
    flavorIds: str
    url: str
    drm: List[KalturaDrmPlaybackPluginData]
    def __init__(self,
            deliveryProfileId: str = NotImplemented,
            format: str = NotImplemented,
            protocols: str = NotImplemented,
            flavorIds: str = NotImplemented,
            url: str = NotImplemented,
            drm: List[KalturaDrmPlaybackPluginData] = NotImplemented): ...

    def getDeliveryProfileId(self) -> str: ...
    def setDeliveryProfileId(self, newDeliveryProfileId: str) -> None: ...
    def getFormat(self) -> str: ...
    def setFormat(self, newFormat: str) -> None: ...
    def getProtocols(self) -> str: ...
    def setProtocols(self, newProtocols: str) -> None: ...
    def getFlavorIds(self) -> str: ...
    def setFlavorIds(self, newFlavorIds: str) -> None: ...
    def getUrl(self) -> str: ...
    def setUrl(self, newUrl: str) -> None: ...
    def getDrm(self) -> List[KalturaDrmPlaybackPluginData]: ...
    def setDrm(self, newDrm: List[KalturaDrmPlaybackPluginData]) -> None: ...

class KalturaCEError(KalturaObjectBase):
    id: str
    partnerId: int
    browser: str
    serverIp: str
    serverOs: str
    phpVersion: str
    ceAdminEmail: str
    type: str
    description: str
    data: str
    def __init__(self,
            id: str = NotImplemented,
            partnerId: int = NotImplemented,
            browser: str = NotImplemented,
            serverIp: str = NotImplemented,
            serverOs: str = NotImplemented,
            phpVersion: str = NotImplemented,
            ceAdminEmail: str = NotImplemented,
            type: str = NotImplemented,
            description: str = NotImplemented,
            data: str = NotImplemented): ...

    def getId(self) -> str: ...
    def getPartnerId(self) -> int: ...
    def setPartnerId(self, newPartnerId: int) -> None: ...
    def getBrowser(self) -> str: ...
    def setBrowser(self, newBrowser: str) -> None: ...
    def getServerIp(self) -> str: ...
    def setServerIp(self, newServerIp: str) -> None: ...
    def getServerOs(self) -> str: ...
    def setServerOs(self, newServerOs: str) -> None: ...
    def getPhpVersion(self) -> str: ...
    def setPhpVersion(self, newPhpVersion: str) -> None: ...
    def getCeAdminEmail(self) -> str: ...
    def setCeAdminEmail(self, newCeAdminEmail: str) -> None: ...
    def getType(self) -> str: ...
    def setType(self, newType: str) -> None: ...
    def getDescription(self) -> str: ...
    def setDescription(self, newDescription: str) -> None: ...
    def getData(self) -> str: ...
    def setData(self, newData: str) -> None: ...

class KalturaCaptionAttributes(KalturaObjectBase):
    def __init__(self): ...
        pass

class KalturaCategory(KalturaObjectBase):
    id: int
    parentId: int
    depth: int
    partnerId: int
    name: str
    fullName: str
    fullIds: str
    entriesCount: int
    createdAt: int
    updatedAt: int
    description: str
    tags: str
    appearInList: KalturaAppearInListType
    privacy: KalturaPrivacyType
    inheritanceType: KalturaInheritanceType
    userJoinPolicy: KalturaUserJoinPolicyType
    defaultPermissionLevel: KalturaCategoryUserPermissionLevel
    owner: str
    directEntriesCount: int
    referenceId: str
    contributionPolicy: KalturaContributionPolicyType
    membersCount: int
    pendingMembersCount: int
    privacyContext: str
    privacyContexts: str
    status: KalturaCategoryStatus
    inheritedParentId: int
    partnerSortValue: int
    partnerData: str
    defaultOrderBy: KalturaCategoryOrderBy
    directSubCategoriesCount: int
    moderation: KalturaNullableBoolean
    pendingEntriesCount: int
    isAggregationCategory: KalturaNullableBoolean
    aggregationCategories: str
    adminTags: str
    def __init__(self,
            id: int = NotImplemented,
            parentId: int = NotImplemented,
            depth: int = NotImplemented,
            partnerId: int = NotImplemented,
            name: str = NotImplemented,
            fullName: str = NotImplemented,
            fullIds: str = NotImplemented,
            entriesCount: int = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            description: str = NotImplemented,
            tags: str = NotImplemented,
            appearInList: KalturaAppearInListType = NotImplemented,
            privacy: KalturaPrivacyType = NotImplemented,
            inheritanceType: KalturaInheritanceType = NotImplemented,
            userJoinPolicy: KalturaUserJoinPolicyType = NotImplemented,
            defaultPermissionLevel: KalturaCategoryUserPermissionLevel = NotImplemented,
            owner: str = NotImplemented,
            directEntriesCount: int = NotImplemented,
            referenceId: str = NotImplemented,
            contributionPolicy: KalturaContributionPolicyType = NotImplemented,
            membersCount: int = NotImplemented,
            pendingMembersCount: int = NotImplemented,
            privacyContext: str = NotImplemented,
            privacyContexts: str = NotImplemented,
            status: KalturaCategoryStatus = NotImplemented,
            inheritedParentId: int = NotImplemented,
            partnerSortValue: int = NotImplemented,
            partnerData: str = NotImplemented,
            defaultOrderBy: KalturaCategoryOrderBy = NotImplemented,
            directSubCategoriesCount: int = NotImplemented,
            moderation: KalturaNullableBoolean = NotImplemented,
            pendingEntriesCount: int = NotImplemented,
            isAggregationCategory: KalturaNullableBoolean = NotImplemented,
            aggregationCategories: str = NotImplemented,
            adminTags: str = NotImplemented): ...

    def getId(self) -> int: ...
    def getParentId(self) -> int: ...
    def setParentId(self, newParentId: int) -> None: ...
    def getDepth(self) -> int: ...
    def getPartnerId(self) -> int: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getFullName(self) -> str: ...
    def getFullIds(self) -> str: ...
    def getEntriesCount(self) -> int: ...
    def getCreatedAt(self) -> int: ...
    def getUpdatedAt(self) -> int: ...
    def getDescription(self) -> str: ...
    def setDescription(self, newDescription: str) -> None: ...
    def getTags(self) -> str: ...
    def setTags(self, newTags: str) -> None: ...
    def getAppearInList(self) -> KalturaAppearInListType: ...
    def setAppearInList(self, newAppearInList: KalturaAppearInListType) -> None: ...
    def getPrivacy(self) -> KalturaPrivacyType: ...
    def setPrivacy(self, newPrivacy: KalturaPrivacyType) -> None: ...
    def getInheritanceType(self) -> KalturaInheritanceType: ...
    def setInheritanceType(self, newInheritanceType: KalturaInheritanceType) -> None: ...
    def getUserJoinPolicy(self) -> KalturaUserJoinPolicyType: ...
    def getDefaultPermissionLevel(self) -> KalturaCategoryUserPermissionLevel: ...
    def setDefaultPermissionLevel(self, newDefaultPermissionLevel: KalturaCategoryUserPermissionLevel) -> None: ...
    def getOwner(self) -> str: ...
    def setOwner(self, newOwner: str) -> None: ...
    def getDirectEntriesCount(self) -> int: ...
    def getReferenceId(self) -> str: ...
    def setReferenceId(self, newReferenceId: str) -> None: ...
    def getContributionPolicy(self) -> KalturaContributionPolicyType: ...
    def setContributionPolicy(self, newContributionPolicy: KalturaContributionPolicyType) -> None: ...
    def getMembersCount(self) -> int: ...
    def getPendingMembersCount(self) -> int: ...
    def getPrivacyContext(self) -> str: ...
    def setPrivacyContext(self, newPrivacyContext: str) -> None: ...
    def getPrivacyContexts(self) -> str: ...
    def getStatus(self) -> KalturaCategoryStatus: ...
    def getInheritedParentId(self) -> int: ...
    def getPartnerSortValue(self) -> int: ...
    def setPartnerSortValue(self, newPartnerSortValue: int) -> None: ...
    def getPartnerData(self) -> str: ...
    def setPartnerData(self, newPartnerData: str) -> None: ...
    def getDefaultOrderBy(self) -> KalturaCategoryOrderBy: ...
    def setDefaultOrderBy(self, newDefaultOrderBy: KalturaCategoryOrderBy) -> None: ...
    def getDirectSubCategoriesCount(self) -> int: ...
    def getModeration(self) -> KalturaNullableBoolean: ...
    def setModeration(self, newModeration: KalturaNullableBoolean) -> None: ...
    def getPendingEntriesCount(self) -> int: ...
    def getIsAggregationCategory(self) -> KalturaNullableBoolean: ...
    def setIsAggregationCategory(self, newIsAggregationCategory: KalturaNullableBoolean) -> None: ...
    def getAggregationCategories(self) -> str: ...
    def setAggregationCategories(self, newAggregationCategories: str) -> None: ...
    def getAdminTags(self) -> str: ...
    def setAdminTags(self, newAdminTags: str) -> None: ...

class KalturaCategoryEntry(KalturaObjectBase):
    categoryId: int
    entryId: str
    createdAt: int
    categoryFullIds: str
    status: KalturaCategoryEntryStatus
    creatorUserId: str
    def __init__(self,
            categoryId: int = NotImplemented,
            entryId: str = NotImplemented,
            createdAt: int = NotImplemented,
            categoryFullIds: str = NotImplemented,
            status: KalturaCategoryEntryStatus = NotImplemented,
            creatorUserId: str = NotImplemented): ...

    def getCategoryId(self) -> int: ...
    def setCategoryId(self, newCategoryId: int) -> None: ...
    def getEntryId(self) -> str: ...
    def setEntryId(self, newEntryId: str) -> None: ...
    def getCreatedAt(self) -> int: ...
    def getCategoryFullIds(self) -> str: ...
    def getStatus(self) -> KalturaCategoryEntryStatus: ...
    def getCreatorUserId(self) -> str: ...

class KalturaCategoryUser(KalturaObjectBase):
    categoryId: int
    userId: str
    partnerId: int
    permissionLevel: KalturaCategoryUserPermissionLevel
    status: KalturaCategoryUserStatus
    createdAt: int
    updatedAt: int
    updateMethod: KalturaUpdateMethodType
    categoryFullIds: str
    permissionNames: str
    def __init__(self,
            categoryId: int = NotImplemented,
            userId: str = NotImplemented,
            partnerId: int = NotImplemented,
            permissionLevel: KalturaCategoryUserPermissionLevel = NotImplemented,
            status: KalturaCategoryUserStatus = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            updateMethod: KalturaUpdateMethodType = NotImplemented,
            categoryFullIds: str = NotImplemented,
            permissionNames: str = NotImplemented): ...

    def getCategoryId(self) -> int: ...
    def setCategoryId(self, newCategoryId: int) -> None: ...
    def getUserId(self) -> str: ...
    def setUserId(self, newUserId: str) -> None: ...
    def getPartnerId(self) -> int: ...
    def getPermissionLevel(self) -> KalturaCategoryUserPermissionLevel: ...
    def setPermissionLevel(self, newPermissionLevel: KalturaCategoryUserPermissionLevel) -> None: ...
    def getStatus(self) -> KalturaCategoryUserStatus: ...
    def getCreatedAt(self) -> int: ...
    def getUpdatedAt(self) -> int: ...
    def getUpdateMethod(self) -> KalturaUpdateMethodType: ...
    def setUpdateMethod(self, newUpdateMethod: KalturaUpdateMethodType) -> None: ...
    def getCategoryFullIds(self) -> str: ...
    def getPermissionNames(self) -> str: ...
    def setPermissionNames(self, newPermissionNames: str) -> None: ...

class KalturaClientConfiguration(KalturaObjectBase):
    clientTag: str
    apiVersion: str
    def __init__(self,
            clientTag: str = NotImplemented,
            apiVersion: str = NotImplemented): ...

    def getClientTag(self) -> str: ...
    def setClientTag(self, newClientTag: str) -> None: ...
    def getApiVersion(self) -> str: ...
    def setApiVersion(self, newApiVersion: str) -> None: ...

class KalturaClientNotification(KalturaObjectBase):
    url: str
    data: str
    def __init__(self,
            url: str = NotImplemented,
            data: str = NotImplemented): ...

    def getUrl(self) -> str: ...
    def setUrl(self, newUrl: str) -> None: ...
    def getData(self) -> str: ...
    def setData(self, newData: str) -> None: ...

class KalturaClipDescription(KalturaObjectBase):
    sourceEntryId: str
    startTime: int
    duration: int
    offsetInDestination: int
    def __init__(self,
            sourceEntryId: str = NotImplemented,
            startTime: int = NotImplemented,
            duration: int = NotImplemented,
            offsetInDestination: int = NotImplemented): ...

    def getSourceEntryId(self) -> str: ...
    def setSourceEntryId(self, newSourceEntryId: str) -> None: ...
    def getStartTime(self) -> int: ...
    def setStartTime(self, newStartTime: int) -> None: ...
    def getDuration(self) -> int: ...
    def setDuration(self, newDuration: int) -> None: ...
    def getOffsetInDestination(self) -> int: ...
    def setOffsetInDestination(self, newOffsetInDestination: int) -> None: ...

class KalturaContext(KalturaObjectBase):
    def __init__(self): ...
        pass

class KalturaContextDataResult(KalturaObjectBase):
    messages: List[KalturaString]
    actions: List[KalturaRuleAction]
    def __init__(self,
            messages: List[KalturaString] = NotImplemented,
            actions: List[KalturaRuleAction] = NotImplemented): ...

    def getMessages(self) -> List[KalturaString]: ...
    def setMessages(self, newMessages: List[KalturaString]) -> None: ...
    def getActions(self) -> List[KalturaRuleAction]: ...
    def setActions(self, newActions: List[KalturaRuleAction]) -> None: ...

class KalturaControlPanelCommand(KalturaObjectBase):
    id: int
    createdAt: int
    createdBy: str
    updatedAt: int
    updatedBy: str
    createdById: int
    schedulerId: int
    workerId: int
    workerConfiguredId: int
    workerName: int
    batchIndex: int
    type: KalturaControlPanelCommandType
    targetType: KalturaControlPanelCommandTargetType
    status: KalturaControlPanelCommandStatus
    cause: str
    description: str
    errorDescription: str
    def __init__(self,
            id: int = NotImplemented,
            createdAt: int = NotImplemented,
            createdBy: str = NotImplemented,
            updatedAt: int = NotImplemented,
            updatedBy: str = NotImplemented,
            createdById: int = NotImplemented,
            schedulerId: int = NotImplemented,
            workerId: int = NotImplemented,
            workerConfiguredId: int = NotImplemented,
            workerName: int = NotImplemented,
            batchIndex: int = NotImplemented,
            type: KalturaControlPanelCommandType = NotImplemented,
            targetType: KalturaControlPanelCommandTargetType = NotImplemented,
            status: KalturaControlPanelCommandStatus = NotImplemented,
            cause: str = NotImplemented,
            description: str = NotImplemented,
            errorDescription: str = NotImplemented): ...

    def getId(self) -> int: ...
    def getCreatedAt(self) -> int: ...
    def getCreatedBy(self) -> str: ...
    def setCreatedBy(self, newCreatedBy: str) -> None: ...
    def getUpdatedAt(self) -> int: ...
    def getUpdatedBy(self) -> str: ...
    def setUpdatedBy(self, newUpdatedBy: str) -> None: ...
    def getCreatedById(self) -> int: ...
    def setCreatedById(self, newCreatedById: int) -> None: ...
    def getSchedulerId(self) -> int: ...
    def setSchedulerId(self, newSchedulerId: int) -> None: ...
    def getWorkerId(self) -> int: ...
    def setWorkerId(self, newWorkerId: int) -> None: ...
    def getWorkerConfiguredId(self) -> int: ...
    def setWorkerConfiguredId(self, newWorkerConfiguredId: int) -> None: ...
    def getWorkerName(self) -> int: ...
    def setWorkerName(self, newWorkerName: int) -> None: ...
    def getBatchIndex(self) -> int: ...
    def setBatchIndex(self, newBatchIndex: int) -> None: ...
    def getType(self) -> KalturaControlPanelCommandType: ...
    def setType(self, newType: KalturaControlPanelCommandType) -> None: ...
    def getTargetType(self) -> KalturaControlPanelCommandTargetType: ...
    def setTargetType(self, newTargetType: KalturaControlPanelCommandTargetType) -> None: ...
    def getStatus(self) -> KalturaControlPanelCommandStatus: ...
    def setStatus(self, newStatus: KalturaControlPanelCommandStatus) -> None: ...
    def getCause(self) -> str: ...
    def setCause(self, newCause: str) -> None: ...
    def getDescription(self) -> str: ...
    def setDescription(self, newDescription: str) -> None: ...
    def getErrorDescription(self) -> str: ...
    def setErrorDescription(self, newErrorDescription: str) -> None: ...

class KalturaConversionAttribute(KalturaObjectBase):
    flavorParamsId: int
    name: str
    value: str
    def __init__(self,
            flavorParamsId: int = NotImplemented,
            name: str = NotImplemented,
            value: str = NotImplemented): ...

    def getFlavorParamsId(self) -> int: ...
    def setFlavorParamsId(self, newFlavorParamsId: int) -> None: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getValue(self) -> str: ...
    def setValue(self, newValue: str) -> None: ...

class KalturaCropDimensions(KalturaObjectBase):
    left: int
    top: int
    width: int
    height: int
    def __init__(self,
            left: int = NotImplemented,
            top: int = NotImplemented,
            width: int = NotImplemented,
            height: int = NotImplemented): ...

    def getLeft(self) -> int: ...
    def setLeft(self, newLeft: int) -> None: ...
    def getTop(self) -> int: ...
    def setTop(self, newTop: int) -> None: ...
    def getWidth(self) -> int: ...
    def setWidth(self, newWidth: int) -> None: ...
    def getHeight(self) -> int: ...
    def setHeight(self, newHeight: int) -> None: ...

class KalturaPluginReplacementOptionsItem(KalturaObjectBase):
    def __init__(self): ...
        pass

class KalturaEntryReplacementOptions(KalturaObjectBase):
    keepManualThumbnails: int
    pluginOptionItems: List[KalturaPluginReplacementOptionsItem]
    def __init__(self,
            keepManualThumbnails: int = NotImplemented,
            pluginOptionItems: List[KalturaPluginReplacementOptionsItem] = NotImplemented): ...

    def getKeepManualThumbnails(self) -> int: ...
    def setKeepManualThumbnails(self, newKeepManualThumbnails: int) -> None: ...
    def getPluginOptionItems(self) -> List[KalturaPluginReplacementOptionsItem]: ...
    def setPluginOptionItems(self, newPluginOptionItems: List[KalturaPluginReplacementOptionsItem]) -> None: ...

class KalturaConversionProfile(KalturaObjectBase):
    id: int
    partnerId: int
    status: KalturaConversionProfileStatus
    type: KalturaConversionProfileType
    name: str
    systemName: str
    tags: str
    description: str
    defaultEntryId: str
    createdAt: int
    flavorParamsIds: str
    isDefault: KalturaNullableBoolean
    isPartnerDefault: bool
    cropDimensions: KalturaCropDimensions
    clipStart: int
    clipDuration: int
    xslTransformation: str
    storageProfileId: int
    mediaParserType: KalturaMediaParserType
    calculateComplexity: KalturaNullableBoolean
    collectionTags: str
    conditionalProfiles: str
    detectGOP: int
    mediaInfoXslTransformation: str
    defaultReplacementOptions: KalturaEntryReplacementOptions
    defaultAudioLang: KalturaLanguage
    deliveryTag: str
    def __init__(self,
            id: int = NotImplemented,
            partnerId: int = NotImplemented,
            status: KalturaConversionProfileStatus = NotImplemented,
            type: KalturaConversionProfileType = NotImplemented,
            name: str = NotImplemented,
            systemName: str = NotImplemented,
            tags: str = NotImplemented,
            description: str = NotImplemented,
            defaultEntryId: str = NotImplemented,
            createdAt: int = NotImplemented,
            flavorParamsIds: str = NotImplemented,
            isDefault: KalturaNullableBoolean = NotImplemented,
            isPartnerDefault: bool = NotImplemented,
            cropDimensions: KalturaCropDimensions = NotImplemented,
            clipStart: int = NotImplemented,
            clipDuration: int = NotImplemented,
            xslTransformation: str = NotImplemented,
            storageProfileId: int = NotImplemented,
            mediaParserType: KalturaMediaParserType = NotImplemented,
            calculateComplexity: KalturaNullableBoolean = NotImplemented,
            collectionTags: str = NotImplemented,
            conditionalProfiles: str = NotImplemented,
            detectGOP: int = NotImplemented,
            mediaInfoXslTransformation: str = NotImplemented,
            defaultReplacementOptions: KalturaEntryReplacementOptions = NotImplemented,
            defaultAudioLang: KalturaLanguage = NotImplemented,
            deliveryTag: str = NotImplemented): ...

    def getId(self) -> int: ...
    def getPartnerId(self) -> int: ...
    def getStatus(self) -> KalturaConversionProfileStatus: ...
    def setStatus(self, newStatus: KalturaConversionProfileStatus) -> None: ...
    def getType(self) -> KalturaConversionProfileType: ...
    def setType(self, newType: KalturaConversionProfileType) -> None: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getSystemName(self) -> str: ...
    def setSystemName(self, newSystemName: str) -> None: ...
    def getTags(self) -> str: ...
    def setTags(self, newTags: str) -> None: ...
    def getDescription(self) -> str: ...
    def setDescription(self, newDescription: str) -> None: ...
    def getDefaultEntryId(self) -> str: ...
    def setDefaultEntryId(self, newDefaultEntryId: str) -> None: ...
    def getCreatedAt(self) -> int: ...
    def getFlavorParamsIds(self) -> str: ...
    def setFlavorParamsIds(self, newFlavorParamsIds: str) -> None: ...
    def getIsDefault(self) -> KalturaNullableBoolean: ...
    def setIsDefault(self, newIsDefault: KalturaNullableBoolean) -> None: ...
    def getIsPartnerDefault(self) -> bool: ...
    def getCropDimensions(self) -> KalturaCropDimensions: ...
    def setCropDimensions(self, newCropDimensions: KalturaCropDimensions) -> None: ...
    def getClipStart(self) -> int: ...
    def setClipStart(self, newClipStart: int) -> None: ...
    def getClipDuration(self) -> int: ...
    def setClipDuration(self, newClipDuration: int) -> None: ...
    def getXslTransformation(self) -> str: ...
    def setXslTransformation(self, newXslTransformation: str) -> None: ...
    def getStorageProfileId(self) -> int: ...
    def setStorageProfileId(self, newStorageProfileId: int) -> None: ...
    def getMediaParserType(self) -> KalturaMediaParserType: ...
    def setMediaParserType(self, newMediaParserType: KalturaMediaParserType) -> None: ...
    def getCalculateComplexity(self) -> KalturaNullableBoolean: ...
    def setCalculateComplexity(self, newCalculateComplexity: KalturaNullableBoolean) -> None: ...
    def getCollectionTags(self) -> str: ...
    def setCollectionTags(self, newCollectionTags: str) -> None: ...
    def getConditionalProfiles(self) -> str: ...
    def setConditionalProfiles(self, newConditionalProfiles: str) -> None: ...
    def getDetectGOP(self) -> int: ...
    def setDetectGOP(self, newDetectGOP: int) -> None: ...
    def getMediaInfoXslTransformation(self) -> str: ...
    def setMediaInfoXslTransformation(self, newMediaInfoXslTransformation: str) -> None: ...
    def getDefaultReplacementOptions(self) -> KalturaEntryReplacementOptions: ...
    def setDefaultReplacementOptions(self, newDefaultReplacementOptions: KalturaEntryReplacementOptions) -> None: ...
    def getDefaultAudioLang(self) -> KalturaLanguage: ...
    def setDefaultAudioLang(self, newDefaultAudioLang: KalturaLanguage) -> None: ...
    def getDeliveryTag(self) -> str: ...
    def setDeliveryTag(self, newDeliveryTag: str) -> None: ...

class KalturaConversionProfileAssetParams(KalturaObjectBase):
    conversionProfileId: int
    assetParamsId: int
    readyBehavior: KalturaFlavorReadyBehaviorType
    origin: KalturaAssetParamsOrigin
    systemName: str
    forceNoneComplied: KalturaNullableBoolean
    deletePolicy: KalturaAssetParamsDeletePolicy
    isEncrypted: KalturaNullableBoolean
    contentAwareness: float
    chunkedEncodeMode: int
    twoPass: KalturaNullableBoolean
    tags: str
    overloadParams: str
    def __init__(self,
            conversionProfileId: int = NotImplemented,
            assetParamsId: int = NotImplemented,
            readyBehavior: KalturaFlavorReadyBehaviorType = NotImplemented,
            origin: KalturaAssetParamsOrigin = NotImplemented,
            systemName: str = NotImplemented,
            forceNoneComplied: KalturaNullableBoolean = NotImplemented,
            deletePolicy: KalturaAssetParamsDeletePolicy = NotImplemented,
            isEncrypted: KalturaNullableBoolean = NotImplemented,
            contentAwareness: float = NotImplemented,
            chunkedEncodeMode: int = NotImplemented,
            twoPass: KalturaNullableBoolean = NotImplemented,
            tags: str = NotImplemented,
            overloadParams: str = NotImplemented): ...

    def getConversionProfileId(self) -> int: ...
    def getAssetParamsId(self) -> int: ...
    def getReadyBehavior(self) -> KalturaFlavorReadyBehaviorType: ...
    def setReadyBehavior(self, newReadyBehavior: KalturaFlavorReadyBehaviorType) -> None: ...
    def getOrigin(self) -> KalturaAssetParamsOrigin: ...
    def setOrigin(self, newOrigin: KalturaAssetParamsOrigin) -> None: ...
    def getSystemName(self) -> str: ...
    def setSystemName(self, newSystemName: str) -> None: ...
    def getForceNoneComplied(self) -> KalturaNullableBoolean: ...
    def setForceNoneComplied(self, newForceNoneComplied: KalturaNullableBoolean) -> None: ...
    def getDeletePolicy(self) -> KalturaAssetParamsDeletePolicy: ...
    def setDeletePolicy(self, newDeletePolicy: KalturaAssetParamsDeletePolicy) -> None: ...
    def getIsEncrypted(self) -> KalturaNullableBoolean: ...
    def setIsEncrypted(self, newIsEncrypted: KalturaNullableBoolean) -> None: ...
    def getContentAwareness(self) -> float: ...
    def setContentAwareness(self, newContentAwareness: float) -> None: ...
    def getChunkedEncodeMode(self) -> int: ...
    def setChunkedEncodeMode(self, newChunkedEncodeMode: int) -> None: ...
    def getTwoPass(self) -> KalturaNullableBoolean: ...
    def setTwoPass(self, newTwoPass: KalturaNullableBoolean) -> None: ...
    def getTags(self) -> str: ...
    def setTags(self, newTags: str) -> None: ...
    def getOverloadParams(self) -> str: ...
    def setOverloadParams(self, newOverloadParams: str) -> None: ...

class KalturaConvertCollectionFlavorData(KalturaObjectBase):
    flavorAssetId: str
    flavorParamsOutputId: int
    readyBehavior: int
    videoBitrate: int
    audioBitrate: int
    destFileSyncLocalPath: str
    destFileSyncRemoteUrl: str
    def __init__(self,
            flavorAssetId: str = NotImplemented,
            flavorParamsOutputId: int = NotImplemented,
            readyBehavior: int = NotImplemented,
            videoBitrate: int = NotImplemented,
            audioBitrate: int = NotImplemented,
            destFileSyncLocalPath: str = NotImplemented,
            destFileSyncRemoteUrl: str = NotImplemented): ...

    def getFlavorAssetId(self) -> str: ...
    def setFlavorAssetId(self, newFlavorAssetId: str) -> None: ...
    def getFlavorParamsOutputId(self) -> int: ...
    def setFlavorParamsOutputId(self, newFlavorParamsOutputId: int) -> None: ...
    def getReadyBehavior(self) -> int: ...
    def setReadyBehavior(self, newReadyBehavior: int) -> None: ...
    def getVideoBitrate(self) -> int: ...
    def setVideoBitrate(self, newVideoBitrate: int) -> None: ...
    def getAudioBitrate(self) -> int: ...
    def setAudioBitrate(self, newAudioBitrate: int) -> None: ...
    def getDestFileSyncLocalPath(self) -> str: ...
    def setDestFileSyncLocalPath(self, newDestFileSyncLocalPath: str) -> None: ...
    def getDestFileSyncRemoteUrl(self) -> str: ...
    def setDestFileSyncRemoteUrl(self, newDestFileSyncRemoteUrl: str) -> None: ...

class KalturaCoordinate(KalturaObjectBase):
    latitude: float
    longitude: float
    name: str
    def __init__(self,
            latitude: float = NotImplemented,
            longitude: float = NotImplemented,
            name: str = NotImplemented): ...

    def getLatitude(self) -> float: ...
    def setLatitude(self, newLatitude: float) -> None: ...
    def getLongitude(self) -> float: ...
    def setLongitude(self, newLongitude: float) -> None: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...

class KalturaCropAspectRatio(KalturaObjectBase):
    crop: bool
    aspectRatio: float
    def __init__(self,
            crop: bool = NotImplemented,
            aspectRatio: float = NotImplemented): ...

    def getCrop(self) -> bool: ...
    def setCrop(self, newCrop: bool) -> None: ...
    def getAspectRatio(self) -> float: ...
    def setAspectRatio(self, newAspectRatio: float) -> None: ...

class KalturaCsvAdditionalFieldInfo(KalturaObjectBase):
    fieldName: str
    xpath: str
    def __init__(self,
            fieldName: str = NotImplemented,
            xpath: str = NotImplemented): ...

    def getFieldName(self) -> str: ...
    def setFieldName(self, newFieldName: str) -> None: ...
    def getXpath(self) -> str: ...
    def setXpath(self, newXpath: str) -> None: ...

class KalturaDataEntry(KalturaBaseEntry):
    dataContent: str
    retrieveDataContentByGet: bool
    def __init__(self,
            id: str = NotImplemented,
            name: str = NotImplemented,
            multiLingual_name: List[KalturaMultiLingualString] = NotImplemented,
            description: str = NotImplemented,
            multiLingual_description: List[KalturaMultiLingualString] = NotImplemented,
            partnerId: int = NotImplemented,
            userId: str = NotImplemented,
            creatorId: str = NotImplemented,
            tags: str = NotImplemented,
            multiLingual_tags: List[KalturaMultiLingualString] = NotImplemented,
            adminTags: str = NotImplemented,
            categories: str = NotImplemented,
            categoriesIds: str = NotImplemented,
            status: KalturaEntryStatus = NotImplemented,
            moderationStatus: KalturaEntryModerationStatus = NotImplemented,
            moderationCount: int = NotImplemented,
            type: KalturaEntryType = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            rank: float = NotImplemented,
            totalRank: int = NotImplemented,
            votes: int = NotImplemented,
            groupId: int = NotImplemented,
            partnerData: str = NotImplemented,
            downloadUrl: str = NotImplemented,
            searchText: str = NotImplemented,
            licenseType: KalturaLicenseType = NotImplemented,
            version: int = NotImplemented,
            thumbnailUrl: str = NotImplemented,
            accessControlId: int = NotImplemented,
            startDate: int = NotImplemented,
            endDate: int = NotImplemented,
            referenceId: str = NotImplemented,
            replacingEntryId: str = NotImplemented,
            replacedEntryId: str = NotImplemented,
            replacementStatus: KalturaEntryReplacementStatus = NotImplemented,
            partnerSortValue: int = NotImplemented,
            conversionProfileId: int = NotImplemented,
            redirectEntryId: str = NotImplemented,
            rootEntryId: str = NotImplemented,
            parentEntryId: str = NotImplemented,
            operationAttributes: List[KalturaOperationAttributes] = NotImplemented,
            entitledUsersEdit: str = NotImplemented,
            entitledUsersPublish: str = NotImplemented,
            entitledUsersView: str = NotImplemented,
            capabilities: str = NotImplemented,
            templateEntryId: str = NotImplemented,
            displayInSearch: KalturaEntryDisplayInSearchType = NotImplemented,
            application: KalturaEntryApplication = NotImplemented,
            applicationVersion: str = NotImplemented,
            blockAutoTranscript: bool = NotImplemented,
            defaultLanguage: str = NotImplemented,
            responseLanguage: str = NotImplemented,
            dataContent: str = NotImplemented,
            retrieveDataContentByGet: bool = NotImplemented): ...

    def getDataContent(self) -> str: ...
    def setDataContent(self, newDataContent: str) -> None: ...
    def getRetrieveDataContentByGet(self) -> bool: ...
    def setRetrieveDataContentByGet(self, newRetrieveDataContentByGet: bool) -> None: ...

class KalturaUrlRecognizer(KalturaObjectBase):
    hosts: str
    uriPrefix: str
    def __init__(self,
            hosts: str = NotImplemented,
            uriPrefix: str = NotImplemented): ...

    def getHosts(self) -> str: ...
    def setHosts(self, newHosts: str) -> None: ...
    def getUriPrefix(self) -> str: ...
    def setUriPrefix(self, newUriPrefix: str) -> None: ...

class KalturaUrlTokenizer(KalturaObjectBase):
    window: int
    key: str
    limitIpAddress: bool
    def __init__(self,
            window: int = NotImplemented,
            key: str = NotImplemented,
            limitIpAddress: bool = NotImplemented): ...

    def getWindow(self) -> int: ...
    def setWindow(self, newWindow: int) -> None: ...
    def getKey(self) -> str: ...
    def setKey(self, newKey: str) -> None: ...
    def getLimitIpAddress(self) -> bool: ...
    def setLimitIpAddress(self, newLimitIpAddress: bool) -> None: ...

class KalturaRelatedFilter(KalturaFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented): ...
        pass

class KalturaAssetBaseFilter(KalturaRelatedFilter):
    idEqual: str
    idIn: str
    entryIdEqual: str
    entryIdIn: str
    partnerIdEqual: int
    partnerIdIn: str
    sizeGreaterThanOrEqual: int
    sizeLessThanOrEqual: int
    tagsLike: str
    tagsMultiLikeOr: str
    tagsMultiLikeAnd: str
    createdAtGreaterThanOrEqual: int
    createdAtLessThanOrEqual: int
    updatedAtGreaterThanOrEqual: int
    updatedAtLessThanOrEqual: int
    deletedAtGreaterThanOrEqual: int
    deletedAtLessThanOrEqual: int
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: str = NotImplemented,
            idIn: str = NotImplemented,
            entryIdEqual: str = NotImplemented,
            entryIdIn: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            sizeGreaterThanOrEqual: int = NotImplemented,
            sizeLessThanOrEqual: int = NotImplemented,
            tagsLike: str = NotImplemented,
            tagsMultiLikeOr: str = NotImplemented,
            tagsMultiLikeAnd: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            deletedAtGreaterThanOrEqual: int = NotImplemented,
            deletedAtLessThanOrEqual: int = NotImplemented): ...

    def getIdEqual(self) -> str: ...
    def setIdEqual(self, newIdEqual: str) -> None: ...
    def getIdIn(self) -> str: ...
    def setIdIn(self, newIdIn: str) -> None: ...
    def getEntryIdEqual(self) -> str: ...
    def setEntryIdEqual(self, newEntryIdEqual: str) -> None: ...
    def getEntryIdIn(self) -> str: ...
    def setEntryIdIn(self, newEntryIdIn: str) -> None: ...
    def getPartnerIdEqual(self) -> int: ...
    def setPartnerIdEqual(self, newPartnerIdEqual: int) -> None: ...
    def getPartnerIdIn(self) -> str: ...
    def setPartnerIdIn(self, newPartnerIdIn: str) -> None: ...
    def getSizeGreaterThanOrEqual(self) -> int: ...
    def setSizeGreaterThanOrEqual(self, newSizeGreaterThanOrEqual: int) -> None: ...
    def getSizeLessThanOrEqual(self) -> int: ...
    def setSizeLessThanOrEqual(self, newSizeLessThanOrEqual: int) -> None: ...
    def getTagsLike(self) -> str: ...
    def setTagsLike(self, newTagsLike: str) -> None: ...
    def getTagsMultiLikeOr(self) -> str: ...
    def setTagsMultiLikeOr(self, newTagsMultiLikeOr: str) -> None: ...
    def getTagsMultiLikeAnd(self) -> str: ...
    def setTagsMultiLikeAnd(self, newTagsMultiLikeAnd: str) -> None: ...
    def getCreatedAtGreaterThanOrEqual(self) -> int: ...
    def setCreatedAtGreaterThanOrEqual(self, newCreatedAtGreaterThanOrEqual: int) -> None: ...
    def getCreatedAtLessThanOrEqual(self) -> int: ...
    def setCreatedAtLessThanOrEqual(self, newCreatedAtLessThanOrEqual: int) -> None: ...
    def getUpdatedAtGreaterThanOrEqual(self) -> int: ...
    def setUpdatedAtGreaterThanOrEqual(self, newUpdatedAtGreaterThanOrEqual: int) -> None: ...
    def getUpdatedAtLessThanOrEqual(self) -> int: ...
    def setUpdatedAtLessThanOrEqual(self, newUpdatedAtLessThanOrEqual: int) -> None: ...
    def getDeletedAtGreaterThanOrEqual(self) -> int: ...
    def setDeletedAtGreaterThanOrEqual(self, newDeletedAtGreaterThanOrEqual: int) -> None: ...
    def getDeletedAtLessThanOrEqual(self) -> int: ...
    def setDeletedAtLessThanOrEqual(self, newDeletedAtLessThanOrEqual: int) -> None: ...

class KalturaAssetFilter(KalturaAssetBaseFilter):
    typeIn: str
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: str = NotImplemented,
            idIn: str = NotImplemented,
            entryIdEqual: str = NotImplemented,
            entryIdIn: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            sizeGreaterThanOrEqual: int = NotImplemented,
            sizeLessThanOrEqual: int = NotImplemented,
            tagsLike: str = NotImplemented,
            tagsMultiLikeOr: str = NotImplemented,
            tagsMultiLikeAnd: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            deletedAtGreaterThanOrEqual: int = NotImplemented,
            deletedAtLessThanOrEqual: int = NotImplemented,
            typeIn: str = NotImplemented): ...

    def getTypeIn(self) -> str: ...
    def setTypeIn(self, newTypeIn: str) -> None: ...

class KalturaDeliveryProfile(KalturaObjectBase):
    id: int
    partnerId: int
    name: str
    type: KalturaDeliveryProfileType
    systemName: str
    description: str
    createdAt: int
    updatedAt: int
    streamerType: KalturaPlaybackProtocol
    url: str
    hostName: str
    status: KalturaDeliveryStatus
    recognizer: KalturaUrlRecognizer
    tokenizer: KalturaUrlTokenizer
    isDefault: KalturaNullableBoolean
    parentId: int
    mediaProtocols: str
    priority: int
    extraParams: str
    supplementaryAssetsFilter: KalturaAssetFilter
    enforceDeliveriesSupport: str
    def __init__(self,
            id: int = NotImplemented,
            partnerId: int = NotImplemented,
            name: str = NotImplemented,
            type: KalturaDeliveryProfileType = NotImplemented,
            systemName: str = NotImplemented,
            description: str = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            streamerType: KalturaPlaybackProtocol = NotImplemented,
            url: str = NotImplemented,
            hostName: str = NotImplemented,
            status: KalturaDeliveryStatus = NotImplemented,
            recognizer: KalturaUrlRecognizer = NotImplemented,
            tokenizer: KalturaUrlTokenizer = NotImplemented,
            isDefault: KalturaNullableBoolean = NotImplemented,
            parentId: int = NotImplemented,
            mediaProtocols: str = NotImplemented,
            priority: int = NotImplemented,
            extraParams: str = NotImplemented,
            supplementaryAssetsFilter: KalturaAssetFilter = NotImplemented,
            enforceDeliveriesSupport: str = NotImplemented): ...

    def getId(self) -> int: ...
    def getPartnerId(self) -> int: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getType(self) -> KalturaDeliveryProfileType: ...
    def setType(self, newType: KalturaDeliveryProfileType) -> None: ...
    def getSystemName(self) -> str: ...
    def setSystemName(self, newSystemName: str) -> None: ...
    def getDescription(self) -> str: ...
    def setDescription(self, newDescription: str) -> None: ...
    def getCreatedAt(self) -> int: ...
    def getUpdatedAt(self) -> int: ...
    def getStreamerType(self) -> KalturaPlaybackProtocol: ...
    def setStreamerType(self, newStreamerType: KalturaPlaybackProtocol) -> None: ...
    def getUrl(self) -> str: ...
    def setUrl(self, newUrl: str) -> None: ...
    def getHostName(self) -> str: ...
    def getStatus(self) -> KalturaDeliveryStatus: ...
    def setStatus(self, newStatus: KalturaDeliveryStatus) -> None: ...
    def getRecognizer(self) -> KalturaUrlRecognizer: ...
    def setRecognizer(self, newRecognizer: KalturaUrlRecognizer) -> None: ...
    def getTokenizer(self) -> KalturaUrlTokenizer: ...
    def setTokenizer(self, newTokenizer: KalturaUrlTokenizer) -> None: ...
    def getIsDefault(self) -> KalturaNullableBoolean: ...
    def getParentId(self) -> int: ...
    def getMediaProtocols(self) -> str: ...
    def setMediaProtocols(self, newMediaProtocols: str) -> None: ...
    def getPriority(self) -> int: ...
    def setPriority(self, newPriority: int) -> None: ...
    def getExtraParams(self) -> str: ...
    def setExtraParams(self, newExtraParams: str) -> None: ...
    def getSupplementaryAssetsFilter(self) -> KalturaAssetFilter: ...
    def setSupplementaryAssetsFilter(self, newSupplementaryAssetsFilter: KalturaAssetFilter) -> None: ...
    def getEnforceDeliveriesSupport(self) -> str: ...
    def setEnforceDeliveriesSupport(self, newEnforceDeliveriesSupport: str) -> None: ...

class KalturaFileSyncDescriptor(KalturaObjectBase):
    fileSyncLocalPath: str
    fileEncryptionKey: str
    fileSyncRemoteUrl: str
    fileSyncObjectSubType: int
    def __init__(self,
            fileSyncLocalPath: str = NotImplemented,
            fileEncryptionKey: str = NotImplemented,
            fileSyncRemoteUrl: str = NotImplemented,
            fileSyncObjectSubType: int = NotImplemented): ...

    def getFileSyncLocalPath(self) -> str: ...
    def setFileSyncLocalPath(self, newFileSyncLocalPath: str) -> None: ...
    def getFileEncryptionKey(self) -> str: ...
    def setFileEncryptionKey(self, newFileEncryptionKey: str) -> None: ...
    def getFileSyncRemoteUrl(self) -> str: ...
    def setFileSyncRemoteUrl(self, newFileSyncRemoteUrl: str) -> None: ...
    def getFileSyncObjectSubType(self) -> int: ...
    def setFileSyncObjectSubType(self, newFileSyncObjectSubType: int) -> None: ...

class KalturaDestFileSyncDescriptor(KalturaFileSyncDescriptor):
    def __init__(self,
            fileSyncLocalPath: str = NotImplemented,
            fileEncryptionKey: str = NotImplemented,
            fileSyncRemoteUrl: str = NotImplemented,
            fileSyncObjectSubType: int = NotImplemented): ...
        pass

class KalturaPager(KalturaObjectBase):
    pageSize: int
    pageIndex: int
    def __init__(self,
            pageSize: int = NotImplemented,
            pageIndex: int = NotImplemented): ...

    def getPageSize(self) -> int: ...
    def setPageSize(self, newPageSize: int) -> None: ...
    def getPageIndex(self) -> int: ...
    def setPageIndex(self, newPageIndex: int) -> None: ...

class KalturaFilterPager(KalturaPager):
    def __init__(self,
            pageSize: int = NotImplemented,
            pageIndex: int = NotImplemented): ...
        pass

class KalturaResponseProfileMapping(KalturaObjectBase):
    parentProperty: str
    filterProperty: str
    allowNull: bool
    def __init__(self,
            parentProperty: str = NotImplemented,
            filterProperty: str = NotImplemented,
            allowNull: bool = NotImplemented): ...

    def getParentProperty(self) -> str: ...
    def setParentProperty(self, newParentProperty: str) -> None: ...
    def getFilterProperty(self) -> str: ...
    def setFilterProperty(self, newFilterProperty: str) -> None: ...
    def getAllowNull(self) -> bool: ...
    def setAllowNull(self, newAllowNull: bool) -> None: ...

class KalturaDetachedResponseProfile(KalturaBaseResponseProfile):
    name: str
    type: KalturaResponseProfileType
    fields: str
    filter: KalturaRelatedFilter
    pager: KalturaFilterPager
    relatedProfiles: List[KalturaDetachedResponseProfile]
    mappings: List[KalturaResponseProfileMapping]
    def __init__(self,
            name: str = NotImplemented,
            type: KalturaResponseProfileType = NotImplemented,
            fields: str = NotImplemented,
            filter: KalturaRelatedFilter = NotImplemented,
            pager: KalturaFilterPager = NotImplemented,
            relatedProfiles: List[KalturaDetachedResponseProfile] = NotImplemented,
            mappings: List[KalturaResponseProfileMapping] = NotImplemented): ...

    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getType(self) -> KalturaResponseProfileType: ...
    def setType(self, newType: KalturaResponseProfileType) -> None: ...
    def getFields(self) -> str: ...
    def setFields(self, newFields: str) -> None: ...
    def getFilter(self) -> KalturaRelatedFilter: ...
    def setFilter(self, newFilter: KalturaRelatedFilter) -> None: ...
    def getPager(self) -> KalturaFilterPager: ...
    def setPager(self, newPager: KalturaFilterPager) -> None: ...
    def getRelatedProfiles(self) -> List[KalturaDetachedResponseProfile]: ...
    def setRelatedProfiles(self, newRelatedProfiles: List[KalturaDetachedResponseProfile]) -> None: ...
    def getMappings(self) -> List[KalturaResponseProfileMapping]: ...
    def setMappings(self, newMappings: List[KalturaResponseProfileMapping]) -> None: ...

class KalturaDimensionsAttributes(KalturaObjectBase):
    def __init__(self): ...
        pass

class KalturaDynamicEmailContents(KalturaObjectBase):
    emailSubject: str
    emailBody: str
    def __init__(self,
            emailSubject: str = NotImplemented,
            emailBody: str = NotImplemented): ...

    def getEmailSubject(self) -> str: ...
    def setEmailSubject(self, newEmailSubject: str) -> None: ...
    def getEmailBody(self) -> str: ...
    def setEmailBody(self, newEmailBody: str) -> None: ...

class KalturaUser(KalturaBaseUser):
    type: KalturaUserType
    dateOfBirth: int
    gender: KalturaGender
    isAdmin: bool
    isGuest: bool
    roleIds: str
    roleNames: str
    isAccountOwner: bool
    password: str
    firstName: str
    lastName: str
    loginEnabled: bool
    registrationInfo: str
    attendanceInfo: str
    title: str
    company: str
    ksPrivileges: str
    encryptedSeed: str
    isSsoExcluded: bool
    externalId: str
    def __init__(self,
            id: str = NotImplemented,
            partnerId: int = NotImplemented,
            screenName: str = NotImplemented,
            fullName: str = NotImplemented,
            email: str = NotImplemented,
            country: str = NotImplemented,
            state: str = NotImplemented,
            city: str = NotImplemented,
            zip: str = NotImplemented,
            thumbnailUrl: str = NotImplemented,
            description: str = NotImplemented,
            tags: str = NotImplemented,
            adminTags: str = NotImplemented,
            status: KalturaUserStatus = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            partnerData: str = NotImplemented,
            indexedPartnerDataInt: int = NotImplemented,
            indexedPartnerDataString: str = NotImplemented,
            storageSize: int = NotImplemented,
            language: KalturaLanguageCode = NotImplemented,
            lastLoginTime: int = NotImplemented,
            statusUpdatedAt: int = NotImplemented,
            deletedAt: int = NotImplemented,
            allowedPartnerIds: str = NotImplemented,
            allowedPartnerPackages: str = NotImplemented,
            userMode: KalturaUserMode = NotImplemented,
            capabilities: List[KalturaUserCapability] = NotImplemented,
            type: KalturaUserType = NotImplemented,
            dateOfBirth: int = NotImplemented,
            gender: KalturaGender = NotImplemented,
            isAdmin: bool = NotImplemented,
            isGuest: bool = NotImplemented,
            roleIds: str = NotImplemented,
            roleNames: str = NotImplemented,
            isAccountOwner: bool = NotImplemented,
            password: str = NotImplemented,
            firstName: str = NotImplemented,
            lastName: str = NotImplemented,
            loginEnabled: bool = NotImplemented,
            registrationInfo: str = NotImplemented,
            attendanceInfo: str = NotImplemented,
            title: str = NotImplemented,
            company: str = NotImplemented,
            ksPrivileges: str = NotImplemented,
            encryptedSeed: str = NotImplemented,
            isSsoExcluded: bool = NotImplemented,
            externalId: str = NotImplemented): ...

    def getType(self) -> KalturaUserType: ...
    def setType(self, newType: KalturaUserType) -> None: ...
    def getDateOfBirth(self) -> int: ...
    def setDateOfBirth(self, newDateOfBirth: int) -> None: ...
    def getGender(self) -> KalturaGender: ...
    def setGender(self, newGender: KalturaGender) -> None: ...
    def getIsAdmin(self) -> bool: ...
    def setIsAdmin(self, newIsAdmin: bool) -> None: ...
    def getIsGuest(self) -> bool: ...
    def setIsGuest(self, newIsGuest: bool) -> None: ...
    def getRoleIds(self) -> str: ...
    def setRoleIds(self, newRoleIds: str) -> None: ...
    def getRoleNames(self) -> str: ...
    def getIsAccountOwner(self) -> bool: ...
    def setIsAccountOwner(self, newIsAccountOwner: bool) -> None: ...
    def getPassword(self) -> str: ...
    def setPassword(self, newPassword: str) -> None: ...
    def getFirstName(self) -> str: ...
    def setFirstName(self, newFirstName: str) -> None: ...
    def getLastName(self) -> str: ...
    def setLastName(self, newLastName: str) -> None: ...
    def getLoginEnabled(self) -> bool: ...
    def setLoginEnabled(self, newLoginEnabled: bool) -> None: ...
    def getRegistrationInfo(self) -> str: ...
    def setRegistrationInfo(self, newRegistrationInfo: str) -> None: ...
    def getAttendanceInfo(self) -> str: ...
    def setAttendanceInfo(self, newAttendanceInfo: str) -> None: ...
    def getTitle(self) -> str: ...
    def setTitle(self, newTitle: str) -> None: ...
    def getCompany(self) -> str: ...
    def setCompany(self, newCompany: str) -> None: ...
    def getKsPrivileges(self) -> str: ...
    def setKsPrivileges(self, newKsPrivileges: str) -> None: ...
    def getEncryptedSeed(self) -> str: ...
    def getIsSsoExcluded(self) -> bool: ...
    def setIsSsoExcluded(self, newIsSsoExcluded: bool) -> None: ...
    def getExternalId(self) -> str: ...
    def setExternalId(self, newExternalId: str) -> None: ...

class KalturaEffect(KalturaObjectBase):
    effectType: KalturaEffectType
    value: str
    def __init__(self,
            effectType: KalturaEffectType = NotImplemented,
            value: str = NotImplemented): ...

    def getEffectType(self) -> KalturaEffectType: ...
    def setEffectType(self, newEffectType: KalturaEffectType) -> None: ...
    def getValue(self) -> str: ...
    def setValue(self, newValue: str) -> None: ...

class KalturaEmailIngestionProfile(KalturaObjectBase):
    id: int
    name: str
    description: str
    emailAddress: str
    mailboxId: str
    partnerId: int
    conversionProfile2Id: int
    moderationStatus: KalturaEntryModerationStatus
    status: KalturaEmailIngestionProfileStatus
    createdAt: str
    defaultCategory: str
    defaultUserId: str
    defaultTags: str
    defaultAdminTags: str
    maxAttachmentSizeKbytes: int
    maxAttachmentsPerMail: int
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            description: str = NotImplemented,
            emailAddress: str = NotImplemented,
            mailboxId: str = NotImplemented,
            partnerId: int = NotImplemented,
            conversionProfile2Id: int = NotImplemented,
            moderationStatus: KalturaEntryModerationStatus = NotImplemented,
            status: KalturaEmailIngestionProfileStatus = NotImplemented,
            createdAt: str = NotImplemented,
            defaultCategory: str = NotImplemented,
            defaultUserId: str = NotImplemented,
            defaultTags: str = NotImplemented,
            defaultAdminTags: str = NotImplemented,
            maxAttachmentSizeKbytes: int = NotImplemented,
            maxAttachmentsPerMail: int = NotImplemented): ...

    def getId(self) -> int: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getDescription(self) -> str: ...
    def setDescription(self, newDescription: str) -> None: ...
    def getEmailAddress(self) -> str: ...
    def setEmailAddress(self, newEmailAddress: str) -> None: ...
    def getMailboxId(self) -> str: ...
    def setMailboxId(self, newMailboxId: str) -> None: ...
    def getPartnerId(self) -> int: ...
    def getConversionProfile2Id(self) -> int: ...
    def setConversionProfile2Id(self, newConversionProfile2Id: int) -> None: ...
    def getModerationStatus(self) -> KalturaEntryModerationStatus: ...
    def setModerationStatus(self, newModerationStatus: KalturaEntryModerationStatus) -> None: ...
    def getStatus(self) -> KalturaEmailIngestionProfileStatus: ...
    def getCreatedAt(self) -> str: ...
    def getDefaultCategory(self) -> str: ...
    def setDefaultCategory(self, newDefaultCategory: str) -> None: ...
    def getDefaultUserId(self) -> str: ...
    def setDefaultUserId(self, newDefaultUserId: str) -> None: ...
    def getDefaultTags(self) -> str: ...
    def setDefaultTags(self, newDefaultTags: str) -> None: ...
    def getDefaultAdminTags(self) -> str: ...
    def setDefaultAdminTags(self, newDefaultAdminTags: str) -> None: ...
    def getMaxAttachmentSizeKbytes(self) -> int: ...
    def setMaxAttachmentSizeKbytes(self, newMaxAttachmentSizeKbytes: int) -> None: ...
    def getMaxAttachmentsPerMail(self) -> int: ...
    def setMaxAttachmentsPerMail(self, newMaxAttachmentsPerMail: int) -> None: ...

class KalturaStringValue(KalturaValue):
    value: str
    def __init__(self,
            description: str = NotImplemented,
            value: str = NotImplemented): ...

    def getValue(self) -> str: ...
    def setValue(self, newValue: str) -> None: ...

class KalturaEntryServerNode(KalturaObjectBase):
    id: int
    entryId: str
    serverNodeId: int
    partnerId: int
    createdAt: int
    updatedAt: int
    status: KalturaEntryServerNodeStatus
    serverType: KalturaEntryServerNodeType
    def __init__(self,
            id: int = NotImplemented,
            entryId: str = NotImplemented,
            serverNodeId: int = NotImplemented,
            partnerId: int = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            status: KalturaEntryServerNodeStatus = NotImplemented,
            serverType: KalturaEntryServerNodeType = NotImplemented): ...

    def getId(self) -> int: ...
    def getEntryId(self) -> str: ...
    def getServerNodeId(self) -> int: ...
    def getPartnerId(self) -> int: ...
    def getCreatedAt(self) -> int: ...
    def getUpdatedAt(self) -> int: ...
    def getStatus(self) -> KalturaEntryServerNodeStatus: ...
    def getServerType(self) -> KalturaEntryServerNodeType: ...

class KalturaExportToCsvOptions(KalturaObjectBase):
    format: str
    typeEqual: KalturaEntryType
    defaultHeader: KalturaNullableBoolean
    def __init__(self,
            format: str = NotImplemented,
            typeEqual: KalturaEntryType = NotImplemented,
            defaultHeader: KalturaNullableBoolean = NotImplemented): ...

    def getFormat(self) -> str: ...
    def setFormat(self, newFormat: str) -> None: ...
    def getTypeEqual(self) -> KalturaEntryType: ...
    def setTypeEqual(self, newTypeEqual: KalturaEntryType) -> None: ...
    def getDefaultHeader(self) -> KalturaNullableBoolean: ...
    def setDefaultHeader(self, newDefaultHeader: KalturaNullableBoolean) -> None: ...

class KalturaObjectIdentifier(KalturaObjectBase):
    extendedFeatures: str
    def __init__(self,
            extendedFeatures: str = NotImplemented): ...

    def getExtendedFeatures(self) -> str: ...
    def setExtendedFeatures(self, newExtendedFeatures: str) -> None: ...

class KalturaExtendingItemMrssParameter(KalturaObjectBase):
    xpath: str
    identifier: KalturaObjectIdentifier
    extensionMode: KalturaMrssExtensionMode
    def __init__(self,
            xpath: str = NotImplemented,
            identifier: KalturaObjectIdentifier = NotImplemented,
            extensionMode: KalturaMrssExtensionMode = NotImplemented): ...

    def getXpath(self) -> str: ...
    def setXpath(self, newXpath: str) -> None: ...
    def getIdentifier(self) -> KalturaObjectIdentifier: ...
    def setIdentifier(self, newIdentifier: KalturaObjectIdentifier) -> None: ...
    def getExtensionMode(self) -> KalturaMrssExtensionMode: ...
    def setExtensionMode(self, newExtensionMode: KalturaMrssExtensionMode) -> None: ...

class KalturaPlayableEntry(KalturaBaseEntry):
    plays: int
    views: int
    lastPlayedAt: int
    width: int
    height: int
    duration: int
    msDuration: int
    durationType: KalturaDurationType
    def __init__(self,
            id: str = NotImplemented,
            name: str = NotImplemented,
            multiLingual_name: List[KalturaMultiLingualString] = NotImplemented,
            description: str = NotImplemented,
            multiLingual_description: List[KalturaMultiLingualString] = NotImplemented,
            partnerId: int = NotImplemented,
            userId: str = NotImplemented,
            creatorId: str = NotImplemented,
            tags: str = NotImplemented,
            multiLingual_tags: List[KalturaMultiLingualString] = NotImplemented,
            adminTags: str = NotImplemented,
            categories: str = NotImplemented,
            categoriesIds: str = NotImplemented,
            status: KalturaEntryStatus = NotImplemented,
            moderationStatus: KalturaEntryModerationStatus = NotImplemented,
            moderationCount: int = NotImplemented,
            type: KalturaEntryType = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            rank: float = NotImplemented,
            totalRank: int = NotImplemented,
            votes: int = NotImplemented,
            groupId: int = NotImplemented,
            partnerData: str = NotImplemented,
            downloadUrl: str = NotImplemented,
            searchText: str = NotImplemented,
            licenseType: KalturaLicenseType = NotImplemented,
            version: int = NotImplemented,
            thumbnailUrl: str = NotImplemented,
            accessControlId: int = NotImplemented,
            startDate: int = NotImplemented,
            endDate: int = NotImplemented,
            referenceId: str = NotImplemented,
            replacingEntryId: str = NotImplemented,
            replacedEntryId: str = NotImplemented,
            replacementStatus: KalturaEntryReplacementStatus = NotImplemented,
            partnerSortValue: int = NotImplemented,
            conversionProfileId: int = NotImplemented,
            redirectEntryId: str = NotImplemented,
            rootEntryId: str = NotImplemented,
            parentEntryId: str = NotImplemented,
            operationAttributes: List[KalturaOperationAttributes] = NotImplemented,
            entitledUsersEdit: str = NotImplemented,
            entitledUsersPublish: str = NotImplemented,
            entitledUsersView: str = NotImplemented,
            capabilities: str = NotImplemented,
            templateEntryId: str = NotImplemented,
            displayInSearch: KalturaEntryDisplayInSearchType = NotImplemented,
            application: KalturaEntryApplication = NotImplemented,
            applicationVersion: str = NotImplemented,
            blockAutoTranscript: bool = NotImplemented,
            defaultLanguage: str = NotImplemented,
            responseLanguage: str = NotImplemented,
            plays: int = NotImplemented,
            views: int = NotImplemented,
            lastPlayedAt: int = NotImplemented,
            width: int = NotImplemented,
            height: int = NotImplemented,
            duration: int = NotImplemented,
            msDuration: int = NotImplemented,
            durationType: KalturaDurationType = NotImplemented): ...

    def getPlays(self) -> int: ...
    def getViews(self) -> int: ...
    def getLastPlayedAt(self) -> int: ...
    def getWidth(self) -> int: ...
    def getHeight(self) -> int: ...
    def getDuration(self) -> int: ...
    def getMsDuration(self) -> int: ...
    def setMsDuration(self, newMsDuration: int) -> None: ...
    def getDurationType(self) -> KalturaDurationType: ...

class KalturaStreamContainer(KalturaObjectBase):
    id: str
    type: str
    trackIndex: int
    language: str
    channelIndex: int
    label: str
    channelLayout: str
    def __init__(self,
            id: str = NotImplemented,
            type: str = NotImplemented,
            trackIndex: int = NotImplemented,
            language: str = NotImplemented,
            channelIndex: int = NotImplemented,
            label: str = NotImplemented,
            channelLayout: str = NotImplemented): ...

    def getId(self) -> str: ...
    def setId(self, newId: str) -> None: ...
    def getType(self) -> str: ...
    def setType(self, newType: str) -> None: ...
    def getTrackIndex(self) -> int: ...
    def setTrackIndex(self, newTrackIndex: int) -> None: ...
    def getLanguage(self) -> str: ...
    def setLanguage(self, newLanguage: str) -> None: ...
    def getChannelIndex(self) -> int: ...
    def setChannelIndex(self, newChannelIndex: int) -> None: ...
    def getLabel(self) -> str: ...
    def setLabel(self, newLabel: str) -> None: ...
    def getChannelLayout(self) -> str: ...
    def setChannelLayout(self, newChannelLayout: str) -> None: ...

class KalturaMediaEntry(KalturaPlayableEntry):
    mediaType: KalturaMediaType
    conversionQuality: str
    sourceType: KalturaSourceType
    sourceVersion: str
    searchProviderType: KalturaSearchProviderType
    searchProviderId: str
    creditUserName: str
    creditUrl: str
    mediaDate: int
    dataUrl: str
    flavorParamsIds: str
    isTrimDisabled: KalturaNullableBoolean
    streams: List[KalturaStreamContainer]
    def __init__(self,
            id: str = NotImplemented,
            name: str = NotImplemented,
            multiLingual_name: List[KalturaMultiLingualString] = NotImplemented,
            description: str = NotImplemented,
            multiLingual_description: List[KalturaMultiLingualString] = NotImplemented,
            partnerId: int = NotImplemented,
            userId: str = NotImplemented,
            creatorId: str = NotImplemented,
            tags: str = NotImplemented,
            multiLingual_tags: List[KalturaMultiLingualString] = NotImplemented,
            adminTags: str = NotImplemented,
            categories: str = NotImplemented,
            categoriesIds: str = NotImplemented,
            status: KalturaEntryStatus = NotImplemented,
            moderationStatus: KalturaEntryModerationStatus = NotImplemented,
            moderationCount: int = NotImplemented,
            type: KalturaEntryType = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            rank: float = NotImplemented,
            totalRank: int = NotImplemented,
            votes: int = NotImplemented,
            groupId: int = NotImplemented,
            partnerData: str = NotImplemented,
            downloadUrl: str = NotImplemented,
            searchText: str = NotImplemented,
            licenseType: KalturaLicenseType = NotImplemented,
            version: int = NotImplemented,
            thumbnailUrl: str = NotImplemented,
            accessControlId: int = NotImplemented,
            startDate: int = NotImplemented,
            endDate: int = NotImplemented,
            referenceId: str = NotImplemented,
            replacingEntryId: str = NotImplemented,
            replacedEntryId: str = NotImplemented,
            replacementStatus: KalturaEntryReplacementStatus = NotImplemented,
            partnerSortValue: int = NotImplemented,
            conversionProfileId: int = NotImplemented,
            redirectEntryId: str = NotImplemented,
            rootEntryId: str = NotImplemented,
            parentEntryId: str = NotImplemented,
            operationAttributes: List[KalturaOperationAttributes] = NotImplemented,
            entitledUsersEdit: str = NotImplemented,
            entitledUsersPublish: str = NotImplemented,
            entitledUsersView: str = NotImplemented,
            capabilities: str = NotImplemented,
            templateEntryId: str = NotImplemented,
            displayInSearch: KalturaEntryDisplayInSearchType = NotImplemented,
            application: KalturaEntryApplication = NotImplemented,
            applicationVersion: str = NotImplemented,
            blockAutoTranscript: bool = NotImplemented,
            defaultLanguage: str = NotImplemented,
            responseLanguage: str = NotImplemented,
            plays: int = NotImplemented,
            views: int = NotImplemented,
            lastPlayedAt: int = NotImplemented,
            width: int = NotImplemented,
            height: int = NotImplemented,
            duration: int = NotImplemented,
            msDuration: int = NotImplemented,
            durationType: KalturaDurationType = NotImplemented,
            mediaType: KalturaMediaType = NotImplemented,
            conversionQuality: str = NotImplemented,
            sourceType: KalturaSourceType = NotImplemented,
            sourceVersion: str = NotImplemented,
            searchProviderType: KalturaSearchProviderType = NotImplemented,
            searchProviderId: str = NotImplemented,
            creditUserName: str = NotImplemented,
            creditUrl: str = NotImplemented,
            mediaDate: int = NotImplemented,
            dataUrl: str = NotImplemented,
            flavorParamsIds: str = NotImplemented,
            isTrimDisabled: KalturaNullableBoolean = NotImplemented,
            streams: List[KalturaStreamContainer] = NotImplemented): ...

    def getMediaType(self) -> KalturaMediaType: ...
    def setMediaType(self, newMediaType: KalturaMediaType) -> None: ...
    def getConversionQuality(self) -> str: ...
    def setConversionQuality(self, newConversionQuality: str) -> None: ...
    def getSourceType(self) -> KalturaSourceType: ...
    def setSourceType(self, newSourceType: KalturaSourceType) -> None: ...
    def getSourceVersion(self) -> str: ...
    def setSourceVersion(self, newSourceVersion: str) -> None: ...
    def getSearchProviderType(self) -> KalturaSearchProviderType: ...
    def setSearchProviderType(self, newSearchProviderType: KalturaSearchProviderType) -> None: ...
    def getSearchProviderId(self) -> str: ...
    def setSearchProviderId(self, newSearchProviderId: str) -> None: ...
    def getCreditUserName(self) -> str: ...
    def setCreditUserName(self, newCreditUserName: str) -> None: ...
    def getCreditUrl(self) -> str: ...
    def setCreditUrl(self, newCreditUrl: str) -> None: ...
    def getMediaDate(self) -> int: ...
    def getDataUrl(self) -> str: ...
    def getFlavorParamsIds(self) -> str: ...
    def getIsTrimDisabled(self) -> KalturaNullableBoolean: ...
    def getStreams(self) -> List[KalturaStreamContainer]: ...
    def setStreams(self, newStreams: List[KalturaStreamContainer]) -> None: ...

class KalturaFeatureStatus(KalturaObjectBase):
    type: KalturaFeatureStatusType
    value: int
    def __init__(self,
            type: KalturaFeatureStatusType = NotImplemented,
            value: int = NotImplemented): ...

    def getType(self) -> KalturaFeatureStatusType: ...
    def setType(self, newType: KalturaFeatureStatusType) -> None: ...
    def getValue(self) -> int: ...
    def setValue(self, newValue: int) -> None: ...

class KalturaFileAsset(KalturaObjectBase):
    id: int
    partnerId: int
    fileAssetObjectType: KalturaFileAssetObjectType
    objectId: str
    name: str
    systemName: str
    fileExt: str
    version: int
    createdAt: int
    updatedAt: int
    status: KalturaFileAssetStatus
    def __init__(self,
            id: int = NotImplemented,
            partnerId: int = NotImplemented,
            fileAssetObjectType: KalturaFileAssetObjectType = NotImplemented,
            objectId: str = NotImplemented,
            name: str = NotImplemented,
            systemName: str = NotImplemented,
            fileExt: str = NotImplemented,
            version: int = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            status: KalturaFileAssetStatus = NotImplemented): ...

    def getId(self) -> int: ...
    def getPartnerId(self) -> int: ...
    def getFileAssetObjectType(self) -> KalturaFileAssetObjectType: ...
    def setFileAssetObjectType(self, newFileAssetObjectType: KalturaFileAssetObjectType) -> None: ...
    def getObjectId(self) -> str: ...
    def setObjectId(self, newObjectId: str) -> None: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getSystemName(self) -> str: ...
    def setSystemName(self, newSystemName: str) -> None: ...
    def getFileExt(self) -> str: ...
    def setFileExt(self, newFileExt: str) -> None: ...
    def getVersion(self) -> int: ...
    def getCreatedAt(self) -> int: ...
    def getUpdatedAt(self) -> int: ...
    def getStatus(self) -> KalturaFileAssetStatus: ...

class KalturaFileContainer(KalturaObjectBase):
    filePath: str
    encryptionKey: str
    fileSize: int
    def __init__(self,
            filePath: str = NotImplemented,
            encryptionKey: str = NotImplemented,
            fileSize: int = NotImplemented): ...

    def getFilePath(self) -> str: ...
    def setFilePath(self, newFilePath: str) -> None: ...
    def getEncryptionKey(self) -> str: ...
    def setEncryptionKey(self, newEncryptionKey: str) -> None: ...
    def getFileSize(self) -> int: ...
    def setFileSize(self, newFileSize: int) -> None: ...

class KalturaFlavorAsset(KalturaAsset):
    flavorParamsId: int
    width: int
    height: int
    bitrate: int
    frameRate: float
    isOriginal: bool
    isWeb: bool
    containerFormat: str
    videoCodecId: str
    status: KalturaFlavorAssetStatus
    language: KalturaLanguage
    label: str
    isDefault: KalturaNullableBoolean
    def __init__(self,
            id: str = NotImplemented,
            entryId: str = NotImplemented,
            partnerId: int = NotImplemented,
            version: int = NotImplemented,
            size: int = NotImplemented,
            tags: str = NotImplemented,
            fileExt: str = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            deletedAt: int = NotImplemented,
            description: str = NotImplemented,
            partnerData: str = NotImplemented,
            partnerDescription: str = NotImplemented,
            actualSourceAssetParamsIds: str = NotImplemented,
            sizeInBytes: int = NotImplemented,
            flavorParamsId: int = NotImplemented,
            width: int = NotImplemented,
            height: int = NotImplemented,
            bitrate: int = NotImplemented,
            frameRate: float = NotImplemented,
            isOriginal: bool = NotImplemented,
            isWeb: bool = NotImplemented,
            containerFormat: str = NotImplemented,
            videoCodecId: str = NotImplemented,
            status: KalturaFlavorAssetStatus = NotImplemented,
            language: KalturaLanguage = NotImplemented,
            label: str = NotImplemented,
            isDefault: KalturaNullableBoolean = NotImplemented): ...

    def getFlavorParamsId(self) -> int: ...
    def setFlavorParamsId(self, newFlavorParamsId: int) -> None: ...
    def getWidth(self) -> int: ...
    def getHeight(self) -> int: ...
    def getBitrate(self) -> int: ...
    def getFrameRate(self) -> float: ...
    def getIsOriginal(self) -> bool: ...
    def getIsWeb(self) -> bool: ...
    def getContainerFormat(self) -> str: ...
    def getVideoCodecId(self) -> str: ...
    def getStatus(self) -> KalturaFlavorAssetStatus: ...
    def getLanguage(self) -> KalturaLanguage: ...
    def setLanguage(self, newLanguage: KalturaLanguage) -> None: ...
    def getLabel(self) -> str: ...
    def setLabel(self, newLabel: str) -> None: ...
    def getIsDefault(self) -> KalturaNullableBoolean: ...
    def setIsDefault(self, newIsDefault: KalturaNullableBoolean) -> None: ...

class KalturaFlavorAssetUrlOptions(KalturaObjectBase):
    fileName: str
    referrer: str
    def __init__(self,
            fileName: str = NotImplemented,
            referrer: str = NotImplemented): ...

    def getFileName(self) -> str: ...
    def setFileName(self, newFileName: str) -> None: ...
    def getReferrer(self) -> str: ...
    def setReferrer(self, newReferrer: str) -> None: ...

class KalturaFlavorParams(KalturaAssetParams):
    videoCodec: KalturaVideoCodec
    videoBitrate: int
    audioCodec: KalturaAudioCodec
    audioBitrate: int
    audioChannels: int
    audioSampleRate: int
    width: int
    height: int
    frameRate: float
    gopSize: int
    conversionEngines: str
    conversionEnginesExtraParams: str
    twoPass: bool
    deinterlice: int
    rotate: int
    operators: str
    engineVersion: int
    format: KalturaContainerFormat
    aspectRatioProcessingMode: int
    forceFrameToMultiplication16: int
    isGopInSec: int
    isAvoidVideoShrinkFramesizeToSource: int
    isAvoidVideoShrinkBitrateToSource: int
    isVideoFrameRateForLowBrAppleHls: int
    multiStream: str
    anamorphicPixels: float
    isAvoidForcedKeyFrames: int
    forcedKeyFramesMode: int
    isCropIMX: int
    optimizationPolicy: int
    maxFrameRate: int
    videoConstantBitrate: int
    videoBitrateTolerance: int
    watermarkData: str
    subtitlesData: str
    cropData: str
    isEncrypted: int
    contentAwareness: float
    chunkedEncodeMode: int
    clipOffset: int
    clipDuration: int
    def __init__(self,
            id: int = NotImplemented,
            partnerId: int = NotImplemented,
            name: str = NotImplemented,
            systemName: str = NotImplemented,
            description: str = NotImplemented,
            createdAt: int = NotImplemented,
            isSystemDefault: KalturaNullableBoolean = NotImplemented,
            tags: str = NotImplemented,
            requiredPermissions: List[KalturaString] = NotImplemented,
            sourceRemoteStorageProfileId: int = NotImplemented,
            remoteStorageProfileIds: int = NotImplemented,
            mediaParserType: KalturaMediaParserType = NotImplemented,
            sourceAssetParamsIds: str = NotImplemented,
            videoCodec: KalturaVideoCodec = NotImplemented,
            videoBitrate: int = NotImplemented,
            audioCodec: KalturaAudioCodec = NotImplemented,
            audioBitrate: int = NotImplemented,
            audioChannels: int = NotImplemented,
            audioSampleRate: int = NotImplemented,
            width: int = NotImplemented,
            height: int = NotImplemented,
            frameRate: float = NotImplemented,
            gopSize: int = NotImplemented,
            conversionEngines: str = NotImplemented,
            conversionEnginesExtraParams: str = NotImplemented,
            twoPass: bool = NotImplemented,
            deinterlice: int = NotImplemented,
            rotate: int = NotImplemented,
            operators: str = NotImplemented,
            engineVersion: int = NotImplemented,
            format: KalturaContainerFormat = NotImplemented,
            aspectRatioProcessingMode: int = NotImplemented,
            forceFrameToMultiplication16: int = NotImplemented,
            isGopInSec: int = NotImplemented,
            isAvoidVideoShrinkFramesizeToSource: int = NotImplemented,
            isAvoidVideoShrinkBitrateToSource: int = NotImplemented,
            isVideoFrameRateForLowBrAppleHls: int = NotImplemented,
            multiStream: str = NotImplemented,
            anamorphicPixels: float = NotImplemented,
            isAvoidForcedKeyFrames: int = NotImplemented,
            forcedKeyFramesMode: int = NotImplemented,
            isCropIMX: int = NotImplemented,
            optimizationPolicy: int = NotImplemented,
            maxFrameRate: int = NotImplemented,
            videoConstantBitrate: int = NotImplemented,
            videoBitrateTolerance: int = NotImplemented,
            watermarkData: str = NotImplemented,
            subtitlesData: str = NotImplemented,
            cropData: str = NotImplemented,
            isEncrypted: int = NotImplemented,
            contentAwareness: float = NotImplemented,
            chunkedEncodeMode: int = NotImplemented,
            clipOffset: int = NotImplemented,
            clipDuration: int = NotImplemented): ...

    def getVideoCodec(self) -> KalturaVideoCodec: ...
    def setVideoCodec(self, newVideoCodec: KalturaVideoCodec) -> None: ...
    def getVideoBitrate(self) -> int: ...
    def setVideoBitrate(self, newVideoBitrate: int) -> None: ...
    def getAudioCodec(self) -> KalturaAudioCodec: ...
    def setAudioCodec(self, newAudioCodec: KalturaAudioCodec) -> None: ...
    def getAudioBitrate(self) -> int: ...
    def setAudioBitrate(self, newAudioBitrate: int) -> None: ...
    def getAudioChannels(self) -> int: ...
    def setAudioChannels(self, newAudioChannels: int) -> None: ...
    def getAudioSampleRate(self) -> int: ...
    def setAudioSampleRate(self, newAudioSampleRate: int) -> None: ...
    def getWidth(self) -> int: ...
    def setWidth(self, newWidth: int) -> None: ...
    def getHeight(self) -> int: ...
    def setHeight(self, newHeight: int) -> None: ...
    def getFrameRate(self) -> float: ...
    def setFrameRate(self, newFrameRate: float) -> None: ...
    def getGopSize(self) -> int: ...
    def setGopSize(self, newGopSize: int) -> None: ...
    def getConversionEngines(self) -> str: ...
    def setConversionEngines(self, newConversionEngines: str) -> None: ...
    def getConversionEnginesExtraParams(self) -> str: ...
    def setConversionEnginesExtraParams(self, newConversionEnginesExtraParams: str) -> None: ...
    def getTwoPass(self) -> bool: ...
    def setTwoPass(self, newTwoPass: bool) -> None: ...
    def getDeinterlice(self) -> int: ...
    def setDeinterlice(self, newDeinterlice: int) -> None: ...
    def getRotate(self) -> int: ...
    def setRotate(self, newRotate: int) -> None: ...
    def getOperators(self) -> str: ...
    def setOperators(self, newOperators: str) -> None: ...
    def getEngineVersion(self) -> int: ...
    def setEngineVersion(self, newEngineVersion: int) -> None: ...
    def getFormat(self) -> KalturaContainerFormat: ...
    def setFormat(self, newFormat: KalturaContainerFormat) -> None: ...
    def getAspectRatioProcessingMode(self) -> int: ...
    def setAspectRatioProcessingMode(self, newAspectRatioProcessingMode: int) -> None: ...
    def getForceFrameToMultiplication16(self) -> int: ...
    def setForceFrameToMultiplication16(self, newForceFrameToMultiplication16: int) -> None: ...
    def getIsGopInSec(self) -> int: ...
    def setIsGopInSec(self, newIsGopInSec: int) -> None: ...
    def getIsAvoidVideoShrinkFramesizeToSource(self) -> int: ...
    def setIsAvoidVideoShrinkFramesizeToSource(self, newIsAvoidVideoShrinkFramesizeToSource: int) -> None: ...
    def getIsAvoidVideoShrinkBitrateToSource(self) -> int: ...
    def setIsAvoidVideoShrinkBitrateToSource(self, newIsAvoidVideoShrinkBitrateToSource: int) -> None: ...
    def getIsVideoFrameRateForLowBrAppleHls(self) -> int: ...
    def setIsVideoFrameRateForLowBrAppleHls(self, newIsVideoFrameRateForLowBrAppleHls: int) -> None: ...
    def getMultiStream(self) -> str: ...
    def setMultiStream(self, newMultiStream: str) -> None: ...
    def getAnamorphicPixels(self) -> float: ...
    def setAnamorphicPixels(self, newAnamorphicPixels: float) -> None: ...
    def getIsAvoidForcedKeyFrames(self) -> int: ...
    def setIsAvoidForcedKeyFrames(self, newIsAvoidForcedKeyFrames: int) -> None: ...
    def getForcedKeyFramesMode(self) -> int: ...
    def setForcedKeyFramesMode(self, newForcedKeyFramesMode: int) -> None: ...
    def getIsCropIMX(self) -> int: ...
    def setIsCropIMX(self, newIsCropIMX: int) -> None: ...
    def getOptimizationPolicy(self) -> int: ...
    def setOptimizationPolicy(self, newOptimizationPolicy: int) -> None: ...
    def getMaxFrameRate(self) -> int: ...
    def setMaxFrameRate(self, newMaxFrameRate: int) -> None: ...
    def getVideoConstantBitrate(self) -> int: ...
    def setVideoConstantBitrate(self, newVideoConstantBitrate: int) -> None: ...
    def getVideoBitrateTolerance(self) -> int: ...
    def setVideoBitrateTolerance(self, newVideoBitrateTolerance: int) -> None: ...
    def getWatermarkData(self) -> str: ...
    def setWatermarkData(self, newWatermarkData: str) -> None: ...
    def getSubtitlesData(self) -> str: ...
    def setSubtitlesData(self, newSubtitlesData: str) -> None: ...
    def getCropData(self) -> str: ...
    def setCropData(self, newCropData: str) -> None: ...
    def getIsEncrypted(self) -> int: ...
    def setIsEncrypted(self, newIsEncrypted: int) -> None: ...
    def getContentAwareness(self) -> float: ...
    def setContentAwareness(self, newContentAwareness: float) -> None: ...
    def getChunkedEncodeMode(self) -> int: ...
    def setChunkedEncodeMode(self, newChunkedEncodeMode: int) -> None: ...
    def getClipOffset(self) -> int: ...
    def setClipOffset(self, newClipOffset: int) -> None: ...
    def getClipDuration(self) -> int: ...
    def setClipDuration(self, newClipDuration: int) -> None: ...

class KalturaFlavorAssetWithParams(KalturaObjectBase):
    flavorAsset: KalturaFlavorAsset
    flavorParams: KalturaFlavorParams
    entryId: str
    def __init__(self,
            flavorAsset: KalturaFlavorAsset = NotImplemented,
            flavorParams: KalturaFlavorParams = NotImplemented,
            entryId: str = NotImplemented): ...

    def getFlavorAsset(self) -> KalturaFlavorAsset: ...
    def setFlavorAsset(self, newFlavorAsset: KalturaFlavorAsset) -> None: ...
    def getFlavorParams(self) -> KalturaFlavorParams: ...
    def setFlavorParams(self, newFlavorParams: KalturaFlavorParams) -> None: ...
    def getEntryId(self) -> str: ...
    def setEntryId(self, newEntryId: str) -> None: ...

class KalturaFlavorParamsOutput(KalturaFlavorParams):
    flavorParamsId: int
    commandLinesStr: str
    flavorParamsVersion: str
    flavorAssetId: str
    flavorAssetVersion: str
    readyBehavior: int
    def __init__(self,
            id: int = NotImplemented,
            partnerId: int = NotImplemented,
            name: str = NotImplemented,
            systemName: str = NotImplemented,
            description: str = NotImplemented,
            createdAt: int = NotImplemented,
            isSystemDefault: KalturaNullableBoolean = NotImplemented,
            tags: str = NotImplemented,
            requiredPermissions: List[KalturaString] = NotImplemented,
            sourceRemoteStorageProfileId: int = NotImplemented,
            remoteStorageProfileIds: int = NotImplemented,
            mediaParserType: KalturaMediaParserType = NotImplemented,
            sourceAssetParamsIds: str = NotImplemented,
            videoCodec: KalturaVideoCodec = NotImplemented,
            videoBitrate: int = NotImplemented,
            audioCodec: KalturaAudioCodec = NotImplemented,
            audioBitrate: int = NotImplemented,
            audioChannels: int = NotImplemented,
            audioSampleRate: int = NotImplemented,
            width: int = NotImplemented,
            height: int = NotImplemented,
            frameRate: float = NotImplemented,
            gopSize: int = NotImplemented,
            conversionEngines: str = NotImplemented,
            conversionEnginesExtraParams: str = NotImplemented,
            twoPass: bool = NotImplemented,
            deinterlice: int = NotImplemented,
            rotate: int = NotImplemented,
            operators: str = NotImplemented,
            engineVersion: int = NotImplemented,
            format: KalturaContainerFormat = NotImplemented,
            aspectRatioProcessingMode: int = NotImplemented,
            forceFrameToMultiplication16: int = NotImplemented,
            isGopInSec: int = NotImplemented,
            isAvoidVideoShrinkFramesizeToSource: int = NotImplemented,
            isAvoidVideoShrinkBitrateToSource: int = NotImplemented,
            isVideoFrameRateForLowBrAppleHls: int = NotImplemented,
            multiStream: str = NotImplemented,
            anamorphicPixels: float = NotImplemented,
            isAvoidForcedKeyFrames: int = NotImplemented,
            forcedKeyFramesMode: int = NotImplemented,
            isCropIMX: int = NotImplemented,
            optimizationPolicy: int = NotImplemented,
            maxFrameRate: int = NotImplemented,
            videoConstantBitrate: int = NotImplemented,
            videoBitrateTolerance: int = NotImplemented,
            watermarkData: str = NotImplemented,
            subtitlesData: str = NotImplemented,
            cropData: str = NotImplemented,
            isEncrypted: int = NotImplemented,
            contentAwareness: float = NotImplemented,
            chunkedEncodeMode: int = NotImplemented,
            clipOffset: int = NotImplemented,
            clipDuration: int = NotImplemented,
            flavorParamsId: int = NotImplemented,
            commandLinesStr: str = NotImplemented,
            flavorParamsVersion: str = NotImplemented,
            flavorAssetId: str = NotImplemented,
            flavorAssetVersion: str = NotImplemented,
            readyBehavior: int = NotImplemented): ...

    def getFlavorParamsId(self) -> int: ...
    def setFlavorParamsId(self, newFlavorParamsId: int) -> None: ...
    def getCommandLinesStr(self) -> str: ...
    def setCommandLinesStr(self, newCommandLinesStr: str) -> None: ...
    def getFlavorParamsVersion(self) -> str: ...
    def setFlavorParamsVersion(self, newFlavorParamsVersion: str) -> None: ...
    def getFlavorAssetId(self) -> str: ...
    def setFlavorAssetId(self, newFlavorAssetId: str) -> None: ...
    def getFlavorAssetVersion(self) -> str: ...
    def setFlavorAssetVersion(self, newFlavorAssetVersion: str) -> None: ...
    def getReadyBehavior(self) -> int: ...
    def setReadyBehavior(self, newReadyBehavior: int) -> None: ...

class KalturaSchedulerStatus(KalturaObjectBase):
    id: int
    schedulerConfiguredId: int
    workerConfiguredId: int
    workerType: KalturaBatchJobType
    type: KalturaSchedulerStatusType
    value: int
    schedulerId: int
    workerId: int
    def __init__(self,
            id: int = NotImplemented,
            schedulerConfiguredId: int = NotImplemented,
            workerConfiguredId: int = NotImplemented,
            workerType: KalturaBatchJobType = NotImplemented,
            type: KalturaSchedulerStatusType = NotImplemented,
            value: int = NotImplemented,
            schedulerId: int = NotImplemented,
            workerId: int = NotImplemented): ...

    def getId(self) -> int: ...
    def getSchedulerConfiguredId(self) -> int: ...
    def setSchedulerConfiguredId(self, newSchedulerConfiguredId: int) -> None: ...
    def getWorkerConfiguredId(self) -> int: ...
    def setWorkerConfiguredId(self, newWorkerConfiguredId: int) -> None: ...
    def getWorkerType(self) -> KalturaBatchJobType: ...
    def setWorkerType(self, newWorkerType: KalturaBatchJobType) -> None: ...
    def getType(self) -> KalturaSchedulerStatusType: ...
    def setType(self, newType: KalturaSchedulerStatusType) -> None: ...
    def getValue(self) -> int: ...
    def setValue(self, newValue: int) -> None: ...
    def getSchedulerId(self) -> int: ...
    def getWorkerId(self) -> int: ...

class KalturaSchedulerConfig(KalturaObjectBase):
    id: int
    createdBy: str
    updatedBy: str
    commandId: str
    commandStatus: str
    schedulerId: int
    schedulerConfiguredId: int
    schedulerName: str
    workerId: int
    workerConfiguredId: int
    workerName: str
    variable: str
    variablePart: str
    value: str
    def __init__(self,
            id: int = NotImplemented,
            createdBy: str = NotImplemented,
            updatedBy: str = NotImplemented,
            commandId: str = NotImplemented,
            commandStatus: str = NotImplemented,
            schedulerId: int = NotImplemented,
            schedulerConfiguredId: int = NotImplemented,
            schedulerName: str = NotImplemented,
            workerId: int = NotImplemented,
            workerConfiguredId: int = NotImplemented,
            workerName: str = NotImplemented,
            variable: str = NotImplemented,
            variablePart: str = NotImplemented,
            value: str = NotImplemented): ...

    def getId(self) -> int: ...
    def getCreatedBy(self) -> str: ...
    def setCreatedBy(self, newCreatedBy: str) -> None: ...
    def getUpdatedBy(self) -> str: ...
    def setUpdatedBy(self, newUpdatedBy: str) -> None: ...
    def getCommandId(self) -> str: ...
    def setCommandId(self, newCommandId: str) -> None: ...
    def getCommandStatus(self) -> str: ...
    def setCommandStatus(self, newCommandStatus: str) -> None: ...
    def getSchedulerId(self) -> int: ...
    def setSchedulerId(self, newSchedulerId: int) -> None: ...
    def getSchedulerConfiguredId(self) -> int: ...
    def setSchedulerConfiguredId(self, newSchedulerConfiguredId: int) -> None: ...
    def getSchedulerName(self) -> str: ...
    def setSchedulerName(self, newSchedulerName: str) -> None: ...
    def getWorkerId(self) -> int: ...
    def setWorkerId(self, newWorkerId: int) -> None: ...
    def getWorkerConfiguredId(self) -> int: ...
    def setWorkerConfiguredId(self, newWorkerConfiguredId: int) -> None: ...
    def getWorkerName(self) -> str: ...
    def setWorkerName(self, newWorkerName: str) -> None: ...
    def getVariable(self) -> str: ...
    def setVariable(self, newVariable: str) -> None: ...
    def getVariablePart(self) -> str: ...
    def setVariablePart(self, newVariablePart: str) -> None: ...
    def getValue(self) -> str: ...
    def setValue(self, newValue: str) -> None: ...

class KalturaSchedulerWorker(KalturaObjectBase):
    id: int
    configuredId: int
    schedulerId: int
    schedulerConfiguredId: int
    type: KalturaBatchJobType
    typeName: str
    name: str
    statuses: List[KalturaSchedulerStatus]
    configs: List[KalturaSchedulerConfig]
    lockedJobs: List[KalturaBatchJob]
    avgWait: int
    avgWork: int
    lastStatus: int
    lastStatusStr: str
    def __init__(self,
            id: int = NotImplemented,
            configuredId: int = NotImplemented,
            schedulerId: int = NotImplemented,
            schedulerConfiguredId: int = NotImplemented,
            type: KalturaBatchJobType = NotImplemented,
            typeName: str = NotImplemented,
            name: str = NotImplemented,
            statuses: List[KalturaSchedulerStatus] = NotImplemented,
            configs: List[KalturaSchedulerConfig] = NotImplemented,
            lockedJobs: List[KalturaBatchJob] = NotImplemented,
            avgWait: int = NotImplemented,
            avgWork: int = NotImplemented,
            lastStatus: int = NotImplemented,
            lastStatusStr: str = NotImplemented): ...

    def getId(self) -> int: ...
    def getConfiguredId(self) -> int: ...
    def setConfiguredId(self, newConfiguredId: int) -> None: ...
    def getSchedulerId(self) -> int: ...
    def setSchedulerId(self, newSchedulerId: int) -> None: ...
    def getSchedulerConfiguredId(self) -> int: ...
    def setSchedulerConfiguredId(self, newSchedulerConfiguredId: int) -> None: ...
    def getType(self) -> KalturaBatchJobType: ...
    def setType(self, newType: KalturaBatchJobType) -> None: ...
    def getTypeName(self) -> str: ...
    def setTypeName(self, newTypeName: str) -> None: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getStatuses(self) -> List[KalturaSchedulerStatus]: ...
    def setStatuses(self, newStatuses: List[KalturaSchedulerStatus]) -> None: ...
    def getConfigs(self) -> List[KalturaSchedulerConfig]: ...
    def setConfigs(self, newConfigs: List[KalturaSchedulerConfig]) -> None: ...
    def getLockedJobs(self) -> List[KalturaBatchJob]: ...
    def setLockedJobs(self, newLockedJobs: List[KalturaBatchJob]) -> None: ...
    def getAvgWait(self) -> int: ...
    def setAvgWait(self, newAvgWait: int) -> None: ...
    def getAvgWork(self) -> int: ...
    def setAvgWork(self, newAvgWork: int) -> None: ...
    def getLastStatus(self) -> int: ...
    def setLastStatus(self, newLastStatus: int) -> None: ...
    def getLastStatusStr(self) -> str: ...
    def setLastStatusStr(self, newLastStatusStr: str) -> None: ...

class KalturaScheduler(KalturaObjectBase):
    id: int
    configuredId: int
    name: str
    host: str
    statuses: List[KalturaSchedulerStatus]
    configs: List[KalturaSchedulerConfig]
    workers: List[KalturaSchedulerWorker]
    createdAt: int
    lastStatus: int
    lastStatusStr: str
    def __init__(self,
            id: int = NotImplemented,
            configuredId: int = NotImplemented,
            name: str = NotImplemented,
            host: str = NotImplemented,
            statuses: List[KalturaSchedulerStatus] = NotImplemented,
            configs: List[KalturaSchedulerConfig] = NotImplemented,
            workers: List[KalturaSchedulerWorker] = NotImplemented,
            createdAt: int = NotImplemented,
            lastStatus: int = NotImplemented,
            lastStatusStr: str = NotImplemented): ...

    def getId(self) -> int: ...
    def getConfiguredId(self) -> int: ...
    def setConfiguredId(self, newConfiguredId: int) -> None: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getHost(self) -> str: ...
    def setHost(self, newHost: str) -> None: ...
    def getStatuses(self) -> List[KalturaSchedulerStatus]: ...
    def getConfigs(self) -> List[KalturaSchedulerConfig]: ...
    def getWorkers(self) -> List[KalturaSchedulerWorker]: ...
    def getCreatedAt(self) -> int: ...
    def getLastStatus(self) -> int: ...
    def getLastStatusStr(self) -> str: ...

class KalturaGroupUser(KalturaObjectBase):
    id: str
    userId: str
    groupId: str
    status: KalturaGroupUserStatus
    partnerId: int
    createdAt: int
    updatedAt: int
    creationMode: KalturaGroupUserCreationMode
    userRole: KalturaGroupUserRole
    def __init__(self,
            id: str = NotImplemented,
            userId: str = NotImplemented,
            groupId: str = NotImplemented,
            status: KalturaGroupUserStatus = NotImplemented,
            partnerId: int = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            creationMode: KalturaGroupUserCreationMode = NotImplemented,
            userRole: KalturaGroupUserRole = NotImplemented): ...

    def getId(self) -> str: ...
    def getUserId(self) -> str: ...
    def setUserId(self, newUserId: str) -> None: ...
    def getGroupId(self) -> str: ...
    def setGroupId(self, newGroupId: str) -> None: ...
    def getStatus(self) -> KalturaGroupUserStatus: ...
    def getPartnerId(self) -> int: ...
    def getCreatedAt(self) -> int: ...
    def getUpdatedAt(self) -> int: ...
    def getCreationMode(self) -> KalturaGroupUserCreationMode: ...
    def setCreationMode(self, newCreationMode: KalturaGroupUserCreationMode) -> None: ...
    def getUserRole(self) -> KalturaGroupUserRole: ...
    def setUserRole(self, newUserRole: KalturaGroupUserRole) -> None: ...

class KalturaObject(KalturaObjectBase):
    relatedObjects: map
    def __init__(self,
            relatedObjects: map = NotImplemented): ...

    def getRelatedObjects(self) -> map: ...

class KalturaIntegerValue(KalturaValue):
    value: int
    def __init__(self,
            description: str = NotImplemented,
            value: int = NotImplemented): ...

    def getValue(self) -> int: ...
    def setValue(self, newValue: int) -> None: ...

class KalturaLiveStreamConfiguration(KalturaObjectBase):
    protocol: KalturaPlaybackProtocol
    url: str
    publishUrl: str
    backupUrl: str
    streamName: str
    def __init__(self,
            protocol: KalturaPlaybackProtocol = NotImplemented,
            url: str = NotImplemented,
            publishUrl: str = NotImplemented,
            backupUrl: str = NotImplemented,
            streamName: str = NotImplemented): ...

    def getProtocol(self) -> KalturaPlaybackProtocol: ...
    def setProtocol(self, newProtocol: KalturaPlaybackProtocol) -> None: ...
    def getUrl(self) -> str: ...
    def setUrl(self, newUrl: str) -> None: ...
    def getPublishUrl(self) -> str: ...
    def setPublishUrl(self, newPublishUrl: str) -> None: ...
    def getBackupUrl(self) -> str: ...
    def setBackupUrl(self, newBackupUrl: str) -> None: ...
    def getStreamName(self) -> str: ...
    def setStreamName(self, newStreamName: str) -> None: ...

class KalturaLiveStreamPushPublishConfiguration(KalturaObjectBase):
    publishUrl: str
    backupPublishUrl: str
    port: str
    def __init__(self,
            publishUrl: str = NotImplemented,
            backupPublishUrl: str = NotImplemented,
            port: str = NotImplemented): ...

    def getPublishUrl(self) -> str: ...
    def setPublishUrl(self, newPublishUrl: str) -> None: ...
    def getBackupPublishUrl(self) -> str: ...
    def setBackupPublishUrl(self, newBackupPublishUrl: str) -> None: ...
    def getPort(self) -> str: ...
    def setPort(self, newPort: str) -> None: ...

class KalturaLiveEntryRecordingOptions(KalturaObjectBase):
    shouldCopyEntitlement: KalturaNullableBoolean
    shouldCopyScheduling: KalturaNullableBoolean
    shouldCopyThumbnail: KalturaNullableBoolean
    shouldMakeHidden: KalturaNullableBoolean
    shouldAutoArchive: KalturaNullableBoolean
    nonDeletedCuePointsTags: str
    archiveVodSuffixTimezone: str
    def __init__(self,
            shouldCopyEntitlement: KalturaNullableBoolean = NotImplemented,
            shouldCopyScheduling: KalturaNullableBoolean = NotImplemented,
            shouldCopyThumbnail: KalturaNullableBoolean = NotImplemented,
            shouldMakeHidden: KalturaNullableBoolean = NotImplemented,
            shouldAutoArchive: KalturaNullableBoolean = NotImplemented,
            nonDeletedCuePointsTags: str = NotImplemented,
            archiveVodSuffixTimezone: str = NotImplemented): ...

    def getShouldCopyEntitlement(self) -> KalturaNullableBoolean: ...
    def setShouldCopyEntitlement(self, newShouldCopyEntitlement: KalturaNullableBoolean) -> None: ...
    def getShouldCopyScheduling(self) -> KalturaNullableBoolean: ...
    def setShouldCopyScheduling(self, newShouldCopyScheduling: KalturaNullableBoolean) -> None: ...
    def getShouldCopyThumbnail(self) -> KalturaNullableBoolean: ...
    def setShouldCopyThumbnail(self, newShouldCopyThumbnail: KalturaNullableBoolean) -> None: ...
    def getShouldMakeHidden(self) -> KalturaNullableBoolean: ...
    def setShouldMakeHidden(self, newShouldMakeHidden: KalturaNullableBoolean) -> None: ...
    def getShouldAutoArchive(self) -> KalturaNullableBoolean: ...
    def setShouldAutoArchive(self, newShouldAutoArchive: KalturaNullableBoolean) -> None: ...
    def getNonDeletedCuePointsTags(self) -> str: ...
    def setNonDeletedCuePointsTags(self, newNonDeletedCuePointsTags: str) -> None: ...
    def getArchiveVodSuffixTimezone(self) -> str: ...
    def setArchiveVodSuffixTimezone(self, newArchiveVodSuffixTimezone: str) -> None: ...

class KalturaLiveEntry(KalturaMediaEntry):
    offlineMessage: str
    recordStatus: KalturaRecordStatus
    dvrStatus: KalturaDVRStatus
    dvrWindow: int
    lastElapsedRecordingTime: int
    liveStreamConfigurations: List[KalturaLiveStreamConfiguration]
    recordedEntryId: str
    pushPublishEnabled: KalturaLivePublishStatus
    publishConfigurations: List[KalturaLiveStreamPushPublishConfiguration]
    firstBroadcast: int
    lastBroadcast: int
    currentBroadcastStartTime: float
    recordingOptions: KalturaLiveEntryRecordingOptions
    liveStatus: KalturaEntryServerNodeStatus
    segmentDuration: int
    explicitLive: KalturaNullableBoolean
    viewMode: KalturaViewMode
    recordingStatus: KalturaRecordingStatus
    lastBroadcastEndTime: int
    broadcastTime: int
    def __init__(self,
            id: str = NotImplemented,
            name: str = NotImplemented,
            multiLingual_name: List[KalturaMultiLingualString] = NotImplemented,
            description: str = NotImplemented,
            multiLingual_description: List[KalturaMultiLingualString] = NotImplemented,
            partnerId: int = NotImplemented,
            userId: str = NotImplemented,
            creatorId: str = NotImplemented,
            tags: str = NotImplemented,
            multiLingual_tags: List[KalturaMultiLingualString] = NotImplemented,
            adminTags: str = NotImplemented,
            categories: str = NotImplemented,
            categoriesIds: str = NotImplemented,
            status: KalturaEntryStatus = NotImplemented,
            moderationStatus: KalturaEntryModerationStatus = NotImplemented,
            moderationCount: int = NotImplemented,
            type: KalturaEntryType = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            rank: float = NotImplemented,
            totalRank: int = NotImplemented,
            votes: int = NotImplemented,
            groupId: int = NotImplemented,
            partnerData: str = NotImplemented,
            downloadUrl: str = NotImplemented,
            searchText: str = NotImplemented,
            licenseType: KalturaLicenseType = NotImplemented,
            version: int = NotImplemented,
            thumbnailUrl: str = NotImplemented,
            accessControlId: int = NotImplemented,
            startDate: int = NotImplemented,
            endDate: int = NotImplemented,
            referenceId: str = NotImplemented,
            replacingEntryId: str = NotImplemented,
            replacedEntryId: str = NotImplemented,
            replacementStatus: KalturaEntryReplacementStatus = NotImplemented,
            partnerSortValue: int = NotImplemented,
            conversionProfileId: int = NotImplemented,
            redirectEntryId: str = NotImplemented,
            rootEntryId: str = NotImplemented,
            parentEntryId: str = NotImplemented,
            operationAttributes: List[KalturaOperationAttributes] = NotImplemented,
            entitledUsersEdit: str = NotImplemented,
            entitledUsersPublish: str = NotImplemented,
            entitledUsersView: str = NotImplemented,
            capabilities: str = NotImplemented,
            templateEntryId: str = NotImplemented,
            displayInSearch: KalturaEntryDisplayInSearchType = NotImplemented,
            application: KalturaEntryApplication = NotImplemented,
            applicationVersion: str = NotImplemented,
            blockAutoTranscript: bool = NotImplemented,
            defaultLanguage: str = NotImplemented,
            responseLanguage: str = NotImplemented,
            plays: int = NotImplemented,
            views: int = NotImplemented,
            lastPlayedAt: int = NotImplemented,
            width: int = NotImplemented,
            height: int = NotImplemented,
            duration: int = NotImplemented,
            msDuration: int = NotImplemented,
            durationType: KalturaDurationType = NotImplemented,
            mediaType: KalturaMediaType = NotImplemented,
            conversionQuality: str = NotImplemented,
            sourceType: KalturaSourceType = NotImplemented,
            sourceVersion: str = NotImplemented,
            searchProviderType: KalturaSearchProviderType = NotImplemented,
            searchProviderId: str = NotImplemented,
            creditUserName: str = NotImplemented,
            creditUrl: str = NotImplemented,
            mediaDate: int = NotImplemented,
            dataUrl: str = NotImplemented,
            flavorParamsIds: str = NotImplemented,
            isTrimDisabled: KalturaNullableBoolean = NotImplemented,
            streams: List[KalturaStreamContainer] = NotImplemented,
            offlineMessage: str = NotImplemented,
            recordStatus: KalturaRecordStatus = NotImplemented,
            dvrStatus: KalturaDVRStatus = NotImplemented,
            dvrWindow: int = NotImplemented,
            lastElapsedRecordingTime: int = NotImplemented,
            liveStreamConfigurations: List[KalturaLiveStreamConfiguration] = NotImplemented,
            recordedEntryId: str = NotImplemented,
            pushPublishEnabled: KalturaLivePublishStatus = NotImplemented,
            publishConfigurations: List[KalturaLiveStreamPushPublishConfiguration] = NotImplemented,
            firstBroadcast: int = NotImplemented,
            lastBroadcast: int = NotImplemented,
            currentBroadcastStartTime: float = NotImplemented,
            recordingOptions: KalturaLiveEntryRecordingOptions = NotImplemented,
            liveStatus: KalturaEntryServerNodeStatus = NotImplemented,
            segmentDuration: int = NotImplemented,
            explicitLive: KalturaNullableBoolean = NotImplemented,
            viewMode: KalturaViewMode = NotImplemented,
            recordingStatus: KalturaRecordingStatus = NotImplemented,
            lastBroadcastEndTime: int = NotImplemented,
            broadcastTime: int = NotImplemented): ...

    def getOfflineMessage(self) -> str: ...
    def setOfflineMessage(self, newOfflineMessage: str) -> None: ...
    def getRecordStatus(self) -> KalturaRecordStatus: ...
    def setRecordStatus(self, newRecordStatus: KalturaRecordStatus) -> None: ...
    def getDvrStatus(self) -> KalturaDVRStatus: ...
    def setDvrStatus(self, newDvrStatus: KalturaDVRStatus) -> None: ...
    def getDvrWindow(self) -> int: ...
    def setDvrWindow(self, newDvrWindow: int) -> None: ...
    def getLastElapsedRecordingTime(self) -> int: ...
    def setLastElapsedRecordingTime(self, newLastElapsedRecordingTime: int) -> None: ...
    def getLiveStreamConfigurations(self) -> List[KalturaLiveStreamConfiguration]: ...
    def setLiveStreamConfigurations(self, newLiveStreamConfigurations: List[KalturaLiveStreamConfiguration]) -> None: ...
    def getRecordedEntryId(self) -> str: ...
    def setRecordedEntryId(self, newRecordedEntryId: str) -> None: ...
    def getPushPublishEnabled(self) -> KalturaLivePublishStatus: ...
    def setPushPublishEnabled(self, newPushPublishEnabled: KalturaLivePublishStatus) -> None: ...
    def getPublishConfigurations(self) -> List[KalturaLiveStreamPushPublishConfiguration]: ...
    def setPublishConfigurations(self, newPublishConfigurations: List[KalturaLiveStreamPushPublishConfiguration]) -> None: ...
    def getFirstBroadcast(self) -> int: ...
    def getLastBroadcast(self) -> int: ...
    def getCurrentBroadcastStartTime(self) -> float: ...
    def setCurrentBroadcastStartTime(self, newCurrentBroadcastStartTime: float) -> None: ...
    def getRecordingOptions(self) -> KalturaLiveEntryRecordingOptions: ...
    def setRecordingOptions(self, newRecordingOptions: KalturaLiveEntryRecordingOptions) -> None: ...
    def getLiveStatus(self) -> KalturaEntryServerNodeStatus: ...
    def getSegmentDuration(self) -> int: ...
    def setSegmentDuration(self, newSegmentDuration: int) -> None: ...
    def getExplicitLive(self) -> KalturaNullableBoolean: ...
    def setExplicitLive(self, newExplicitLive: KalturaNullableBoolean) -> None: ...
    def getViewMode(self) -> KalturaViewMode: ...
    def setViewMode(self, newViewMode: KalturaViewMode) -> None: ...
    def getRecordingStatus(self) -> KalturaRecordingStatus: ...
    def setRecordingStatus(self, newRecordingStatus: KalturaRecordingStatus) -> None: ...
    def getLastBroadcastEndTime(self) -> int: ...
    def getBroadcastTime(self) -> int: ...
    def setBroadcastTime(self, newBroadcastTime: int) -> None: ...

class KalturaLiveChannel(KalturaLiveEntry):
    playlistId: str
    repeat: KalturaNullableBoolean
    def __init__(self,
            id: str = NotImplemented,
            name: str = NotImplemented,
            multiLingual_name: List[KalturaMultiLingualString] = NotImplemented,
            description: str = NotImplemented,
            multiLingual_description: List[KalturaMultiLingualString] = NotImplemented,
            partnerId: int = NotImplemented,
            userId: str = NotImplemented,
            creatorId: str = NotImplemented,
            tags: str = NotImplemented,
            multiLingual_tags: List[KalturaMultiLingualString] = NotImplemented,
            adminTags: str = NotImplemented,
            categories: str = NotImplemented,
            categoriesIds: str = NotImplemented,
            status: KalturaEntryStatus = NotImplemented,
            moderationStatus: KalturaEntryModerationStatus = NotImplemented,
            moderationCount: int = NotImplemented,
            type: KalturaEntryType = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            rank: float = NotImplemented,
            totalRank: int = NotImplemented,
            votes: int = NotImplemented,
            groupId: int = NotImplemented,
            partnerData: str = NotImplemented,
            downloadUrl: str = NotImplemented,
            searchText: str = NotImplemented,
            licenseType: KalturaLicenseType = NotImplemented,
            version: int = NotImplemented,
            thumbnailUrl: str = NotImplemented,
            accessControlId: int = NotImplemented,
            startDate: int = NotImplemented,
            endDate: int = NotImplemented,
            referenceId: str = NotImplemented,
            replacingEntryId: str = NotImplemented,
            replacedEntryId: str = NotImplemented,
            replacementStatus: KalturaEntryReplacementStatus = NotImplemented,
            partnerSortValue: int = NotImplemented,
            conversionProfileId: int = NotImplemented,
            redirectEntryId: str = NotImplemented,
            rootEntryId: str = NotImplemented,
            parentEntryId: str = NotImplemented,
            operationAttributes: List[KalturaOperationAttributes] = NotImplemented,
            entitledUsersEdit: str = NotImplemented,
            entitledUsersPublish: str = NotImplemented,
            entitledUsersView: str = NotImplemented,
            capabilities: str = NotImplemented,
            templateEntryId: str = NotImplemented,
            displayInSearch: KalturaEntryDisplayInSearchType = NotImplemented,
            application: KalturaEntryApplication = NotImplemented,
            applicationVersion: str = NotImplemented,
            blockAutoTranscript: bool = NotImplemented,
            defaultLanguage: str = NotImplemented,
            responseLanguage: str = NotImplemented,
            plays: int = NotImplemented,
            views: int = NotImplemented,
            lastPlayedAt: int = NotImplemented,
            width: int = NotImplemented,
            height: int = NotImplemented,
            duration: int = NotImplemented,
            msDuration: int = NotImplemented,
            durationType: KalturaDurationType = NotImplemented,
            mediaType: KalturaMediaType = NotImplemented,
            conversionQuality: str = NotImplemented,
            sourceType: KalturaSourceType = NotImplemented,
            sourceVersion: str = NotImplemented,
            searchProviderType: KalturaSearchProviderType = NotImplemented,
            searchProviderId: str = NotImplemented,
            creditUserName: str = NotImplemented,
            creditUrl: str = NotImplemented,
            mediaDate: int = NotImplemented,
            dataUrl: str = NotImplemented,
            flavorParamsIds: str = NotImplemented,
            isTrimDisabled: KalturaNullableBoolean = NotImplemented,
            streams: List[KalturaStreamContainer] = NotImplemented,
            offlineMessage: str = NotImplemented,
            recordStatus: KalturaRecordStatus = NotImplemented,
            dvrStatus: KalturaDVRStatus = NotImplemented,
            dvrWindow: int = NotImplemented,
            lastElapsedRecordingTime: int = NotImplemented,
            liveStreamConfigurations: List[KalturaLiveStreamConfiguration] = NotImplemented,
            recordedEntryId: str = NotImplemented,
            pushPublishEnabled: KalturaLivePublishStatus = NotImplemented,
            publishConfigurations: List[KalturaLiveStreamPushPublishConfiguration] = NotImplemented,
            firstBroadcast: int = NotImplemented,
            lastBroadcast: int = NotImplemented,
            currentBroadcastStartTime: float = NotImplemented,
            recordingOptions: KalturaLiveEntryRecordingOptions = NotImplemented,
            liveStatus: KalturaEntryServerNodeStatus = NotImplemented,
            segmentDuration: int = NotImplemented,
            explicitLive: KalturaNullableBoolean = NotImplemented,
            viewMode: KalturaViewMode = NotImplemented,
            recordingStatus: KalturaRecordingStatus = NotImplemented,
            lastBroadcastEndTime: int = NotImplemented,
            broadcastTime: int = NotImplemented,
            playlistId: str = NotImplemented,
            repeat: KalturaNullableBoolean = NotImplemented): ...

    def getPlaylistId(self) -> str: ...
    def setPlaylistId(self, newPlaylistId: str) -> None: ...
    def getRepeat(self) -> KalturaNullableBoolean: ...
    def setRepeat(self, newRepeat: KalturaNullableBoolean) -> None: ...

class KalturaLiveChannelSegment(KalturaObjectBase):
    id: int
    partnerId: int
    createdAt: int
    updatedAt: int
    name: str
    description: str
    tags: str
    type: KalturaLiveChannelSegmentType
    status: KalturaLiveChannelSegmentStatus
    channelId: str
    entryId: str
    triggerType: KalturaLiveChannelSegmentTriggerType
    triggerSegmentId: int
    startTime: float
    duration: float
    def __init__(self,
            id: int = NotImplemented,
            partnerId: int = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            name: str = NotImplemented,
            description: str = NotImplemented,
            tags: str = NotImplemented,
            type: KalturaLiveChannelSegmentType = NotImplemented,
            status: KalturaLiveChannelSegmentStatus = NotImplemented,
            channelId: str = NotImplemented,
            entryId: str = NotImplemented,
            triggerType: KalturaLiveChannelSegmentTriggerType = NotImplemented,
            triggerSegmentId: int = NotImplemented,
            startTime: float = NotImplemented,
            duration: float = NotImplemented): ...

    def getId(self) -> int: ...
    def getPartnerId(self) -> int: ...
    def getCreatedAt(self) -> int: ...
    def getUpdatedAt(self) -> int: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getDescription(self) -> str: ...
    def setDescription(self, newDescription: str) -> None: ...
    def getTags(self) -> str: ...
    def setTags(self, newTags: str) -> None: ...
    def getType(self) -> KalturaLiveChannelSegmentType: ...
    def setType(self, newType: KalturaLiveChannelSegmentType) -> None: ...
    def getStatus(self) -> KalturaLiveChannelSegmentStatus: ...
    def getChannelId(self) -> str: ...
    def setChannelId(self, newChannelId: str) -> None: ...
    def getEntryId(self) -> str: ...
    def setEntryId(self, newEntryId: str) -> None: ...
    def getTriggerType(self) -> KalturaLiveChannelSegmentTriggerType: ...
    def setTriggerType(self, newTriggerType: KalturaLiveChannelSegmentTriggerType) -> None: ...
    def getTriggerSegmentId(self) -> int: ...
    def setTriggerSegmentId(self, newTriggerSegmentId: int) -> None: ...
    def getStartTime(self) -> float: ...
    def setStartTime(self, newStartTime: float) -> None: ...
    def getDuration(self) -> float: ...
    def setDuration(self, newDuration: float) -> None: ...

class KalturaLiveEntryServerNodeRecordingInfo(KalturaObjectBase):
    recordedEntryId: str
    duration: int
    recordingStatus: KalturaEntryServerNodeRecordingStatus
    def __init__(self,
            recordedEntryId: str = NotImplemented,
            duration: int = NotImplemented,
            recordingStatus: KalturaEntryServerNodeRecordingStatus = NotImplemented): ...

    def getRecordedEntryId(self) -> str: ...
    def setRecordedEntryId(self, newRecordedEntryId: str) -> None: ...
    def getDuration(self) -> int: ...
    def setDuration(self, newDuration: int) -> None: ...
    def getRecordingStatus(self) -> KalturaEntryServerNodeRecordingStatus: ...
    def setRecordingStatus(self, newRecordingStatus: KalturaEntryServerNodeRecordingStatus) -> None: ...

class KalturaLiveReportExportParams(KalturaObjectBase):
    entryIds: str
    recpientEmail: str
    timeZoneOffset: int
    applicationUrlTemplate: str
    def __init__(self,
            entryIds: str = NotImplemented,
            recpientEmail: str = NotImplemented,
            timeZoneOffset: int = NotImplemented,
            applicationUrlTemplate: str = NotImplemented): ...

    def getEntryIds(self) -> str: ...
    def setEntryIds(self, newEntryIds: str) -> None: ...
    def getRecpientEmail(self) -> str: ...
    def setRecpientEmail(self, newRecpientEmail: str) -> None: ...
    def getTimeZoneOffset(self) -> int: ...
    def setTimeZoneOffset(self, newTimeZoneOffset: int) -> None: ...
    def getApplicationUrlTemplate(self) -> str: ...
    def setApplicationUrlTemplate(self, newApplicationUrlTemplate: str) -> None: ...

class KalturaLiveReportExportResponse(KalturaObjectBase):
    referenceJobId: int
    reportEmail: str
    def __init__(self,
            referenceJobId: int = NotImplemented,
            reportEmail: str = NotImplemented): ...

    def getReferenceJobId(self) -> int: ...
    def setReferenceJobId(self, newReferenceJobId: int) -> None: ...
    def getReportEmail(self) -> str: ...
    def setReportEmail(self, newReportEmail: str) -> None: ...

class KalturaLiveReportInputFilter(KalturaObjectBase):
    entryIds: str
    fromTime: int
    toTime: int
    live: KalturaNullableBoolean
    orderBy: KalturaLiveReportOrderBy
    def __init__(self,
            entryIds: str = NotImplemented,
            fromTime: int = NotImplemented,
            toTime: int = NotImplemented,
            live: KalturaNullableBoolean = NotImplemented,
            orderBy: KalturaLiveReportOrderBy = NotImplemented): ...

    def getEntryIds(self) -> str: ...
    def setEntryIds(self, newEntryIds: str) -> None: ...
    def getFromTime(self) -> int: ...
    def setFromTime(self, newFromTime: int) -> None: ...
    def getToTime(self) -> int: ...
    def setToTime(self, newToTime: int) -> None: ...
    def getLive(self) -> KalturaNullableBoolean: ...
    def setLive(self, newLive: KalturaNullableBoolean) -> None: ...
    def getOrderBy(self) -> KalturaLiveReportOrderBy: ...
    def setOrderBy(self, newOrderBy: KalturaLiveReportOrderBy) -> None: ...

class KalturaLiveStats(KalturaObjectBase):
    audience: int
    dvrAudience: int
    avgBitrate: float
    bufferTime: int
    plays: int
    secondsViewed: int
    startEvent: int
    timestamp: int
    def __init__(self,
            audience: int = NotImplemented,
            dvrAudience: int = NotImplemented,
            avgBitrate: float = NotImplemented,
            bufferTime: int = NotImplemented,
            plays: int = NotImplemented,
            secondsViewed: int = NotImplemented,
            startEvent: int = NotImplemented,
            timestamp: int = NotImplemented): ...

    def getAudience(self) -> int: ...
    def setAudience(self, newAudience: int) -> None: ...
    def getDvrAudience(self) -> int: ...
    def setDvrAudience(self, newDvrAudience: int) -> None: ...
    def getAvgBitrate(self) -> float: ...
    def setAvgBitrate(self, newAvgBitrate: float) -> None: ...
    def getBufferTime(self) -> int: ...
    def setBufferTime(self, newBufferTime: int) -> None: ...
    def getPlays(self) -> int: ...
    def setPlays(self, newPlays: int) -> None: ...
    def getSecondsViewed(self) -> int: ...
    def setSecondsViewed(self, newSecondsViewed: int) -> None: ...
    def getStartEvent(self) -> int: ...
    def setStartEvent(self, newStartEvent: int) -> None: ...
    def getTimestamp(self) -> int: ...
    def setTimestamp(self, newTimestamp: int) -> None: ...

class KalturaLiveStatsEvent(KalturaObjectBase):
    partnerId: int
    entryId: str
    eventType: KalturaLiveStatsEventType
    sessionId: str
    eventIndex: int
    bufferTime: int
    bitrate: int
    referrer: str
    isLive: bool
    startTime: str
    deliveryType: KalturaPlaybackProtocol
    def __init__(self,
            partnerId: int = NotImplemented,
            entryId: str = NotImplemented,
            eventType: KalturaLiveStatsEventType = NotImplemented,
            sessionId: str = NotImplemented,
            eventIndex: int = NotImplemented,
            bufferTime: int = NotImplemented,
            bitrate: int = NotImplemented,
            referrer: str = NotImplemented,
            isLive: bool = NotImplemented,
            startTime: str = NotImplemented,
            deliveryType: KalturaPlaybackProtocol = NotImplemented): ...

    def getPartnerId(self) -> int: ...
    def setPartnerId(self, newPartnerId: int) -> None: ...
    def getEntryId(self) -> str: ...
    def setEntryId(self, newEntryId: str) -> None: ...
    def getEventType(self) -> KalturaLiveStatsEventType: ...
    def setEventType(self, newEventType: KalturaLiveStatsEventType) -> None: ...
    def getSessionId(self) -> str: ...
    def setSessionId(self, newSessionId: str) -> None: ...
    def getEventIndex(self) -> int: ...
    def setEventIndex(self, newEventIndex: int) -> None: ...
    def getBufferTime(self) -> int: ...
    def setBufferTime(self, newBufferTime: int) -> None: ...
    def getBitrate(self) -> int: ...
    def setBitrate(self, newBitrate: int) -> None: ...
    def getReferrer(self) -> str: ...
    def setReferrer(self, newReferrer: str) -> None: ...
    def getIsLive(self) -> bool: ...
    def setIsLive(self, newIsLive: bool) -> None: ...
    def getStartTime(self) -> str: ...
    def setStartTime(self, newStartTime: str) -> None: ...
    def getDeliveryType(self) -> KalturaPlaybackProtocol: ...
    def setDeliveryType(self, newDeliveryType: KalturaPlaybackProtocol) -> None: ...

class KalturaLiveStreamBitrate(KalturaObjectBase):
    bitrate: int
    width: int
    height: int
    tags: str
    def __init__(self,
            bitrate: int = NotImplemented,
            width: int = NotImplemented,
            height: int = NotImplemented,
            tags: str = NotImplemented): ...

    def getBitrate(self) -> int: ...
    def setBitrate(self, newBitrate: int) -> None: ...
    def getWidth(self) -> int: ...
    def setWidth(self, newWidth: int) -> None: ...
    def getHeight(self) -> int: ...
    def setHeight(self, newHeight: int) -> None: ...
    def getTags(self) -> str: ...
    def setTags(self, newTags: str) -> None: ...

class KalturaLiveStreamDetails(KalturaObjectBase):
    primaryStreamStatus: KalturaEntryServerNodeStatus
    secondaryStreamStatus: KalturaEntryServerNodeStatus
    viewMode: KalturaViewMode
    wasBroadcast: bool
    broadcastStatus: KalturaLiveStreamBroadcastStatus
    def __init__(self,
            primaryStreamStatus: KalturaEntryServerNodeStatus = NotImplemented,
            secondaryStreamStatus: KalturaEntryServerNodeStatus = NotImplemented,
            viewMode: KalturaViewMode = NotImplemented,
            wasBroadcast: bool = NotImplemented,
            broadcastStatus: KalturaLiveStreamBroadcastStatus = NotImplemented): ...

    def getPrimaryStreamStatus(self) -> KalturaEntryServerNodeStatus: ...
    def setPrimaryStreamStatus(self, newPrimaryStreamStatus: KalturaEntryServerNodeStatus) -> None: ...
    def getSecondaryStreamStatus(self) -> KalturaEntryServerNodeStatus: ...
    def setSecondaryStreamStatus(self, newSecondaryStreamStatus: KalturaEntryServerNodeStatus) -> None: ...
    def getViewMode(self) -> KalturaViewMode: ...
    def setViewMode(self, newViewMode: KalturaViewMode) -> None: ...
    def getWasBroadcast(self) -> bool: ...
    def setWasBroadcast(self, newWasBroadcast: bool) -> None: ...
    def getBroadcastStatus(self) -> KalturaLiveStreamBroadcastStatus: ...
    def setBroadcastStatus(self, newBroadcastStatus: KalturaLiveStreamBroadcastStatus) -> None: ...

class KalturaLiveStreamEntry(KalturaLiveEntry):
    streamRemoteId: str
    streamRemoteBackupId: str
    bitrates: List[KalturaLiveStreamBitrate]
    primaryBroadcastingUrl: str
    secondaryBroadcastingUrl: str
    primarySecuredBroadcastingUrl: str
    secondarySecuredBroadcastingUrl: str
    primaryRtspBroadcastingUrl: str
    secondaryRtspBroadcastingUrl: str
    primarySrtBroadcastingUrl: str
    primarySrtStreamId: str
    secondarySrtBroadcastingUrl: str
    secondarySrtStreamId: str
    streamName: str
    streamUrl: str
    hlsStreamUrl: str
    urlManager: str
    encodingIP1: str
    encodingIP2: str
    streamPassword: str
    streamUsername: str
    srtPass: str
    primaryServerNodeId: int
    sipToken: str
    sipSourceType: KalturaSipSourceType
    def __init__(self,
            id: str = NotImplemented,
            name: str = NotImplemented,
            multiLingual_name: List[KalturaMultiLingualString] = NotImplemented,
            description: str = NotImplemented,
            multiLingual_description: List[KalturaMultiLingualString] = NotImplemented,
            partnerId: int = NotImplemented,
            userId: str = NotImplemented,
            creatorId: str = NotImplemented,
            tags: str = NotImplemented,
            multiLingual_tags: List[KalturaMultiLingualString] = NotImplemented,
            adminTags: str = NotImplemented,
            categories: str = NotImplemented,
            categoriesIds: str = NotImplemented,
            status: KalturaEntryStatus = NotImplemented,
            moderationStatus: KalturaEntryModerationStatus = NotImplemented,
            moderationCount: int = NotImplemented,
            type: KalturaEntryType = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            rank: float = NotImplemented,
            totalRank: int = NotImplemented,
            votes: int = NotImplemented,
            groupId: int = NotImplemented,
            partnerData: str = NotImplemented,
            downloadUrl: str = NotImplemented,
            searchText: str = NotImplemented,
            licenseType: KalturaLicenseType = NotImplemented,
            version: int = NotImplemented,
            thumbnailUrl: str = NotImplemented,
            accessControlId: int = NotImplemented,
            startDate: int = NotImplemented,
            endDate: int = NotImplemented,
            referenceId: str = NotImplemented,
            replacingEntryId: str = NotImplemented,
            replacedEntryId: str = NotImplemented,
            replacementStatus: KalturaEntryReplacementStatus = NotImplemented,
            partnerSortValue: int = NotImplemented,
            conversionProfileId: int = NotImplemented,
            redirectEntryId: str = NotImplemented,
            rootEntryId: str = NotImplemented,
            parentEntryId: str = NotImplemented,
            operationAttributes: List[KalturaOperationAttributes] = NotImplemented,
            entitledUsersEdit: str = NotImplemented,
            entitledUsersPublish: str = NotImplemented,
            entitledUsersView: str = NotImplemented,
            capabilities: str = NotImplemented,
            templateEntryId: str = NotImplemented,
            displayInSearch: KalturaEntryDisplayInSearchType = NotImplemented,
            application: KalturaEntryApplication = NotImplemented,
            applicationVersion: str = NotImplemented,
            blockAutoTranscript: bool = NotImplemented,
            defaultLanguage: str = NotImplemented,
            responseLanguage: str = NotImplemented,
            plays: int = NotImplemented,
            views: int = NotImplemented,
            lastPlayedAt: int = NotImplemented,
            width: int = NotImplemented,
            height: int = NotImplemented,
            duration: int = NotImplemented,
            msDuration: int = NotImplemented,
            durationType: KalturaDurationType = NotImplemented,
            mediaType: KalturaMediaType = NotImplemented,
            conversionQuality: str = NotImplemented,
            sourceType: KalturaSourceType = NotImplemented,
            sourceVersion: str = NotImplemented,
            searchProviderType: KalturaSearchProviderType = NotImplemented,
            searchProviderId: str = NotImplemented,
            creditUserName: str = NotImplemented,
            creditUrl: str = NotImplemented,
            mediaDate: int = NotImplemented,
            dataUrl: str = NotImplemented,
            flavorParamsIds: str = NotImplemented,
            isTrimDisabled: KalturaNullableBoolean = NotImplemented,
            streams: List[KalturaStreamContainer] = NotImplemented,
            offlineMessage: str = NotImplemented,
            recordStatus: KalturaRecordStatus = NotImplemented,
            dvrStatus: KalturaDVRStatus = NotImplemented,
            dvrWindow: int = NotImplemented,
            lastElapsedRecordingTime: int = NotImplemented,
            liveStreamConfigurations: List[KalturaLiveStreamConfiguration] = NotImplemented,
            recordedEntryId: str = NotImplemented,
            pushPublishEnabled: KalturaLivePublishStatus = NotImplemented,
            publishConfigurations: List[KalturaLiveStreamPushPublishConfiguration] = NotImplemented,
            firstBroadcast: int = NotImplemented,
            lastBroadcast: int = NotImplemented,
            currentBroadcastStartTime: float = NotImplemented,
            recordingOptions: KalturaLiveEntryRecordingOptions = NotImplemented,
            liveStatus: KalturaEntryServerNodeStatus = NotImplemented,
            segmentDuration: int = NotImplemented,
            explicitLive: KalturaNullableBoolean = NotImplemented,
            viewMode: KalturaViewMode = NotImplemented,
            recordingStatus: KalturaRecordingStatus = NotImplemented,
            lastBroadcastEndTime: int = NotImplemented,
            broadcastTime: int = NotImplemented,
            streamRemoteId: str = NotImplemented,
            streamRemoteBackupId: str = NotImplemented,
            bitrates: List[KalturaLiveStreamBitrate] = NotImplemented,
            primaryBroadcastingUrl: str = NotImplemented,
            secondaryBroadcastingUrl: str = NotImplemented,
            primarySecuredBroadcastingUrl: str = NotImplemented,
            secondarySecuredBroadcastingUrl: str = NotImplemented,
            primaryRtspBroadcastingUrl: str = NotImplemented,
            secondaryRtspBroadcastingUrl: str = NotImplemented,
            primarySrtBroadcastingUrl: str = NotImplemented,
            primarySrtStreamId: str = NotImplemented,
            secondarySrtBroadcastingUrl: str = NotImplemented,
            secondarySrtStreamId: str = NotImplemented,
            streamName: str = NotImplemented,
            streamUrl: str = NotImplemented,
            hlsStreamUrl: str = NotImplemented,
            urlManager: str = NotImplemented,
            encodingIP1: str = NotImplemented,
            encodingIP2: str = NotImplemented,
            streamPassword: str = NotImplemented,
            streamUsername: str = NotImplemented,
            srtPass: str = NotImplemented,
            primaryServerNodeId: int = NotImplemented,
            sipToken: str = NotImplemented,
            sipSourceType: KalturaSipSourceType = NotImplemented): ...

    def getStreamRemoteId(self) -> str: ...
    def getStreamRemoteBackupId(self) -> str: ...
    def getBitrates(self) -> List[KalturaLiveStreamBitrate]: ...
    def setBitrates(self, newBitrates: List[KalturaLiveStreamBitrate]) -> None: ...
    def getPrimaryBroadcastingUrl(self) -> str: ...
    def setPrimaryBroadcastingUrl(self, newPrimaryBroadcastingUrl: str) -> None: ...
    def getSecondaryBroadcastingUrl(self) -> str: ...
    def setSecondaryBroadcastingUrl(self, newSecondaryBroadcastingUrl: str) -> None: ...
    def getPrimarySecuredBroadcastingUrl(self) -> str: ...
    def setPrimarySecuredBroadcastingUrl(self, newPrimarySecuredBroadcastingUrl: str) -> None: ...
    def getSecondarySecuredBroadcastingUrl(self) -> str: ...
    def setSecondarySecuredBroadcastingUrl(self, newSecondarySecuredBroadcastingUrl: str) -> None: ...
    def getPrimaryRtspBroadcastingUrl(self) -> str: ...
    def setPrimaryRtspBroadcastingUrl(self, newPrimaryRtspBroadcastingUrl: str) -> None: ...
    def getSecondaryRtspBroadcastingUrl(self) -> str: ...
    def setSecondaryRtspBroadcastingUrl(self, newSecondaryRtspBroadcastingUrl: str) -> None: ...
    def getPrimarySrtBroadcastingUrl(self) -> str: ...
    def setPrimarySrtBroadcastingUrl(self, newPrimarySrtBroadcastingUrl: str) -> None: ...
    def getPrimarySrtStreamId(self) -> str: ...
    def setPrimarySrtStreamId(self, newPrimarySrtStreamId: str) -> None: ...
    def getSecondarySrtBroadcastingUrl(self) -> str: ...
    def setSecondarySrtBroadcastingUrl(self, newSecondarySrtBroadcastingUrl: str) -> None: ...
    def getSecondarySrtStreamId(self) -> str: ...
    def setSecondarySrtStreamId(self, newSecondarySrtStreamId: str) -> None: ...
    def getStreamName(self) -> str: ...
    def setStreamName(self, newStreamName: str) -> None: ...
    def getStreamUrl(self) -> str: ...
    def setStreamUrl(self, newStreamUrl: str) -> None: ...
    def getHlsStreamUrl(self) -> str: ...
    def setHlsStreamUrl(self, newHlsStreamUrl: str) -> None: ...
    def getUrlManager(self) -> str: ...
    def setUrlManager(self, newUrlManager: str) -> None: ...
    def getEncodingIP1(self) -> str: ...
    def setEncodingIP1(self, newEncodingIP1: str) -> None: ...
    def getEncodingIP2(self) -> str: ...
    def setEncodingIP2(self, newEncodingIP2: str) -> None: ...
    def getStreamPassword(self) -> str: ...
    def setStreamPassword(self, newStreamPassword: str) -> None: ...
    def getStreamUsername(self) -> str: ...
    def getSrtPass(self) -> str: ...
    def setSrtPass(self, newSrtPass: str) -> None: ...
    def getPrimaryServerNodeId(self) -> int: ...
    def getSipToken(self) -> str: ...
    def getSipSourceType(self) -> KalturaSipSourceType: ...

class KalturaLiveStreamParams(KalturaObjectBase):
    bitrate: int
    flavorId: str
    width: int
    height: int
    codec: str
    frameRate: int
    keyFrameInterval: float
    language: str
    def __init__(self,
            bitrate: int = NotImplemented,
            flavorId: str = NotImplemented,
            width: int = NotImplemented,
            height: int = NotImplemented,
            codec: str = NotImplemented,
            frameRate: int = NotImplemented,
            keyFrameInterval: float = NotImplemented,
            language: str = NotImplemented): ...

    def getBitrate(self) -> int: ...
    def setBitrate(self, newBitrate: int) -> None: ...
    def getFlavorId(self) -> str: ...
    def setFlavorId(self, newFlavorId: str) -> None: ...
    def getWidth(self) -> int: ...
    def setWidth(self, newWidth: int) -> None: ...
    def getHeight(self) -> int: ...
    def setHeight(self, newHeight: int) -> None: ...
    def getCodec(self) -> str: ...
    def setCodec(self, newCodec: str) -> None: ...
    def getFrameRate(self) -> int: ...
    def setFrameRate(self, newFrameRate: int) -> None: ...
    def getKeyFrameInterval(self) -> float: ...
    def setKeyFrameInterval(self, newKeyFrameInterval: float) -> None: ...
    def getLanguage(self) -> str: ...
    def setLanguage(self, newLanguage: str) -> None: ...

class KalturaLiveStreamStats(KalturaObjectBase):
    liveViewers: int
    def __init__(self,
            liveViewers: int = NotImplemented): ...

    def getLiveViewers(self) -> int: ...
    def setLiveViewers(self, newLiveViewers: int) -> None: ...

class KalturaBaseEntryBaseFilter(KalturaRelatedFilter):
    idEqual: str
    idIn: str
    idNotIn: str
    nameLike: str
    nameMultiLikeOr: str
    nameMultiLikeAnd: str
    nameEqual: str
    partnerIdEqual: int
    partnerIdIn: str
    userIdEqual: str
    userIdIn: str
    userIdNotIn: str
    creatorIdEqual: str
    tagsLike: str
    tagsMultiLikeOr: str
    tagsMultiLikeAnd: str
    adminTagsLike: str
    adminTagsMultiLikeOr: str
    adminTagsMultiLikeAnd: str
    categoriesMatchAnd: str
    categoriesMatchOr: str
    categoriesNotContains: str
    categoriesIdsMatchAnd: str
    categoriesIdsMatchOr: str
    categoriesIdsNotContains: str
    categoriesIdsEmpty: KalturaNullableBoolean
    statusEqual: KalturaEntryStatus
    statusNotEqual: KalturaEntryStatus
    statusIn: str
    statusNotIn: str
    moderationStatusEqual: KalturaEntryModerationStatus
    moderationStatusNotEqual: KalturaEntryModerationStatus
    moderationStatusIn: str
    moderationStatusNotIn: str
    typeEqual: KalturaEntryType
    typeIn: str
    createdAtGreaterThanOrEqual: int
    createdAtLessThanOrEqual: int
    updatedAtGreaterThanOrEqual: int
    updatedAtLessThanOrEqual: int
    rankLessThanOrEqual: float
    rankGreaterThanOrEqual: float
    totalRankLessThanOrEqual: int
    totalRankGreaterThanOrEqual: int
    groupIdEqual: int
    searchTextMatchAnd: str
    searchTextMatchOr: str
    accessControlIdEqual: int
    accessControlIdIn: str
    startDateGreaterThanOrEqual: int
    startDateLessThanOrEqual: int
    startDateGreaterThanOrEqualOrNull: int
    startDateLessThanOrEqualOrNull: int
    endDateGreaterThanOrEqual: int
    endDateLessThanOrEqual: int
    endDateGreaterThanOrEqualOrNull: int
    endDateLessThanOrEqualOrNull: int
    referenceIdEqual: str
    referenceIdIn: str
    replacingEntryIdEqual: str
    replacingEntryIdIn: str
    replacedEntryIdEqual: str
    replacedEntryIdIn: str
    replacementStatusEqual: KalturaEntryReplacementStatus
    replacementStatusIn: str
    partnerSortValueGreaterThanOrEqual: int
    partnerSortValueLessThanOrEqual: int
    rootEntryIdEqual: str
    rootEntryIdIn: str
    parentEntryIdEqual: str
    entitledUsersEditMatchAnd: str
    entitledUsersEditMatchOr: str
    entitledUsersPublishMatchAnd: str
    entitledUsersPublishMatchOr: str
    entitledUsersViewMatchAnd: str
    entitledUsersViewMatchOr: str
    tagsNameMultiLikeOr: str
    tagsAdminTagsMultiLikeOr: str
    tagsAdminTagsNameMultiLikeOr: str
    tagsNameMultiLikeAnd: str
    tagsAdminTagsMultiLikeAnd: str
    tagsAdminTagsNameMultiLikeAnd: str
    displayInSearchEqual: KalturaEntryDisplayInSearchType
    displayInSearchIn: str
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: str = NotImplemented,
            idIn: str = NotImplemented,
            idNotIn: str = NotImplemented,
            nameLike: str = NotImplemented,
            nameMultiLikeOr: str = NotImplemented,
            nameMultiLikeAnd: str = NotImplemented,
            nameEqual: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            userIdEqual: str = NotImplemented,
            userIdIn: str = NotImplemented,
            userIdNotIn: str = NotImplemented,
            creatorIdEqual: str = NotImplemented,
            tagsLike: str = NotImplemented,
            tagsMultiLikeOr: str = NotImplemented,
            tagsMultiLikeAnd: str = NotImplemented,
            adminTagsLike: str = NotImplemented,
            adminTagsMultiLikeOr: str = NotImplemented,
            adminTagsMultiLikeAnd: str = NotImplemented,
            categoriesMatchAnd: str = NotImplemented,
            categoriesMatchOr: str = NotImplemented,
            categoriesNotContains: str = NotImplemented,
            categoriesIdsMatchAnd: str = NotImplemented,
            categoriesIdsMatchOr: str = NotImplemented,
            categoriesIdsNotContains: str = NotImplemented,
            categoriesIdsEmpty: KalturaNullableBoolean = NotImplemented,
            statusEqual: KalturaEntryStatus = NotImplemented,
            statusNotEqual: KalturaEntryStatus = NotImplemented,
            statusIn: str = NotImplemented,
            statusNotIn: str = NotImplemented,
            moderationStatusEqual: KalturaEntryModerationStatus = NotImplemented,
            moderationStatusNotEqual: KalturaEntryModerationStatus = NotImplemented,
            moderationStatusIn: str = NotImplemented,
            moderationStatusNotIn: str = NotImplemented,
            typeEqual: KalturaEntryType = NotImplemented,
            typeIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            rankLessThanOrEqual: float = NotImplemented,
            rankGreaterThanOrEqual: float = NotImplemented,
            totalRankLessThanOrEqual: int = NotImplemented,
            totalRankGreaterThanOrEqual: int = NotImplemented,
            groupIdEqual: int = NotImplemented,
            searchTextMatchAnd: str = NotImplemented,
            searchTextMatchOr: str = NotImplemented,
            accessControlIdEqual: int = NotImplemented,
            accessControlIdIn: str = NotImplemented,
            startDateGreaterThanOrEqual: int = NotImplemented,
            startDateLessThanOrEqual: int = NotImplemented,
            startDateGreaterThanOrEqualOrNull: int = NotImplemented,
            startDateLessThanOrEqualOrNull: int = NotImplemented,
            endDateGreaterThanOrEqual: int = NotImplemented,
            endDateLessThanOrEqual: int = NotImplemented,
            endDateGreaterThanOrEqualOrNull: int = NotImplemented,
            endDateLessThanOrEqualOrNull: int = NotImplemented,
            referenceIdEqual: str = NotImplemented,
            referenceIdIn: str = NotImplemented,
            replacingEntryIdEqual: str = NotImplemented,
            replacingEntryIdIn: str = NotImplemented,
            replacedEntryIdEqual: str = NotImplemented,
            replacedEntryIdIn: str = NotImplemented,
            replacementStatusEqual: KalturaEntryReplacementStatus = NotImplemented,
            replacementStatusIn: str = NotImplemented,
            partnerSortValueGreaterThanOrEqual: int = NotImplemented,
            partnerSortValueLessThanOrEqual: int = NotImplemented,
            rootEntryIdEqual: str = NotImplemented,
            rootEntryIdIn: str = NotImplemented,
            parentEntryIdEqual: str = NotImplemented,
            entitledUsersEditMatchAnd: str = NotImplemented,
            entitledUsersEditMatchOr: str = NotImplemented,
            entitledUsersPublishMatchAnd: str = NotImplemented,
            entitledUsersPublishMatchOr: str = NotImplemented,
            entitledUsersViewMatchAnd: str = NotImplemented,
            entitledUsersViewMatchOr: str = NotImplemented,
            tagsNameMultiLikeOr: str = NotImplemented,
            tagsAdminTagsMultiLikeOr: str = NotImplemented,
            tagsAdminTagsNameMultiLikeOr: str = NotImplemented,
            tagsNameMultiLikeAnd: str = NotImplemented,
            tagsAdminTagsMultiLikeAnd: str = NotImplemented,
            tagsAdminTagsNameMultiLikeAnd: str = NotImplemented,
            displayInSearchEqual: KalturaEntryDisplayInSearchType = NotImplemented,
            displayInSearchIn: str = NotImplemented): ...

    def getIdEqual(self) -> str: ...
    def setIdEqual(self, newIdEqual: str) -> None: ...
    def getIdIn(self) -> str: ...
    def setIdIn(self, newIdIn: str) -> None: ...
    def getIdNotIn(self) -> str: ...
    def setIdNotIn(self, newIdNotIn: str) -> None: ...
    def getNameLike(self) -> str: ...
    def setNameLike(self, newNameLike: str) -> None: ...
    def getNameMultiLikeOr(self) -> str: ...
    def setNameMultiLikeOr(self, newNameMultiLikeOr: str) -> None: ...
    def getNameMultiLikeAnd(self) -> str: ...
    def setNameMultiLikeAnd(self, newNameMultiLikeAnd: str) -> None: ...
    def getNameEqual(self) -> str: ...
    def setNameEqual(self, newNameEqual: str) -> None: ...
    def getPartnerIdEqual(self) -> int: ...
    def setPartnerIdEqual(self, newPartnerIdEqual: int) -> None: ...
    def getPartnerIdIn(self) -> str: ...
    def setPartnerIdIn(self, newPartnerIdIn: str) -> None: ...
    def getUserIdEqual(self) -> str: ...
    def setUserIdEqual(self, newUserIdEqual: str) -> None: ...
    def getUserIdIn(self) -> str: ...
    def setUserIdIn(self, newUserIdIn: str) -> None: ...
    def getUserIdNotIn(self) -> str: ...
    def setUserIdNotIn(self, newUserIdNotIn: str) -> None: ...
    def getCreatorIdEqual(self) -> str: ...
    def setCreatorIdEqual(self, newCreatorIdEqual: str) -> None: ...
    def getTagsLike(self) -> str: ...
    def setTagsLike(self, newTagsLike: str) -> None: ...
    def getTagsMultiLikeOr(self) -> str: ...
    def setTagsMultiLikeOr(self, newTagsMultiLikeOr: str) -> None: ...
    def getTagsMultiLikeAnd(self) -> str: ...
    def setTagsMultiLikeAnd(self, newTagsMultiLikeAnd: str) -> None: ...
    def getAdminTagsLike(self) -> str: ...
    def setAdminTagsLike(self, newAdminTagsLike: str) -> None: ...
    def getAdminTagsMultiLikeOr(self) -> str: ...
    def setAdminTagsMultiLikeOr(self, newAdminTagsMultiLikeOr: str) -> None: ...
    def getAdminTagsMultiLikeAnd(self) -> str: ...
    def setAdminTagsMultiLikeAnd(self, newAdminTagsMultiLikeAnd: str) -> None: ...
    def getCategoriesMatchAnd(self) -> str: ...
    def setCategoriesMatchAnd(self, newCategoriesMatchAnd: str) -> None: ...
    def getCategoriesMatchOr(self) -> str: ...
    def setCategoriesMatchOr(self, newCategoriesMatchOr: str) -> None: ...
    def getCategoriesNotContains(self) -> str: ...
    def setCategoriesNotContains(self, newCategoriesNotContains: str) -> None: ...
    def getCategoriesIdsMatchAnd(self) -> str: ...
    def setCategoriesIdsMatchAnd(self, newCategoriesIdsMatchAnd: str) -> None: ...
    def getCategoriesIdsMatchOr(self) -> str: ...
    def setCategoriesIdsMatchOr(self, newCategoriesIdsMatchOr: str) -> None: ...
    def getCategoriesIdsNotContains(self) -> str: ...
    def setCategoriesIdsNotContains(self, newCategoriesIdsNotContains: str) -> None: ...
    def getCategoriesIdsEmpty(self) -> KalturaNullableBoolean: ...
    def setCategoriesIdsEmpty(self, newCategoriesIdsEmpty: KalturaNullableBoolean) -> None: ...
    def getStatusEqual(self) -> KalturaEntryStatus: ...
    def setStatusEqual(self, newStatusEqual: KalturaEntryStatus) -> None: ...
    def getStatusNotEqual(self) -> KalturaEntryStatus: ...
    def setStatusNotEqual(self, newStatusNotEqual: KalturaEntryStatus) -> None: ...
    def getStatusIn(self) -> str: ...
    def setStatusIn(self, newStatusIn: str) -> None: ...
    def getStatusNotIn(self) -> str: ...
    def setStatusNotIn(self, newStatusNotIn: str) -> None: ...
    def getModerationStatusEqual(self) -> KalturaEntryModerationStatus: ...
    def setModerationStatusEqual(self, newModerationStatusEqual: KalturaEntryModerationStatus) -> None: ...
    def getModerationStatusNotEqual(self) -> KalturaEntryModerationStatus: ...
    def setModerationStatusNotEqual(self, newModerationStatusNotEqual: KalturaEntryModerationStatus) -> None: ...
    def getModerationStatusIn(self) -> str: ...
    def setModerationStatusIn(self, newModerationStatusIn: str) -> None: ...
    def getModerationStatusNotIn(self) -> str: ...
    def setModerationStatusNotIn(self, newModerationStatusNotIn: str) -> None: ...
    def getTypeEqual(self) -> KalturaEntryType: ...
    def setTypeEqual(self, newTypeEqual: KalturaEntryType) -> None: ...
    def getTypeIn(self) -> str: ...
    def setTypeIn(self, newTypeIn: str) -> None: ...
    def getCreatedAtGreaterThanOrEqual(self) -> int: ...
    def setCreatedAtGreaterThanOrEqual(self, newCreatedAtGreaterThanOrEqual: int) -> None: ...
    def getCreatedAtLessThanOrEqual(self) -> int: ...
    def setCreatedAtLessThanOrEqual(self, newCreatedAtLessThanOrEqual: int) -> None: ...
    def getUpdatedAtGreaterThanOrEqual(self) -> int: ...
    def setUpdatedAtGreaterThanOrEqual(self, newUpdatedAtGreaterThanOrEqual: int) -> None: ...
    def getUpdatedAtLessThanOrEqual(self) -> int: ...
    def setUpdatedAtLessThanOrEqual(self, newUpdatedAtLessThanOrEqual: int) -> None: ...
    def getRankLessThanOrEqual(self) -> float: ...
    def setRankLessThanOrEqual(self, newRankLessThanOrEqual: float) -> None: ...
    def getRankGreaterThanOrEqual(self) -> float: ...
    def setRankGreaterThanOrEqual(self, newRankGreaterThanOrEqual: float) -> None: ...
    def getTotalRankLessThanOrEqual(self) -> int: ...
    def setTotalRankLessThanOrEqual(self, newTotalRankLessThanOrEqual: int) -> None: ...
    def getTotalRankGreaterThanOrEqual(self) -> int: ...
    def setTotalRankGreaterThanOrEqual(self, newTotalRankGreaterThanOrEqual: int) -> None: ...
    def getGroupIdEqual(self) -> int: ...
    def setGroupIdEqual(self, newGroupIdEqual: int) -> None: ...
    def getSearchTextMatchAnd(self) -> str: ...
    def setSearchTextMatchAnd(self, newSearchTextMatchAnd: str) -> None: ...
    def getSearchTextMatchOr(self) -> str: ...
    def setSearchTextMatchOr(self, newSearchTextMatchOr: str) -> None: ...
    def getAccessControlIdEqual(self) -> int: ...
    def setAccessControlIdEqual(self, newAccessControlIdEqual: int) -> None: ...
    def getAccessControlIdIn(self) -> str: ...
    def setAccessControlIdIn(self, newAccessControlIdIn: str) -> None: ...
    def getStartDateGreaterThanOrEqual(self) -> int: ...
    def setStartDateGreaterThanOrEqual(self, newStartDateGreaterThanOrEqual: int) -> None: ...
    def getStartDateLessThanOrEqual(self) -> int: ...
    def setStartDateLessThanOrEqual(self, newStartDateLessThanOrEqual: int) -> None: ...
    def getStartDateGreaterThanOrEqualOrNull(self) -> int: ...
    def setStartDateGreaterThanOrEqualOrNull(self, newStartDateGreaterThanOrEqualOrNull: int) -> None: ...
    def getStartDateLessThanOrEqualOrNull(self) -> int: ...
    def setStartDateLessThanOrEqualOrNull(self, newStartDateLessThanOrEqualOrNull: int) -> None: ...
    def getEndDateGreaterThanOrEqual(self) -> int: ...
    def setEndDateGreaterThanOrEqual(self, newEndDateGreaterThanOrEqual: int) -> None: ...
    def getEndDateLessThanOrEqual(self) -> int: ...
    def setEndDateLessThanOrEqual(self, newEndDateLessThanOrEqual: int) -> None: ...
    def getEndDateGreaterThanOrEqualOrNull(self) -> int: ...
    def setEndDateGreaterThanOrEqualOrNull(self, newEndDateGreaterThanOrEqualOrNull: int) -> None: ...
    def getEndDateLessThanOrEqualOrNull(self) -> int: ...
    def setEndDateLessThanOrEqualOrNull(self, newEndDateLessThanOrEqualOrNull: int) -> None: ...
    def getReferenceIdEqual(self) -> str: ...
    def setReferenceIdEqual(self, newReferenceIdEqual: str) -> None: ...
    def getReferenceIdIn(self) -> str: ...
    def setReferenceIdIn(self, newReferenceIdIn: str) -> None: ...
    def getReplacingEntryIdEqual(self) -> str: ...
    def setReplacingEntryIdEqual(self, newReplacingEntryIdEqual: str) -> None: ...
    def getReplacingEntryIdIn(self) -> str: ...
    def setReplacingEntryIdIn(self, newReplacingEntryIdIn: str) -> None: ...
    def getReplacedEntryIdEqual(self) -> str: ...
    def setReplacedEntryIdEqual(self, newReplacedEntryIdEqual: str) -> None: ...
    def getReplacedEntryIdIn(self) -> str: ...
    def setReplacedEntryIdIn(self, newReplacedEntryIdIn: str) -> None: ...
    def getReplacementStatusEqual(self) -> KalturaEntryReplacementStatus: ...
    def setReplacementStatusEqual(self, newReplacementStatusEqual: KalturaEntryReplacementStatus) -> None: ...
    def getReplacementStatusIn(self) -> str: ...
    def setReplacementStatusIn(self, newReplacementStatusIn: str) -> None: ...
    def getPartnerSortValueGreaterThanOrEqual(self) -> int: ...
    def setPartnerSortValueGreaterThanOrEqual(self, newPartnerSortValueGreaterThanOrEqual: int) -> None: ...
    def getPartnerSortValueLessThanOrEqual(self) -> int: ...
    def setPartnerSortValueLessThanOrEqual(self, newPartnerSortValueLessThanOrEqual: int) -> None: ...
    def getRootEntryIdEqual(self) -> str: ...
    def setRootEntryIdEqual(self, newRootEntryIdEqual: str) -> None: ...
    def getRootEntryIdIn(self) -> str: ...
    def setRootEntryIdIn(self, newRootEntryIdIn: str) -> None: ...
    def getParentEntryIdEqual(self) -> str: ...
    def setParentEntryIdEqual(self, newParentEntryIdEqual: str) -> None: ...
    def getEntitledUsersEditMatchAnd(self) -> str: ...
    def setEntitledUsersEditMatchAnd(self, newEntitledUsersEditMatchAnd: str) -> None: ...
    def getEntitledUsersEditMatchOr(self) -> str: ...
    def setEntitledUsersEditMatchOr(self, newEntitledUsersEditMatchOr: str) -> None: ...
    def getEntitledUsersPublishMatchAnd(self) -> str: ...
    def setEntitledUsersPublishMatchAnd(self, newEntitledUsersPublishMatchAnd: str) -> None: ...
    def getEntitledUsersPublishMatchOr(self) -> str: ...
    def setEntitledUsersPublishMatchOr(self, newEntitledUsersPublishMatchOr: str) -> None: ...
    def getEntitledUsersViewMatchAnd(self) -> str: ...
    def setEntitledUsersViewMatchAnd(self, newEntitledUsersViewMatchAnd: str) -> None: ...
    def getEntitledUsersViewMatchOr(self) -> str: ...
    def setEntitledUsersViewMatchOr(self, newEntitledUsersViewMatchOr: str) -> None: ...
    def getTagsNameMultiLikeOr(self) -> str: ...
    def setTagsNameMultiLikeOr(self, newTagsNameMultiLikeOr: str) -> None: ...
    def getTagsAdminTagsMultiLikeOr(self) -> str: ...
    def setTagsAdminTagsMultiLikeOr(self, newTagsAdminTagsMultiLikeOr: str) -> None: ...
    def getTagsAdminTagsNameMultiLikeOr(self) -> str: ...
    def setTagsAdminTagsNameMultiLikeOr(self, newTagsAdminTagsNameMultiLikeOr: str) -> None: ...
    def getTagsNameMultiLikeAnd(self) -> str: ...
    def setTagsNameMultiLikeAnd(self, newTagsNameMultiLikeAnd: str) -> None: ...
    def getTagsAdminTagsMultiLikeAnd(self) -> str: ...
    def setTagsAdminTagsMultiLikeAnd(self, newTagsAdminTagsMultiLikeAnd: str) -> None: ...
    def getTagsAdminTagsNameMultiLikeAnd(self) -> str: ...
    def setTagsAdminTagsNameMultiLikeAnd(self, newTagsAdminTagsNameMultiLikeAnd: str) -> None: ...
    def getDisplayInSearchEqual(self) -> KalturaEntryDisplayInSearchType: ...
    def setDisplayInSearchEqual(self, newDisplayInSearchEqual: KalturaEntryDisplayInSearchType) -> None: ...
    def getDisplayInSearchIn(self) -> str: ...
    def setDisplayInSearchIn(self, newDisplayInSearchIn: str) -> None: ...

class KalturaBaseEntryFilter(KalturaBaseEntryBaseFilter):
    freeText: str
    excludedFreeTextGroups: str
    descriptionLike: str
    isRoot: KalturaNullableBoolean
    categoriesFullNameIn: str
    categoryAncestorIdIn: str
    redirectFromEntryId: str
    conversionProfileIdEqual: int
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: str = NotImplemented,
            idIn: str = NotImplemented,
            idNotIn: str = NotImplemented,
            nameLike: str = NotImplemented,
            nameMultiLikeOr: str = NotImplemented,
            nameMultiLikeAnd: str = NotImplemented,
            nameEqual: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            userIdEqual: str = NotImplemented,
            userIdIn: str = NotImplemented,
            userIdNotIn: str = NotImplemented,
            creatorIdEqual: str = NotImplemented,
            tagsLike: str = NotImplemented,
            tagsMultiLikeOr: str = NotImplemented,
            tagsMultiLikeAnd: str = NotImplemented,
            adminTagsLike: str = NotImplemented,
            adminTagsMultiLikeOr: str = NotImplemented,
            adminTagsMultiLikeAnd: str = NotImplemented,
            categoriesMatchAnd: str = NotImplemented,
            categoriesMatchOr: str = NotImplemented,
            categoriesNotContains: str = NotImplemented,
            categoriesIdsMatchAnd: str = NotImplemented,
            categoriesIdsMatchOr: str = NotImplemented,
            categoriesIdsNotContains: str = NotImplemented,
            categoriesIdsEmpty: KalturaNullableBoolean = NotImplemented,
            statusEqual: KalturaEntryStatus = NotImplemented,
            statusNotEqual: KalturaEntryStatus = NotImplemented,
            statusIn: str = NotImplemented,
            statusNotIn: str = NotImplemented,
            moderationStatusEqual: KalturaEntryModerationStatus = NotImplemented,
            moderationStatusNotEqual: KalturaEntryModerationStatus = NotImplemented,
            moderationStatusIn: str = NotImplemented,
            moderationStatusNotIn: str = NotImplemented,
            typeEqual: KalturaEntryType = NotImplemented,
            typeIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            rankLessThanOrEqual: float = NotImplemented,
            rankGreaterThanOrEqual: float = NotImplemented,
            totalRankLessThanOrEqual: int = NotImplemented,
            totalRankGreaterThanOrEqual: int = NotImplemented,
            groupIdEqual: int = NotImplemented,
            searchTextMatchAnd: str = NotImplemented,
            searchTextMatchOr: str = NotImplemented,
            accessControlIdEqual: int = NotImplemented,
            accessControlIdIn: str = NotImplemented,
            startDateGreaterThanOrEqual: int = NotImplemented,
            startDateLessThanOrEqual: int = NotImplemented,
            startDateGreaterThanOrEqualOrNull: int = NotImplemented,
            startDateLessThanOrEqualOrNull: int = NotImplemented,
            endDateGreaterThanOrEqual: int = NotImplemented,
            endDateLessThanOrEqual: int = NotImplemented,
            endDateGreaterThanOrEqualOrNull: int = NotImplemented,
            endDateLessThanOrEqualOrNull: int = NotImplemented,
            referenceIdEqual: str = NotImplemented,
            referenceIdIn: str = NotImplemented,
            replacingEntryIdEqual: str = NotImplemented,
            replacingEntryIdIn: str = NotImplemented,
            replacedEntryIdEqual: str = NotImplemented,
            replacedEntryIdIn: str = NotImplemented,
            replacementStatusEqual: KalturaEntryReplacementStatus = NotImplemented,
            replacementStatusIn: str = NotImplemented,
            partnerSortValueGreaterThanOrEqual: int = NotImplemented,
            partnerSortValueLessThanOrEqual: int = NotImplemented,
            rootEntryIdEqual: str = NotImplemented,
            rootEntryIdIn: str = NotImplemented,
            parentEntryIdEqual: str = NotImplemented,
            entitledUsersEditMatchAnd: str = NotImplemented,
            entitledUsersEditMatchOr: str = NotImplemented,
            entitledUsersPublishMatchAnd: str = NotImplemented,
            entitledUsersPublishMatchOr: str = NotImplemented,
            entitledUsersViewMatchAnd: str = NotImplemented,
            entitledUsersViewMatchOr: str = NotImplemented,
            tagsNameMultiLikeOr: str = NotImplemented,
            tagsAdminTagsMultiLikeOr: str = NotImplemented,
            tagsAdminTagsNameMultiLikeOr: str = NotImplemented,
            tagsNameMultiLikeAnd: str = NotImplemented,
            tagsAdminTagsMultiLikeAnd: str = NotImplemented,
            tagsAdminTagsNameMultiLikeAnd: str = NotImplemented,
            displayInSearchEqual: KalturaEntryDisplayInSearchType = NotImplemented,
            displayInSearchIn: str = NotImplemented,
            freeText: str = NotImplemented,
            excludedFreeTextGroups: str = NotImplemented,
            descriptionLike: str = NotImplemented,
            isRoot: KalturaNullableBoolean = NotImplemented,
            categoriesFullNameIn: str = NotImplemented,
            categoryAncestorIdIn: str = NotImplemented,
            redirectFromEntryId: str = NotImplemented,
            conversionProfileIdEqual: int = NotImplemented): ...

    def getFreeText(self) -> str: ...
    def setFreeText(self, newFreeText: str) -> None: ...
    def getExcludedFreeTextGroups(self) -> str: ...
    def setExcludedFreeTextGroups(self, newExcludedFreeTextGroups: str) -> None: ...
    def getDescriptionLike(self) -> str: ...
    def setDescriptionLike(self, newDescriptionLike: str) -> None: ...
    def getIsRoot(self) -> KalturaNullableBoolean: ...
    def setIsRoot(self, newIsRoot: KalturaNullableBoolean) -> None: ...
    def getCategoriesFullNameIn(self) -> str: ...
    def setCategoriesFullNameIn(self, newCategoriesFullNameIn: str) -> None: ...
    def getCategoryAncestorIdIn(self) -> str: ...
    def setCategoryAncestorIdIn(self, newCategoryAncestorIdIn: str) -> None: ...
    def getRedirectFromEntryId(self) -> str: ...
    def setRedirectFromEntryId(self, newRedirectFromEntryId: str) -> None: ...
    def getConversionProfileIdEqual(self) -> int: ...
    def setConversionProfileIdEqual(self, newConversionProfileIdEqual: int) -> None: ...

class KalturaPlayableEntryBaseFilter(KalturaBaseEntryFilter):
    lastPlayedAtGreaterThanOrEqual: int
    lastPlayedAtLessThanOrEqual: int
    lastPlayedAtLessThanOrEqualOrNull: int
    durationLessThan: int
    durationGreaterThan: int
    durationLessThanOrEqual: int
    durationGreaterThanOrEqual: int
    durationTypeMatchOr: str
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: str = NotImplemented,
            idIn: str = NotImplemented,
            idNotIn: str = NotImplemented,
            nameLike: str = NotImplemented,
            nameMultiLikeOr: str = NotImplemented,
            nameMultiLikeAnd: str = NotImplemented,
            nameEqual: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            userIdEqual: str = NotImplemented,
            userIdIn: str = NotImplemented,
            userIdNotIn: str = NotImplemented,
            creatorIdEqual: str = NotImplemented,
            tagsLike: str = NotImplemented,
            tagsMultiLikeOr: str = NotImplemented,
            tagsMultiLikeAnd: str = NotImplemented,
            adminTagsLike: str = NotImplemented,
            adminTagsMultiLikeOr: str = NotImplemented,
            adminTagsMultiLikeAnd: str = NotImplemented,
            categoriesMatchAnd: str = NotImplemented,
            categoriesMatchOr: str = NotImplemented,
            categoriesNotContains: str = NotImplemented,
            categoriesIdsMatchAnd: str = NotImplemented,
            categoriesIdsMatchOr: str = NotImplemented,
            categoriesIdsNotContains: str = NotImplemented,
            categoriesIdsEmpty: KalturaNullableBoolean = NotImplemented,
            statusEqual: KalturaEntryStatus = NotImplemented,
            statusNotEqual: KalturaEntryStatus = NotImplemented,
            statusIn: str = NotImplemented,
            statusNotIn: str = NotImplemented,
            moderationStatusEqual: KalturaEntryModerationStatus = NotImplemented,
            moderationStatusNotEqual: KalturaEntryModerationStatus = NotImplemented,
            moderationStatusIn: str = NotImplemented,
            moderationStatusNotIn: str = NotImplemented,
            typeEqual: KalturaEntryType = NotImplemented,
            typeIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            rankLessThanOrEqual: float = NotImplemented,
            rankGreaterThanOrEqual: float = NotImplemented,
            totalRankLessThanOrEqual: int = NotImplemented,
            totalRankGreaterThanOrEqual: int = NotImplemented,
            groupIdEqual: int = NotImplemented,
            searchTextMatchAnd: str = NotImplemented,
            searchTextMatchOr: str = NotImplemented,
            accessControlIdEqual: int = NotImplemented,
            accessControlIdIn: str = NotImplemented,
            startDateGreaterThanOrEqual: int = NotImplemented,
            startDateLessThanOrEqual: int = NotImplemented,
            startDateGreaterThanOrEqualOrNull: int = NotImplemented,
            startDateLessThanOrEqualOrNull: int = NotImplemented,
            endDateGreaterThanOrEqual: int = NotImplemented,
            endDateLessThanOrEqual: int = NotImplemented,
            endDateGreaterThanOrEqualOrNull: int = NotImplemented,
            endDateLessThanOrEqualOrNull: int = NotImplemented,
            referenceIdEqual: str = NotImplemented,
            referenceIdIn: str = NotImplemented,
            replacingEntryIdEqual: str = NotImplemented,
            replacingEntryIdIn: str = NotImplemented,
            replacedEntryIdEqual: str = NotImplemented,
            replacedEntryIdIn: str = NotImplemented,
            replacementStatusEqual: KalturaEntryReplacementStatus = NotImplemented,
            replacementStatusIn: str = NotImplemented,
            partnerSortValueGreaterThanOrEqual: int = NotImplemented,
            partnerSortValueLessThanOrEqual: int = NotImplemented,
            rootEntryIdEqual: str = NotImplemented,
            rootEntryIdIn: str = NotImplemented,
            parentEntryIdEqual: str = NotImplemented,
            entitledUsersEditMatchAnd: str = NotImplemented,
            entitledUsersEditMatchOr: str = NotImplemented,
            entitledUsersPublishMatchAnd: str = NotImplemented,
            entitledUsersPublishMatchOr: str = NotImplemented,
            entitledUsersViewMatchAnd: str = NotImplemented,
            entitledUsersViewMatchOr: str = NotImplemented,
            tagsNameMultiLikeOr: str = NotImplemented,
            tagsAdminTagsMultiLikeOr: str = NotImplemented,
            tagsAdminTagsNameMultiLikeOr: str = NotImplemented,
            tagsNameMultiLikeAnd: str = NotImplemented,
            tagsAdminTagsMultiLikeAnd: str = NotImplemented,
            tagsAdminTagsNameMultiLikeAnd: str = NotImplemented,
            displayInSearchEqual: KalturaEntryDisplayInSearchType = NotImplemented,
            displayInSearchIn: str = NotImplemented,
            freeText: str = NotImplemented,
            excludedFreeTextGroups: str = NotImplemented,
            descriptionLike: str = NotImplemented,
            isRoot: KalturaNullableBoolean = NotImplemented,
            categoriesFullNameIn: str = NotImplemented,
            categoryAncestorIdIn: str = NotImplemented,
            redirectFromEntryId: str = NotImplemented,
            conversionProfileIdEqual: int = NotImplemented,
            lastPlayedAtGreaterThanOrEqual: int = NotImplemented,
            lastPlayedAtLessThanOrEqual: int = NotImplemented,
            lastPlayedAtLessThanOrEqualOrNull: int = NotImplemented,
            durationLessThan: int = NotImplemented,
            durationGreaterThan: int = NotImplemented,
            durationLessThanOrEqual: int = NotImplemented,
            durationGreaterThanOrEqual: int = NotImplemented,
            durationTypeMatchOr: str = NotImplemented): ...

    def getLastPlayedAtGreaterThanOrEqual(self) -> int: ...
    def setLastPlayedAtGreaterThanOrEqual(self, newLastPlayedAtGreaterThanOrEqual: int) -> None: ...
    def getLastPlayedAtLessThanOrEqual(self) -> int: ...
    def setLastPlayedAtLessThanOrEqual(self, newLastPlayedAtLessThanOrEqual: int) -> None: ...
    def getLastPlayedAtLessThanOrEqualOrNull(self) -> int: ...
    def setLastPlayedAtLessThanOrEqualOrNull(self, newLastPlayedAtLessThanOrEqualOrNull: int) -> None: ...
    def getDurationLessThan(self) -> int: ...
    def setDurationLessThan(self, newDurationLessThan: int) -> None: ...
    def getDurationGreaterThan(self) -> int: ...
    def setDurationGreaterThan(self, newDurationGreaterThan: int) -> None: ...
    def getDurationLessThanOrEqual(self) -> int: ...
    def setDurationLessThanOrEqual(self, newDurationLessThanOrEqual: int) -> None: ...
    def getDurationGreaterThanOrEqual(self) -> int: ...
    def setDurationGreaterThanOrEqual(self, newDurationGreaterThanOrEqual: int) -> None: ...
    def getDurationTypeMatchOr(self) -> str: ...
    def setDurationTypeMatchOr(self, newDurationTypeMatchOr: str) -> None: ...

class KalturaPlayableEntryFilter(KalturaPlayableEntryBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: str = NotImplemented,
            idIn: str = NotImplemented,
            idNotIn: str = NotImplemented,
            nameLike: str = NotImplemented,
            nameMultiLikeOr: str = NotImplemented,
            nameMultiLikeAnd: str = NotImplemented,
            nameEqual: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            userIdEqual: str = NotImplemented,
            userIdIn: str = NotImplemented,
            userIdNotIn: str = NotImplemented,
            creatorIdEqual: str = NotImplemented,
            tagsLike: str = NotImplemented,
            tagsMultiLikeOr: str = NotImplemented,
            tagsMultiLikeAnd: str = NotImplemented,
            adminTagsLike: str = NotImplemented,
            adminTagsMultiLikeOr: str = NotImplemented,
            adminTagsMultiLikeAnd: str = NotImplemented,
            categoriesMatchAnd: str = NotImplemented,
            categoriesMatchOr: str = NotImplemented,
            categoriesNotContains: str = NotImplemented,
            categoriesIdsMatchAnd: str = NotImplemented,
            categoriesIdsMatchOr: str = NotImplemented,
            categoriesIdsNotContains: str = NotImplemented,
            categoriesIdsEmpty: KalturaNullableBoolean = NotImplemented,
            statusEqual: KalturaEntryStatus = NotImplemented,
            statusNotEqual: KalturaEntryStatus = NotImplemented,
            statusIn: str = NotImplemented,
            statusNotIn: str = NotImplemented,
            moderationStatusEqual: KalturaEntryModerationStatus = NotImplemented,
            moderationStatusNotEqual: KalturaEntryModerationStatus = NotImplemented,
            moderationStatusIn: str = NotImplemented,
            moderationStatusNotIn: str = NotImplemented,
            typeEqual: KalturaEntryType = NotImplemented,
            typeIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            rankLessThanOrEqual: float = NotImplemented,
            rankGreaterThanOrEqual: float = NotImplemented,
            totalRankLessThanOrEqual: int = NotImplemented,
            totalRankGreaterThanOrEqual: int = NotImplemented,
            groupIdEqual: int = NotImplemented,
            searchTextMatchAnd: str = NotImplemented,
            searchTextMatchOr: str = NotImplemented,
            accessControlIdEqual: int = NotImplemented,
            accessControlIdIn: str = NotImplemented,
            startDateGreaterThanOrEqual: int = NotImplemented,
            startDateLessThanOrEqual: int = NotImplemented,
            startDateGreaterThanOrEqualOrNull: int = NotImplemented,
            startDateLessThanOrEqualOrNull: int = NotImplemented,
            endDateGreaterThanOrEqual: int = NotImplemented,
            endDateLessThanOrEqual: int = NotImplemented,
            endDateGreaterThanOrEqualOrNull: int = NotImplemented,
            endDateLessThanOrEqualOrNull: int = NotImplemented,
            referenceIdEqual: str = NotImplemented,
            referenceIdIn: str = NotImplemented,
            replacingEntryIdEqual: str = NotImplemented,
            replacingEntryIdIn: str = NotImplemented,
            replacedEntryIdEqual: str = NotImplemented,
            replacedEntryIdIn: str = NotImplemented,
            replacementStatusEqual: KalturaEntryReplacementStatus = NotImplemented,
            replacementStatusIn: str = NotImplemented,
            partnerSortValueGreaterThanOrEqual: int = NotImplemented,
            partnerSortValueLessThanOrEqual: int = NotImplemented,
            rootEntryIdEqual: str = NotImplemented,
            rootEntryIdIn: str = NotImplemented,
            parentEntryIdEqual: str = NotImplemented,
            entitledUsersEditMatchAnd: str = NotImplemented,
            entitledUsersEditMatchOr: str = NotImplemented,
            entitledUsersPublishMatchAnd: str = NotImplemented,
            entitledUsersPublishMatchOr: str = NotImplemented,
            entitledUsersViewMatchAnd: str = NotImplemented,
            entitledUsersViewMatchOr: str = NotImplemented,
            tagsNameMultiLikeOr: str = NotImplemented,
            tagsAdminTagsMultiLikeOr: str = NotImplemented,
            tagsAdminTagsNameMultiLikeOr: str = NotImplemented,
            tagsNameMultiLikeAnd: str = NotImplemented,
            tagsAdminTagsMultiLikeAnd: str = NotImplemented,
            tagsAdminTagsNameMultiLikeAnd: str = NotImplemented,
            displayInSearchEqual: KalturaEntryDisplayInSearchType = NotImplemented,
            displayInSearchIn: str = NotImplemented,
            freeText: str = NotImplemented,
            excludedFreeTextGroups: str = NotImplemented,
            descriptionLike: str = NotImplemented,
            isRoot: KalturaNullableBoolean = NotImplemented,
            categoriesFullNameIn: str = NotImplemented,
            categoryAncestorIdIn: str = NotImplemented,
            redirectFromEntryId: str = NotImplemented,
            conversionProfileIdEqual: int = NotImplemented,
            lastPlayedAtGreaterThanOrEqual: int = NotImplemented,
            lastPlayedAtLessThanOrEqual: int = NotImplemented,
            lastPlayedAtLessThanOrEqualOrNull: int = NotImplemented,
            durationLessThan: int = NotImplemented,
            durationGreaterThan: int = NotImplemented,
            durationLessThanOrEqual: int = NotImplemented,
            durationGreaterThanOrEqual: int = NotImplemented,
            durationTypeMatchOr: str = NotImplemented): ...
        pass

class KalturaMediaEntryBaseFilter(KalturaPlayableEntryFilter):
    mediaTypeEqual: KalturaMediaType
    mediaTypeIn: str
    sourceTypeEqual: KalturaSourceType
    sourceTypeNotEqual: KalturaSourceType
    sourceTypeIn: str
    sourceTypeNotIn: str
    mediaDateGreaterThanOrEqual: int
    mediaDateLessThanOrEqual: int
    flavorParamsIdsMatchOr: str
    flavorParamsIdsMatchAnd: str
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: str = NotImplemented,
            idIn: str = NotImplemented,
            idNotIn: str = NotImplemented,
            nameLike: str = NotImplemented,
            nameMultiLikeOr: str = NotImplemented,
            nameMultiLikeAnd: str = NotImplemented,
            nameEqual: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            userIdEqual: str = NotImplemented,
            userIdIn: str = NotImplemented,
            userIdNotIn: str = NotImplemented,
            creatorIdEqual: str = NotImplemented,
            tagsLike: str = NotImplemented,
            tagsMultiLikeOr: str = NotImplemented,
            tagsMultiLikeAnd: str = NotImplemented,
            adminTagsLike: str = NotImplemented,
            adminTagsMultiLikeOr: str = NotImplemented,
            adminTagsMultiLikeAnd: str = NotImplemented,
            categoriesMatchAnd: str = NotImplemented,
            categoriesMatchOr: str = NotImplemented,
            categoriesNotContains: str = NotImplemented,
            categoriesIdsMatchAnd: str = NotImplemented,
            categoriesIdsMatchOr: str = NotImplemented,
            categoriesIdsNotContains: str = NotImplemented,
            categoriesIdsEmpty: KalturaNullableBoolean = NotImplemented,
            statusEqual: KalturaEntryStatus = NotImplemented,
            statusNotEqual: KalturaEntryStatus = NotImplemented,
            statusIn: str = NotImplemented,
            statusNotIn: str = NotImplemented,
            moderationStatusEqual: KalturaEntryModerationStatus = NotImplemented,
            moderationStatusNotEqual: KalturaEntryModerationStatus = NotImplemented,
            moderationStatusIn: str = NotImplemented,
            moderationStatusNotIn: str = NotImplemented,
            typeEqual: KalturaEntryType = NotImplemented,
            typeIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            rankLessThanOrEqual: float = NotImplemented,
            rankGreaterThanOrEqual: float = NotImplemented,
            totalRankLessThanOrEqual: int = NotImplemented,
            totalRankGreaterThanOrEqual: int = NotImplemented,
            groupIdEqual: int = NotImplemented,
            searchTextMatchAnd: str = NotImplemented,
            searchTextMatchOr: str = NotImplemented,
            accessControlIdEqual: int = NotImplemented,
            accessControlIdIn: str = NotImplemented,
            startDateGreaterThanOrEqual: int = NotImplemented,
            startDateLessThanOrEqual: int = NotImplemented,
            startDateGreaterThanOrEqualOrNull: int = NotImplemented,
            startDateLessThanOrEqualOrNull: int = NotImplemented,
            endDateGreaterThanOrEqual: int = NotImplemented,
            endDateLessThanOrEqual: int = NotImplemented,
            endDateGreaterThanOrEqualOrNull: int = NotImplemented,
            endDateLessThanOrEqualOrNull: int = NotImplemented,
            referenceIdEqual: str = NotImplemented,
            referenceIdIn: str = NotImplemented,
            replacingEntryIdEqual: str = NotImplemented,
            replacingEntryIdIn: str = NotImplemented,
            replacedEntryIdEqual: str = NotImplemented,
            replacedEntryIdIn: str = NotImplemented,
            replacementStatusEqual: KalturaEntryReplacementStatus = NotImplemented,
            replacementStatusIn: str = NotImplemented,
            partnerSortValueGreaterThanOrEqual: int = NotImplemented,
            partnerSortValueLessThanOrEqual: int = NotImplemented,
            rootEntryIdEqual: str = NotImplemented,
            rootEntryIdIn: str = NotImplemented,
            parentEntryIdEqual: str = NotImplemented,
            entitledUsersEditMatchAnd: str = NotImplemented,
            entitledUsersEditMatchOr: str = NotImplemented,
            entitledUsersPublishMatchAnd: str = NotImplemented,
            entitledUsersPublishMatchOr: str = NotImplemented,
            entitledUsersViewMatchAnd: str = NotImplemented,
            entitledUsersViewMatchOr: str = NotImplemented,
            tagsNameMultiLikeOr: str = NotImplemented,
            tagsAdminTagsMultiLikeOr: str = NotImplemented,
            tagsAdminTagsNameMultiLikeOr: str = NotImplemented,
            tagsNameMultiLikeAnd: str = NotImplemented,
            tagsAdminTagsMultiLikeAnd: str = NotImplemented,
            tagsAdminTagsNameMultiLikeAnd: str = NotImplemented,
            displayInSearchEqual: KalturaEntryDisplayInSearchType = NotImplemented,
            displayInSearchIn: str = NotImplemented,
            freeText: str = NotImplemented,
            excludedFreeTextGroups: str = NotImplemented,
            descriptionLike: str = NotImplemented,
            isRoot: KalturaNullableBoolean = NotImplemented,
            categoriesFullNameIn: str = NotImplemented,
            categoryAncestorIdIn: str = NotImplemented,
            redirectFromEntryId: str = NotImplemented,
            conversionProfileIdEqual: int = NotImplemented,
            lastPlayedAtGreaterThanOrEqual: int = NotImplemented,
            lastPlayedAtLessThanOrEqual: int = NotImplemented,
            lastPlayedAtLessThanOrEqualOrNull: int = NotImplemented,
            durationLessThan: int = NotImplemented,
            durationGreaterThan: int = NotImplemented,
            durationLessThanOrEqual: int = NotImplemented,
            durationGreaterThanOrEqual: int = NotImplemented,
            durationTypeMatchOr: str = NotImplemented,
            mediaTypeEqual: KalturaMediaType = NotImplemented,
            mediaTypeIn: str = NotImplemented,
            sourceTypeEqual: KalturaSourceType = NotImplemented,
            sourceTypeNotEqual: KalturaSourceType = NotImplemented,
            sourceTypeIn: str = NotImplemented,
            sourceTypeNotIn: str = NotImplemented,
            mediaDateGreaterThanOrEqual: int = NotImplemented,
            mediaDateLessThanOrEqual: int = NotImplemented,
            flavorParamsIdsMatchOr: str = NotImplemented,
            flavorParamsIdsMatchAnd: str = NotImplemented): ...

    def getMediaTypeEqual(self) -> KalturaMediaType: ...
    def setMediaTypeEqual(self, newMediaTypeEqual: KalturaMediaType) -> None: ...
    def getMediaTypeIn(self) -> str: ...
    def setMediaTypeIn(self, newMediaTypeIn: str) -> None: ...
    def getSourceTypeEqual(self) -> KalturaSourceType: ...
    def setSourceTypeEqual(self, newSourceTypeEqual: KalturaSourceType) -> None: ...
    def getSourceTypeNotEqual(self) -> KalturaSourceType: ...
    def setSourceTypeNotEqual(self, newSourceTypeNotEqual: KalturaSourceType) -> None: ...
    def getSourceTypeIn(self) -> str: ...
    def setSourceTypeIn(self, newSourceTypeIn: str) -> None: ...
    def getSourceTypeNotIn(self) -> str: ...
    def setSourceTypeNotIn(self, newSourceTypeNotIn: str) -> None: ...
    def getMediaDateGreaterThanOrEqual(self) -> int: ...
    def setMediaDateGreaterThanOrEqual(self, newMediaDateGreaterThanOrEqual: int) -> None: ...
    def getMediaDateLessThanOrEqual(self) -> int: ...
    def setMediaDateLessThanOrEqual(self, newMediaDateLessThanOrEqual: int) -> None: ...
    def getFlavorParamsIdsMatchOr(self) -> str: ...
    def setFlavorParamsIdsMatchOr(self, newFlavorParamsIdsMatchOr: str) -> None: ...
    def getFlavorParamsIdsMatchAnd(self) -> str: ...
    def setFlavorParamsIdsMatchAnd(self, newFlavorParamsIdsMatchAnd: str) -> None: ...

class KalturaMediaEntryFilter(KalturaMediaEntryBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: str = NotImplemented,
            idIn: str = NotImplemented,
            idNotIn: str = NotImplemented,
            nameLike: str = NotImplemented,
            nameMultiLikeOr: str = NotImplemented,
            nameMultiLikeAnd: str = NotImplemented,
            nameEqual: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            userIdEqual: str = NotImplemented,
            userIdIn: str = NotImplemented,
            userIdNotIn: str = NotImplemented,
            creatorIdEqual: str = NotImplemented,
            tagsLike: str = NotImplemented,
            tagsMultiLikeOr: str = NotImplemented,
            tagsMultiLikeAnd: str = NotImplemented,
            adminTagsLike: str = NotImplemented,
            adminTagsMultiLikeOr: str = NotImplemented,
            adminTagsMultiLikeAnd: str = NotImplemented,
            categoriesMatchAnd: str = NotImplemented,
            categoriesMatchOr: str = NotImplemented,
            categoriesNotContains: str = NotImplemented,
            categoriesIdsMatchAnd: str = NotImplemented,
            categoriesIdsMatchOr: str = NotImplemented,
            categoriesIdsNotContains: str = NotImplemented,
            categoriesIdsEmpty: KalturaNullableBoolean = NotImplemented,
            statusEqual: KalturaEntryStatus = NotImplemented,
            statusNotEqual: KalturaEntryStatus = NotImplemented,
            statusIn: str = NotImplemented,
            statusNotIn: str = NotImplemented,
            moderationStatusEqual: KalturaEntryModerationStatus = NotImplemented,
            moderationStatusNotEqual: KalturaEntryModerationStatus = NotImplemented,
            moderationStatusIn: str = NotImplemented,
            moderationStatusNotIn: str = NotImplemented,
            typeEqual: KalturaEntryType = NotImplemented,
            typeIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            rankLessThanOrEqual: float = NotImplemented,
            rankGreaterThanOrEqual: float = NotImplemented,
            totalRankLessThanOrEqual: int = NotImplemented,
            totalRankGreaterThanOrEqual: int = NotImplemented,
            groupIdEqual: int = NotImplemented,
            searchTextMatchAnd: str = NotImplemented,
            searchTextMatchOr: str = NotImplemented,
            accessControlIdEqual: int = NotImplemented,
            accessControlIdIn: str = NotImplemented,
            startDateGreaterThanOrEqual: int = NotImplemented,
            startDateLessThanOrEqual: int = NotImplemented,
            startDateGreaterThanOrEqualOrNull: int = NotImplemented,
            startDateLessThanOrEqualOrNull: int = NotImplemented,
            endDateGreaterThanOrEqual: int = NotImplemented,
            endDateLessThanOrEqual: int = NotImplemented,
            endDateGreaterThanOrEqualOrNull: int = NotImplemented,
            endDateLessThanOrEqualOrNull: int = NotImplemented,
            referenceIdEqual: str = NotImplemented,
            referenceIdIn: str = NotImplemented,
            replacingEntryIdEqual: str = NotImplemented,
            replacingEntryIdIn: str = NotImplemented,
            replacedEntryIdEqual: str = NotImplemented,
            replacedEntryIdIn: str = NotImplemented,
            replacementStatusEqual: KalturaEntryReplacementStatus = NotImplemented,
            replacementStatusIn: str = NotImplemented,
            partnerSortValueGreaterThanOrEqual: int = NotImplemented,
            partnerSortValueLessThanOrEqual: int = NotImplemented,
            rootEntryIdEqual: str = NotImplemented,
            rootEntryIdIn: str = NotImplemented,
            parentEntryIdEqual: str = NotImplemented,
            entitledUsersEditMatchAnd: str = NotImplemented,
            entitledUsersEditMatchOr: str = NotImplemented,
            entitledUsersPublishMatchAnd: str = NotImplemented,
            entitledUsersPublishMatchOr: str = NotImplemented,
            entitledUsersViewMatchAnd: str = NotImplemented,
            entitledUsersViewMatchOr: str = NotImplemented,
            tagsNameMultiLikeOr: str = NotImplemented,
            tagsAdminTagsMultiLikeOr: str = NotImplemented,
            tagsAdminTagsNameMultiLikeOr: str = NotImplemented,
            tagsNameMultiLikeAnd: str = NotImplemented,
            tagsAdminTagsMultiLikeAnd: str = NotImplemented,
            tagsAdminTagsNameMultiLikeAnd: str = NotImplemented,
            displayInSearchEqual: KalturaEntryDisplayInSearchType = NotImplemented,
            displayInSearchIn: str = NotImplemented,
            freeText: str = NotImplemented,
            excludedFreeTextGroups: str = NotImplemented,
            descriptionLike: str = NotImplemented,
            isRoot: KalturaNullableBoolean = NotImplemented,
            categoriesFullNameIn: str = NotImplemented,
            categoryAncestorIdIn: str = NotImplemented,
            redirectFromEntryId: str = NotImplemented,
            conversionProfileIdEqual: int = NotImplemented,
            lastPlayedAtGreaterThanOrEqual: int = NotImplemented,
            lastPlayedAtLessThanOrEqual: int = NotImplemented,
            lastPlayedAtLessThanOrEqualOrNull: int = NotImplemented,
            durationLessThan: int = NotImplemented,
            durationGreaterThan: int = NotImplemented,
            durationLessThanOrEqual: int = NotImplemented,
            durationGreaterThanOrEqual: int = NotImplemented,
            durationTypeMatchOr: str = NotImplemented,
            mediaTypeEqual: KalturaMediaType = NotImplemented,
            mediaTypeIn: str = NotImplemented,
            sourceTypeEqual: KalturaSourceType = NotImplemented,
            sourceTypeNotEqual: KalturaSourceType = NotImplemented,
            sourceTypeIn: str = NotImplemented,
            sourceTypeNotIn: str = NotImplemented,
            mediaDateGreaterThanOrEqual: int = NotImplemented,
            mediaDateLessThanOrEqual: int = NotImplemented,
            flavorParamsIdsMatchOr: str = NotImplemented,
            flavorParamsIdsMatchAnd: str = NotImplemented): ...
        pass

class KalturaMediaEntryFilterForPlaylist(KalturaMediaEntryFilter):
    limit: int
    name: str
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: str = NotImplemented,
            idIn: str = NotImplemented,
            idNotIn: str = NotImplemented,
            nameLike: str = NotImplemented,
            nameMultiLikeOr: str = NotImplemented,
            nameMultiLikeAnd: str = NotImplemented,
            nameEqual: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            userIdEqual: str = NotImplemented,
            userIdIn: str = NotImplemented,
            userIdNotIn: str = NotImplemented,
            creatorIdEqual: str = NotImplemented,
            tagsLike: str = NotImplemented,
            tagsMultiLikeOr: str = NotImplemented,
            tagsMultiLikeAnd: str = NotImplemented,
            adminTagsLike: str = NotImplemented,
            adminTagsMultiLikeOr: str = NotImplemented,
            adminTagsMultiLikeAnd: str = NotImplemented,
            categoriesMatchAnd: str = NotImplemented,
            categoriesMatchOr: str = NotImplemented,
            categoriesNotContains: str = NotImplemented,
            categoriesIdsMatchAnd: str = NotImplemented,
            categoriesIdsMatchOr: str = NotImplemented,
            categoriesIdsNotContains: str = NotImplemented,
            categoriesIdsEmpty: KalturaNullableBoolean = NotImplemented,
            statusEqual: KalturaEntryStatus = NotImplemented,
            statusNotEqual: KalturaEntryStatus = NotImplemented,
            statusIn: str = NotImplemented,
            statusNotIn: str = NotImplemented,
            moderationStatusEqual: KalturaEntryModerationStatus = NotImplemented,
            moderationStatusNotEqual: KalturaEntryModerationStatus = NotImplemented,
            moderationStatusIn: str = NotImplemented,
            moderationStatusNotIn: str = NotImplemented,
            typeEqual: KalturaEntryType = NotImplemented,
            typeIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            rankLessThanOrEqual: float = NotImplemented,
            rankGreaterThanOrEqual: float = NotImplemented,
            totalRankLessThanOrEqual: int = NotImplemented,
            totalRankGreaterThanOrEqual: int = NotImplemented,
            groupIdEqual: int = NotImplemented,
            searchTextMatchAnd: str = NotImplemented,
            searchTextMatchOr: str = NotImplemented,
            accessControlIdEqual: int = NotImplemented,
            accessControlIdIn: str = NotImplemented,
            startDateGreaterThanOrEqual: int = NotImplemented,
            startDateLessThanOrEqual: int = NotImplemented,
            startDateGreaterThanOrEqualOrNull: int = NotImplemented,
            startDateLessThanOrEqualOrNull: int = NotImplemented,
            endDateGreaterThanOrEqual: int = NotImplemented,
            endDateLessThanOrEqual: int = NotImplemented,
            endDateGreaterThanOrEqualOrNull: int = NotImplemented,
            endDateLessThanOrEqualOrNull: int = NotImplemented,
            referenceIdEqual: str = NotImplemented,
            referenceIdIn: str = NotImplemented,
            replacingEntryIdEqual: str = NotImplemented,
            replacingEntryIdIn: str = NotImplemented,
            replacedEntryIdEqual: str = NotImplemented,
            replacedEntryIdIn: str = NotImplemented,
            replacementStatusEqual: KalturaEntryReplacementStatus = NotImplemented,
            replacementStatusIn: str = NotImplemented,
            partnerSortValueGreaterThanOrEqual: int = NotImplemented,
            partnerSortValueLessThanOrEqual: int = NotImplemented,
            rootEntryIdEqual: str = NotImplemented,
            rootEntryIdIn: str = NotImplemented,
            parentEntryIdEqual: str = NotImplemented,
            entitledUsersEditMatchAnd: str = NotImplemented,
            entitledUsersEditMatchOr: str = NotImplemented,
            entitledUsersPublishMatchAnd: str = NotImplemented,
            entitledUsersPublishMatchOr: str = NotImplemented,
            entitledUsersViewMatchAnd: str = NotImplemented,
            entitledUsersViewMatchOr: str = NotImplemented,
            tagsNameMultiLikeOr: str = NotImplemented,
            tagsAdminTagsMultiLikeOr: str = NotImplemented,
            tagsAdminTagsNameMultiLikeOr: str = NotImplemented,
            tagsNameMultiLikeAnd: str = NotImplemented,
            tagsAdminTagsMultiLikeAnd: str = NotImplemented,
            tagsAdminTagsNameMultiLikeAnd: str = NotImplemented,
            displayInSearchEqual: KalturaEntryDisplayInSearchType = NotImplemented,
            displayInSearchIn: str = NotImplemented,
            freeText: str = NotImplemented,
            excludedFreeTextGroups: str = NotImplemented,
            descriptionLike: str = NotImplemented,
            isRoot: KalturaNullableBoolean = NotImplemented,
            categoriesFullNameIn: str = NotImplemented,
            categoryAncestorIdIn: str = NotImplemented,
            redirectFromEntryId: str = NotImplemented,
            conversionProfileIdEqual: int = NotImplemented,
            lastPlayedAtGreaterThanOrEqual: int = NotImplemented,
            lastPlayedAtLessThanOrEqual: int = NotImplemented,
            lastPlayedAtLessThanOrEqualOrNull: int = NotImplemented,
            durationLessThan: int = NotImplemented,
            durationGreaterThan: int = NotImplemented,
            durationLessThanOrEqual: int = NotImplemented,
            durationGreaterThanOrEqual: int = NotImplemented,
            durationTypeMatchOr: str = NotImplemented,
            mediaTypeEqual: KalturaMediaType = NotImplemented,
            mediaTypeIn: str = NotImplemented,
            sourceTypeEqual: KalturaSourceType = NotImplemented,
            sourceTypeNotEqual: KalturaSourceType = NotImplemented,
            sourceTypeIn: str = NotImplemented,
            sourceTypeNotIn: str = NotImplemented,
            mediaDateGreaterThanOrEqual: int = NotImplemented,
            mediaDateLessThanOrEqual: int = NotImplemented,
            flavorParamsIdsMatchOr: str = NotImplemented,
            flavorParamsIdsMatchAnd: str = NotImplemented,
            limit: int = NotImplemented,
            name: str = NotImplemented): ...

    def getLimit(self) -> int: ...
    def setLimit(self, newLimit: int) -> None: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...

class KalturaMediaInfo(KalturaObjectBase):
    id: int
    flavorAssetId: str
    fileSize: int
    containerFormat: str
    containerId: str
    containerProfile: str
    containerDuration: int
    containerBitRate: int
    videoFormat: str
    videoCodecId: str
    videoDuration: int
    videoBitRate: int
    videoBitRateMode: KalturaBitRateMode
    videoWidth: int
    videoHeight: int
    videoFrameRate: float
    videoDar: float
    videoRotation: int
    audioFormat: str
    audioCodecId: str
    audioDuration: int
    audioBitRate: int
    audioBitRateMode: KalturaBitRateMode
    audioChannels: int
    audioSamplingRate: int
    audioResolution: int
    writingLib: str
    rawData: str
    multiStreamInfo: str
    scanType: int
    multiStream: str
    isFastStart: int
    contentStreams: str
    complexityValue: int
    maxGOP: float
    matrixCoefficients: str
    colorTransfer: str
    colorPrimaries: str
    pixelFormat: str
    colorSpace: str
    chromaSubsampling: str
    bitsDepth: int
    def __init__(self,
            id: int = NotImplemented,
            flavorAssetId: str = NotImplemented,
            fileSize: int = NotImplemented,
            containerFormat: str = NotImplemented,
            containerId: str = NotImplemented,
            containerProfile: str = NotImplemented,
            containerDuration: int = NotImplemented,
            containerBitRate: int = NotImplemented,
            videoFormat: str = NotImplemented,
            videoCodecId: str = NotImplemented,
            videoDuration: int = NotImplemented,
            videoBitRate: int = NotImplemented,
            videoBitRateMode: KalturaBitRateMode = NotImplemented,
            videoWidth: int = NotImplemented,
            videoHeight: int = NotImplemented,
            videoFrameRate: float = NotImplemented,
            videoDar: float = NotImplemented,
            videoRotation: int = NotImplemented,
            audioFormat: str = NotImplemented,
            audioCodecId: str = NotImplemented,
            audioDuration: int = NotImplemented,
            audioBitRate: int = NotImplemented,
            audioBitRateMode: KalturaBitRateMode = NotImplemented,
            audioChannels: int = NotImplemented,
            audioSamplingRate: int = NotImplemented,
            audioResolution: int = NotImplemented,
            writingLib: str = NotImplemented,
            rawData: str = NotImplemented,
            multiStreamInfo: str = NotImplemented,
            scanType: int = NotImplemented,
            multiStream: str = NotImplemented,
            isFastStart: int = NotImplemented,
            contentStreams: str = NotImplemented,
            complexityValue: int = NotImplemented,
            maxGOP: float = NotImplemented,
            matrixCoefficients: str = NotImplemented,
            colorTransfer: str = NotImplemented,
            colorPrimaries: str = NotImplemented,
            pixelFormat: str = NotImplemented,
            colorSpace: str = NotImplemented,
            chromaSubsampling: str = NotImplemented,
            bitsDepth: int = NotImplemented): ...

    def getId(self) -> int: ...
    def getFlavorAssetId(self) -> str: ...
    def setFlavorAssetId(self, newFlavorAssetId: str) -> None: ...
    def getFileSize(self) -> int: ...
    def setFileSize(self, newFileSize: int) -> None: ...
    def getContainerFormat(self) -> str: ...
    def setContainerFormat(self, newContainerFormat: str) -> None: ...
    def getContainerId(self) -> str: ...
    def setContainerId(self, newContainerId: str) -> None: ...
    def getContainerProfile(self) -> str: ...
    def setContainerProfile(self, newContainerProfile: str) -> None: ...
    def getContainerDuration(self) -> int: ...
    def setContainerDuration(self, newContainerDuration: int) -> None: ...
    def getContainerBitRate(self) -> int: ...
    def setContainerBitRate(self, newContainerBitRate: int) -> None: ...
    def getVideoFormat(self) -> str: ...
    def setVideoFormat(self, newVideoFormat: str) -> None: ...
    def getVideoCodecId(self) -> str: ...
    def setVideoCodecId(self, newVideoCodecId: str) -> None: ...
    def getVideoDuration(self) -> int: ...
    def setVideoDuration(self, newVideoDuration: int) -> None: ...
    def getVideoBitRate(self) -> int: ...
    def setVideoBitRate(self, newVideoBitRate: int) -> None: ...
    def getVideoBitRateMode(self) -> KalturaBitRateMode: ...
    def setVideoBitRateMode(self, newVideoBitRateMode: KalturaBitRateMode) -> None: ...
    def getVideoWidth(self) -> int: ...
    def setVideoWidth(self, newVideoWidth: int) -> None: ...
    def getVideoHeight(self) -> int: ...
    def setVideoHeight(self, newVideoHeight: int) -> None: ...
    def getVideoFrameRate(self) -> float: ...
    def setVideoFrameRate(self, newVideoFrameRate: float) -> None: ...
    def getVideoDar(self) -> float: ...
    def setVideoDar(self, newVideoDar: float) -> None: ...
    def getVideoRotation(self) -> int: ...
    def setVideoRotation(self, newVideoRotation: int) -> None: ...
    def getAudioFormat(self) -> str: ...
    def setAudioFormat(self, newAudioFormat: str) -> None: ...
    def getAudioCodecId(self) -> str: ...
    def setAudioCodecId(self, newAudioCodecId: str) -> None: ...
    def getAudioDuration(self) -> int: ...
    def setAudioDuration(self, newAudioDuration: int) -> None: ...
    def getAudioBitRate(self) -> int: ...
    def setAudioBitRate(self, newAudioBitRate: int) -> None: ...
    def getAudioBitRateMode(self) -> KalturaBitRateMode: ...
    def setAudioBitRateMode(self, newAudioBitRateMode: KalturaBitRateMode) -> None: ...
    def getAudioChannels(self) -> int: ...
    def setAudioChannels(self, newAudioChannels: int) -> None: ...
    def getAudioSamplingRate(self) -> int: ...
    def setAudioSamplingRate(self, newAudioSamplingRate: int) -> None: ...
    def getAudioResolution(self) -> int: ...
    def setAudioResolution(self, newAudioResolution: int) -> None: ...
    def getWritingLib(self) -> str: ...
    def setWritingLib(self, newWritingLib: str) -> None: ...
    def getRawData(self) -> str: ...
    def setRawData(self, newRawData: str) -> None: ...
    def getMultiStreamInfo(self) -> str: ...
    def setMultiStreamInfo(self, newMultiStreamInfo: str) -> None: ...
    def getScanType(self) -> int: ...
    def setScanType(self, newScanType: int) -> None: ...
    def getMultiStream(self) -> str: ...
    def setMultiStream(self, newMultiStream: str) -> None: ...
    def getIsFastStart(self) -> int: ...
    def setIsFastStart(self, newIsFastStart: int) -> None: ...
    def getContentStreams(self) -> str: ...
    def setContentStreams(self, newContentStreams: str) -> None: ...
    def getComplexityValue(self) -> int: ...
    def setComplexityValue(self, newComplexityValue: int) -> None: ...
    def getMaxGOP(self) -> float: ...
    def setMaxGOP(self, newMaxGOP: float) -> None: ...
    def getMatrixCoefficients(self) -> str: ...
    def setMatrixCoefficients(self, newMatrixCoefficients: str) -> None: ...
    def getColorTransfer(self) -> str: ...
    def setColorTransfer(self, newColorTransfer: str) -> None: ...
    def getColorPrimaries(self) -> str: ...
    def setColorPrimaries(self, newColorPrimaries: str) -> None: ...
    def getPixelFormat(self) -> str: ...
    def setPixelFormat(self, newPixelFormat: str) -> None: ...
    def getColorSpace(self) -> str: ...
    def setColorSpace(self, newColorSpace: str) -> None: ...
    def getChromaSubsampling(self) -> str: ...
    def setChromaSubsampling(self, newChromaSubsampling: str) -> None: ...
    def getBitsDepth(self) -> int: ...
    def setBitsDepth(self, newBitsDepth: int) -> None: ...

class KalturaMixEntry(KalturaPlayableEntry):
    hasRealThumbnail: bool
    editorType: KalturaEditorType
    dataContent: str
    def __init__(self,
            id: str = NotImplemented,
            name: str = NotImplemented,
            multiLingual_name: List[KalturaMultiLingualString] = NotImplemented,
            description: str = NotImplemented,
            multiLingual_description: List[KalturaMultiLingualString] = NotImplemented,
            partnerId: int = NotImplemented,
            userId: str = NotImplemented,
            creatorId: str = NotImplemented,
            tags: str = NotImplemented,
            multiLingual_tags: List[KalturaMultiLingualString] = NotImplemented,
            adminTags: str = NotImplemented,
            categories: str = NotImplemented,
            categoriesIds: str = NotImplemented,
            status: KalturaEntryStatus = NotImplemented,
            moderationStatus: KalturaEntryModerationStatus = NotImplemented,
            moderationCount: int = NotImplemented,
            type: KalturaEntryType = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            rank: float = NotImplemented,
            totalRank: int = NotImplemented,
            votes: int = NotImplemented,
            groupId: int = NotImplemented,
            partnerData: str = NotImplemented,
            downloadUrl: str = NotImplemented,
            searchText: str = NotImplemented,
            licenseType: KalturaLicenseType = NotImplemented,
            version: int = NotImplemented,
            thumbnailUrl: str = NotImplemented,
            accessControlId: int = NotImplemented,
            startDate: int = NotImplemented,
            endDate: int = NotImplemented,
            referenceId: str = NotImplemented,
            replacingEntryId: str = NotImplemented,
            replacedEntryId: str = NotImplemented,
            replacementStatus: KalturaEntryReplacementStatus = NotImplemented,
            partnerSortValue: int = NotImplemented,
            conversionProfileId: int = NotImplemented,
            redirectEntryId: str = NotImplemented,
            rootEntryId: str = NotImplemented,
            parentEntryId: str = NotImplemented,
            operationAttributes: List[KalturaOperationAttributes] = NotImplemented,
            entitledUsersEdit: str = NotImplemented,
            entitledUsersPublish: str = NotImplemented,
            entitledUsersView: str = NotImplemented,
            capabilities: str = NotImplemented,
            templateEntryId: str = NotImplemented,
            displayInSearch: KalturaEntryDisplayInSearchType = NotImplemented,
            application: KalturaEntryApplication = NotImplemented,
            applicationVersion: str = NotImplemented,
            blockAutoTranscript: bool = NotImplemented,
            defaultLanguage: str = NotImplemented,
            responseLanguage: str = NotImplemented,
            plays: int = NotImplemented,
            views: int = NotImplemented,
            lastPlayedAt: int = NotImplemented,
            width: int = NotImplemented,
            height: int = NotImplemented,
            duration: int = NotImplemented,
            msDuration: int = NotImplemented,
            durationType: KalturaDurationType = NotImplemented,
            hasRealThumbnail: bool = NotImplemented,
            editorType: KalturaEditorType = NotImplemented,
            dataContent: str = NotImplemented): ...

    def getHasRealThumbnail(self) -> bool: ...
    def getEditorType(self) -> KalturaEditorType: ...
    def setEditorType(self, newEditorType: KalturaEditorType) -> None: ...
    def getDataContent(self) -> str: ...
    def setDataContent(self, newDataContent: str) -> None: ...

class KalturaModerationFlag(KalturaObjectBase):
    id: int
    partnerId: int
    userId: str
    moderationObjectType: KalturaModerationObjectType
    flaggedEntryId: str
    flaggedUserId: str
    status: KalturaModerationFlagStatus
    comments: str
    flagType: KalturaModerationFlagType
    createdAt: int
    updatedAt: int
    def __init__(self,
            id: int = NotImplemented,
            partnerId: int = NotImplemented,
            userId: str = NotImplemented,
            moderationObjectType: KalturaModerationObjectType = NotImplemented,
            flaggedEntryId: str = NotImplemented,
            flaggedUserId: str = NotImplemented,
            status: KalturaModerationFlagStatus = NotImplemented,
            comments: str = NotImplemented,
            flagType: KalturaModerationFlagType = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented): ...

    def getId(self) -> int: ...
    def getPartnerId(self) -> int: ...
    def getUserId(self) -> str: ...
    def getModerationObjectType(self) -> KalturaModerationObjectType: ...
    def getFlaggedEntryId(self) -> str: ...
    def setFlaggedEntryId(self, newFlaggedEntryId: str) -> None: ...
    def getFlaggedUserId(self) -> str: ...
    def setFlaggedUserId(self, newFlaggedUserId: str) -> None: ...
    def getStatus(self) -> KalturaModerationFlagStatus: ...
    def getComments(self) -> str: ...
    def setComments(self, newComments: str) -> None: ...
    def getFlagType(self) -> KalturaModerationFlagType: ...
    def setFlagType(self, newFlagType: KalturaModerationFlagType) -> None: ...
    def getCreatedAt(self) -> int: ...
    def getUpdatedAt(self) -> int: ...

class KalturaOperationResource(KalturaContentResource):
    resource: KalturaContentResource
    operationAttributes: List[KalturaOperationAttributes]
    assetParamsId: int
    def __init__(self,
            resource: KalturaContentResource = NotImplemented,
            operationAttributes: List[KalturaOperationAttributes] = NotImplemented,
            assetParamsId: int = NotImplemented): ...

    def getResource(self) -> KalturaContentResource: ...
    def setResource(self, newResource: KalturaContentResource) -> None: ...
    def getOperationAttributes(self) -> List[KalturaOperationAttributes]: ...
    def setOperationAttributes(self, newOperationAttributes: List[KalturaOperationAttributes]) -> None: ...
    def getAssetParamsId(self) -> int: ...
    def setAssetParamsId(self, newAssetParamsId: int) -> None: ...

class KalturaPartnerPublicInfo(KalturaObjectBase):
    analyticsUrl: str
    ottEnvironmentUrl: str
    analyticsPersistentSessionId: bool
    def __init__(self,
            analyticsUrl: str = NotImplemented,
            ottEnvironmentUrl: str = NotImplemented,
            analyticsPersistentSessionId: bool = NotImplemented): ...

    def getAnalyticsUrl(self) -> str: ...
    def setAnalyticsUrl(self, newAnalyticsUrl: str) -> None: ...
    def getOttEnvironmentUrl(self) -> str: ...
    def setOttEnvironmentUrl(self, newOttEnvironmentUrl: str) -> None: ...
    def getAnalyticsPersistentSessionId(self) -> bool: ...
    def setAnalyticsPersistentSessionId(self, newAnalyticsPersistentSessionId: bool) -> None: ...

class KalturaPartnerStatistics(KalturaObjectBase):
    packageBandwidthAndStorage: int
    hosting: float
    bandwidth: float
    usage: int
    usagePercent: float
    reachedLimitDate: int
    def __init__(self,
            packageBandwidthAndStorage: int = NotImplemented,
            hosting: float = NotImplemented,
            bandwidth: float = NotImplemented,
            usage: int = NotImplemented,
            usagePercent: float = NotImplemented,
            reachedLimitDate: int = NotImplemented): ...

    def getPackageBandwidthAndStorage(self) -> int: ...
    def getHosting(self) -> float: ...
    def getBandwidth(self) -> float: ...
    def getUsage(self) -> int: ...
    def getUsagePercent(self) -> float: ...
    def getReachedLimitDate(self) -> int: ...

class KalturaPartnerUsage(KalturaObjectBase):
    hostingGB: float
    Percent: float
    packageBW: int
    usageGB: float
    reachedLimitDate: int
    usageGraph: str
    def __init__(self,
            hostingGB: float = NotImplemented,
            Percent: float = NotImplemented,
            packageBW: int = NotImplemented,
            usageGB: float = NotImplemented,
            reachedLimitDate: int = NotImplemented,
            usageGraph: str = NotImplemented): ...

    def getHostingGB(self) -> float: ...
    def getPercent(self) -> float: ...
    def getPackageBW(self) -> int: ...
    def getUsageGB(self) -> float: ...
    def getReachedLimitDate(self) -> int: ...
    def getUsageGraph(self) -> str: ...

class KalturaPermission(KalturaObjectBase):
    id: int
    type: KalturaPermissionType
    name: str
    friendlyName: str
    description: str
    status: KalturaPermissionStatus
    partnerId: int
    dependsOnPermissionNames: str
    tags: str
    permissionItemsIds: str
    createdAt: int
    updatedAt: int
    partnerGroup: str
    def __init__(self,
            id: int = NotImplemented,
            type: KalturaPermissionType = NotImplemented,
            name: str = NotImplemented,
            friendlyName: str = NotImplemented,
            description: str = NotImplemented,
            status: KalturaPermissionStatus = NotImplemented,
            partnerId: int = NotImplemented,
            dependsOnPermissionNames: str = NotImplemented,
            tags: str = NotImplemented,
            permissionItemsIds: str = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            partnerGroup: str = NotImplemented): ...

    def getId(self) -> int: ...
    def getType(self) -> KalturaPermissionType: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getFriendlyName(self) -> str: ...
    def setFriendlyName(self, newFriendlyName: str) -> None: ...
    def getDescription(self) -> str: ...
    def setDescription(self, newDescription: str) -> None: ...
    def getStatus(self) -> KalturaPermissionStatus: ...
    def setStatus(self, newStatus: KalturaPermissionStatus) -> None: ...
    def getPartnerId(self) -> int: ...
    def getDependsOnPermissionNames(self) -> str: ...
    def setDependsOnPermissionNames(self, newDependsOnPermissionNames: str) -> None: ...
    def getTags(self) -> str: ...
    def setTags(self, newTags: str) -> None: ...
    def getPermissionItemsIds(self) -> str: ...
    def setPermissionItemsIds(self, newPermissionItemsIds: str) -> None: ...
    def getCreatedAt(self) -> int: ...
    def getUpdatedAt(self) -> int: ...
    def getPartnerGroup(self) -> str: ...
    def setPartnerGroup(self, newPartnerGroup: str) -> None: ...

class KalturaPermissionItem(KalturaObjectBase):
    id: int
    type: KalturaPermissionItemType
    partnerId: int
    tags: str
    createdAt: int
    updatedAt: int
    def __init__(self,
            id: int = NotImplemented,
            type: KalturaPermissionItemType = NotImplemented,
            partnerId: int = NotImplemented,
            tags: str = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented): ...

    def getId(self) -> int: ...
    def getType(self) -> KalturaPermissionItemType: ...
    def getPartnerId(self) -> int: ...
    def getTags(self) -> str: ...
    def setTags(self, newTags: str) -> None: ...
    def getCreatedAt(self) -> int: ...
    def getUpdatedAt(self) -> int: ...

class KalturaPlaybackContext(KalturaObjectBase):
    sources: List[KalturaPlaybackSource]
    playbackCaptions: List[KalturaCaptionPlaybackPluginData]
    flavorAssets: List[KalturaFlavorAsset]
    actions: List[KalturaRuleAction]
    messages: List[KalturaAccessControlMessage]
    bumperData: List[KalturaObject]
    def __init__(self,
            sources: List[KalturaPlaybackSource] = NotImplemented,
            playbackCaptions: List[KalturaCaptionPlaybackPluginData] = NotImplemented,
            flavorAssets: List[KalturaFlavorAsset] = NotImplemented,
            actions: List[KalturaRuleAction] = NotImplemented,
            messages: List[KalturaAccessControlMessage] = NotImplemented,
            bumperData: List[KalturaObject] = NotImplemented): ...

    def getSources(self) -> List[KalturaPlaybackSource]: ...
    def setSources(self, newSources: List[KalturaPlaybackSource]) -> None: ...
    def getPlaybackCaptions(self) -> List[KalturaCaptionPlaybackPluginData]: ...
    def setPlaybackCaptions(self, newPlaybackCaptions: List[KalturaCaptionPlaybackPluginData]) -> None: ...
    def getFlavorAssets(self) -> List[KalturaFlavorAsset]: ...
    def setFlavorAssets(self, newFlavorAssets: List[KalturaFlavorAsset]) -> None: ...
    def getActions(self) -> List[KalturaRuleAction]: ...
    def setActions(self, newActions: List[KalturaRuleAction]) -> None: ...
    def getMessages(self) -> List[KalturaAccessControlMessage]: ...
    def setMessages(self, newMessages: List[KalturaAccessControlMessage]) -> None: ...
    def getBumperData(self) -> List[KalturaObject]: ...
    def setBumperData(self, newBumperData: List[KalturaObject]) -> None: ...

class KalturaPlaylist(KalturaBaseEntry):
    playlistContent: str
    filters: List[KalturaMediaEntryFilterForPlaylist]
    totalResults: int
    playlistType: KalturaPlaylistType
    plays: int
    views: int
    duration: int
    executeUrl: str
    def __init__(self,
            id: str = NotImplemented,
            name: str = NotImplemented,
            multiLingual_name: List[KalturaMultiLingualString] = NotImplemented,
            description: str = NotImplemented,
            multiLingual_description: List[KalturaMultiLingualString] = NotImplemented,
            partnerId: int = NotImplemented,
            userId: str = NotImplemented,
            creatorId: str = NotImplemented,
            tags: str = NotImplemented,
            multiLingual_tags: List[KalturaMultiLingualString] = NotImplemented,
            adminTags: str = NotImplemented,
            categories: str = NotImplemented,
            categoriesIds: str = NotImplemented,
            status: KalturaEntryStatus = NotImplemented,
            moderationStatus: KalturaEntryModerationStatus = NotImplemented,
            moderationCount: int = NotImplemented,
            type: KalturaEntryType = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            rank: float = NotImplemented,
            totalRank: int = NotImplemented,
            votes: int = NotImplemented,
            groupId: int = NotImplemented,
            partnerData: str = NotImplemented,
            downloadUrl: str = NotImplemented,
            searchText: str = NotImplemented,
            licenseType: KalturaLicenseType = NotImplemented,
            version: int = NotImplemented,
            thumbnailUrl: str = NotImplemented,
            accessControlId: int = NotImplemented,
            startDate: int = NotImplemented,
            endDate: int = NotImplemented,
            referenceId: str = NotImplemented,
            replacingEntryId: str = NotImplemented,
            replacedEntryId: str = NotImplemented,
            replacementStatus: KalturaEntryReplacementStatus = NotImplemented,
            partnerSortValue: int = NotImplemented,
            conversionProfileId: int = NotImplemented,
            redirectEntryId: str = NotImplemented,
            rootEntryId: str = NotImplemented,
            parentEntryId: str = NotImplemented,
            operationAttributes: List[KalturaOperationAttributes] = NotImplemented,
            entitledUsersEdit: str = NotImplemented,
            entitledUsersPublish: str = NotImplemented,
            entitledUsersView: str = NotImplemented,
            capabilities: str = NotImplemented,
            templateEntryId: str = NotImplemented,
            displayInSearch: KalturaEntryDisplayInSearchType = NotImplemented,
            application: KalturaEntryApplication = NotImplemented,
            applicationVersion: str = NotImplemented,
            blockAutoTranscript: bool = NotImplemented,
            defaultLanguage: str = NotImplemented,
            responseLanguage: str = NotImplemented,
            playlistContent: str = NotImplemented,
            filters: List[KalturaMediaEntryFilterForPlaylist] = NotImplemented,
            totalResults: int = NotImplemented,
            playlistType: KalturaPlaylistType = NotImplemented,
            plays: int = NotImplemented,
            views: int = NotImplemented,
            duration: int = NotImplemented,
            executeUrl: str = NotImplemented): ...

    def getPlaylistContent(self) -> str: ...
    def setPlaylistContent(self, newPlaylistContent: str) -> None: ...
    def getFilters(self) -> List[KalturaMediaEntryFilterForPlaylist]: ...
    def setFilters(self, newFilters: List[KalturaMediaEntryFilterForPlaylist]) -> None: ...
    def getTotalResults(self) -> int: ...
    def setTotalResults(self, newTotalResults: int) -> None: ...
    def getPlaylistType(self) -> KalturaPlaylistType: ...
    def setPlaylistType(self, newPlaylistType: KalturaPlaylistType) -> None: ...
    def getPlays(self) -> int: ...
    def getViews(self) -> int: ...
    def getDuration(self) -> int: ...
    def getExecuteUrl(self) -> str: ...

class KalturaRemotePath(KalturaObjectBase):
    storageProfileId: int
    uri: str
    def __init__(self,
            storageProfileId: int = NotImplemented,
            uri: str = NotImplemented): ...

    def getStorageProfileId(self) -> int: ...
    def getUri(self) -> str: ...

class KalturaUrlResource(KalturaContentResource):
    url: str
    forceAsyncDownload: bool
    urlHeaders: List[KalturaString]
    shouldRedirect: bool
    def __init__(self,
            url: str = NotImplemented,
            forceAsyncDownload: bool = NotImplemented,
            urlHeaders: List[KalturaString] = NotImplemented,
            shouldRedirect: bool = NotImplemented): ...

    def getUrl(self) -> str: ...
    def setUrl(self, newUrl: str) -> None: ...
    def getForceAsyncDownload(self) -> bool: ...
    def setForceAsyncDownload(self, newForceAsyncDownload: bool) -> None: ...
    def getUrlHeaders(self) -> List[KalturaString]: ...
    def setUrlHeaders(self, newUrlHeaders: List[KalturaString]) -> None: ...
    def getShouldRedirect(self) -> bool: ...
    def setShouldRedirect(self, newShouldRedirect: bool) -> None: ...

class KalturaRemoteStorageResource(KalturaUrlResource):
    storageProfileId: int
    def __init__(self,
            url: str = NotImplemented,
            forceAsyncDownload: bool = NotImplemented,
            urlHeaders: List[KalturaString] = NotImplemented,
            shouldRedirect: bool = NotImplemented,
            storageProfileId: int = NotImplemented): ...

    def getStorageProfileId(self) -> int: ...
    def setStorageProfileId(self, newStorageProfileId: int) -> None: ...

class KalturaReport(KalturaObjectBase):
    id: int
    partnerId: int
    name: str
    systemName: str
    description: str
    query: str
    createdAt: int
    updatedAt: int
    def __init__(self,
            id: int = NotImplemented,
            partnerId: int = NotImplemented,
            name: str = NotImplemented,
            systemName: str = NotImplemented,
            description: str = NotImplemented,
            query: str = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented): ...

    def getId(self) -> int: ...
    def getPartnerId(self) -> int: ...
    def setPartnerId(self, newPartnerId: int) -> None: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getSystemName(self) -> str: ...
    def setSystemName(self, newSystemName: str) -> None: ...
    def getDescription(self) -> str: ...
    def setDescription(self, newDescription: str) -> None: ...
    def getQuery(self) -> str: ...
    def setQuery(self, newQuery: str) -> None: ...
    def getCreatedAt(self) -> int: ...
    def getUpdatedAt(self) -> int: ...

class KalturaReportBaseTotal(KalturaObjectBase):
    id: str
    data: str
    def __init__(self,
            id: str = NotImplemented,
            data: str = NotImplemented): ...

    def getId(self) -> str: ...
    def setId(self, newId: str) -> None: ...
    def getData(self) -> str: ...
    def setData(self, newData: str) -> None: ...

class KalturaReportExportFile(KalturaObjectBase):
    fileId: str
    fileName: str
    def __init__(self,
            fileId: str = NotImplemented,
            fileName: str = NotImplemented): ...

    def getFileId(self) -> str: ...
    def setFileId(self, newFileId: str) -> None: ...
    def getFileName(self) -> str: ...
    def setFileName(self, newFileName: str) -> None: ...

class KalturaReportInputBaseFilter(KalturaObjectBase):
    fromDate: int
    toDate: int
    fromDay: str
    toDay: str
    def __init__(self,
            fromDate: int = NotImplemented,
            toDate: int = NotImplemented,
            fromDay: str = NotImplemented,
            toDay: str = NotImplemented): ...

    def getFromDate(self) -> int: ...
    def setFromDate(self, newFromDate: int) -> None: ...
    def getToDate(self) -> int: ...
    def setToDate(self, newToDate: int) -> None: ...
    def getFromDay(self) -> str: ...
    def setFromDay(self, newFromDay: str) -> None: ...
    def getToDay(self) -> str: ...
    def setToDay(self, newToDay: str) -> None: ...

class KalturaReportInputFilter(KalturaReportInputBaseFilter):
    keywords: str
    searchInTags: bool
    searchInAdminTags: bool
    categories: str
    categoriesIdsIn: str
    customVar1In: str
    customVar2In: str
    customVar3In: str
    deviceIn: str
    countryIn: str
    regionIn: str
    citiesIn: str
    operatingSystemFamilyIn: str
    operatingSystemIn: str
    browserFamilyIn: str
    browserIn: str
    timeZoneOffset: int
    interval: KalturaReportInterval
    mediaTypeIn: str
    sourceTypeIn: str
    ownerIdsIn: str
    entryOperator: KalturaESearchEntryOperator
    entryCreatedAtGreaterThanOrEqual: int
    entryCreatedAtLessThanOrEqual: int
    entryIdIn: str
    playbackTypeIn: str
    playbackContextIdsIn: str
    rootEntryIdIn: str
    errorCodeIn: str
    playerVersionIn: str
    ispIn: str
    applicationVersionIn: str
    nodeIdsIn: str
    categoriesAncestorIdIn: str
    hotspotIdIn: str
    crmIdIn: str
    playlistIdIn: str
    domainIn: str
    canonicalUrlIn: str
    virtualEventIdIn: str
    originIn: str
    uiConfIdIn: str
    cuePointIdIn: str
    contextIdIn: str
    roleIn: str
    industryIn: str
    playbackModeIn: str
    companyIn: str
    eventSessionContextIdIn: str
    def __init__(self,
            fromDate: int = NotImplemented,
            toDate: int = NotImplemented,
            fromDay: str = NotImplemented,
            toDay: str = NotImplemented,
            keywords: str = NotImplemented,
            searchInTags: bool = NotImplemented,
            searchInAdminTags: bool = NotImplemented,
            categories: str = NotImplemented,
            categoriesIdsIn: str = NotImplemented,
            customVar1In: str = NotImplemented,
            customVar2In: str = NotImplemented,
            customVar3In: str = NotImplemented,
            deviceIn: str = NotImplemented,
            countryIn: str = NotImplemented,
            regionIn: str = NotImplemented,
            citiesIn: str = NotImplemented,
            operatingSystemFamilyIn: str = NotImplemented,
            operatingSystemIn: str = NotImplemented,
            browserFamilyIn: str = NotImplemented,
            browserIn: str = NotImplemented,
            timeZoneOffset: int = NotImplemented,
            interval: KalturaReportInterval = NotImplemented,
            mediaTypeIn: str = NotImplemented,
            sourceTypeIn: str = NotImplemented,
            ownerIdsIn: str = NotImplemented,
            entryOperator: KalturaESearchEntryOperator = NotImplemented,
            entryCreatedAtGreaterThanOrEqual: int = NotImplemented,
            entryCreatedAtLessThanOrEqual: int = NotImplemented,
            entryIdIn: str = NotImplemented,
            playbackTypeIn: str = NotImplemented,
            playbackContextIdsIn: str = NotImplemented,
            rootEntryIdIn: str = NotImplemented,
            errorCodeIn: str = NotImplemented,
            playerVersionIn: str = NotImplemented,
            ispIn: str = NotImplemented,
            applicationVersionIn: str = NotImplemented,
            nodeIdsIn: str = NotImplemented,
            categoriesAncestorIdIn: str = NotImplemented,
            hotspotIdIn: str = NotImplemented,
            crmIdIn: str = NotImplemented,
            playlistIdIn: str = NotImplemented,
            domainIn: str = NotImplemented,
            canonicalUrlIn: str = NotImplemented,
            virtualEventIdIn: str = NotImplemented,
            originIn: str = NotImplemented,
            uiConfIdIn: str = NotImplemented,
            cuePointIdIn: str = NotImplemented,
            contextIdIn: str = NotImplemented,
            roleIn: str = NotImplemented,
            industryIn: str = NotImplemented,
            playbackModeIn: str = NotImplemented,
            companyIn: str = NotImplemented,
            eventSessionContextIdIn: str = NotImplemented): ...

    def getKeywords(self) -> str: ...
    def setKeywords(self, newKeywords: str) -> None: ...
    def getSearchInTags(self) -> bool: ...
    def setSearchInTags(self, newSearchInTags: bool) -> None: ...
    def getSearchInAdminTags(self) -> bool: ...
    def setSearchInAdminTags(self, newSearchInAdminTags: bool) -> None: ...
    def getCategories(self) -> str: ...
    def setCategories(self, newCategories: str) -> None: ...
    def getCategoriesIdsIn(self) -> str: ...
    def setCategoriesIdsIn(self, newCategoriesIdsIn: str) -> None: ...
    def getCustomVar1In(self) -> str: ...
    def setCustomVar1In(self, newCustomVar1In: str) -> None: ...
    def getCustomVar2In(self) -> str: ...
    def setCustomVar2In(self, newCustomVar2In: str) -> None: ...
    def getCustomVar3In(self) -> str: ...
    def setCustomVar3In(self, newCustomVar3In: str) -> None: ...
    def getDeviceIn(self) -> str: ...
    def setDeviceIn(self, newDeviceIn: str) -> None: ...
    def getCountryIn(self) -> str: ...
    def setCountryIn(self, newCountryIn: str) -> None: ...
    def getRegionIn(self) -> str: ...
    def setRegionIn(self, newRegionIn: str) -> None: ...
    def getCitiesIn(self) -> str: ...
    def setCitiesIn(self, newCitiesIn: str) -> None: ...
    def getOperatingSystemFamilyIn(self) -> str: ...
    def setOperatingSystemFamilyIn(self, newOperatingSystemFamilyIn: str) -> None: ...
    def getOperatingSystemIn(self) -> str: ...
    def setOperatingSystemIn(self, newOperatingSystemIn: str) -> None: ...
    def getBrowserFamilyIn(self) -> str: ...
    def setBrowserFamilyIn(self, newBrowserFamilyIn: str) -> None: ...
    def getBrowserIn(self) -> str: ...
    def setBrowserIn(self, newBrowserIn: str) -> None: ...
    def getTimeZoneOffset(self) -> int: ...
    def setTimeZoneOffset(self, newTimeZoneOffset: int) -> None: ...
    def getInterval(self) -> KalturaReportInterval: ...
    def setInterval(self, newInterval: KalturaReportInterval) -> None: ...
    def getMediaTypeIn(self) -> str: ...
    def setMediaTypeIn(self, newMediaTypeIn: str) -> None: ...
    def getSourceTypeIn(self) -> str: ...
    def setSourceTypeIn(self, newSourceTypeIn: str) -> None: ...
    def getOwnerIdsIn(self) -> str: ...
    def setOwnerIdsIn(self, newOwnerIdsIn: str) -> None: ...
    def getEntryOperator(self) -> KalturaESearchEntryOperator: ...
    def setEntryOperator(self, newEntryOperator: KalturaESearchEntryOperator) -> None: ...
    def getEntryCreatedAtGreaterThanOrEqual(self) -> int: ...
    def setEntryCreatedAtGreaterThanOrEqual(self, newEntryCreatedAtGreaterThanOrEqual: int) -> None: ...
    def getEntryCreatedAtLessThanOrEqual(self) -> int: ...
    def setEntryCreatedAtLessThanOrEqual(self, newEntryCreatedAtLessThanOrEqual: int) -> None: ...
    def getEntryIdIn(self) -> str: ...
    def setEntryIdIn(self, newEntryIdIn: str) -> None: ...
    def getPlaybackTypeIn(self) -> str: ...
    def setPlaybackTypeIn(self, newPlaybackTypeIn: str) -> None: ...
    def getPlaybackContextIdsIn(self) -> str: ...
    def setPlaybackContextIdsIn(self, newPlaybackContextIdsIn: str) -> None: ...
    def getRootEntryIdIn(self) -> str: ...
    def setRootEntryIdIn(self, newRootEntryIdIn: str) -> None: ...
    def getErrorCodeIn(self) -> str: ...
    def setErrorCodeIn(self, newErrorCodeIn: str) -> None: ...
    def getPlayerVersionIn(self) -> str: ...
    def setPlayerVersionIn(self, newPlayerVersionIn: str) -> None: ...
    def getIspIn(self) -> str: ...
    def setIspIn(self, newIspIn: str) -> None: ...
    def getApplicationVersionIn(self) -> str: ...
    def setApplicationVersionIn(self, newApplicationVersionIn: str) -> None: ...
    def getNodeIdsIn(self) -> str: ...
    def setNodeIdsIn(self, newNodeIdsIn: str) -> None: ...
    def getCategoriesAncestorIdIn(self) -> str: ...
    def setCategoriesAncestorIdIn(self, newCategoriesAncestorIdIn: str) -> None: ...
    def getHotspotIdIn(self) -> str: ...
    def setHotspotIdIn(self, newHotspotIdIn: str) -> None: ...
    def getCrmIdIn(self) -> str: ...
    def setCrmIdIn(self, newCrmIdIn: str) -> None: ...
    def getPlaylistIdIn(self) -> str: ...
    def setPlaylistIdIn(self, newPlaylistIdIn: str) -> None: ...
    def getDomainIn(self) -> str: ...
    def setDomainIn(self, newDomainIn: str) -> None: ...
    def getCanonicalUrlIn(self) -> str: ...
    def setCanonicalUrlIn(self, newCanonicalUrlIn: str) -> None: ...
    def getVirtualEventIdIn(self) -> str: ...
    def setVirtualEventIdIn(self, newVirtualEventIdIn: str) -> None: ...
    def getOriginIn(self) -> str: ...
    def setOriginIn(self, newOriginIn: str) -> None: ...
    def getUiConfIdIn(self) -> str: ...
    def setUiConfIdIn(self, newUiConfIdIn: str) -> None: ...
    def getCuePointIdIn(self) -> str: ...
    def setCuePointIdIn(self, newCuePointIdIn: str) -> None: ...
    def getContextIdIn(self) -> str: ...
    def setContextIdIn(self, newContextIdIn: str) -> None: ...
    def getRoleIn(self) -> str: ...
    def setRoleIn(self, newRoleIn: str) -> None: ...
    def getIndustryIn(self) -> str: ...
    def setIndustryIn(self, newIndustryIn: str) -> None: ...
    def getPlaybackModeIn(self) -> str: ...
    def setPlaybackModeIn(self, newPlaybackModeIn: str) -> None: ...
    def getCompanyIn(self) -> str: ...
    def setCompanyIn(self, newCompanyIn: str) -> None: ...
    def getEventSessionContextIdIn(self) -> str: ...
    def setEventSessionContextIdIn(self, newEventSessionContextIdIn: str) -> None: ...

class KalturaReportResponseOptions(KalturaObjectBase):
    delimiter: str
    skipEmptyDates: bool
    def __init__(self,
            delimiter: str = NotImplemented,
            skipEmptyDates: bool = NotImplemented): ...

    def getDelimiter(self) -> str: ...
    def setDelimiter(self, newDelimiter: str) -> None: ...
    def getSkipEmptyDates(self) -> bool: ...
    def setSkipEmptyDates(self, newSkipEmptyDates: bool) -> None: ...

class KalturaReportExportItem(KalturaObjectBase):
    reportTitle: str
    action: KalturaReportExportItemType
    reportType: KalturaReportType
    filter: KalturaReportInputFilter
    order: str
    objectIds: str
    responseOptions: KalturaReportResponseOptions
    def __init__(self,
            reportTitle: str = NotImplemented,
            action: KalturaReportExportItemType = NotImplemented,
            reportType: KalturaReportType = NotImplemented,
            filter: KalturaReportInputFilter = NotImplemented,
            order: str = NotImplemented,
            objectIds: str = NotImplemented,
            responseOptions: KalturaReportResponseOptions = NotImplemented): ...

    def getReportTitle(self) -> str: ...
    def setReportTitle(self, newReportTitle: str) -> None: ...
    def getAction(self) -> KalturaReportExportItemType: ...
    def setAction(self, newAction: KalturaReportExportItemType) -> None: ...
    def getReportType(self) -> KalturaReportType: ...
    def setReportType(self, newReportType: KalturaReportType) -> None: ...
    def getFilter(self) -> KalturaReportInputFilter: ...
    def setFilter(self, newFilter: KalturaReportInputFilter) -> None: ...
    def getOrder(self) -> str: ...
    def setOrder(self, newOrder: str) -> None: ...
    def getObjectIds(self) -> str: ...
    def setObjectIds(self, newObjectIds: str) -> None: ...
    def getResponseOptions(self) -> KalturaReportResponseOptions: ...
    def setResponseOptions(self, newResponseOptions: KalturaReportResponseOptions) -> None: ...

class KalturaReportExportParams(KalturaObjectBase):
    recipientEmail: str
    timeZoneOffset: int
    reportItems: List[KalturaReportExportItem]
    reportsItemsGroup: str
    baseUrl: str
    def __init__(self,
            recipientEmail: str = NotImplemented,
            timeZoneOffset: int = NotImplemented,
            reportItems: List[KalturaReportExportItem] = NotImplemented,
            reportsItemsGroup: str = NotImplemented,
            baseUrl: str = NotImplemented): ...

    def getRecipientEmail(self) -> str: ...
    def setRecipientEmail(self, newRecipientEmail: str) -> None: ...
    def getTimeZoneOffset(self) -> int: ...
    def setTimeZoneOffset(self, newTimeZoneOffset: int) -> None: ...
    def getReportItems(self) -> List[KalturaReportExportItem]: ...
    def setReportItems(self, newReportItems: List[KalturaReportExportItem]) -> None: ...
    def getReportsItemsGroup(self) -> str: ...
    def setReportsItemsGroup(self, newReportsItemsGroup: str) -> None: ...
    def getBaseUrl(self) -> str: ...
    def setBaseUrl(self, newBaseUrl: str) -> None: ...

class KalturaReportExportResponse(KalturaObjectBase):
    referenceJobId: int
    reportEmail: str
    def __init__(self,
            referenceJobId: int = NotImplemented,
            reportEmail: str = NotImplemented): ...

    def getReferenceJobId(self) -> int: ...
    def setReferenceJobId(self, newReferenceJobId: int) -> None: ...
    def getReportEmail(self) -> str: ...
    def setReportEmail(self, newReportEmail: str) -> None: ...

class KalturaReportGraph(KalturaObjectBase):
    id: str
    data: str
    def __init__(self,
            id: str = NotImplemented,
            data: str = NotImplemented): ...

    def getId(self) -> str: ...
    def setId(self, newId: str) -> None: ...
    def getData(self) -> str: ...
    def setData(self, newData: str) -> None: ...

class KalturaReportResponse(KalturaObjectBase):
    columns: str
    results: List[KalturaString]
    def __init__(self,
            columns: str = NotImplemented,
            results: List[KalturaString] = NotImplemented): ...

    def getColumns(self) -> str: ...
    def setColumns(self, newColumns: str) -> None: ...
    def getResults(self) -> List[KalturaString]: ...
    def setResults(self, newResults: List[KalturaString]) -> None: ...

class KalturaReportTable(KalturaObjectBase):
    header: str
    data: str
    totalCount: int
    def __init__(self,
            header: str = NotImplemented,
            data: str = NotImplemented,
            totalCount: int = NotImplemented): ...

    def getHeader(self) -> str: ...
    def getData(self) -> str: ...
    def getTotalCount(self) -> int: ...

class KalturaReportTotal(KalturaObjectBase):
    header: str
    data: str
    def __init__(self,
            header: str = NotImplemented,
            data: str = NotImplemented): ...

    def getHeader(self) -> str: ...
    def setHeader(self, newHeader: str) -> None: ...
    def getData(self) -> str: ...
    def setData(self, newData: str) -> None: ...

class KalturaRequestConfiguration(KalturaObjectBase):
    partnerId: int
    ks: str
    language: str
    responseProfile: KalturaBaseResponseProfile
    def __init__(self,
            partnerId: int = NotImplemented,
            ks: str = NotImplemented,
            language: str = NotImplemented,
            responseProfile: KalturaBaseResponseProfile = NotImplemented): ...

    def getPartnerId(self) -> int: ...
    def setPartnerId(self, newPartnerId: int) -> None: ...
    def getKs(self) -> str: ...
    def setKs(self, newKs: str) -> None: ...
    def getLanguage(self) -> str: ...
    def setLanguage(self, newLanguage: str) -> None: ...
    def getResponseProfile(self) -> KalturaBaseResponseProfile: ...
    def setResponseProfile(self, newResponseProfile: KalturaBaseResponseProfile) -> None: ...

class KalturaResponseProfile(KalturaDetachedResponseProfile):
    id: int
    systemName: str
    partnerId: int
    createdAt: int
    updatedAt: int
    status: KalturaResponseProfileStatus
    version: int
    def __init__(self,
            name: str = NotImplemented,
            type: KalturaResponseProfileType = NotImplemented,
            fields: str = NotImplemented,
            filter: KalturaRelatedFilter = NotImplemented,
            pager: KalturaFilterPager = NotImplemented,
            relatedProfiles: List[KalturaDetachedResponseProfile] = NotImplemented,
            mappings: List[KalturaResponseProfileMapping] = NotImplemented,
            id: int = NotImplemented,
            systemName: str = NotImplemented,
            partnerId: int = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            status: KalturaResponseProfileStatus = NotImplemented,
            version: int = NotImplemented): ...

    def getId(self) -> int: ...
    def getSystemName(self) -> str: ...
    def setSystemName(self, newSystemName: str) -> None: ...
    def getPartnerId(self) -> int: ...
    def getCreatedAt(self) -> int: ...
    def getUpdatedAt(self) -> int: ...
    def getStatus(self) -> KalturaResponseProfileStatus: ...
    def getVersion(self) -> int: ...

class KalturaResponseProfileCacheRecalculateOptions(KalturaObjectBase):
    limit: int
    cachedObjectType: str
    objectId: str
    startObjectKey: str
    endObjectKey: str
    jobCreatedAt: int
    isFirstLoop: bool
    def __init__(self,
            limit: int = NotImplemented,
            cachedObjectType: str = NotImplemented,
            objectId: str = NotImplemented,
            startObjectKey: str = NotImplemented,
            endObjectKey: str = NotImplemented,
            jobCreatedAt: int = NotImplemented,
            isFirstLoop: bool = NotImplemented): ...

    def getLimit(self) -> int: ...
    def setLimit(self, newLimit: int) -> None: ...
    def getCachedObjectType(self) -> str: ...
    def setCachedObjectType(self, newCachedObjectType: str) -> None: ...
    def getObjectId(self) -> str: ...
    def setObjectId(self, newObjectId: str) -> None: ...
    def getStartObjectKey(self) -> str: ...
    def setStartObjectKey(self, newStartObjectKey: str) -> None: ...
    def getEndObjectKey(self) -> str: ...
    def setEndObjectKey(self, newEndObjectKey: str) -> None: ...
    def getJobCreatedAt(self) -> int: ...
    def setJobCreatedAt(self, newJobCreatedAt: int) -> None: ...
    def getIsFirstLoop(self) -> bool: ...
    def setIsFirstLoop(self, newIsFirstLoop: bool) -> None: ...

class KalturaResponseProfileCacheRecalculateResults(KalturaObjectBase):
    lastObjectKey: str
    recalculated: int
    def __init__(self,
            lastObjectKey: str = NotImplemented,
            recalculated: int = NotImplemented): ...

    def getLastObjectKey(self) -> str: ...
    def setLastObjectKey(self, newLastObjectKey: str) -> None: ...
    def getRecalculated(self) -> int: ...
    def setRecalculated(self, newRecalculated: int) -> None: ...

class KalturaScope(KalturaObjectBase):
    def __init__(self): ...
        pass

class KalturaSearch(KalturaObjectBase):
    keyWords: str
    searchSource: KalturaSearchProviderType
    mediaType: KalturaMediaType
    extraData: str
    authData: str
    def __init__(self,
            keyWords: str = NotImplemented,
            searchSource: KalturaSearchProviderType = NotImplemented,
            mediaType: KalturaMediaType = NotImplemented,
            extraData: str = NotImplemented,
            authData: str = NotImplemented): ...

    def getKeyWords(self) -> str: ...
    def setKeyWords(self, newKeyWords: str) -> None: ...
    def getSearchSource(self) -> KalturaSearchProviderType: ...
    def setSearchSource(self, newSearchSource: KalturaSearchProviderType) -> None: ...
    def getMediaType(self) -> KalturaMediaType: ...
    def setMediaType(self, newMediaType: KalturaMediaType) -> None: ...
    def getExtraData(self) -> str: ...
    def setExtraData(self, newExtraData: str) -> None: ...
    def getAuthData(self) -> str: ...
    def setAuthData(self, newAuthData: str) -> None: ...

class KalturaSearchAuthData(KalturaObjectBase):
    authData: str
    loginUrl: str
    message: str
    def __init__(self,
            authData: str = NotImplemented,
            loginUrl: str = NotImplemented,
            message: str = NotImplemented): ...

    def getAuthData(self) -> str: ...
    def setAuthData(self, newAuthData: str) -> None: ...
    def getLoginUrl(self) -> str: ...
    def setLoginUrl(self, newLoginUrl: str) -> None: ...
    def getMessage(self) -> str: ...
    def setMessage(self, newMessage: str) -> None: ...

class KalturaSearchResult(KalturaSearch):
    id: str
    title: str
    thumbUrl: str
    description: str
    tags: str
    url: str
    sourceLink: str
    credit: str
    licenseType: KalturaLicenseType
    flashPlaybackType: str
    fileExt: str
    def __init__(self,
            keyWords: str = NotImplemented,
            searchSource: KalturaSearchProviderType = NotImplemented,
            mediaType: KalturaMediaType = NotImplemented,
            extraData: str = NotImplemented,
            authData: str = NotImplemented,
            id: str = NotImplemented,
            title: str = NotImplemented,
            thumbUrl: str = NotImplemented,
            description: str = NotImplemented,
            tags: str = NotImplemented,
            url: str = NotImplemented,
            sourceLink: str = NotImplemented,
            credit: str = NotImplemented,
            licenseType: KalturaLicenseType = NotImplemented,
            flashPlaybackType: str = NotImplemented,
            fileExt: str = NotImplemented): ...

    def getId(self) -> str: ...
    def setId(self, newId: str) -> None: ...
    def getTitle(self) -> str: ...
    def setTitle(self, newTitle: str) -> None: ...
    def getThumbUrl(self) -> str: ...
    def setThumbUrl(self, newThumbUrl: str) -> None: ...
    def getDescription(self) -> str: ...
    def setDescription(self, newDescription: str) -> None: ...
    def getTags(self) -> str: ...
    def setTags(self, newTags: str) -> None: ...
    def getUrl(self) -> str: ...
    def setUrl(self, newUrl: str) -> None: ...
    def getSourceLink(self) -> str: ...
    def setSourceLink(self, newSourceLink: str) -> None: ...
    def getCredit(self) -> str: ...
    def setCredit(self, newCredit: str) -> None: ...
    def getLicenseType(self) -> KalturaLicenseType: ...
    def setLicenseType(self, newLicenseType: KalturaLicenseType) -> None: ...
    def getFlashPlaybackType(self) -> str: ...
    def setFlashPlaybackType(self, newFlashPlaybackType: str) -> None: ...
    def getFileExt(self) -> str: ...
    def setFileExt(self, newFileExt: str) -> None: ...

class KalturaSearchResultResponse(KalturaObjectBase):
    objects: List[KalturaSearchResult]
    needMediaInfo: bool
    def __init__(self,
            objects: List[KalturaSearchResult] = NotImplemented,
            needMediaInfo: bool = NotImplemented): ...

    def getObjects(self) -> List[KalturaSearchResult]: ...
    def getNeedMediaInfo(self) -> bool: ...

class KalturaServerNode(KalturaObjectBase):
    id: int
    partnerId: int
    createdAt: int
    updatedAt: int
    heartbeatTime: int
    name: str
    systemName: str
    description: str
    hostName: str
    status: KalturaServerNodeStatus
    type: KalturaServerNodeType
    tags: str
    dc: int
    parentId: str
    environment: str
    def __init__(self,
            id: int = NotImplemented,
            partnerId: int = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            heartbeatTime: int = NotImplemented,
            name: str = NotImplemented,
            systemName: str = NotImplemented,
            description: str = NotImplemented,
            hostName: str = NotImplemented,
            status: KalturaServerNodeStatus = NotImplemented,
            type: KalturaServerNodeType = NotImplemented,
            tags: str = NotImplemented,
            dc: int = NotImplemented,
            parentId: str = NotImplemented,
            environment: str = NotImplemented): ...

    def getId(self) -> int: ...
    def getPartnerId(self) -> int: ...
    def getCreatedAt(self) -> int: ...
    def getUpdatedAt(self) -> int: ...
    def getHeartbeatTime(self) -> int: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getSystemName(self) -> str: ...
    def setSystemName(self, newSystemName: str) -> None: ...
    def getDescription(self) -> str: ...
    def setDescription(self, newDescription: str) -> None: ...
    def getHostName(self) -> str: ...
    def setHostName(self, newHostName: str) -> None: ...
    def getStatus(self) -> KalturaServerNodeStatus: ...
    def getType(self) -> KalturaServerNodeType: ...
    def getTags(self) -> str: ...
    def setTags(self, newTags: str) -> None: ...
    def getDc(self) -> int: ...
    def getParentId(self) -> str: ...
    def setParentId(self, newParentId: str) -> None: ...
    def getEnvironment(self) -> str: ...
    def setEnvironment(self, newEnvironment: str) -> None: ...

class KalturaSessionInfo(KalturaObjectBase):
    ks: str
    sessionType: KalturaSessionType
    partnerId: int
    userId: str
    expiry: int
    privileges: str
    def __init__(self,
            ks: str = NotImplemented,
            sessionType: KalturaSessionType = NotImplemented,
            partnerId: int = NotImplemented,
            userId: str = NotImplemented,
            expiry: int = NotImplemented,
            privileges: str = NotImplemented): ...

    def getKs(self) -> str: ...
    def getSessionType(self) -> KalturaSessionType: ...
    def getPartnerId(self) -> int: ...
    def getUserId(self) -> str: ...
    def getExpiry(self) -> int: ...
    def getPrivileges(self) -> str: ...

class KalturaSourceFileSyncDescriptor(KalturaFileSyncDescriptor):
    actualFileSyncLocalPath: str
    assetId: str
    assetParamsId: int
    def __init__(self,
            fileSyncLocalPath: str = NotImplemented,
            fileEncryptionKey: str = NotImplemented,
            fileSyncRemoteUrl: str = NotImplemented,
            fileSyncObjectSubType: int = NotImplemented,
            actualFileSyncLocalPath: str = NotImplemented,
            assetId: str = NotImplemented,
            assetParamsId: int = NotImplemented): ...

    def getActualFileSyncLocalPath(self) -> str: ...
    def setActualFileSyncLocalPath(self, newActualFileSyncLocalPath: str) -> None: ...
    def getAssetId(self) -> str: ...
    def setAssetId(self, newAssetId: str) -> None: ...
    def getAssetParamsId(self) -> int: ...
    def setAssetParamsId(self, newAssetParamsId: int) -> None: ...

class KalturaStartWidgetSessionResponse(KalturaObjectBase):
    partnerId: int
    ks: str
    userId: str
    def __init__(self,
            partnerId: int = NotImplemented,
            ks: str = NotImplemented,
            userId: str = NotImplemented): ...

    def getPartnerId(self) -> int: ...
    def getKs(self) -> str: ...
    def getUserId(self) -> str: ...

class KalturaStatsEvent(KalturaObjectBase):
    clientVer: str
    eventType: KalturaStatsEventType
    eventTimestamp: float
    sessionId: str
    partnerId: int
    entryId: str
    uniqueViewer: str
    widgetId: str
    uiconfId: int
    userId: str
    currentPoint: int
    duration: int
    userIp: str
    processDuration: int
    controlId: str
    seek: bool
    newPoint: int
    referrer: str
    isFirstInSession: bool
    applicationId: str
    contextId: int
    featureType: KalturaStatsFeatureType
    def __init__(self,
            clientVer: str = NotImplemented,
            eventType: KalturaStatsEventType = NotImplemented,
            eventTimestamp: float = NotImplemented,
            sessionId: str = NotImplemented,
            partnerId: int = NotImplemented,
            entryId: str = NotImplemented,
            uniqueViewer: str = NotImplemented,
            widgetId: str = NotImplemented,
            uiconfId: int = NotImplemented,
            userId: str = NotImplemented,
            currentPoint: int = NotImplemented,
            duration: int = NotImplemented,
            userIp: str = NotImplemented,
            processDuration: int = NotImplemented,
            controlId: str = NotImplemented,
            seek: bool = NotImplemented,
            newPoint: int = NotImplemented,
            referrer: str = NotImplemented,
            isFirstInSession: bool = NotImplemented,
            applicationId: str = NotImplemented,
            contextId: int = NotImplemented,
            featureType: KalturaStatsFeatureType = NotImplemented): ...

    def getClientVer(self) -> str: ...
    def setClientVer(self, newClientVer: str) -> None: ...
    def getEventType(self) -> KalturaStatsEventType: ...
    def setEventType(self, newEventType: KalturaStatsEventType) -> None: ...
    def getEventTimestamp(self) -> float: ...
    def setEventTimestamp(self, newEventTimestamp: float) -> None: ...
    def getSessionId(self) -> str: ...
    def setSessionId(self, newSessionId: str) -> None: ...
    def getPartnerId(self) -> int: ...
    def setPartnerId(self, newPartnerId: int) -> None: ...
    def getEntryId(self) -> str: ...
    def setEntryId(self, newEntryId: str) -> None: ...
    def getUniqueViewer(self) -> str: ...
    def setUniqueViewer(self, newUniqueViewer: str) -> None: ...
    def getWidgetId(self) -> str: ...
    def setWidgetId(self, newWidgetId: str) -> None: ...
    def getUiconfId(self) -> int: ...
    def setUiconfId(self, newUiconfId: int) -> None: ...
    def getUserId(self) -> str: ...
    def setUserId(self, newUserId: str) -> None: ...
    def getCurrentPoint(self) -> int: ...
    def setCurrentPoint(self, newCurrentPoint: int) -> None: ...
    def getDuration(self) -> int: ...
    def setDuration(self, newDuration: int) -> None: ...
    def getUserIp(self) -> str: ...
    def getProcessDuration(self) -> int: ...
    def setProcessDuration(self, newProcessDuration: int) -> None: ...
    def getControlId(self) -> str: ...
    def setControlId(self, newControlId: str) -> None: ...
    def getSeek(self) -> bool: ...
    def setSeek(self, newSeek: bool) -> None: ...
    def getNewPoint(self) -> int: ...
    def setNewPoint(self, newNewPoint: int) -> None: ...
    def getReferrer(self) -> str: ...
    def setReferrer(self, newReferrer: str) -> None: ...
    def getIsFirstInSession(self) -> bool: ...
    def setIsFirstInSession(self, newIsFirstInSession: bool) -> None: ...
    def getApplicationId(self) -> str: ...
    def setApplicationId(self, newApplicationId: str) -> None: ...
    def getContextId(self) -> int: ...
    def setContextId(self, newContextId: int) -> None: ...
    def getFeatureType(self) -> KalturaStatsFeatureType: ...
    def setFeatureType(self, newFeatureType: KalturaStatsFeatureType) -> None: ...

class KalturaStatsKmcEvent(KalturaObjectBase):
    clientVer: str
    kmcEventActionPath: str
    kmcEventType: KalturaStatsKmcEventType
    eventTimestamp: float
    sessionId: str
    partnerId: int
    entryId: str
    widgetId: str
    uiconfId: int
    userId: str
    userIp: str
    def __init__(self,
            clientVer: str = NotImplemented,
            kmcEventActionPath: str = NotImplemented,
            kmcEventType: KalturaStatsKmcEventType = NotImplemented,
            eventTimestamp: float = NotImplemented,
            sessionId: str = NotImplemented,
            partnerId: int = NotImplemented,
            entryId: str = NotImplemented,
            widgetId: str = NotImplemented,
            uiconfId: int = NotImplemented,
            userId: str = NotImplemented,
            userIp: str = NotImplemented): ...

    def getClientVer(self) -> str: ...
    def setClientVer(self, newClientVer: str) -> None: ...
    def getKmcEventActionPath(self) -> str: ...
    def setKmcEventActionPath(self, newKmcEventActionPath: str) -> None: ...
    def getKmcEventType(self) -> KalturaStatsKmcEventType: ...
    def setKmcEventType(self, newKmcEventType: KalturaStatsKmcEventType) -> None: ...
    def getEventTimestamp(self) -> float: ...
    def setEventTimestamp(self, newEventTimestamp: float) -> None: ...
    def getSessionId(self) -> str: ...
    def setSessionId(self, newSessionId: str) -> None: ...
    def getPartnerId(self) -> int: ...
    def setPartnerId(self, newPartnerId: int) -> None: ...
    def getEntryId(self) -> str: ...
    def setEntryId(self, newEntryId: str) -> None: ...
    def getWidgetId(self) -> str: ...
    def setWidgetId(self, newWidgetId: str) -> None: ...
    def getUiconfId(self) -> int: ...
    def setUiconfId(self, newUiconfId: int) -> None: ...
    def getUserId(self) -> str: ...
    def setUserId(self, newUserId: str) -> None: ...
    def getUserIp(self) -> str: ...

class KalturaStorageProfile(KalturaObjectBase):
    id: int
    createdAt: int
    updatedAt: int
    partnerId: int
    name: str
    systemName: str
    desciption: str
    status: KalturaStorageProfileStatus
    protocol: KalturaStorageProfileProtocol
    storageUrl: str
    storageBaseDir: str
    pathPrefix: str
    storageUsername: str
    storagePassword: str
    storageFtpPassiveMode: bool
    minFileSize: int
    maxFileSize: int
    flavorParamsIds: str
    maxConcurrentConnections: int
    pathManagerClass: str
    pathManagerParams: List[KalturaKeyValue]
    trigger: int
    deliveryPriority: int
    deliveryStatus: KalturaStorageProfileDeliveryStatus
    readyBehavior: KalturaStorageProfileReadyBehavior
    allowAutoDelete: int
    createFileLink: bool
    rules: List[KalturaRule]
    deliveryProfileIds: List[KalturaKeyValue]
    privateKey: str
    publicKey: str
    passPhrase: str
    port: int
    shouldExportThumbs: bool
    packagerUrl: str
    exportPeriodically: bool
    excludedFlavorParamsIds: str
    shouldExportCaptions: bool
    excludedEntryTypes: str
    additionalInfo: List[KalturaKeyValue]
    def __init__(self,
            id: int = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            partnerId: int = NotImplemented,
            name: str = NotImplemented,
            systemName: str = NotImplemented,
            desciption: str = NotImplemented,
            status: KalturaStorageProfileStatus = NotImplemented,
            protocol: KalturaStorageProfileProtocol = NotImplemented,
            storageUrl: str = NotImplemented,
            storageBaseDir: str = NotImplemented,
            pathPrefix: str = NotImplemented,
            storageUsername: str = NotImplemented,
            storagePassword: str = NotImplemented,
            storageFtpPassiveMode: bool = NotImplemented,
            minFileSize: int = NotImplemented,
            maxFileSize: int = NotImplemented,
            flavorParamsIds: str = NotImplemented,
            maxConcurrentConnections: int = NotImplemented,
            pathManagerClass: str = NotImplemented,
            pathManagerParams: List[KalturaKeyValue] = NotImplemented,
            trigger: int = NotImplemented,
            deliveryPriority: int = NotImplemented,
            deliveryStatus: KalturaStorageProfileDeliveryStatus = NotImplemented,
            readyBehavior: KalturaStorageProfileReadyBehavior = NotImplemented,
            allowAutoDelete: int = NotImplemented,
            createFileLink: bool = NotImplemented,
            rules: List[KalturaRule] = NotImplemented,
            deliveryProfileIds: List[KalturaKeyValue] = NotImplemented,
            privateKey: str = NotImplemented,
            publicKey: str = NotImplemented,
            passPhrase: str = NotImplemented,
            port: int = NotImplemented,
            shouldExportThumbs: bool = NotImplemented,
            packagerUrl: str = NotImplemented,
            exportPeriodically: bool = NotImplemented,
            excludedFlavorParamsIds: str = NotImplemented,
            shouldExportCaptions: bool = NotImplemented,
            excludedEntryTypes: str = NotImplemented,
            additionalInfo: List[KalturaKeyValue] = NotImplemented): ...

    def getId(self) -> int: ...
    def getCreatedAt(self) -> int: ...
    def getUpdatedAt(self) -> int: ...
    def getPartnerId(self) -> int: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getSystemName(self) -> str: ...
    def setSystemName(self, newSystemName: str) -> None: ...
    def getDesciption(self) -> str: ...
    def setDesciption(self, newDesciption: str) -> None: ...
    def getStatus(self) -> KalturaStorageProfileStatus: ...
    def setStatus(self, newStatus: KalturaStorageProfileStatus) -> None: ...
    def getProtocol(self) -> KalturaStorageProfileProtocol: ...
    def setProtocol(self, newProtocol: KalturaStorageProfileProtocol) -> None: ...
    def getStorageUrl(self) -> str: ...
    def setStorageUrl(self, newStorageUrl: str) -> None: ...
    def getStorageBaseDir(self) -> str: ...
    def setStorageBaseDir(self, newStorageBaseDir: str) -> None: ...
    def getPathPrefix(self) -> str: ...
    def setPathPrefix(self, newPathPrefix: str) -> None: ...
    def getStorageUsername(self) -> str: ...
    def setStorageUsername(self, newStorageUsername: str) -> None: ...
    def getStoragePassword(self) -> str: ...
    def setStoragePassword(self, newStoragePassword: str) -> None: ...
    def getStorageFtpPassiveMode(self) -> bool: ...
    def setStorageFtpPassiveMode(self, newStorageFtpPassiveMode: bool) -> None: ...
    def getMinFileSize(self) -> int: ...
    def setMinFileSize(self, newMinFileSize: int) -> None: ...
    def getMaxFileSize(self) -> int: ...
    def setMaxFileSize(self, newMaxFileSize: int) -> None: ...
    def getFlavorParamsIds(self) -> str: ...
    def setFlavorParamsIds(self, newFlavorParamsIds: str) -> None: ...
    def getMaxConcurrentConnections(self) -> int: ...
    def setMaxConcurrentConnections(self, newMaxConcurrentConnections: int) -> None: ...
    def getPathManagerClass(self) -> str: ...
    def setPathManagerClass(self, newPathManagerClass: str) -> None: ...
    def getPathManagerParams(self) -> List[KalturaKeyValue]: ...
    def setPathManagerParams(self, newPathManagerParams: List[KalturaKeyValue]) -> None: ...
    def getTrigger(self) -> int: ...
    def setTrigger(self, newTrigger: int) -> None: ...
    def getDeliveryPriority(self) -> int: ...
    def setDeliveryPriority(self, newDeliveryPriority: int) -> None: ...
    def getDeliveryStatus(self) -> KalturaStorageProfileDeliveryStatus: ...
    def setDeliveryStatus(self, newDeliveryStatus: KalturaStorageProfileDeliveryStatus) -> None: ...
    def getReadyBehavior(self) -> KalturaStorageProfileReadyBehavior: ...
    def setReadyBehavior(self, newReadyBehavior: KalturaStorageProfileReadyBehavior) -> None: ...
    def getAllowAutoDelete(self) -> int: ...
    def setAllowAutoDelete(self, newAllowAutoDelete: int) -> None: ...
    def getCreateFileLink(self) -> bool: ...
    def setCreateFileLink(self, newCreateFileLink: bool) -> None: ...
    def getRules(self) -> List[KalturaRule]: ...
    def setRules(self, newRules: List[KalturaRule]) -> None: ...
    def getDeliveryProfileIds(self) -> List[KalturaKeyValue]: ...
    def setDeliveryProfileIds(self, newDeliveryProfileIds: List[KalturaKeyValue]) -> None: ...
    def getPrivateKey(self) -> str: ...
    def setPrivateKey(self, newPrivateKey: str) -> None: ...
    def getPublicKey(self) -> str: ...
    def setPublicKey(self, newPublicKey: str) -> None: ...
    def getPassPhrase(self) -> str: ...
    def setPassPhrase(self, newPassPhrase: str) -> None: ...
    def getPort(self) -> int: ...
    def setPort(self, newPort: int) -> None: ...
    def getShouldExportThumbs(self) -> bool: ...
    def setShouldExportThumbs(self, newShouldExportThumbs: bool) -> None: ...
    def getPackagerUrl(self) -> str: ...
    def setPackagerUrl(self, newPackagerUrl: str) -> None: ...
    def getExportPeriodically(self) -> bool: ...
    def setExportPeriodically(self, newExportPeriodically: bool) -> None: ...
    def getExcludedFlavorParamsIds(self) -> str: ...
    def setExcludedFlavorParamsIds(self, newExcludedFlavorParamsIds: str) -> None: ...
    def getShouldExportCaptions(self) -> bool: ...
    def setShouldExportCaptions(self, newShouldExportCaptions: bool) -> None: ...
    def getExcludedEntryTypes(self) -> str: ...
    def setExcludedEntryTypes(self, newExcludedEntryTypes: str) -> None: ...
    def getAdditionalInfo(self) -> List[KalturaKeyValue]: ...
    def setAdditionalInfo(self, newAdditionalInfo: List[KalturaKeyValue]) -> None: ...

class KalturaSyndicationFeedEntryCount(KalturaObjectBase):
    totalEntryCount: int
    actualEntryCount: int
    requireTranscodingCount: int
    def __init__(self,
            totalEntryCount: int = NotImplemented,
            actualEntryCount: int = NotImplemented,
            requireTranscodingCount: int = NotImplemented): ...

    def getTotalEntryCount(self) -> int: ...
    def setTotalEntryCount(self, newTotalEntryCount: int) -> None: ...
    def getActualEntryCount(self) -> int: ...
    def setActualEntryCount(self, newActualEntryCount: int) -> None: ...
    def getRequireTranscodingCount(self) -> int: ...
    def setRequireTranscodingCount(self, newRequireTranscodingCount: int) -> None: ...

class KalturaThumbAsset(KalturaAsset):
    thumbParamsId: int
    width: int
    height: int
    status: KalturaThumbAssetStatus
    def __init__(self,
            id: str = NotImplemented,
            entryId: str = NotImplemented,
            partnerId: int = NotImplemented,
            version: int = NotImplemented,
            size: int = NotImplemented,
            tags: str = NotImplemented,
            fileExt: str = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            deletedAt: int = NotImplemented,
            description: str = NotImplemented,
            partnerData: str = NotImplemented,
            partnerDescription: str = NotImplemented,
            actualSourceAssetParamsIds: str = NotImplemented,
            sizeInBytes: int = NotImplemented,
            thumbParamsId: int = NotImplemented,
            width: int = NotImplemented,
            height: int = NotImplemented,
            status: KalturaThumbAssetStatus = NotImplemented): ...

    def getThumbParamsId(self) -> int: ...
    def setThumbParamsId(self, newThumbParamsId: int) -> None: ...
    def getWidth(self) -> int: ...
    def getHeight(self) -> int: ...
    def getStatus(self) -> KalturaThumbAssetStatus: ...

class KalturaThumbParams(KalturaAssetParams):
    cropType: KalturaThumbCropType
    quality: int
    cropX: int
    cropY: int
    cropWidth: int
    cropHeight: int
    videoOffset: float
    width: int
    height: int
    scaleWidth: float
    scaleHeight: float
    backgroundColor: str
    sourceParamsId: int
    format: KalturaContainerFormat
    density: int
    stripProfiles: bool
    videoOffsetInPercentage: int
    interval: int
    def __init__(self,
            id: int = NotImplemented,
            partnerId: int = NotImplemented,
            name: str = NotImplemented,
            systemName: str = NotImplemented,
            description: str = NotImplemented,
            createdAt: int = NotImplemented,
            isSystemDefault: KalturaNullableBoolean = NotImplemented,
            tags: str = NotImplemented,
            requiredPermissions: List[KalturaString] = NotImplemented,
            sourceRemoteStorageProfileId: int = NotImplemented,
            remoteStorageProfileIds: int = NotImplemented,
            mediaParserType: KalturaMediaParserType = NotImplemented,
            sourceAssetParamsIds: str = NotImplemented,
            cropType: KalturaThumbCropType = NotImplemented,
            quality: int = NotImplemented,
            cropX: int = NotImplemented,
            cropY: int = NotImplemented,
            cropWidth: int = NotImplemented,
            cropHeight: int = NotImplemented,
            videoOffset: float = NotImplemented,
            width: int = NotImplemented,
            height: int = NotImplemented,
            scaleWidth: float = NotImplemented,
            scaleHeight: float = NotImplemented,
            backgroundColor: str = NotImplemented,
            sourceParamsId: int = NotImplemented,
            format: KalturaContainerFormat = NotImplemented,
            density: int = NotImplemented,
            stripProfiles: bool = NotImplemented,
            videoOffsetInPercentage: int = NotImplemented,
            interval: int = NotImplemented): ...

    def getCropType(self) -> KalturaThumbCropType: ...
    def setCropType(self, newCropType: KalturaThumbCropType) -> None: ...
    def getQuality(self) -> int: ...
    def setQuality(self, newQuality: int) -> None: ...
    def getCropX(self) -> int: ...
    def setCropX(self, newCropX: int) -> None: ...
    def getCropY(self) -> int: ...
    def setCropY(self, newCropY: int) -> None: ...
    def getCropWidth(self) -> int: ...
    def setCropWidth(self, newCropWidth: int) -> None: ...
    def getCropHeight(self) -> int: ...
    def setCropHeight(self, newCropHeight: int) -> None: ...
    def getVideoOffset(self) -> float: ...
    def setVideoOffset(self, newVideoOffset: float) -> None: ...
    def getWidth(self) -> int: ...
    def setWidth(self, newWidth: int) -> None: ...
    def getHeight(self) -> int: ...
    def setHeight(self, newHeight: int) -> None: ...
    def getScaleWidth(self) -> float: ...
    def setScaleWidth(self, newScaleWidth: float) -> None: ...
    def getScaleHeight(self) -> float: ...
    def setScaleHeight(self, newScaleHeight: float) -> None: ...
    def getBackgroundColor(self) -> str: ...
    def setBackgroundColor(self, newBackgroundColor: str) -> None: ...
    def getSourceParamsId(self) -> int: ...
    def setSourceParamsId(self, newSourceParamsId: int) -> None: ...
    def getFormat(self) -> KalturaContainerFormat: ...
    def setFormat(self, newFormat: KalturaContainerFormat) -> None: ...
    def getDensity(self) -> int: ...
    def setDensity(self, newDensity: int) -> None: ...
    def getStripProfiles(self) -> bool: ...
    def setStripProfiles(self, newStripProfiles: bool) -> None: ...
    def getVideoOffsetInPercentage(self) -> int: ...
    def setVideoOffsetInPercentage(self, newVideoOffsetInPercentage: int) -> None: ...
    def getInterval(self) -> int: ...
    def setInterval(self, newInterval: int) -> None: ...

class KalturaThumbParamsOutput(KalturaThumbParams):
    thumbParamsId: int
    thumbParamsVersion: str
    thumbAssetId: str
    thumbAssetVersion: str
    rotate: int
    def __init__(self,
            id: int = NotImplemented,
            partnerId: int = NotImplemented,
            name: str = NotImplemented,
            systemName: str = NotImplemented,
            description: str = NotImplemented,
            createdAt: int = NotImplemented,
            isSystemDefault: KalturaNullableBoolean = NotImplemented,
            tags: str = NotImplemented,
            requiredPermissions: List[KalturaString] = NotImplemented,
            sourceRemoteStorageProfileId: int = NotImplemented,
            remoteStorageProfileIds: int = NotImplemented,
            mediaParserType: KalturaMediaParserType = NotImplemented,
            sourceAssetParamsIds: str = NotImplemented,
            cropType: KalturaThumbCropType = NotImplemented,
            quality: int = NotImplemented,
            cropX: int = NotImplemented,
            cropY: int = NotImplemented,
            cropWidth: int = NotImplemented,
            cropHeight: int = NotImplemented,
            videoOffset: float = NotImplemented,
            width: int = NotImplemented,
            height: int = NotImplemented,
            scaleWidth: float = NotImplemented,
            scaleHeight: float = NotImplemented,
            backgroundColor: str = NotImplemented,
            sourceParamsId: int = NotImplemented,
            format: KalturaContainerFormat = NotImplemented,
            density: int = NotImplemented,
            stripProfiles: bool = NotImplemented,
            videoOffsetInPercentage: int = NotImplemented,
            interval: int = NotImplemented,
            thumbParamsId: int = NotImplemented,
            thumbParamsVersion: str = NotImplemented,
            thumbAssetId: str = NotImplemented,
            thumbAssetVersion: str = NotImplemented,
            rotate: int = NotImplemented): ...

    def getThumbParamsId(self) -> int: ...
    def setThumbParamsId(self, newThumbParamsId: int) -> None: ...
    def getThumbParamsVersion(self) -> str: ...
    def setThumbParamsVersion(self, newThumbParamsVersion: str) -> None: ...
    def getThumbAssetId(self) -> str: ...
    def setThumbAssetId(self, newThumbAssetId: str) -> None: ...
    def getThumbAssetVersion(self) -> str: ...
    def setThumbAssetVersion(self, newThumbAssetVersion: str) -> None: ...
    def getRotate(self) -> int: ...
    def setRotate(self, newRotate: int) -> None: ...

class KalturaUiConfV2Redirect(KalturaObjectBase):
    v7id: int
    isApproved: bool
    translatePlugins: bool
    def __init__(self,
            v7id: int = NotImplemented,
            isApproved: bool = NotImplemented,
            translatePlugins: bool = NotImplemented): ...

    def getV7id(self) -> int: ...
    def setV7id(self, newV7id: int) -> None: ...
    def getIsApproved(self) -> bool: ...
    def setIsApproved(self, newIsApproved: bool) -> None: ...
    def getTranslatePlugins(self) -> bool: ...
    def setTranslatePlugins(self, newTranslatePlugins: bool) -> None: ...

class KalturaUiConf(KalturaObjectBase):
    id: int
    name: str
    description: str
    partnerId: int
    objType: KalturaUiConfObjType
    objTypeAsString: str
    width: int
    height: int
    htmlParams: str
    swfUrl: str
    confFilePath: str
    confFile: str
    confFileFeatures: str
    config: str
    confVars: str
    useCdn: bool
    tags: str
    swfUrlVersion: str
    createdAt: int
    updatedAt: int
    creationMode: KalturaUiConfCreationMode
    html5Url: str
    version: str
    partnerTags: str
    v2Redirect: KalturaUiConfV2Redirect
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            description: str = NotImplemented,
            partnerId: int = NotImplemented,
            objType: KalturaUiConfObjType = NotImplemented,
            objTypeAsString: str = NotImplemented,
            width: int = NotImplemented,
            height: int = NotImplemented,
            htmlParams: str = NotImplemented,
            swfUrl: str = NotImplemented,
            confFilePath: str = NotImplemented,
            confFile: str = NotImplemented,
            confFileFeatures: str = NotImplemented,
            config: str = NotImplemented,
            confVars: str = NotImplemented,
            useCdn: bool = NotImplemented,
            tags: str = NotImplemented,
            swfUrlVersion: str = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            creationMode: KalturaUiConfCreationMode = NotImplemented,
            html5Url: str = NotImplemented,
            version: str = NotImplemented,
            partnerTags: str = NotImplemented,
            v2Redirect: KalturaUiConfV2Redirect = NotImplemented): ...

    def getId(self) -> int: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getDescription(self) -> str: ...
    def setDescription(self, newDescription: str) -> None: ...
    def getPartnerId(self) -> int: ...
    def getObjType(self) -> KalturaUiConfObjType: ...
    def setObjType(self, newObjType: KalturaUiConfObjType) -> None: ...
    def getObjTypeAsString(self) -> str: ...
    def getWidth(self) -> int: ...
    def setWidth(self, newWidth: int) -> None: ...
    def getHeight(self) -> int: ...
    def setHeight(self, newHeight: int) -> None: ...
    def getHtmlParams(self) -> str: ...
    def setHtmlParams(self, newHtmlParams: str) -> None: ...
    def getSwfUrl(self) -> str: ...
    def setSwfUrl(self, newSwfUrl: str) -> None: ...
    def getConfFilePath(self) -> str: ...
    def getConfFile(self) -> str: ...
    def setConfFile(self, newConfFile: str) -> None: ...
    def getConfFileFeatures(self) -> str: ...
    def setConfFileFeatures(self, newConfFileFeatures: str) -> None: ...
    def getConfig(self) -> str: ...
    def setConfig(self, newConfig: str) -> None: ...
    def getConfVars(self) -> str: ...
    def setConfVars(self, newConfVars: str) -> None: ...
    def getUseCdn(self) -> bool: ...
    def setUseCdn(self, newUseCdn: bool) -> None: ...
    def getTags(self) -> str: ...
    def setTags(self, newTags: str) -> None: ...
    def getSwfUrlVersion(self) -> str: ...
    def setSwfUrlVersion(self, newSwfUrlVersion: str) -> None: ...
    def getCreatedAt(self) -> int: ...
    def getUpdatedAt(self) -> int: ...
    def getCreationMode(self) -> KalturaUiConfCreationMode: ...
    def setCreationMode(self, newCreationMode: KalturaUiConfCreationMode) -> None: ...
    def getHtml5Url(self) -> str: ...
    def setHtml5Url(self, newHtml5Url: str) -> None: ...
    def getVersion(self) -> str: ...
    def getPartnerTags(self) -> str: ...
    def setPartnerTags(self, newPartnerTags: str) -> None: ...
    def getV2Redirect(self) -> KalturaUiConfV2Redirect: ...
    def setV2Redirect(self, newV2Redirect: KalturaUiConfV2Redirect) -> None: ...

class KalturaUiConfTypeInfo(KalturaObjectBase):
    type: KalturaUiConfObjType
    versions: List[KalturaString]
    directory: str
    filename: str
    def __init__(self,
            type: KalturaUiConfObjType = NotImplemented,
            versions: List[KalturaString] = NotImplemented,
            directory: str = NotImplemented,
            filename: str = NotImplemented): ...

    def getType(self) -> KalturaUiConfObjType: ...
    def setType(self, newType: KalturaUiConfObjType) -> None: ...
    def getVersions(self) -> List[KalturaString]: ...
    def setVersions(self, newVersions: List[KalturaString]) -> None: ...
    def getDirectory(self) -> str: ...
    def setDirectory(self, newDirectory: str) -> None: ...
    def getFilename(self) -> str: ...
    def setFilename(self, newFilename: str) -> None: ...

class KalturaUploadResponse(KalturaObjectBase):
    uploadTokenId: str
    fileSize: int
    errorCode: KalturaUploadErrorCode
    errorDescription: str
    def __init__(self,
            uploadTokenId: str = NotImplemented,
            fileSize: int = NotImplemented,
            errorCode: KalturaUploadErrorCode = NotImplemented,
            errorDescription: str = NotImplemented): ...

    def getUploadTokenId(self) -> str: ...
    def setUploadTokenId(self, newUploadTokenId: str) -> None: ...
    def getFileSize(self) -> int: ...
    def setFileSize(self, newFileSize: int) -> None: ...
    def getErrorCode(self) -> KalturaUploadErrorCode: ...
    def setErrorCode(self, newErrorCode: KalturaUploadErrorCode) -> None: ...
    def getErrorDescription(self) -> str: ...
    def setErrorDescription(self, newErrorDescription: str) -> None: ...

class KalturaUploadToken(KalturaObjectBase):
    id: str
    partnerId: int
    userId: str
    status: KalturaUploadTokenStatus
    fileName: str
    fileSize: float
    uploadedFileSize: float
    createdAt: int
    updatedAt: int
    uploadUrl: str
    autoFinalize: KalturaNullableBoolean
    attachedObjectType: str
    attachedObjectId: str
    def __init__(self,
            id: str = NotImplemented,
            partnerId: int = NotImplemented,
            userId: str = NotImplemented,
            status: KalturaUploadTokenStatus = NotImplemented,
            fileName: str = NotImplemented,
            fileSize: float = NotImplemented,
            uploadedFileSize: float = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            uploadUrl: str = NotImplemented,
            autoFinalize: KalturaNullableBoolean = NotImplemented,
            attachedObjectType: str = NotImplemented,
            attachedObjectId: str = NotImplemented): ...

    def getId(self) -> str: ...
    def getPartnerId(self) -> int: ...
    def getUserId(self) -> str: ...
    def getStatus(self) -> KalturaUploadTokenStatus: ...
    def getFileName(self) -> str: ...
    def setFileName(self, newFileName: str) -> None: ...
    def getFileSize(self) -> float: ...
    def setFileSize(self, newFileSize: float) -> None: ...
    def getUploadedFileSize(self) -> float: ...
    def getCreatedAt(self) -> int: ...
    def getUpdatedAt(self) -> int: ...
    def getUploadUrl(self) -> str: ...
    def getAutoFinalize(self) -> KalturaNullableBoolean: ...
    def setAutoFinalize(self, newAutoFinalize: KalturaNullableBoolean) -> None: ...
    def getAttachedObjectType(self) -> str: ...
    def getAttachedObjectId(self) -> str: ...

class KalturaUserAppRole(KalturaAppRole):
    userId: str
    def __init__(self,
            appGuid: str = NotImplemented,
            userRoleId: int = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            userId: str = NotImplemented): ...

    def getUserId(self) -> str: ...
    def setUserId(self, newUserId: str) -> None: ...

class KalturaUserEntry(KalturaObjectBase):
    id: int
    entryId: str
    userId: str
    partnerId: int
    status: KalturaUserEntryStatus
    createdAt: int
    updatedAt: int
    type: KalturaUserEntryType
    def __init__(self,
            id: int = NotImplemented,
            entryId: str = NotImplemented,
            userId: str = NotImplemented,
            partnerId: int = NotImplemented,
            status: KalturaUserEntryStatus = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            type: KalturaUserEntryType = NotImplemented): ...

    def getId(self) -> int: ...
    def getEntryId(self) -> str: ...
    def setEntryId(self, newEntryId: str) -> None: ...
    def getUserId(self) -> str: ...
    def setUserId(self, newUserId: str) -> None: ...
    def getPartnerId(self) -> int: ...
    def getStatus(self) -> KalturaUserEntryStatus: ...
    def getCreatedAt(self) -> int: ...
    def getUpdatedAt(self) -> int: ...
    def getType(self) -> KalturaUserEntryType: ...

class KalturaUserLoginData(KalturaObjectBase):
    id: str
    loginEmail: str
    def __init__(self,
            id: str = NotImplemented,
            loginEmail: str = NotImplemented): ...

    def getId(self) -> str: ...
    def setId(self, newId: str) -> None: ...
    def getLoginEmail(self) -> str: ...
    def setLoginEmail(self, newLoginEmail: str) -> None: ...

class KalturaUserRole(KalturaObjectBase):
    id: int
    name: str
    systemName: str
    description: str
    status: KalturaUserRoleStatus
    partnerId: int
    permissionNames: str
    tags: str
    createdAt: int
    updatedAt: int
    def __init__(self,
            id: int = NotImplemented,
            name: str = NotImplemented,
            systemName: str = NotImplemented,
            description: str = NotImplemented,
            status: KalturaUserRoleStatus = NotImplemented,
            partnerId: int = NotImplemented,
            permissionNames: str = NotImplemented,
            tags: str = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented): ...

    def getId(self) -> int: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getSystemName(self) -> str: ...
    def setSystemName(self, newSystemName: str) -> None: ...
    def getDescription(self) -> str: ...
    def setDescription(self, newDescription: str) -> None: ...
    def getStatus(self) -> KalturaUserRoleStatus: ...
    def setStatus(self, newStatus: KalturaUserRoleStatus) -> None: ...
    def getPartnerId(self) -> int: ...
    def getPermissionNames(self) -> str: ...
    def setPermissionNames(self, newPermissionNames: str) -> None: ...
    def getTags(self) -> str: ...
    def setTags(self, newTags: str) -> None: ...
    def getCreatedAt(self) -> int: ...
    def getUpdatedAt(self) -> int: ...

class KalturaWidget(KalturaObjectBase):
    id: str
    sourceWidgetId: str
    rootWidgetId: str
    partnerId: int
    entryId: str
    uiConfId: int
    securityType: KalturaWidgetSecurityType
    securityPolicy: int
    createdAt: int
    updatedAt: int
    partnerData: str
    widgetHTML: str
    enforceEntitlement: bool
    privacyContext: str
    addEmbedHtml5Support: bool
    roles: str
    privileges: str
    def __init__(self,
            id: str = NotImplemented,
            sourceWidgetId: str = NotImplemented,
            rootWidgetId: str = NotImplemented,
            partnerId: int = NotImplemented,
            entryId: str = NotImplemented,
            uiConfId: int = NotImplemented,
            securityType: KalturaWidgetSecurityType = NotImplemented,
            securityPolicy: int = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            partnerData: str = NotImplemented,
            widgetHTML: str = NotImplemented,
            enforceEntitlement: bool = NotImplemented,
            privacyContext: str = NotImplemented,
            addEmbedHtml5Support: bool = NotImplemented,
            roles: str = NotImplemented,
            privileges: str = NotImplemented): ...

    def getId(self) -> str: ...
    def getSourceWidgetId(self) -> str: ...
    def setSourceWidgetId(self, newSourceWidgetId: str) -> None: ...
    def getRootWidgetId(self) -> str: ...
    def getPartnerId(self) -> int: ...
    def getEntryId(self) -> str: ...
    def setEntryId(self, newEntryId: str) -> None: ...
    def getUiConfId(self) -> int: ...
    def setUiConfId(self, newUiConfId: int) -> None: ...
    def getSecurityType(self) -> KalturaWidgetSecurityType: ...
    def setSecurityType(self, newSecurityType: KalturaWidgetSecurityType) -> None: ...
    def getSecurityPolicy(self) -> int: ...
    def setSecurityPolicy(self, newSecurityPolicy: int) -> None: ...
    def getCreatedAt(self) -> int: ...
    def getUpdatedAt(self) -> int: ...
    def getPartnerData(self) -> str: ...
    def setPartnerData(self, newPartnerData: str) -> None: ...
    def getWidgetHTML(self) -> str: ...
    def getEnforceEntitlement(self) -> bool: ...
    def setEnforceEntitlement(self, newEnforceEntitlement: bool) -> None: ...
    def getPrivacyContext(self) -> str: ...
    def setPrivacyContext(self, newPrivacyContext: str) -> None: ...
    def getAddEmbedHtml5Support(self) -> bool: ...
    def setAddEmbedHtml5Support(self, newAddEmbedHtml5Support: bool) -> None: ...
    def getRoles(self) -> str: ...
    def setRoles(self, newRoles: str) -> None: ...
    def getPrivileges(self) -> str: ...
    def setPrivileges(self, newPrivileges: str) -> None: ...

class KalturaBatchJobBaseFilter(KalturaFilter):
    idEqual: int
    idGreaterThanOrEqual: int
    partnerIdEqual: int
    partnerIdIn: str
    partnerIdNotIn: str
    createdAtGreaterThanOrEqual: int
    createdAtLessThanOrEqual: int
    updatedAtGreaterThanOrEqual: int
    updatedAtLessThanOrEqual: int
    executionAttemptsGreaterThanOrEqual: int
    executionAttemptsLessThanOrEqual: int
    lockVersionGreaterThanOrEqual: int
    lockVersionLessThanOrEqual: int
    entryIdEqual: str
    jobTypeEqual: KalturaBatchJobType
    jobTypeIn: str
    jobTypeNotIn: str
    jobSubTypeEqual: int
    jobSubTypeIn: str
    jobSubTypeNotIn: str
    statusEqual: KalturaBatchJobStatus
    statusIn: str
    statusNotIn: str
    priorityGreaterThanOrEqual: int
    priorityLessThanOrEqual: int
    priorityEqual: int
    priorityIn: str
    priorityNotIn: str
    batchVersionGreaterThanOrEqual: int
    batchVersionLessThanOrEqual: int
    batchVersionEqual: int
    queueTimeGreaterThanOrEqual: int
    queueTimeLessThanOrEqual: int
    finishTimeGreaterThanOrEqual: int
    finishTimeLessThanOrEqual: int
    errTypeEqual: KalturaBatchJobErrorTypes
    errTypeIn: str
    errTypeNotIn: str
    errNumberEqual: int
    errNumberIn: str
    errNumberNotIn: str
    estimatedEffortLessThan: int
    estimatedEffortGreaterThan: int
    urgencyLessThanOrEqual: int
    urgencyGreaterThanOrEqual: int
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idGreaterThanOrEqual: int = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            partnerIdNotIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            executionAttemptsGreaterThanOrEqual: int = NotImplemented,
            executionAttemptsLessThanOrEqual: int = NotImplemented,
            lockVersionGreaterThanOrEqual: int = NotImplemented,
            lockVersionLessThanOrEqual: int = NotImplemented,
            entryIdEqual: str = NotImplemented,
            jobTypeEqual: KalturaBatchJobType = NotImplemented,
            jobTypeIn: str = NotImplemented,
            jobTypeNotIn: str = NotImplemented,
            jobSubTypeEqual: int = NotImplemented,
            jobSubTypeIn: str = NotImplemented,
            jobSubTypeNotIn: str = NotImplemented,
            statusEqual: KalturaBatchJobStatus = NotImplemented,
            statusIn: str = NotImplemented,
            statusNotIn: str = NotImplemented,
            priorityGreaterThanOrEqual: int = NotImplemented,
            priorityLessThanOrEqual: int = NotImplemented,
            priorityEqual: int = NotImplemented,
            priorityIn: str = NotImplemented,
            priorityNotIn: str = NotImplemented,
            batchVersionGreaterThanOrEqual: int = NotImplemented,
            batchVersionLessThanOrEqual: int = NotImplemented,
            batchVersionEqual: int = NotImplemented,
            queueTimeGreaterThanOrEqual: int = NotImplemented,
            queueTimeLessThanOrEqual: int = NotImplemented,
            finishTimeGreaterThanOrEqual: int = NotImplemented,
            finishTimeLessThanOrEqual: int = NotImplemented,
            errTypeEqual: KalturaBatchJobErrorTypes = NotImplemented,
            errTypeIn: str = NotImplemented,
            errTypeNotIn: str = NotImplemented,
            errNumberEqual: int = NotImplemented,
            errNumberIn: str = NotImplemented,
            errNumberNotIn: str = NotImplemented,
            estimatedEffortLessThan: int = NotImplemented,
            estimatedEffortGreaterThan: int = NotImplemented,
            urgencyLessThanOrEqual: int = NotImplemented,
            urgencyGreaterThanOrEqual: int = NotImplemented): ...

    def getIdEqual(self) -> int: ...
    def setIdEqual(self, newIdEqual: int) -> None: ...
    def getIdGreaterThanOrEqual(self) -> int: ...
    def setIdGreaterThanOrEqual(self, newIdGreaterThanOrEqual: int) -> None: ...
    def getPartnerIdEqual(self) -> int: ...
    def setPartnerIdEqual(self, newPartnerIdEqual: int) -> None: ...
    def getPartnerIdIn(self) -> str: ...
    def setPartnerIdIn(self, newPartnerIdIn: str) -> None: ...
    def getPartnerIdNotIn(self) -> str: ...
    def setPartnerIdNotIn(self, newPartnerIdNotIn: str) -> None: ...
    def getCreatedAtGreaterThanOrEqual(self) -> int: ...
    def setCreatedAtGreaterThanOrEqual(self, newCreatedAtGreaterThanOrEqual: int) -> None: ...
    def getCreatedAtLessThanOrEqual(self) -> int: ...
    def setCreatedAtLessThanOrEqual(self, newCreatedAtLessThanOrEqual: int) -> None: ...
    def getUpdatedAtGreaterThanOrEqual(self) -> int: ...
    def setUpdatedAtGreaterThanOrEqual(self, newUpdatedAtGreaterThanOrEqual: int) -> None: ...
    def getUpdatedAtLessThanOrEqual(self) -> int: ...
    def setUpdatedAtLessThanOrEqual(self, newUpdatedAtLessThanOrEqual: int) -> None: ...
    def getExecutionAttemptsGreaterThanOrEqual(self) -> int: ...
    def setExecutionAttemptsGreaterThanOrEqual(self, newExecutionAttemptsGreaterThanOrEqual: int) -> None: ...
    def getExecutionAttemptsLessThanOrEqual(self) -> int: ...
    def setExecutionAttemptsLessThanOrEqual(self, newExecutionAttemptsLessThanOrEqual: int) -> None: ...
    def getLockVersionGreaterThanOrEqual(self) -> int: ...
    def setLockVersionGreaterThanOrEqual(self, newLockVersionGreaterThanOrEqual: int) -> None: ...
    def getLockVersionLessThanOrEqual(self) -> int: ...
    def setLockVersionLessThanOrEqual(self, newLockVersionLessThanOrEqual: int) -> None: ...
    def getEntryIdEqual(self) -> str: ...
    def setEntryIdEqual(self, newEntryIdEqual: str) -> None: ...
    def getJobTypeEqual(self) -> KalturaBatchJobType: ...
    def setJobTypeEqual(self, newJobTypeEqual: KalturaBatchJobType) -> None: ...
    def getJobTypeIn(self) -> str: ...
    def setJobTypeIn(self, newJobTypeIn: str) -> None: ...
    def getJobTypeNotIn(self) -> str: ...
    def setJobTypeNotIn(self, newJobTypeNotIn: str) -> None: ...
    def getJobSubTypeEqual(self) -> int: ...
    def setJobSubTypeEqual(self, newJobSubTypeEqual: int) -> None: ...
    def getJobSubTypeIn(self) -> str: ...
    def setJobSubTypeIn(self, newJobSubTypeIn: str) -> None: ...
    def getJobSubTypeNotIn(self) -> str: ...
    def setJobSubTypeNotIn(self, newJobSubTypeNotIn: str) -> None: ...
    def getStatusEqual(self) -> KalturaBatchJobStatus: ...
    def setStatusEqual(self, newStatusEqual: KalturaBatchJobStatus) -> None: ...
    def getStatusIn(self) -> str: ...
    def setStatusIn(self, newStatusIn: str) -> None: ...
    def getStatusNotIn(self) -> str: ...
    def setStatusNotIn(self, newStatusNotIn: str) -> None: ...
    def getPriorityGreaterThanOrEqual(self) -> int: ...
    def setPriorityGreaterThanOrEqual(self, newPriorityGreaterThanOrEqual: int) -> None: ...
    def getPriorityLessThanOrEqual(self) -> int: ...
    def setPriorityLessThanOrEqual(self, newPriorityLessThanOrEqual: int) -> None: ...
    def getPriorityEqual(self) -> int: ...
    def setPriorityEqual(self, newPriorityEqual: int) -> None: ...
    def getPriorityIn(self) -> str: ...
    def setPriorityIn(self, newPriorityIn: str) -> None: ...
    def getPriorityNotIn(self) -> str: ...
    def setPriorityNotIn(self, newPriorityNotIn: str) -> None: ...
    def getBatchVersionGreaterThanOrEqual(self) -> int: ...
    def setBatchVersionGreaterThanOrEqual(self, newBatchVersionGreaterThanOrEqual: int) -> None: ...
    def getBatchVersionLessThanOrEqual(self) -> int: ...
    def setBatchVersionLessThanOrEqual(self, newBatchVersionLessThanOrEqual: int) -> None: ...
    def getBatchVersionEqual(self) -> int: ...
    def setBatchVersionEqual(self, newBatchVersionEqual: int) -> None: ...
    def getQueueTimeGreaterThanOrEqual(self) -> int: ...
    def setQueueTimeGreaterThanOrEqual(self, newQueueTimeGreaterThanOrEqual: int) -> None: ...
    def getQueueTimeLessThanOrEqual(self) -> int: ...
    def setQueueTimeLessThanOrEqual(self, newQueueTimeLessThanOrEqual: int) -> None: ...
    def getFinishTimeGreaterThanOrEqual(self) -> int: ...
    def setFinishTimeGreaterThanOrEqual(self, newFinishTimeGreaterThanOrEqual: int) -> None: ...
    def getFinishTimeLessThanOrEqual(self) -> int: ...
    def setFinishTimeLessThanOrEqual(self, newFinishTimeLessThanOrEqual: int) -> None: ...
    def getErrTypeEqual(self) -> KalturaBatchJobErrorTypes: ...
    def setErrTypeEqual(self, newErrTypeEqual: KalturaBatchJobErrorTypes) -> None: ...
    def getErrTypeIn(self) -> str: ...
    def setErrTypeIn(self, newErrTypeIn: str) -> None: ...
    def getErrTypeNotIn(self) -> str: ...
    def setErrTypeNotIn(self, newErrTypeNotIn: str) -> None: ...
    def getErrNumberEqual(self) -> int: ...
    def setErrNumberEqual(self, newErrNumberEqual: int) -> None: ...
    def getErrNumberIn(self) -> str: ...
    def setErrNumberIn(self, newErrNumberIn: str) -> None: ...
    def getErrNumberNotIn(self) -> str: ...
    def setErrNumberNotIn(self, newErrNumberNotIn: str) -> None: ...
    def getEstimatedEffortLessThan(self) -> int: ...
    def setEstimatedEffortLessThan(self, newEstimatedEffortLessThan: int) -> None: ...
    def getEstimatedEffortGreaterThan(self) -> int: ...
    def setEstimatedEffortGreaterThan(self, newEstimatedEffortGreaterThan: int) -> None: ...
    def getUrgencyLessThanOrEqual(self) -> int: ...
    def setUrgencyLessThanOrEqual(self, newUrgencyLessThanOrEqual: int) -> None: ...
    def getUrgencyGreaterThanOrEqual(self) -> int: ...
    def setUrgencyGreaterThanOrEqual(self, newUrgencyGreaterThanOrEqual: int) -> None: ...

class KalturaBatchJobFilter(KalturaBatchJobBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idGreaterThanOrEqual: int = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            partnerIdNotIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            executionAttemptsGreaterThanOrEqual: int = NotImplemented,
            executionAttemptsLessThanOrEqual: int = NotImplemented,
            lockVersionGreaterThanOrEqual: int = NotImplemented,
            lockVersionLessThanOrEqual: int = NotImplemented,
            entryIdEqual: str = NotImplemented,
            jobTypeEqual: KalturaBatchJobType = NotImplemented,
            jobTypeIn: str = NotImplemented,
            jobTypeNotIn: str = NotImplemented,
            jobSubTypeEqual: int = NotImplemented,
            jobSubTypeIn: str = NotImplemented,
            jobSubTypeNotIn: str = NotImplemented,
            statusEqual: KalturaBatchJobStatus = NotImplemented,
            statusIn: str = NotImplemented,
            statusNotIn: str = NotImplemented,
            priorityGreaterThanOrEqual: int = NotImplemented,
            priorityLessThanOrEqual: int = NotImplemented,
            priorityEqual: int = NotImplemented,
            priorityIn: str = NotImplemented,
            priorityNotIn: str = NotImplemented,
            batchVersionGreaterThanOrEqual: int = NotImplemented,
            batchVersionLessThanOrEqual: int = NotImplemented,
            batchVersionEqual: int = NotImplemented,
            queueTimeGreaterThanOrEqual: int = NotImplemented,
            queueTimeLessThanOrEqual: int = NotImplemented,
            finishTimeGreaterThanOrEqual: int = NotImplemented,
            finishTimeLessThanOrEqual: int = NotImplemented,
            errTypeEqual: KalturaBatchJobErrorTypes = NotImplemented,
            errTypeIn: str = NotImplemented,
            errTypeNotIn: str = NotImplemented,
            errNumberEqual: int = NotImplemented,
            errNumberIn: str = NotImplemented,
            errNumberNotIn: str = NotImplemented,
            estimatedEffortLessThan: int = NotImplemented,
            estimatedEffortGreaterThan: int = NotImplemented,
            urgencyLessThanOrEqual: int = NotImplemented,
            urgencyGreaterThanOrEqual: int = NotImplemented): ...
        pass

class KalturaAccessControlBlockAction(KalturaRuleAction):
    def __init__(self,
            type: KalturaRuleActionType = NotImplemented): ...
        pass

class KalturaAccessControlLimitDeliveryProfilesAction(KalturaRuleAction):
    deliveryProfileIds: str
    isBlockedList: bool
    def __init__(self,
            type: KalturaRuleActionType = NotImplemented,
            deliveryProfileIds: str = NotImplemented,
            isBlockedList: bool = NotImplemented): ...

    def getDeliveryProfileIds(self) -> str: ...
    def setDeliveryProfileIds(self, newDeliveryProfileIds: str) -> None: ...
    def getIsBlockedList(self) -> bool: ...
    def setIsBlockedList(self, newIsBlockedList: bool) -> None: ...

class KalturaAccessControlLimitFlavorsAction(KalturaRuleAction):
    flavorParamsIds: str
    isBlockedList: bool
    def __init__(self,
            type: KalturaRuleActionType = NotImplemented,
            flavorParamsIds: str = NotImplemented,
            isBlockedList: bool = NotImplemented): ...

    def getFlavorParamsIds(self) -> str: ...
    def setFlavorParamsIds(self, newFlavorParamsIds: str) -> None: ...
    def getIsBlockedList(self) -> bool: ...
    def setIsBlockedList(self, newIsBlockedList: bool) -> None: ...

class KalturaAccessControlLimitThumbnailCaptureAction(KalturaRuleAction):
    def __init__(self,
            type: KalturaRuleActionType = NotImplemented): ...
        pass

class KalturaAccessControlListResponse(KalturaListResponse):
    objects: List[KalturaAccessControl]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaAccessControl] = NotImplemented): ...

    def getObjects(self) -> List[KalturaAccessControl]: ...

class KalturaAccessControlModifyRequestHostRegexAction(KalturaRuleAction):
    pattern: str
    replacement: str
    replacmenServerNodeId: int
    checkAliveTimeoutMs: int
    def __init__(self,
            type: KalturaRuleActionType = NotImplemented,
            pattern: str = NotImplemented,
            replacement: str = NotImplemented,
            replacmenServerNodeId: int = NotImplemented,
            checkAliveTimeoutMs: int = NotImplemented): ...

    def getPattern(self) -> str: ...
    def setPattern(self, newPattern: str) -> None: ...
    def getReplacement(self) -> str: ...
    def setReplacement(self, newReplacement: str) -> None: ...
    def getReplacmenServerNodeId(self) -> int: ...
    def setReplacmenServerNodeId(self, newReplacmenServerNodeId: int) -> None: ...
    def getCheckAliveTimeoutMs(self) -> int: ...
    def setCheckAliveTimeoutMs(self, newCheckAliveTimeoutMs: int) -> None: ...

class KalturaAccessControlPreviewAction(KalturaRuleAction):
    limit: int
    def __init__(self,
            type: KalturaRuleActionType = NotImplemented,
            limit: int = NotImplemented): ...

    def getLimit(self) -> int: ...
    def setLimit(self, newLimit: int) -> None: ...

class KalturaAccessControlProfileListResponse(KalturaListResponse):
    objects: List[KalturaAccessControlProfile]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaAccessControlProfile] = NotImplemented): ...

    def getObjects(self) -> List[KalturaAccessControlProfile]: ...

class KalturaAccessControlServeRemoteEdgeServerAction(KalturaRuleAction):
    edgeServerIds: str
    seamlessFallbackEnabled: KalturaNullableBoolean
    def __init__(self,
            type: KalturaRuleActionType = NotImplemented,
            edgeServerIds: str = NotImplemented,
            seamlessFallbackEnabled: KalturaNullableBoolean = NotImplemented): ...

    def getEdgeServerIds(self) -> str: ...
    def setEdgeServerIds(self, newEdgeServerIds: str) -> None: ...
    def getSeamlessFallbackEnabled(self) -> KalturaNullableBoolean: ...
    def setSeamlessFallbackEnabled(self, newSeamlessFallbackEnabled: KalturaNullableBoolean) -> None: ...

class KalturaAmazonS3StorageProfile(KalturaStorageProfile):
    filesPermissionInS3: KalturaAmazonS3StorageProfileFilesPermissionLevel
    s3Region: str
    sseType: str
    sseKmsKeyId: str
    signatureType: str
    endPoint: str
    def __init__(self,
            id: int = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            partnerId: int = NotImplemented,
            name: str = NotImplemented,
            systemName: str = NotImplemented,
            desciption: str = NotImplemented,
            status: KalturaStorageProfileStatus = NotImplemented,
            protocol: KalturaStorageProfileProtocol = NotImplemented,
            storageUrl: str = NotImplemented,
            storageBaseDir: str = NotImplemented,
            pathPrefix: str = NotImplemented,
            storageUsername: str = NotImplemented,
            storagePassword: str = NotImplemented,
            storageFtpPassiveMode: bool = NotImplemented,
            minFileSize: int = NotImplemented,
            maxFileSize: int = NotImplemented,
            flavorParamsIds: str = NotImplemented,
            maxConcurrentConnections: int = NotImplemented,
            pathManagerClass: str = NotImplemented,
            pathManagerParams: List[KalturaKeyValue] = NotImplemented,
            trigger: int = NotImplemented,
            deliveryPriority: int = NotImplemented,
            deliveryStatus: KalturaStorageProfileDeliveryStatus = NotImplemented,
            readyBehavior: KalturaStorageProfileReadyBehavior = NotImplemented,
            allowAutoDelete: int = NotImplemented,
            createFileLink: bool = NotImplemented,
            rules: List[KalturaRule] = NotImplemented,
            deliveryProfileIds: List[KalturaKeyValue] = NotImplemented,
            privateKey: str = NotImplemented,
            publicKey: str = NotImplemented,
            passPhrase: str = NotImplemented,
            port: int = NotImplemented,
            shouldExportThumbs: bool = NotImplemented,
            packagerUrl: str = NotImplemented,
            exportPeriodically: bool = NotImplemented,
            excludedFlavorParamsIds: str = NotImplemented,
            shouldExportCaptions: bool = NotImplemented,
            excludedEntryTypes: str = NotImplemented,
            additionalInfo: List[KalturaKeyValue] = NotImplemented,
            filesPermissionInS3: KalturaAmazonS3StorageProfileFilesPermissionLevel = NotImplemented,
            s3Region: str = NotImplemented,
            sseType: str = NotImplemented,
            sseKmsKeyId: str = NotImplemented,
            signatureType: str = NotImplemented,
            endPoint: str = NotImplemented): ...

    def getFilesPermissionInS3(self) -> KalturaAmazonS3StorageProfileFilesPermissionLevel: ...
    def setFilesPermissionInS3(self, newFilesPermissionInS3: KalturaAmazonS3StorageProfileFilesPermissionLevel) -> None: ...
    def getS3Region(self) -> str: ...
    def setS3Region(self, newS3Region: str) -> None: ...
    def getSseType(self) -> str: ...
    def setSseType(self, newSseType: str) -> None: ...
    def getSseKmsKeyId(self) -> str: ...
    def setSseKmsKeyId(self, newSseKmsKeyId: str) -> None: ...
    def getSignatureType(self) -> str: ...
    def setSignatureType(self, newSignatureType: str) -> None: ...
    def getEndPoint(self) -> str: ...
    def setEndPoint(self, newEndPoint: str) -> None: ...

class KalturaApiActionPermissionItem(KalturaPermissionItem):
    service: str
    action: str
    def __init__(self,
            id: int = NotImplemented,
            type: KalturaPermissionItemType = NotImplemented,
            partnerId: int = NotImplemented,
            tags: str = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            service: str = NotImplemented,
            action: str = NotImplemented): ...

    def getService(self) -> str: ...
    def setService(self, newService: str) -> None: ...
    def getAction(self) -> str: ...
    def setAction(self, newAction: str) -> None: ...

class KalturaApiParameterPermissionItem(KalturaPermissionItem):
    object: str
    parameter: str
    action: KalturaApiParameterPermissionItemAction
    def __init__(self,
            id: int = NotImplemented,
            type: KalturaPermissionItemType = NotImplemented,
            partnerId: int = NotImplemented,
            tags: str = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            object: str = NotImplemented,
            parameter: str = NotImplemented,
            action: KalturaApiParameterPermissionItemAction = NotImplemented): ...

    def getObject(self) -> str: ...
    def setObject(self, newObject: str) -> None: ...
    def getParameter(self) -> str: ...
    def setParameter(self, newParameter: str) -> None: ...
    def getAction(self) -> KalturaApiParameterPermissionItemAction: ...
    def setAction(self, newAction: KalturaApiParameterPermissionItemAction) -> None: ...

class KalturaAppTokenBaseFilter(KalturaFilter):
    idEqual: str
    idIn: str
    createdAtGreaterThanOrEqual: int
    createdAtLessThanOrEqual: int
    updatedAtGreaterThanOrEqual: int
    updatedAtLessThanOrEqual: int
    statusEqual: KalturaAppTokenStatus
    statusIn: str
    sessionUserIdEqual: str
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: str = NotImplemented,
            idIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            statusEqual: KalturaAppTokenStatus = NotImplemented,
            statusIn: str = NotImplemented,
            sessionUserIdEqual: str = NotImplemented): ...

    def getIdEqual(self) -> str: ...
    def setIdEqual(self, newIdEqual: str) -> None: ...
    def getIdIn(self) -> str: ...
    def setIdIn(self, newIdIn: str) -> None: ...
    def getCreatedAtGreaterThanOrEqual(self) -> int: ...
    def setCreatedAtGreaterThanOrEqual(self, newCreatedAtGreaterThanOrEqual: int) -> None: ...
    def getCreatedAtLessThanOrEqual(self) -> int: ...
    def setCreatedAtLessThanOrEqual(self, newCreatedAtLessThanOrEqual: int) -> None: ...
    def getUpdatedAtGreaterThanOrEqual(self) -> int: ...
    def setUpdatedAtGreaterThanOrEqual(self, newUpdatedAtGreaterThanOrEqual: int) -> None: ...
    def getUpdatedAtLessThanOrEqual(self) -> int: ...
    def setUpdatedAtLessThanOrEqual(self, newUpdatedAtLessThanOrEqual: int) -> None: ...
    def getStatusEqual(self) -> KalturaAppTokenStatus: ...
    def setStatusEqual(self, newStatusEqual: KalturaAppTokenStatus) -> None: ...
    def getStatusIn(self) -> str: ...
    def setStatusIn(self, newStatusIn: str) -> None: ...
    def getSessionUserIdEqual(self) -> str: ...
    def setSessionUserIdEqual(self, newSessionUserIdEqual: str) -> None: ...

class KalturaAppTokenListResponse(KalturaListResponse):
    objects: List[KalturaAppToken]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaAppToken] = NotImplemented): ...

    def getObjects(self) -> List[KalturaAppToken]: ...

class KalturaAspectRatioCropAttributes(KalturaDimensionsAttributes):
    aspectRatio: float
    def __init__(self,
            aspectRatio: float = NotImplemented): ...

    def getAspectRatio(self) -> float: ...
    def setAspectRatio(self, newAspectRatio: float) -> None: ...

class KalturaAspectRatioScaleAttributes(KalturaDimensionsAttributes):
    aspectRatio: float
    def __init__(self,
            aspectRatio: float = NotImplemented): ...

    def getAspectRatio(self) -> float: ...
    def setAspectRatio(self, newAspectRatio: float) -> None: ...

class KalturaAssetParamsOutput(KalturaAssetParams):
    assetParamsId: int
    assetParamsVersion: str
    assetId: str
    assetVersion: str
    readyBehavior: int
    format: KalturaContainerFormat
    def __init__(self,
            id: int = NotImplemented,
            partnerId: int = NotImplemented,
            name: str = NotImplemented,
            systemName: str = NotImplemented,
            description: str = NotImplemented,
            createdAt: int = NotImplemented,
            isSystemDefault: KalturaNullableBoolean = NotImplemented,
            tags: str = NotImplemented,
            requiredPermissions: List[KalturaString] = NotImplemented,
            sourceRemoteStorageProfileId: int = NotImplemented,
            remoteStorageProfileIds: int = NotImplemented,
            mediaParserType: KalturaMediaParserType = NotImplemented,
            sourceAssetParamsIds: str = NotImplemented,
            assetParamsId: int = NotImplemented,
            assetParamsVersion: str = NotImplemented,
            assetId: str = NotImplemented,
            assetVersion: str = NotImplemented,
            readyBehavior: int = NotImplemented,
            format: KalturaContainerFormat = NotImplemented): ...

    def getAssetParamsId(self) -> int: ...
    def setAssetParamsId(self, newAssetParamsId: int) -> None: ...
    def getAssetParamsVersion(self) -> str: ...
    def setAssetParamsVersion(self, newAssetParamsVersion: str) -> None: ...
    def getAssetId(self) -> str: ...
    def setAssetId(self, newAssetId: str) -> None: ...
    def getAssetVersion(self) -> str: ...
    def setAssetVersion(self, newAssetVersion: str) -> None: ...
    def getReadyBehavior(self) -> int: ...
    def setReadyBehavior(self, newReadyBehavior: int) -> None: ...
    def getFormat(self) -> KalturaContainerFormat: ...
    def setFormat(self, newFormat: KalturaContainerFormat) -> None: ...

class KalturaAssetPropertiesCompareCondition(KalturaCondition):
    properties: List[KalturaKeyValue]
    def __init__(self,
            type: KalturaConditionType = NotImplemented,
            description: str = NotImplemented,
            not_: bool = NotImplemented,
            properties: List[KalturaKeyValue] = NotImplemented): ...

    def getProperties(self) -> List[KalturaKeyValue]: ...
    def setProperties(self, newProperties: List[KalturaKeyValue]) -> None: ...

class KalturaAssetTypeCondition(KalturaCondition):
    assetTypes: str
    def __init__(self,
            type: KalturaConditionType = NotImplemented,
            description: str = NotImplemented,
            not_: bool = NotImplemented,
            assetTypes: str = NotImplemented): ...

    def getAssetTypes(self) -> str: ...
    def setAssetTypes(self, newAssetTypes: str) -> None: ...

class KalturaAssetsParamsResourceContainers(KalturaResource):
    resources: List[KalturaAssetParamsResourceContainer]
    def __init__(self,
            resources: List[KalturaAssetParamsResourceContainer] = NotImplemented): ...

    def getResources(self) -> List[KalturaAssetParamsResourceContainer]: ...
    def setResources(self, newResources: List[KalturaAssetParamsResourceContainer]) -> None: ...

class KalturaAttributeCondition(KalturaSearchItem):
    value: str
    def __init__(self,
            value: str = NotImplemented): ...

    def getValue(self) -> str: ...
    def setValue(self, newValue: str) -> None: ...

class KalturaAuthenticatedCondition(KalturaCondition):
    privileges: List[KalturaStringValue]
    def __init__(self,
            type: KalturaConditionType = NotImplemented,
            description: str = NotImplemented,
            not_: bool = NotImplemented,
            privileges: List[KalturaStringValue] = NotImplemented): ...

    def getPrivileges(self) -> List[KalturaStringValue]: ...
    def setPrivileges(self, newPrivileges: List[KalturaStringValue]) -> None: ...

class KalturaBaseEntryCloneOptionComponent(KalturaBaseEntryCloneOptionItem):
    itemType: KalturaBaseEntryCloneOptions
    rule: KalturaCloneComponentSelectorType
    def __init__(self,
            itemType: KalturaBaseEntryCloneOptions = NotImplemented,
            rule: KalturaCloneComponentSelectorType = NotImplemented): ...

    def getItemType(self) -> KalturaBaseEntryCloneOptions: ...
    def setItemType(self, newItemType: KalturaBaseEntryCloneOptions) -> None: ...
    def getRule(self) -> KalturaCloneComponentSelectorType: ...
    def setRule(self, newRule: KalturaCloneComponentSelectorType) -> None: ...

class KalturaBaseEntryListResponse(KalturaListResponse):
    objects: List[KalturaBaseEntry]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaBaseEntry] = NotImplemented): ...

    def getObjects(self) -> List[KalturaBaseEntry]: ...

class KalturaBaseSyndicationFeedBaseFilter(KalturaFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented): ...
        pass

class KalturaBaseSyndicationFeedListResponse(KalturaListResponse):
    objects: List[KalturaBaseSyndicationFeed]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaBaseSyndicationFeed] = NotImplemented): ...

    def getObjects(self) -> List[KalturaBaseSyndicationFeed]: ...

class KalturaBatchJobListResponse(KalturaListResponse):
    objects: List[KalturaBatchJob]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaBatchJob] = NotImplemented): ...

    def getObjects(self) -> List[KalturaBatchJob]: ...

class KalturaBooleanEventNotificationCondition(KalturaCondition):
    booleanEventNotificationIds: str
    def __init__(self,
            type: KalturaConditionType = NotImplemented,
            description: str = NotImplemented,
            not_: bool = NotImplemented,
            booleanEventNotificationIds: str = NotImplemented): ...

    def getBooleanEventNotificationIds(self) -> str: ...
    def setBooleanEventNotificationIds(self, newBooleanEventNotificationIds: str) -> None: ...

class KalturaBulkDownloadJobData(KalturaJobData):
    entryIds: str
    flavorParamsId: int
    puserId: str
    def __init__(self,
            entryIds: str = NotImplemented,
            flavorParamsId: int = NotImplemented,
            puserId: str = NotImplemented): ...

    def getEntryIds(self) -> str: ...
    def setEntryIds(self, newEntryIds: str) -> None: ...
    def getFlavorParamsId(self) -> int: ...
    def setFlavorParamsId(self, newFlavorParamsId: int) -> None: ...
    def getPuserId(self) -> str: ...
    def setPuserId(self, newPuserId: str) -> None: ...

class KalturaBulkUploadBaseFilter(KalturaFilter):
    uploadedOnGreaterThanOrEqual: int
    uploadedOnLessThanOrEqual: int
    uploadedOnEqual: int
    statusIn: str
    statusEqual: KalturaBatchJobStatus
    bulkUploadObjectTypeEqual: KalturaBulkUploadObjectType
    bulkUploadObjectTypeIn: str
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            uploadedOnGreaterThanOrEqual: int = NotImplemented,
            uploadedOnLessThanOrEqual: int = NotImplemented,
            uploadedOnEqual: int = NotImplemented,
            statusIn: str = NotImplemented,
            statusEqual: KalturaBatchJobStatus = NotImplemented,
            bulkUploadObjectTypeEqual: KalturaBulkUploadObjectType = NotImplemented,
            bulkUploadObjectTypeIn: str = NotImplemented): ...

    def getUploadedOnGreaterThanOrEqual(self) -> int: ...
    def setUploadedOnGreaterThanOrEqual(self, newUploadedOnGreaterThanOrEqual: int) -> None: ...
    def getUploadedOnLessThanOrEqual(self) -> int: ...
    def setUploadedOnLessThanOrEqual(self, newUploadedOnLessThanOrEqual: int) -> None: ...
    def getUploadedOnEqual(self) -> int: ...
    def setUploadedOnEqual(self, newUploadedOnEqual: int) -> None: ...
    def getStatusIn(self) -> str: ...
    def setStatusIn(self, newStatusIn: str) -> None: ...
    def getStatusEqual(self) -> KalturaBatchJobStatus: ...
    def setStatusEqual(self, newStatusEqual: KalturaBatchJobStatus) -> None: ...
    def getBulkUploadObjectTypeEqual(self) -> KalturaBulkUploadObjectType: ...
    def setBulkUploadObjectTypeEqual(self, newBulkUploadObjectTypeEqual: KalturaBulkUploadObjectType) -> None: ...
    def getBulkUploadObjectTypeIn(self) -> str: ...
    def setBulkUploadObjectTypeIn(self, newBulkUploadObjectTypeIn: str) -> None: ...

class KalturaBulkUploadCategoryData(KalturaBulkUploadObjectData):
    def __init__(self): ...
        pass

class KalturaBulkUploadCategoryEntryData(KalturaBulkUploadObjectData):
    def __init__(self): ...
        pass

class KalturaBulkUploadCategoryUserData(KalturaBulkUploadObjectData):
    def __init__(self): ...
        pass

class KalturaBulkUploadEntryData(KalturaBulkUploadObjectData):
    conversionProfileId: int
    def __init__(self,
            conversionProfileId: int = NotImplemented): ...

    def getConversionProfileId(self) -> int: ...
    def setConversionProfileId(self, newConversionProfileId: int) -> None: ...

class KalturaBulkUploadJobData(KalturaJobData):
    userId: str
    uploadedBy: str
    conversionProfileId: int
    resultsFileLocalPath: str
    resultsFileUrl: str
    numOfEntries: int
    numOfObjects: int
    filePath: str
    bulkUploadObjectType: KalturaBulkUploadObjectType
    fileName: str
    objectData: KalturaBulkUploadObjectData
    type: KalturaBulkUploadType
    emailRecipients: str
    numOfErrorObjects: int
    privileges: str
    def __init__(self,
            userId: str = NotImplemented,
            uploadedBy: str = NotImplemented,
            conversionProfileId: int = NotImplemented,
            resultsFileLocalPath: str = NotImplemented,
            resultsFileUrl: str = NotImplemented,
            numOfEntries: int = NotImplemented,
            numOfObjects: int = NotImplemented,
            filePath: str = NotImplemented,
            bulkUploadObjectType: KalturaBulkUploadObjectType = NotImplemented,
            fileName: str = NotImplemented,
            objectData: KalturaBulkUploadObjectData = NotImplemented,
            type: KalturaBulkUploadType = NotImplemented,
            emailRecipients: str = NotImplemented,
            numOfErrorObjects: int = NotImplemented,
            privileges: str = NotImplemented): ...

    def getUserId(self) -> str: ...
    def getUploadedBy(self) -> str: ...
    def getConversionProfileId(self) -> int: ...
    def getResultsFileLocalPath(self) -> str: ...
    def getResultsFileUrl(self) -> str: ...
    def getNumOfEntries(self) -> int: ...
    def getNumOfObjects(self) -> int: ...
    def getFilePath(self) -> str: ...
    def getBulkUploadObjectType(self) -> KalturaBulkUploadObjectType: ...
    def getFileName(self) -> str: ...
    def setFileName(self, newFileName: str) -> None: ...
    def getObjectData(self) -> KalturaBulkUploadObjectData: ...
    def getType(self) -> KalturaBulkUploadType: ...
    def getEmailRecipients(self) -> str: ...
    def setEmailRecipients(self, newEmailRecipients: str) -> None: ...
    def getNumOfErrorObjects(self) -> int: ...
    def setNumOfErrorObjects(self, newNumOfErrorObjects: int) -> None: ...
    def getPrivileges(self) -> str: ...
    def setPrivileges(self, newPrivileges: str) -> None: ...

class KalturaBulkUploadListResponse(KalturaListResponse):
    objects: List[KalturaBulkUpload]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaBulkUpload] = NotImplemented): ...

    def getObjects(self) -> List[KalturaBulkUpload]: ...

class KalturaBulkUploadResultCategory(KalturaBulkUploadResult):
    relativePath: str
    name: str
    referenceId: str
    description: str
    tags: str
    appearInList: int
    privacy: int
    inheritanceType: int
    userJoinPolicy: int
    defaultPermissionLevel: int
    owner: str
    contributionPolicy: int
    partnerSortValue: int
    moderation: bool
    def __init__(self,
            id: int = NotImplemented,
            bulkUploadJobId: int = NotImplemented,
            lineIndex: int = NotImplemented,
            partnerId: int = NotImplemented,
            status: KalturaBulkUploadResultStatus = NotImplemented,
            action: KalturaBulkUploadAction = NotImplemented,
            objectId: str = NotImplemented,
            objectStatus: int = NotImplemented,
            bulkUploadResultObjectType: KalturaBulkUploadObjectType = NotImplemented,
            rowData: str = NotImplemented,
            partnerData: str = NotImplemented,
            objectErrorDescription: str = NotImplemented,
            pluginsData: List[KalturaBulkUploadPluginData] = NotImplemented,
            errorDescription: str = NotImplemented,
            errorCode: str = NotImplemented,
            errorType: int = NotImplemented,
            relativePath: str = NotImplemented,
            name: str = NotImplemented,
            referenceId: str = NotImplemented,
            description: str = NotImplemented,
            tags: str = NotImplemented,
            appearInList: int = NotImplemented,
            privacy: int = NotImplemented,
            inheritanceType: int = NotImplemented,
            userJoinPolicy: int = NotImplemented,
            defaultPermissionLevel: int = NotImplemented,
            owner: str = NotImplemented,
            contributionPolicy: int = NotImplemented,
            partnerSortValue: int = NotImplemented,
            moderation: bool = NotImplemented): ...

    def getRelativePath(self) -> str: ...
    def setRelativePath(self, newRelativePath: str) -> None: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getReferenceId(self) -> str: ...
    def setReferenceId(self, newReferenceId: str) -> None: ...
    def getDescription(self) -> str: ...
    def setDescription(self, newDescription: str) -> None: ...
    def getTags(self) -> str: ...
    def setTags(self, newTags: str) -> None: ...
    def getAppearInList(self) -> int: ...
    def setAppearInList(self, newAppearInList: int) -> None: ...
    def getPrivacy(self) -> int: ...
    def setPrivacy(self, newPrivacy: int) -> None: ...
    def getInheritanceType(self) -> int: ...
    def setInheritanceType(self, newInheritanceType: int) -> None: ...
    def getUserJoinPolicy(self) -> int: ...
    def setUserJoinPolicy(self, newUserJoinPolicy: int) -> None: ...
    def getDefaultPermissionLevel(self) -> int: ...
    def setDefaultPermissionLevel(self, newDefaultPermissionLevel: int) -> None: ...
    def getOwner(self) -> str: ...
    def setOwner(self, newOwner: str) -> None: ...
    def getContributionPolicy(self) -> int: ...
    def setContributionPolicy(self, newContributionPolicy: int) -> None: ...
    def getPartnerSortValue(self) -> int: ...
    def setPartnerSortValue(self, newPartnerSortValue: int) -> None: ...
    def getModeration(self) -> bool: ...
    def setModeration(self, newModeration: bool) -> None: ...

class KalturaBulkUploadResultCategoryEntry(KalturaBulkUploadResult):
    categoryId: int
    entryId: str
    def __init__(self,
            id: int = NotImplemented,
            bulkUploadJobId: int = NotImplemented,
            lineIndex: int = NotImplemented,
            partnerId: int = NotImplemented,
            status: KalturaBulkUploadResultStatus = NotImplemented,
            action: KalturaBulkUploadAction = NotImplemented,
            objectId: str = NotImplemented,
            objectStatus: int = NotImplemented,
            bulkUploadResultObjectType: KalturaBulkUploadObjectType = NotImplemented,
            rowData: str = NotImplemented,
            partnerData: str = NotImplemented,
            objectErrorDescription: str = NotImplemented,
            pluginsData: List[KalturaBulkUploadPluginData] = NotImplemented,
            errorDescription: str = NotImplemented,
            errorCode: str = NotImplemented,
            errorType: int = NotImplemented,
            categoryId: int = NotImplemented,
            entryId: str = NotImplemented): ...

    def getCategoryId(self) -> int: ...
    def setCategoryId(self, newCategoryId: int) -> None: ...
    def getEntryId(self) -> str: ...
    def setEntryId(self, newEntryId: str) -> None: ...

class KalturaBulkUploadResultCategoryUser(KalturaBulkUploadResult):
    categoryId: int
    categoryReferenceId: str
    userId: str
    permissionLevel: int
    updateMethod: int
    requiredObjectStatus: int
    def __init__(self,
            id: int = NotImplemented,
            bulkUploadJobId: int = NotImplemented,
            lineIndex: int = NotImplemented,
            partnerId: int = NotImplemented,
            status: KalturaBulkUploadResultStatus = NotImplemented,
            action: KalturaBulkUploadAction = NotImplemented,
            objectId: str = NotImplemented,
            objectStatus: int = NotImplemented,
            bulkUploadResultObjectType: KalturaBulkUploadObjectType = NotImplemented,
            rowData: str = NotImplemented,
            partnerData: str = NotImplemented,
            objectErrorDescription: str = NotImplemented,
            pluginsData: List[KalturaBulkUploadPluginData] = NotImplemented,
            errorDescription: str = NotImplemented,
            errorCode: str = NotImplemented,
            errorType: int = NotImplemented,
            categoryId: int = NotImplemented,
            categoryReferenceId: str = NotImplemented,
            userId: str = NotImplemented,
            permissionLevel: int = NotImplemented,
            updateMethod: int = NotImplemented,
            requiredObjectStatus: int = NotImplemented): ...

    def getCategoryId(self) -> int: ...
    def setCategoryId(self, newCategoryId: int) -> None: ...
    def getCategoryReferenceId(self) -> str: ...
    def setCategoryReferenceId(self, newCategoryReferenceId: str) -> None: ...
    def getUserId(self) -> str: ...
    def setUserId(self, newUserId: str) -> None: ...
    def getPermissionLevel(self) -> int: ...
    def setPermissionLevel(self, newPermissionLevel: int) -> None: ...
    def getUpdateMethod(self) -> int: ...
    def setUpdateMethod(self, newUpdateMethod: int) -> None: ...
    def getRequiredObjectStatus(self) -> int: ...
    def setRequiredObjectStatus(self, newRequiredObjectStatus: int) -> None: ...

class KalturaBulkUploadResultEntry(KalturaBulkUploadResult):
    entryId: str
    title: str
    description: str
    tags: str
    url: str
    contentType: str
    conversionProfileId: int
    accessControlProfileId: int
    category: str
    scheduleStartDate: int
    scheduleEndDate: int
    entryStatus: int
    thumbnailUrl: str
    thumbnailSaved: bool
    sshPrivateKey: str
    sshPublicKey: str
    sshKeyPassphrase: str
    creatorId: str
    entitledUsersEdit: str
    entitledUsersPublish: str
    entitledUsersView: str
    ownerId: str
    referenceId: str
    templateEntryId: str
    def __init__(self,
            id: int = NotImplemented,
            bulkUploadJobId: int = NotImplemented,
            lineIndex: int = NotImplemented,
            partnerId: int = NotImplemented,
            status: KalturaBulkUploadResultStatus = NotImplemented,
            action: KalturaBulkUploadAction = NotImplemented,
            objectId: str = NotImplemented,
            objectStatus: int = NotImplemented,
            bulkUploadResultObjectType: KalturaBulkUploadObjectType = NotImplemented,
            rowData: str = NotImplemented,
            partnerData: str = NotImplemented,
            objectErrorDescription: str = NotImplemented,
            pluginsData: List[KalturaBulkUploadPluginData] = NotImplemented,
            errorDescription: str = NotImplemented,
            errorCode: str = NotImplemented,
            errorType: int = NotImplemented,
            entryId: str = NotImplemented,
            title: str = NotImplemented,
            description: str = NotImplemented,
            tags: str = NotImplemented,
            url: str = NotImplemented,
            contentType: str = NotImplemented,
            conversionProfileId: int = NotImplemented,
            accessControlProfileId: int = NotImplemented,
            category: str = NotImplemented,
            scheduleStartDate: int = NotImplemented,
            scheduleEndDate: int = NotImplemented,
            entryStatus: int = NotImplemented,
            thumbnailUrl: str = NotImplemented,
            thumbnailSaved: bool = NotImplemented,
            sshPrivateKey: str = NotImplemented,
            sshPublicKey: str = NotImplemented,
            sshKeyPassphrase: str = NotImplemented,
            creatorId: str = NotImplemented,
            entitledUsersEdit: str = NotImplemented,
            entitledUsersPublish: str = NotImplemented,
            entitledUsersView: str = NotImplemented,
            ownerId: str = NotImplemented,
            referenceId: str = NotImplemented,
            templateEntryId: str = NotImplemented): ...

    def getEntryId(self) -> str: ...
    def setEntryId(self, newEntryId: str) -> None: ...
    def getTitle(self) -> str: ...
    def setTitle(self, newTitle: str) -> None: ...
    def getDescription(self) -> str: ...
    def setDescription(self, newDescription: str) -> None: ...
    def getTags(self) -> str: ...
    def setTags(self, newTags: str) -> None: ...
    def getUrl(self) -> str: ...
    def setUrl(self, newUrl: str) -> None: ...
    def getContentType(self) -> str: ...
    def setContentType(self, newContentType: str) -> None: ...
    def getConversionProfileId(self) -> int: ...
    def setConversionProfileId(self, newConversionProfileId: int) -> None: ...
    def getAccessControlProfileId(self) -> int: ...
    def setAccessControlProfileId(self, newAccessControlProfileId: int) -> None: ...
    def getCategory(self) -> str: ...
    def setCategory(self, newCategory: str) -> None: ...
    def getScheduleStartDate(self) -> int: ...
    def setScheduleStartDate(self, newScheduleStartDate: int) -> None: ...
    def getScheduleEndDate(self) -> int: ...
    def setScheduleEndDate(self, newScheduleEndDate: int) -> None: ...
    def getEntryStatus(self) -> int: ...
    def setEntryStatus(self, newEntryStatus: int) -> None: ...
    def getThumbnailUrl(self) -> str: ...
    def setThumbnailUrl(self, newThumbnailUrl: str) -> None: ...
    def getThumbnailSaved(self) -> bool: ...
    def setThumbnailSaved(self, newThumbnailSaved: bool) -> None: ...
    def getSshPrivateKey(self) -> str: ...
    def setSshPrivateKey(self, newSshPrivateKey: str) -> None: ...
    def getSshPublicKey(self) -> str: ...
    def setSshPublicKey(self, newSshPublicKey: str) -> None: ...
    def getSshKeyPassphrase(self) -> str: ...
    def setSshKeyPassphrase(self, newSshKeyPassphrase: str) -> None: ...
    def getCreatorId(self) -> str: ...
    def setCreatorId(self, newCreatorId: str) -> None: ...
    def getEntitledUsersEdit(self) -> str: ...
    def setEntitledUsersEdit(self, newEntitledUsersEdit: str) -> None: ...
    def getEntitledUsersPublish(self) -> str: ...
    def setEntitledUsersPublish(self, newEntitledUsersPublish: str) -> None: ...
    def getEntitledUsersView(self) -> str: ...
    def setEntitledUsersView(self, newEntitledUsersView: str) -> None: ...
    def getOwnerId(self) -> str: ...
    def setOwnerId(self, newOwnerId: str) -> None: ...
    def getReferenceId(self) -> str: ...
    def setReferenceId(self, newReferenceId: str) -> None: ...
    def getTemplateEntryId(self) -> str: ...
    def setTemplateEntryId(self, newTemplateEntryId: str) -> None: ...

class KalturaBulkUploadResultUser(KalturaBulkUploadResult):
    userId: str
    screenName: str
    email: str
    description: str
    tags: str
    dateOfBirth: int
    country: str
    state: str
    city: str
    zip: str
    gender: int
    firstName: str
    lastName: str
    group: str
    externalId: str
    capabilities: str
    def __init__(self,
            id: int = NotImplemented,
            bulkUploadJobId: int = NotImplemented,
            lineIndex: int = NotImplemented,
            partnerId: int = NotImplemented,
            status: KalturaBulkUploadResultStatus = NotImplemented,
            action: KalturaBulkUploadAction = NotImplemented,
            objectId: str = NotImplemented,
            objectStatus: int = NotImplemented,
            bulkUploadResultObjectType: KalturaBulkUploadObjectType = NotImplemented,
            rowData: str = NotImplemented,
            partnerData: str = NotImplemented,
            objectErrorDescription: str = NotImplemented,
            pluginsData: List[KalturaBulkUploadPluginData] = NotImplemented,
            errorDescription: str = NotImplemented,
            errorCode: str = NotImplemented,
            errorType: int = NotImplemented,
            userId: str = NotImplemented,
            screenName: str = NotImplemented,
            email: str = NotImplemented,
            description: str = NotImplemented,
            tags: str = NotImplemented,
            dateOfBirth: int = NotImplemented,
            country: str = NotImplemented,
            state: str = NotImplemented,
            city: str = NotImplemented,
            zip: str = NotImplemented,
            gender: int = NotImplemented,
            firstName: str = NotImplemented,
            lastName: str = NotImplemented,
            group: str = NotImplemented,
            externalId: str = NotImplemented,
            capabilities: str = NotImplemented): ...

    def getUserId(self) -> str: ...
    def setUserId(self, newUserId: str) -> None: ...
    def getScreenName(self) -> str: ...
    def setScreenName(self, newScreenName: str) -> None: ...
    def getEmail(self) -> str: ...
    def setEmail(self, newEmail: str) -> None: ...
    def getDescription(self) -> str: ...
    def setDescription(self, newDescription: str) -> None: ...
    def getTags(self) -> str: ...
    def setTags(self, newTags: str) -> None: ...
    def getDateOfBirth(self) -> int: ...
    def setDateOfBirth(self, newDateOfBirth: int) -> None: ...
    def getCountry(self) -> str: ...
    def setCountry(self, newCountry: str) -> None: ...
    def getState(self) -> str: ...
    def setState(self, newState: str) -> None: ...
    def getCity(self) -> str: ...
    def setCity(self, newCity: str) -> None: ...
    def getZip(self) -> str: ...
    def setZip(self, newZip: str) -> None: ...
    def getGender(self) -> int: ...
    def setGender(self, newGender: int) -> None: ...
    def getFirstName(self) -> str: ...
    def setFirstName(self, newFirstName: str) -> None: ...
    def getLastName(self) -> str: ...
    def setLastName(self, newLastName: str) -> None: ...
    def getGroup(self) -> str: ...
    def setGroup(self, newGroup: str) -> None: ...
    def getExternalId(self) -> str: ...
    def setExternalId(self, newExternalId: str) -> None: ...
    def getCapabilities(self) -> str: ...
    def setCapabilities(self, newCapabilities: str) -> None: ...

class KalturaBulkUploadResultUserEntry(KalturaBulkUploadResult):
    userEntryId: int
    def __init__(self,
            id: int = NotImplemented,
            bulkUploadJobId: int = NotImplemented,
            lineIndex: int = NotImplemented,
            partnerId: int = NotImplemented,
            status: KalturaBulkUploadResultStatus = NotImplemented,
            action: KalturaBulkUploadAction = NotImplemented,
            objectId: str = NotImplemented,
            objectStatus: int = NotImplemented,
            bulkUploadResultObjectType: KalturaBulkUploadObjectType = NotImplemented,
            rowData: str = NotImplemented,
            partnerData: str = NotImplemented,
            objectErrorDescription: str = NotImplemented,
            pluginsData: List[KalturaBulkUploadPluginData] = NotImplemented,
            errorDescription: str = NotImplemented,
            errorCode: str = NotImplemented,
            errorType: int = NotImplemented,
            userEntryId: int = NotImplemented): ...

    def getUserEntryId(self) -> int: ...
    def setUserEntryId(self, newUserEntryId: int) -> None: ...

class KalturaBulkUploadResultVendorCatalogItem(KalturaBulkUploadResult):
    vendorCatalogItemId: int
    vendorPartnerId: int
    name: str
    systemName: str
    serviceFeature: KalturaVendorServiceFeature
    serviceType: KalturaVendorServiceType
    turnAroundTime: KalturaVendorServiceTurnAroundTime
    sourceLanguage: KalturaCatalogItemLanguage
    targetLanguage: KalturaCatalogItemLanguage
    outputFormat: KalturaVendorCatalogItemOutputFormat
    enableSpeakerId: KalturaNullableBoolean
    fixedPriceAddons: int
    pricing: KalturaVendorCatalogItemPricing
    flavorParamsId: int
    clearAudioFlavorParamsId: int
    def __init__(self,
            id: int = NotImplemented,
            bulkUploadJobId: int = NotImplemented,
            lineIndex: int = NotImplemented,
            partnerId: int = NotImplemented,
            status: KalturaBulkUploadResultStatus = NotImplemented,
            action: KalturaBulkUploadAction = NotImplemented,
            objectId: str = NotImplemented,
            objectStatus: int = NotImplemented,
            bulkUploadResultObjectType: KalturaBulkUploadObjectType = NotImplemented,
            rowData: str = NotImplemented,
            partnerData: str = NotImplemented,
            objectErrorDescription: str = NotImplemented,
            pluginsData: List[KalturaBulkUploadPluginData] = NotImplemented,
            errorDescription: str = NotImplemented,
            errorCode: str = NotImplemented,
            errorType: int = NotImplemented,
            vendorCatalogItemId: int = NotImplemented,
            vendorPartnerId: int = NotImplemented,
            name: str = NotImplemented,
            systemName: str = NotImplemented,
            serviceFeature: KalturaVendorServiceFeature = NotImplemented,
            serviceType: KalturaVendorServiceType = NotImplemented,
            turnAroundTime: KalturaVendorServiceTurnAroundTime = NotImplemented,
            sourceLanguage: KalturaCatalogItemLanguage = NotImplemented,
            targetLanguage: KalturaCatalogItemLanguage = NotImplemented,
            outputFormat: KalturaVendorCatalogItemOutputFormat = NotImplemented,
            enableSpeakerId: KalturaNullableBoolean = NotImplemented,
            fixedPriceAddons: int = NotImplemented,
            pricing: KalturaVendorCatalogItemPricing = NotImplemented,
            flavorParamsId: int = NotImplemented,
            clearAudioFlavorParamsId: int = NotImplemented): ...

    def getVendorCatalogItemId(self) -> int: ...
    def setVendorCatalogItemId(self, newVendorCatalogItemId: int) -> None: ...
    def getVendorPartnerId(self) -> int: ...
    def setVendorPartnerId(self, newVendorPartnerId: int) -> None: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getSystemName(self) -> str: ...
    def setSystemName(self, newSystemName: str) -> None: ...
    def getServiceFeature(self) -> KalturaVendorServiceFeature: ...
    def setServiceFeature(self, newServiceFeature: KalturaVendorServiceFeature) -> None: ...
    def getServiceType(self) -> KalturaVendorServiceType: ...
    def setServiceType(self, newServiceType: KalturaVendorServiceType) -> None: ...
    def getTurnAroundTime(self) -> KalturaVendorServiceTurnAroundTime: ...
    def setTurnAroundTime(self, newTurnAroundTime: KalturaVendorServiceTurnAroundTime) -> None: ...
    def getSourceLanguage(self) -> KalturaCatalogItemLanguage: ...
    def setSourceLanguage(self, newSourceLanguage: KalturaCatalogItemLanguage) -> None: ...
    def getTargetLanguage(self) -> KalturaCatalogItemLanguage: ...
    def setTargetLanguage(self, newTargetLanguage: KalturaCatalogItemLanguage) -> None: ...
    def getOutputFormat(self) -> KalturaVendorCatalogItemOutputFormat: ...
    def setOutputFormat(self, newOutputFormat: KalturaVendorCatalogItemOutputFormat) -> None: ...
    def getEnableSpeakerId(self) -> KalturaNullableBoolean: ...
    def setEnableSpeakerId(self, newEnableSpeakerId: KalturaNullableBoolean) -> None: ...
    def getFixedPriceAddons(self) -> int: ...
    def setFixedPriceAddons(self, newFixedPriceAddons: int) -> None: ...
    def getPricing(self) -> KalturaVendorCatalogItemPricing: ...
    def setPricing(self, newPricing: KalturaVendorCatalogItemPricing) -> None: ...
    def getFlavorParamsId(self) -> int: ...
    def setFlavorParamsId(self, newFlavorParamsId: int) -> None: ...
    def getClearAudioFlavorParamsId(self) -> int: ...
    def setClearAudioFlavorParamsId(self, newClearAudioFlavorParamsId: int) -> None: ...

class KalturaBulkUploadUserData(KalturaBulkUploadObjectData):
    def __init__(self): ...
        pass

class KalturaBulkUploadVendorCatalogItemData(KalturaBulkUploadObjectData):
    def __init__(self): ...
        pass

class KalturaCaptureThumbJobData(KalturaJobData):
    fileContainer: KalturaFileContainer
    actualSrcFileSyncLocalPath: str
    srcFileSyncRemoteUrl: str
    thumbParamsOutputId: int
    thumbAssetId: str
    srcAssetId: str
    srcAssetEncryptionKey: str
    srcAssetType: KalturaAssetType
    thumbPath: str
    def __init__(self,
            fileContainer: KalturaFileContainer = NotImplemented,
            actualSrcFileSyncLocalPath: str = NotImplemented,
            srcFileSyncRemoteUrl: str = NotImplemented,
            thumbParamsOutputId: int = NotImplemented,
            thumbAssetId: str = NotImplemented,
            srcAssetId: str = NotImplemented,
            srcAssetEncryptionKey: str = NotImplemented,
            srcAssetType: KalturaAssetType = NotImplemented,
            thumbPath: str = NotImplemented): ...

    def getFileContainer(self) -> KalturaFileContainer: ...
    def setFileContainer(self, newFileContainer: KalturaFileContainer) -> None: ...
    def getActualSrcFileSyncLocalPath(self) -> str: ...
    def setActualSrcFileSyncLocalPath(self, newActualSrcFileSyncLocalPath: str) -> None: ...
    def getSrcFileSyncRemoteUrl(self) -> str: ...
    def setSrcFileSyncRemoteUrl(self, newSrcFileSyncRemoteUrl: str) -> None: ...
    def getThumbParamsOutputId(self) -> int: ...
    def setThumbParamsOutputId(self, newThumbParamsOutputId: int) -> None: ...
    def getThumbAssetId(self) -> str: ...
    def setThumbAssetId(self, newThumbAssetId: str) -> None: ...
    def getSrcAssetId(self) -> str: ...
    def setSrcAssetId(self, newSrcAssetId: str) -> None: ...
    def getSrcAssetEncryptionKey(self) -> str: ...
    def setSrcAssetEncryptionKey(self, newSrcAssetEncryptionKey: str) -> None: ...
    def getSrcAssetType(self) -> KalturaAssetType: ...
    def setSrcAssetType(self, newSrcAssetType: KalturaAssetType) -> None: ...
    def getThumbPath(self) -> str: ...
    def setThumbPath(self, newThumbPath: str) -> None: ...

class KalturaCategoryEntryAdvancedFilter(KalturaSearchItem):
    categoriesMatchOr: str
    categoryEntryStatusIn: str
    orderBy: KalturaCategoryEntryAdvancedOrderBy
    categoryIdEqual: int
    def __init__(self,
            categoriesMatchOr: str = NotImplemented,
            categoryEntryStatusIn: str = NotImplemented,
            orderBy: KalturaCategoryEntryAdvancedOrderBy = NotImplemented,
            categoryIdEqual: int = NotImplemented): ...

    def getCategoriesMatchOr(self) -> str: ...
    def setCategoriesMatchOr(self, newCategoriesMatchOr: str) -> None: ...
    def getCategoryEntryStatusIn(self) -> str: ...
    def setCategoryEntryStatusIn(self, newCategoryEntryStatusIn: str) -> None: ...
    def getOrderBy(self) -> KalturaCategoryEntryAdvancedOrderBy: ...
    def setOrderBy(self, newOrderBy: KalturaCategoryEntryAdvancedOrderBy) -> None: ...
    def getCategoryIdEqual(self) -> int: ...
    def setCategoryIdEqual(self, newCategoryIdEqual: int) -> None: ...

class KalturaCategoryEntryListResponse(KalturaListResponse):
    objects: List[KalturaCategoryEntry]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaCategoryEntry] = NotImplemented): ...

    def getObjects(self) -> List[KalturaCategoryEntry]: ...

class KalturaCategoryIdentifier(KalturaObjectIdentifier):
    identifier: KalturaCategoryIdentifierField
    def __init__(self,
            extendedFeatures: str = NotImplemented,
            identifier: KalturaCategoryIdentifierField = NotImplemented): ...

    def getIdentifier(self) -> KalturaCategoryIdentifierField: ...
    def setIdentifier(self, newIdentifier: KalturaCategoryIdentifierField) -> None: ...

class KalturaCategoryListResponse(KalturaListResponse):
    objects: List[KalturaCategory]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaCategory] = NotImplemented): ...

    def getObjects(self) -> List[KalturaCategory]: ...

class KalturaCategoryUserAdvancedFilter(KalturaSearchItem):
    memberIdEq: str
    memberIdIn: str
    memberPermissionsMatchOr: str
    memberPermissionsMatchAnd: str
    def __init__(self,
            memberIdEq: str = NotImplemented,
            memberIdIn: str = NotImplemented,
            memberPermissionsMatchOr: str = NotImplemented,
            memberPermissionsMatchAnd: str = NotImplemented): ...

    def getMemberIdEq(self) -> str: ...
    def setMemberIdEq(self, newMemberIdEq: str) -> None: ...
    def getMemberIdIn(self) -> str: ...
    def setMemberIdIn(self, newMemberIdIn: str) -> None: ...
    def getMemberPermissionsMatchOr(self) -> str: ...
    def setMemberPermissionsMatchOr(self, newMemberPermissionsMatchOr: str) -> None: ...
    def getMemberPermissionsMatchAnd(self) -> str: ...
    def setMemberPermissionsMatchAnd(self, newMemberPermissionsMatchAnd: str) -> None: ...

class KalturaCategoryUserListResponse(KalturaListResponse):
    objects: List[KalturaCategoryUser]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaCategoryUser] = NotImplemented): ...

    def getObjects(self) -> List[KalturaCategoryUser]: ...

class KalturaClipAttributes(KalturaOperationAttributes):
    offset: int
    duration: int
    globalOffsetInDestination: int
    effectArray: List[KalturaEffect]
    cropAlignment: int
    captionAttributes: List[KalturaCaptionAttributes]
    def __init__(self,
            offset: int = NotImplemented,
            duration: int = NotImplemented,
            globalOffsetInDestination: int = NotImplemented,
            effectArray: List[KalturaEffect] = NotImplemented,
            cropAlignment: int = NotImplemented,
            captionAttributes: List[KalturaCaptionAttributes] = NotImplemented): ...

    def getOffset(self) -> int: ...
    def setOffset(self, newOffset: int) -> None: ...
    def getDuration(self) -> int: ...
    def setDuration(self, newDuration: int) -> None: ...
    def getGlobalOffsetInDestination(self) -> int: ...
    def setGlobalOffsetInDestination(self, newGlobalOffsetInDestination: int) -> None: ...
    def getEffectArray(self) -> List[KalturaEffect]: ...
    def setEffectArray(self, newEffectArray: List[KalturaEffect]) -> None: ...
    def getCropAlignment(self) -> int: ...
    def setCropAlignment(self, newCropAlignment: int) -> None: ...
    def getCaptionAttributes(self) -> List[KalturaCaptionAttributes]: ...
    def setCaptionAttributes(self, newCaptionAttributes: List[KalturaCaptionAttributes]) -> None: ...

class KalturaClipConcatJobData(KalturaJobData):
    destEntryId: str
    tempEntryId: str
    sourceEntryId: str
    importUrl: str
    partnerId: int
    priority: int
    operationAttributes: List[KalturaOperationAttributes]
    resourceOrder: int
    conversionParams: str
    def __init__(self,
            destEntryId: str = NotImplemented,
            tempEntryId: str = NotImplemented,
            sourceEntryId: str = NotImplemented,
            importUrl: str = NotImplemented,
            partnerId: int = NotImplemented,
            priority: int = NotImplemented,
            operationAttributes: List[KalturaOperationAttributes] = NotImplemented,
            resourceOrder: int = NotImplemented,
            conversionParams: str = NotImplemented): ...

    def getDestEntryId(self) -> str: ...
    def setDestEntryId(self, newDestEntryId: str) -> None: ...
    def getTempEntryId(self) -> str: ...
    def setTempEntryId(self, newTempEntryId: str) -> None: ...
    def getSourceEntryId(self) -> str: ...
    def setSourceEntryId(self, newSourceEntryId: str) -> None: ...
    def getImportUrl(self) -> str: ...
    def setImportUrl(self, newImportUrl: str) -> None: ...
    def getPartnerId(self) -> int: ...
    def setPartnerId(self, newPartnerId: int) -> None: ...
    def getPriority(self) -> int: ...
    def setPriority(self, newPriority: int) -> None: ...
    def getOperationAttributes(self) -> List[KalturaOperationAttributes]: ...
    def setOperationAttributes(self, newOperationAttributes: List[KalturaOperationAttributes]) -> None: ...
    def getResourceOrder(self) -> int: ...
    def setResourceOrder(self, newResourceOrder: int) -> None: ...
    def getConversionParams(self) -> str: ...
    def setConversionParams(self, newConversionParams: str) -> None: ...

class KalturaCompareCondition(KalturaCondition):
    value: KalturaIntegerValue
    comparison: KalturaSearchConditionComparison
    def __init__(self,
            type: KalturaConditionType = NotImplemented,
            description: str = NotImplemented,
            not_: bool = NotImplemented,
            value: KalturaIntegerValue = NotImplemented,
            comparison: KalturaSearchConditionComparison = NotImplemented): ...

    def getValue(self) -> KalturaIntegerValue: ...
    def setValue(self, newValue: KalturaIntegerValue) -> None: ...
    def getComparison(self) -> KalturaSearchConditionComparison: ...
    def setComparison(self, newComparison: KalturaSearchConditionComparison) -> None: ...

class KalturaDataCenterContentResource(KalturaContentResource):
    def __init__(self): ...
        pass

class KalturaConcatAttributes(KalturaOperationAttributes):
    resource: KalturaDataCenterContentResource
    def __init__(self,
            resource: KalturaDataCenterContentResource = NotImplemented): ...

    def getResource(self) -> KalturaDataCenterContentResource: ...
    def setResource(self, newResource: KalturaDataCenterContentResource) -> None: ...

class KalturaConcatJobData(KalturaJobData):
    srcFiles: List[KalturaString]
    destFilePath: str
    flavorAssetId: str
    offset: float
    duration: float
    concatenatedDuration: float
    shouldSort: bool
    conversionCommands: List[KalturaString]
    multiSource: bool
    def __init__(self,
            srcFiles: List[KalturaString] = NotImplemented,
            destFilePath: str = NotImplemented,
            flavorAssetId: str = NotImplemented,
            offset: float = NotImplemented,
            duration: float = NotImplemented,
            concatenatedDuration: float = NotImplemented,
            shouldSort: bool = NotImplemented,
            conversionCommands: List[KalturaString] = NotImplemented,
            multiSource: bool = NotImplemented): ...

    def getSrcFiles(self) -> List[KalturaString]: ...
    def setSrcFiles(self, newSrcFiles: List[KalturaString]) -> None: ...
    def getDestFilePath(self) -> str: ...
    def setDestFilePath(self, newDestFilePath: str) -> None: ...
    def getFlavorAssetId(self) -> str: ...
    def setFlavorAssetId(self, newFlavorAssetId: str) -> None: ...
    def getOffset(self) -> float: ...
    def setOffset(self, newOffset: float) -> None: ...
    def getDuration(self) -> float: ...
    def setDuration(self, newDuration: float) -> None: ...
    def getConcatenatedDuration(self) -> float: ...
    def setConcatenatedDuration(self, newConcatenatedDuration: float) -> None: ...
    def getShouldSort(self) -> bool: ...
    def setShouldSort(self, newShouldSort: bool) -> None: ...
    def getConversionCommands(self) -> List[KalturaString]: ...
    def setConversionCommands(self, newConversionCommands: List[KalturaString]) -> None: ...
    def getMultiSource(self) -> bool: ...
    def setMultiSource(self, newMultiSource: bool) -> None: ...

class KalturaControlPanelCommandBaseFilter(KalturaFilter):
    idEqual: int
    idIn: str
    createdAtGreaterThanOrEqual: int
    createdAtLessThanOrEqual: int
    createdByIdEqual: int
    typeEqual: KalturaControlPanelCommandType
    typeIn: str
    targetTypeEqual: KalturaControlPanelCommandTargetType
    targetTypeIn: str
    statusEqual: KalturaControlPanelCommandStatus
    statusIn: str
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            createdByIdEqual: int = NotImplemented,
            typeEqual: KalturaControlPanelCommandType = NotImplemented,
            typeIn: str = NotImplemented,
            targetTypeEqual: KalturaControlPanelCommandTargetType = NotImplemented,
            targetTypeIn: str = NotImplemented,
            statusEqual: KalturaControlPanelCommandStatus = NotImplemented,
            statusIn: str = NotImplemented): ...

    def getIdEqual(self) -> int: ...
    def setIdEqual(self, newIdEqual: int) -> None: ...
    def getIdIn(self) -> str: ...
    def setIdIn(self, newIdIn: str) -> None: ...
    def getCreatedAtGreaterThanOrEqual(self) -> int: ...
    def setCreatedAtGreaterThanOrEqual(self, newCreatedAtGreaterThanOrEqual: int) -> None: ...
    def getCreatedAtLessThanOrEqual(self) -> int: ...
    def setCreatedAtLessThanOrEqual(self, newCreatedAtLessThanOrEqual: int) -> None: ...
    def getCreatedByIdEqual(self) -> int: ...
    def setCreatedByIdEqual(self, newCreatedByIdEqual: int) -> None: ...
    def getTypeEqual(self) -> KalturaControlPanelCommandType: ...
    def setTypeEqual(self, newTypeEqual: KalturaControlPanelCommandType) -> None: ...
    def getTypeIn(self) -> str: ...
    def setTypeIn(self, newTypeIn: str) -> None: ...
    def getTargetTypeEqual(self) -> KalturaControlPanelCommandTargetType: ...
    def setTargetTypeEqual(self, newTargetTypeEqual: KalturaControlPanelCommandTargetType) -> None: ...
    def getTargetTypeIn(self) -> str: ...
    def setTargetTypeIn(self, newTargetTypeIn: str) -> None: ...
    def getStatusEqual(self) -> KalturaControlPanelCommandStatus: ...
    def setStatusEqual(self, newStatusEqual: KalturaControlPanelCommandStatus) -> None: ...
    def getStatusIn(self) -> str: ...
    def setStatusIn(self, newStatusIn: str) -> None: ...

class KalturaControlPanelCommandListResponse(KalturaListResponse):
    objects: List[KalturaControlPanelCommand]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaControlPanelCommand] = NotImplemented): ...

    def getObjects(self) -> List[KalturaControlPanelCommand]: ...

class KalturaConvartableJobData(KalturaJobData):
    srcFileSyncLocalPath: str
    actualSrcFileSyncLocalPath: str
    srcFileSyncRemoteUrl: str
    srcFileSyncs: List[KalturaSourceFileSyncDescriptor]
    engineVersion: int
    flavorParamsOutputId: int
    flavorParamsOutput: KalturaFlavorParamsOutput
    mediaInfoId: int
    currentOperationSet: int
    currentOperationIndex: int
    pluginData: List[KalturaKeyValue]
    def __init__(self,
            srcFileSyncLocalPath: str = NotImplemented,
            actualSrcFileSyncLocalPath: str = NotImplemented,
            srcFileSyncRemoteUrl: str = NotImplemented,
            srcFileSyncs: List[KalturaSourceFileSyncDescriptor] = NotImplemented,
            engineVersion: int = NotImplemented,
            flavorParamsOutputId: int = NotImplemented,
            flavorParamsOutput: KalturaFlavorParamsOutput = NotImplemented,
            mediaInfoId: int = NotImplemented,
            currentOperationSet: int = NotImplemented,
            currentOperationIndex: int = NotImplemented,
            pluginData: List[KalturaKeyValue] = NotImplemented): ...

    def getSrcFileSyncLocalPath(self) -> str: ...
    def setSrcFileSyncLocalPath(self, newSrcFileSyncLocalPath: str) -> None: ...
    def getActualSrcFileSyncLocalPath(self) -> str: ...
    def setActualSrcFileSyncLocalPath(self, newActualSrcFileSyncLocalPath: str) -> None: ...
    def getSrcFileSyncRemoteUrl(self) -> str: ...
    def setSrcFileSyncRemoteUrl(self, newSrcFileSyncRemoteUrl: str) -> None: ...
    def getSrcFileSyncs(self) -> List[KalturaSourceFileSyncDescriptor]: ...
    def setSrcFileSyncs(self, newSrcFileSyncs: List[KalturaSourceFileSyncDescriptor]) -> None: ...
    def getEngineVersion(self) -> int: ...
    def setEngineVersion(self, newEngineVersion: int) -> None: ...
    def getFlavorParamsOutputId(self) -> int: ...
    def setFlavorParamsOutputId(self, newFlavorParamsOutputId: int) -> None: ...
    def getFlavorParamsOutput(self) -> KalturaFlavorParamsOutput: ...
    def setFlavorParamsOutput(self, newFlavorParamsOutput: KalturaFlavorParamsOutput) -> None: ...
    def getMediaInfoId(self) -> int: ...
    def setMediaInfoId(self, newMediaInfoId: int) -> None: ...
    def getCurrentOperationSet(self) -> int: ...
    def setCurrentOperationSet(self, newCurrentOperationSet: int) -> None: ...
    def getCurrentOperationIndex(self) -> int: ...
    def setCurrentOperationIndex(self, newCurrentOperationIndex: int) -> None: ...
    def getPluginData(self) -> List[KalturaKeyValue]: ...
    def setPluginData(self, newPluginData: List[KalturaKeyValue]) -> None: ...

class KalturaConversionProfileAssetParamsListResponse(KalturaListResponse):
    objects: List[KalturaConversionProfileAssetParams]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaConversionProfileAssetParams] = NotImplemented): ...

    def getObjects(self) -> List[KalturaConversionProfileAssetParams]: ...

class KalturaConversionProfileListResponse(KalturaListResponse):
    objects: List[KalturaConversionProfile]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaConversionProfile] = NotImplemented): ...

    def getObjects(self) -> List[KalturaConversionProfile]: ...

class KalturaConvertLiveSegmentJobData(KalturaJobData):
    entryId: str
    assetId: str
    mediaServerIndex: KalturaEntryServerNodeType
    fileIndex: int
    srcFilePath: str
    destFilePath: str
    endTime: float
    destDataFilePath: str
    def __init__(self,
            entryId: str = NotImplemented,
            assetId: str = NotImplemented,
            mediaServerIndex: KalturaEntryServerNodeType = NotImplemented,
            fileIndex: int = NotImplemented,
            srcFilePath: str = NotImplemented,
            destFilePath: str = NotImplemented,
            endTime: float = NotImplemented,
            destDataFilePath: str = NotImplemented): ...

    def getEntryId(self) -> str: ...
    def setEntryId(self, newEntryId: str) -> None: ...
    def getAssetId(self) -> str: ...
    def setAssetId(self, newAssetId: str) -> None: ...
    def getMediaServerIndex(self) -> KalturaEntryServerNodeType: ...
    def setMediaServerIndex(self, newMediaServerIndex: KalturaEntryServerNodeType) -> None: ...
    def getFileIndex(self) -> int: ...
    def setFileIndex(self, newFileIndex: int) -> None: ...
    def getSrcFilePath(self) -> str: ...
    def setSrcFilePath(self, newSrcFilePath: str) -> None: ...
    def getDestFilePath(self) -> str: ...
    def setDestFilePath(self, newDestFilePath: str) -> None: ...
    def getEndTime(self) -> float: ...
    def setEndTime(self, newEndTime: float) -> None: ...
    def getDestDataFilePath(self) -> str: ...
    def setDestDataFilePath(self, newDestDataFilePath: str) -> None: ...

class KalturaConvertProfileJobData(KalturaJobData):
    inputFileSyncLocalPath: str
    thumbHeight: int
    thumbBitrate: int
    def __init__(self,
            inputFileSyncLocalPath: str = NotImplemented,
            thumbHeight: int = NotImplemented,
            thumbBitrate: int = NotImplemented): ...

    def getInputFileSyncLocalPath(self) -> str: ...
    def setInputFileSyncLocalPath(self, newInputFileSyncLocalPath: str) -> None: ...
    def getThumbHeight(self) -> int: ...
    def setThumbHeight(self, newThumbHeight: int) -> None: ...
    def getThumbBitrate(self) -> int: ...
    def setThumbBitrate(self, newThumbBitrate: int) -> None: ...

class KalturaCopyPartnerJobData(KalturaJobData):
    fromPartnerId: int
    toPartnerId: int
    def __init__(self,
            fromPartnerId: int = NotImplemented,
            toPartnerId: int = NotImplemented): ...

    def getFromPartnerId(self) -> int: ...
    def setFromPartnerId(self, newFromPartnerId: int) -> None: ...
    def getToPartnerId(self) -> int: ...
    def setToPartnerId(self, newToPartnerId: int) -> None: ...

class KalturaCountryRestriction(KalturaBaseRestriction):
    countryRestrictionType: KalturaCountryRestrictionType
    countryList: str
    def __init__(self,
            countryRestrictionType: KalturaCountryRestrictionType = NotImplemented,
            countryList: str = NotImplemented): ...

    def getCountryRestrictionType(self) -> KalturaCountryRestrictionType: ...
    def setCountryRestrictionType(self, newCountryRestrictionType: KalturaCountryRestrictionType) -> None: ...
    def getCountryList(self) -> str: ...
    def setCountryList(self, newCountryList: str) -> None: ...

class KalturaDataListResponse(KalturaListResponse):
    objects: List[KalturaDataEntry]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaDataEntry] = NotImplemented): ...

    def getObjects(self) -> List[KalturaDataEntry]: ...

class KalturaDeleteFileJobData(KalturaJobData):
    localFileSyncPath: str
    def __init__(self,
            localFileSyncPath: str = NotImplemented): ...

    def getLocalFileSyncPath(self) -> str: ...
    def setLocalFileSyncPath(self, newLocalFileSyncPath: str) -> None: ...

class KalturaDeleteJobData(KalturaJobData):
    filter: KalturaFilter
    def __init__(self,
            filter: KalturaFilter = NotImplemented): ...

    def getFilter(self) -> KalturaFilter: ...
    def setFilter(self, newFilter: KalturaFilter) -> None: ...

class KalturaDeliveryProfileAkamaiAppleHttpManifest(KalturaDeliveryProfile):
    supportClipping: bool
    def __init__(self,
            id: int = NotImplemented,
            partnerId: int = NotImplemented,
            name: str = NotImplemented,
            type: KalturaDeliveryProfileType = NotImplemented,
            systemName: str = NotImplemented,
            description: str = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            streamerType: KalturaPlaybackProtocol = NotImplemented,
            url: str = NotImplemented,
            hostName: str = NotImplemented,
            status: KalturaDeliveryStatus = NotImplemented,
            recognizer: KalturaUrlRecognizer = NotImplemented,
            tokenizer: KalturaUrlTokenizer = NotImplemented,
            isDefault: KalturaNullableBoolean = NotImplemented,
            parentId: int = NotImplemented,
            mediaProtocols: str = NotImplemented,
            priority: int = NotImplemented,
            extraParams: str = NotImplemented,
            supplementaryAssetsFilter: KalturaAssetFilter = NotImplemented,
            enforceDeliveriesSupport: str = NotImplemented,
            supportClipping: bool = NotImplemented): ...

    def getSupportClipping(self) -> bool: ...
    def setSupportClipping(self, newSupportClipping: bool) -> None: ...

class KalturaDeliveryProfileAkamaiHds(KalturaDeliveryProfile):
    supportClipping: bool
    def __init__(self,
            id: int = NotImplemented,
            partnerId: int = NotImplemented,
            name: str = NotImplemented,
            type: KalturaDeliveryProfileType = NotImplemented,
            systemName: str = NotImplemented,
            description: str = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            streamerType: KalturaPlaybackProtocol = NotImplemented,
            url: str = NotImplemented,
            hostName: str = NotImplemented,
            status: KalturaDeliveryStatus = NotImplemented,
            recognizer: KalturaUrlRecognizer = NotImplemented,
            tokenizer: KalturaUrlTokenizer = NotImplemented,
            isDefault: KalturaNullableBoolean = NotImplemented,
            parentId: int = NotImplemented,
            mediaProtocols: str = NotImplemented,
            priority: int = NotImplemented,
            extraParams: str = NotImplemented,
            supplementaryAssetsFilter: KalturaAssetFilter = NotImplemented,
            enforceDeliveriesSupport: str = NotImplemented,
            supportClipping: bool = NotImplemented): ...

    def getSupportClipping(self) -> bool: ...
    def setSupportClipping(self, newSupportClipping: bool) -> None: ...

class KalturaDeliveryProfileBaseFilter(KalturaFilter):
    idEqual: int
    idIn: str
    partnerIdEqual: int
    partnerIdIn: str
    systemNameEqual: str
    systemNameIn: str
    createdAtGreaterThanOrEqual: int
    createdAtLessThanOrEqual: int
    updatedAtGreaterThanOrEqual: int
    updatedAtLessThanOrEqual: int
    streamerTypeEqual: KalturaPlaybackProtocol
    statusEqual: KalturaDeliveryStatus
    statusIn: str
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            systemNameEqual: str = NotImplemented,
            systemNameIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            streamerTypeEqual: KalturaPlaybackProtocol = NotImplemented,
            statusEqual: KalturaDeliveryStatus = NotImplemented,
            statusIn: str = NotImplemented): ...

    def getIdEqual(self) -> int: ...
    def setIdEqual(self, newIdEqual: int) -> None: ...
    def getIdIn(self) -> str: ...
    def setIdIn(self, newIdIn: str) -> None: ...
    def getPartnerIdEqual(self) -> int: ...
    def setPartnerIdEqual(self, newPartnerIdEqual: int) -> None: ...
    def getPartnerIdIn(self) -> str: ...
    def setPartnerIdIn(self, newPartnerIdIn: str) -> None: ...
    def getSystemNameEqual(self) -> str: ...
    def setSystemNameEqual(self, newSystemNameEqual: str) -> None: ...
    def getSystemNameIn(self) -> str: ...
    def setSystemNameIn(self, newSystemNameIn: str) -> None: ...
    def getCreatedAtGreaterThanOrEqual(self) -> int: ...
    def setCreatedAtGreaterThanOrEqual(self, newCreatedAtGreaterThanOrEqual: int) -> None: ...
    def getCreatedAtLessThanOrEqual(self) -> int: ...
    def setCreatedAtLessThanOrEqual(self, newCreatedAtLessThanOrEqual: int) -> None: ...
    def getUpdatedAtGreaterThanOrEqual(self) -> int: ...
    def setUpdatedAtGreaterThanOrEqual(self, newUpdatedAtGreaterThanOrEqual: int) -> None: ...
    def getUpdatedAtLessThanOrEqual(self) -> int: ...
    def setUpdatedAtLessThanOrEqual(self, newUpdatedAtLessThanOrEqual: int) -> None: ...
    def getStreamerTypeEqual(self) -> KalturaPlaybackProtocol: ...
    def setStreamerTypeEqual(self, newStreamerTypeEqual: KalturaPlaybackProtocol) -> None: ...
    def getStatusEqual(self) -> KalturaDeliveryStatus: ...
    def setStatusEqual(self, newStatusEqual: KalturaDeliveryStatus) -> None: ...
    def getStatusIn(self) -> str: ...
    def setStatusIn(self, newStatusIn: str) -> None: ...

class KalturaDeliveryProfileCondition(KalturaCondition):
    deliveryProfileIds: List[KalturaIntegerValue]
    def __init__(self,
            type: KalturaConditionType = NotImplemented,
            description: str = NotImplemented,
            not_: bool = NotImplemented,
            deliveryProfileIds: List[KalturaIntegerValue] = NotImplemented): ...

    def getDeliveryProfileIds(self) -> List[KalturaIntegerValue]: ...
    def setDeliveryProfileIds(self, newDeliveryProfileIds: List[KalturaIntegerValue]) -> None: ...

class KalturaDeliveryProfileGenericAppleHttp(KalturaDeliveryProfile):
    pattern: str
    rendererClass: str
    manifestRedirect: KalturaNullableBoolean
    def __init__(self,
            id: int = NotImplemented,
            partnerId: int = NotImplemented,
            name: str = NotImplemented,
            type: KalturaDeliveryProfileType = NotImplemented,
            systemName: str = NotImplemented,
            description: str = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            streamerType: KalturaPlaybackProtocol = NotImplemented,
            url: str = NotImplemented,
            hostName: str = NotImplemented,
            status: KalturaDeliveryStatus = NotImplemented,
            recognizer: KalturaUrlRecognizer = NotImplemented,
            tokenizer: KalturaUrlTokenizer = NotImplemented,
            isDefault: KalturaNullableBoolean = NotImplemented,
            parentId: int = NotImplemented,
            mediaProtocols: str = NotImplemented,
            priority: int = NotImplemented,
            extraParams: str = NotImplemented,
            supplementaryAssetsFilter: KalturaAssetFilter = NotImplemented,
            enforceDeliveriesSupport: str = NotImplemented,
            pattern: str = NotImplemented,
            rendererClass: str = NotImplemented,
            manifestRedirect: KalturaNullableBoolean = NotImplemented): ...

    def getPattern(self) -> str: ...
    def setPattern(self, newPattern: str) -> None: ...
    def getRendererClass(self) -> str: ...
    def setRendererClass(self, newRendererClass: str) -> None: ...
    def getManifestRedirect(self) -> KalturaNullableBoolean: ...
    def setManifestRedirect(self, newManifestRedirect: KalturaNullableBoolean) -> None: ...

class KalturaDeliveryProfileGenericHds(KalturaDeliveryProfile):
    pattern: str
    rendererClass: str
    def __init__(self,
            id: int = NotImplemented,
            partnerId: int = NotImplemented,
            name: str = NotImplemented,
            type: KalturaDeliveryProfileType = NotImplemented,
            systemName: str = NotImplemented,
            description: str = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            streamerType: KalturaPlaybackProtocol = NotImplemented,
            url: str = NotImplemented,
            hostName: str = NotImplemented,
            status: KalturaDeliveryStatus = NotImplemented,
            recognizer: KalturaUrlRecognizer = NotImplemented,
            tokenizer: KalturaUrlTokenizer = NotImplemented,
            isDefault: KalturaNullableBoolean = NotImplemented,
            parentId: int = NotImplemented,
            mediaProtocols: str = NotImplemented,
            priority: int = NotImplemented,
            extraParams: str = NotImplemented,
            supplementaryAssetsFilter: KalturaAssetFilter = NotImplemented,
            enforceDeliveriesSupport: str = NotImplemented,
            pattern: str = NotImplemented,
            rendererClass: str = NotImplemented): ...

    def getPattern(self) -> str: ...
    def setPattern(self, newPattern: str) -> None: ...
    def getRendererClass(self) -> str: ...
    def setRendererClass(self, newRendererClass: str) -> None: ...

class KalturaDeliveryProfileGenericSilverLight(KalturaDeliveryProfile):
    pattern: str
    def __init__(self,
            id: int = NotImplemented,
            partnerId: int = NotImplemented,
            name: str = NotImplemented,
            type: KalturaDeliveryProfileType = NotImplemented,
            systemName: str = NotImplemented,
            description: str = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            streamerType: KalturaPlaybackProtocol = NotImplemented,
            url: str = NotImplemented,
            hostName: str = NotImplemented,
            status: KalturaDeliveryStatus = NotImplemented,
            recognizer: KalturaUrlRecognizer = NotImplemented,
            tokenizer: KalturaUrlTokenizer = NotImplemented,
            isDefault: KalturaNullableBoolean = NotImplemented,
            parentId: int = NotImplemented,
            mediaProtocols: str = NotImplemented,
            priority: int = NotImplemented,
            extraParams: str = NotImplemented,
            supplementaryAssetsFilter: KalturaAssetFilter = NotImplemented,
            enforceDeliveriesSupport: str = NotImplemented,
            pattern: str = NotImplemented): ...

    def getPattern(self) -> str: ...
    def setPattern(self, newPattern: str) -> None: ...

class KalturaDeliveryProfileHttp(KalturaDeliveryProfile):
    maxSize: int
    def __init__(self,
            id: int = NotImplemented,
            partnerId: int = NotImplemented,
            name: str = NotImplemented,
            type: KalturaDeliveryProfileType = NotImplemented,
            systemName: str = NotImplemented,
            description: str = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            streamerType: KalturaPlaybackProtocol = NotImplemented,
            url: str = NotImplemented,
            hostName: str = NotImplemented,
            status: KalturaDeliveryStatus = NotImplemented,
            recognizer: KalturaUrlRecognizer = NotImplemented,
            tokenizer: KalturaUrlTokenizer = NotImplemented,
            isDefault: KalturaNullableBoolean = NotImplemented,
            parentId: int = NotImplemented,
            mediaProtocols: str = NotImplemented,
            priority: int = NotImplemented,
            extraParams: str = NotImplemented,
            supplementaryAssetsFilter: KalturaAssetFilter = NotImplemented,
            enforceDeliveriesSupport: str = NotImplemented,
            maxSize: int = NotImplemented): ...

    def getMaxSize(self) -> int: ...
    def setMaxSize(self, newMaxSize: int) -> None: ...

class KalturaDeliveryProfileListResponse(KalturaListResponse):
    objects: List[KalturaDeliveryProfile]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaDeliveryProfile] = NotImplemented): ...

    def getObjects(self) -> List[KalturaDeliveryProfile]: ...

class KalturaDeliveryProfileLiveAppleHttp(KalturaDeliveryProfile):
    disableExtraAttributes: bool
    forceProxy: bool
    def __init__(self,
            id: int = NotImplemented,
            partnerId: int = NotImplemented,
            name: str = NotImplemented,
            type: KalturaDeliveryProfileType = NotImplemented,
            systemName: str = NotImplemented,
            description: str = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            streamerType: KalturaPlaybackProtocol = NotImplemented,
            url: str = NotImplemented,
            hostName: str = NotImplemented,
            status: KalturaDeliveryStatus = NotImplemented,
            recognizer: KalturaUrlRecognizer = NotImplemented,
            tokenizer: KalturaUrlTokenizer = NotImplemented,
            isDefault: KalturaNullableBoolean = NotImplemented,
            parentId: int = NotImplemented,
            mediaProtocols: str = NotImplemented,
            priority: int = NotImplemented,
            extraParams: str = NotImplemented,
            supplementaryAssetsFilter: KalturaAssetFilter = NotImplemented,
            enforceDeliveriesSupport: str = NotImplemented,
            disableExtraAttributes: bool = NotImplemented,
            forceProxy: bool = NotImplemented): ...

    def getDisableExtraAttributes(self) -> bool: ...
    def setDisableExtraAttributes(self, newDisableExtraAttributes: bool) -> None: ...
    def getForceProxy(self) -> bool: ...
    def setForceProxy(self, newForceProxy: bool) -> None: ...

class KalturaDeliveryProfileLivePackager(KalturaDeliveryProfile):
    livePackagerSigningDomain: str
    shouldRedirect: bool
    def __init__(self,
            id: int = NotImplemented,
            partnerId: int = NotImplemented,
            name: str = NotImplemented,
            type: KalturaDeliveryProfileType = NotImplemented,
            systemName: str = NotImplemented,
            description: str = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            streamerType: KalturaPlaybackProtocol = NotImplemented,
            url: str = NotImplemented,
            hostName: str = NotImplemented,
            status: KalturaDeliveryStatus = NotImplemented,
            recognizer: KalturaUrlRecognizer = NotImplemented,
            tokenizer: KalturaUrlTokenizer = NotImplemented,
            isDefault: KalturaNullableBoolean = NotImplemented,
            parentId: int = NotImplemented,
            mediaProtocols: str = NotImplemented,
            priority: int = NotImplemented,
            extraParams: str = NotImplemented,
            supplementaryAssetsFilter: KalturaAssetFilter = NotImplemented,
            enforceDeliveriesSupport: str = NotImplemented,
            livePackagerSigningDomain: str = NotImplemented,
            shouldRedirect: bool = NotImplemented): ...

    def getLivePackagerSigningDomain(self) -> str: ...
    def setLivePackagerSigningDomain(self, newLivePackagerSigningDomain: str) -> None: ...
    def getShouldRedirect(self) -> bool: ...
    def setShouldRedirect(self, newShouldRedirect: bool) -> None: ...

class KalturaDeliveryProfileRtmp(KalturaDeliveryProfile):
    enforceRtmpe: bool
    prefix: str
    def __init__(self,
            id: int = NotImplemented,
            partnerId: int = NotImplemented,
            name: str = NotImplemented,
            type: KalturaDeliveryProfileType = NotImplemented,
            systemName: str = NotImplemented,
            description: str = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            streamerType: KalturaPlaybackProtocol = NotImplemented,
            url: str = NotImplemented,
            hostName: str = NotImplemented,
            status: KalturaDeliveryStatus = NotImplemented,
            recognizer: KalturaUrlRecognizer = NotImplemented,
            tokenizer: KalturaUrlTokenizer = NotImplemented,
            isDefault: KalturaNullableBoolean = NotImplemented,
            parentId: int = NotImplemented,
            mediaProtocols: str = NotImplemented,
            priority: int = NotImplemented,
            extraParams: str = NotImplemented,
            supplementaryAssetsFilter: KalturaAssetFilter = NotImplemented,
            enforceDeliveriesSupport: str = NotImplemented,
            enforceRtmpe: bool = NotImplemented,
            prefix: str = NotImplemented): ...

    def getEnforceRtmpe(self) -> bool: ...
    def setEnforceRtmpe(self, newEnforceRtmpe: bool) -> None: ...
    def getPrefix(self) -> str: ...
    def setPrefix(self, newPrefix: str) -> None: ...

class KalturaDeliveryProfileVod(KalturaDeliveryProfile):
    simuliveSupport: bool
    def __init__(self,
            id: int = NotImplemented,
            partnerId: int = NotImplemented,
            name: str = NotImplemented,
            type: KalturaDeliveryProfileType = NotImplemented,
            systemName: str = NotImplemented,
            description: str = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            streamerType: KalturaPlaybackProtocol = NotImplemented,
            url: str = NotImplemented,
            hostName: str = NotImplemented,
            status: KalturaDeliveryStatus = NotImplemented,
            recognizer: KalturaUrlRecognizer = NotImplemented,
            tokenizer: KalturaUrlTokenizer = NotImplemented,
            isDefault: KalturaNullableBoolean = NotImplemented,
            parentId: int = NotImplemented,
            mediaProtocols: str = NotImplemented,
            priority: int = NotImplemented,
            extraParams: str = NotImplemented,
            supplementaryAssetsFilter: KalturaAssetFilter = NotImplemented,
            enforceDeliveriesSupport: str = NotImplemented,
            simuliveSupport: bool = NotImplemented): ...

    def getSimuliveSupport(self) -> bool: ...
    def setSimuliveSupport(self, newSimuliveSupport: bool) -> None: ...

class KalturaDeliveryServerNode(KalturaServerNode):
    deliveryProfileIds: List[KalturaKeyValue]
    config: str
    def __init__(self,
            id: int = NotImplemented,
            partnerId: int = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            heartbeatTime: int = NotImplemented,
            name: str = NotImplemented,
            systemName: str = NotImplemented,
            description: str = NotImplemented,
            hostName: str = NotImplemented,
            status: KalturaServerNodeStatus = NotImplemented,
            type: KalturaServerNodeType = NotImplemented,
            tags: str = NotImplemented,
            dc: int = NotImplemented,
            parentId: str = NotImplemented,
            environment: str = NotImplemented,
            deliveryProfileIds: List[KalturaKeyValue] = NotImplemented,
            config: str = NotImplemented): ...

    def getDeliveryProfileIds(self) -> List[KalturaKeyValue]: ...
    def setDeliveryProfileIds(self, newDeliveryProfileIds: List[KalturaKeyValue]) -> None: ...
    def getConfig(self) -> str: ...
    def setConfig(self, newConfig: str) -> None: ...

class KalturaDirectoryRestriction(KalturaBaseRestriction):
    directoryRestrictionType: KalturaDirectoryRestrictionType
    def __init__(self,
            directoryRestrictionType: KalturaDirectoryRestrictionType = NotImplemented): ...

    def getDirectoryRestrictionType(self) -> KalturaDirectoryRestrictionType: ...
    def setDirectoryRestrictionType(self, newDirectoryRestrictionType: KalturaDirectoryRestrictionType) -> None: ...

class KalturaDrmEntryContextPluginData(KalturaPluginData):
    flavorData: str
    def __init__(self,
            flavorData: str = NotImplemented): ...

    def getFlavorData(self) -> str: ...
    def setFlavorData(self, newFlavorData: str) -> None: ...

class KalturaCategoryUserBaseFilter(KalturaRelatedFilter):
    categoryIdEqual: int
    categoryIdIn: str
    userIdEqual: str
    userIdIn: str
    permissionLevelEqual: KalturaCategoryUserPermissionLevel
    permissionLevelIn: str
    statusEqual: KalturaCategoryUserStatus
    statusIn: str
    createdAtGreaterThanOrEqual: int
    createdAtLessThanOrEqual: int
    updatedAtGreaterThanOrEqual: int
    updatedAtLessThanOrEqual: int
    updateMethodEqual: KalturaUpdateMethodType
    updateMethodIn: str
    categoryFullIdsStartsWith: str
    categoryFullIdsEqual: str
    permissionNamesMatchAnd: str
    permissionNamesMatchOr: str
    permissionNamesNotContains: str
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            categoryIdEqual: int = NotImplemented,
            categoryIdIn: str = NotImplemented,
            userIdEqual: str = NotImplemented,
            userIdIn: str = NotImplemented,
            permissionLevelEqual: KalturaCategoryUserPermissionLevel = NotImplemented,
            permissionLevelIn: str = NotImplemented,
            statusEqual: KalturaCategoryUserStatus = NotImplemented,
            statusIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            updateMethodEqual: KalturaUpdateMethodType = NotImplemented,
            updateMethodIn: str = NotImplemented,
            categoryFullIdsStartsWith: str = NotImplemented,
            categoryFullIdsEqual: str = NotImplemented,
            permissionNamesMatchAnd: str = NotImplemented,
            permissionNamesMatchOr: str = NotImplemented,
            permissionNamesNotContains: str = NotImplemented): ...

    def getCategoryIdEqual(self) -> int: ...
    def setCategoryIdEqual(self, newCategoryIdEqual: int) -> None: ...
    def getCategoryIdIn(self) -> str: ...
    def setCategoryIdIn(self, newCategoryIdIn: str) -> None: ...
    def getUserIdEqual(self) -> str: ...
    def setUserIdEqual(self, newUserIdEqual: str) -> None: ...
    def getUserIdIn(self) -> str: ...
    def setUserIdIn(self, newUserIdIn: str) -> None: ...
    def getPermissionLevelEqual(self) -> KalturaCategoryUserPermissionLevel: ...
    def setPermissionLevelEqual(self, newPermissionLevelEqual: KalturaCategoryUserPermissionLevel) -> None: ...
    def getPermissionLevelIn(self) -> str: ...
    def setPermissionLevelIn(self, newPermissionLevelIn: str) -> None: ...
    def getStatusEqual(self) -> KalturaCategoryUserStatus: ...
    def setStatusEqual(self, newStatusEqual: KalturaCategoryUserStatus) -> None: ...
    def getStatusIn(self) -> str: ...
    def setStatusIn(self, newStatusIn: str) -> None: ...
    def getCreatedAtGreaterThanOrEqual(self) -> int: ...
    def setCreatedAtGreaterThanOrEqual(self, newCreatedAtGreaterThanOrEqual: int) -> None: ...
    def getCreatedAtLessThanOrEqual(self) -> int: ...
    def setCreatedAtLessThanOrEqual(self, newCreatedAtLessThanOrEqual: int) -> None: ...
    def getUpdatedAtGreaterThanOrEqual(self) -> int: ...
    def setUpdatedAtGreaterThanOrEqual(self, newUpdatedAtGreaterThanOrEqual: int) -> None: ...
    def getUpdatedAtLessThanOrEqual(self) -> int: ...
    def setUpdatedAtLessThanOrEqual(self, newUpdatedAtLessThanOrEqual: int) -> None: ...
    def getUpdateMethodEqual(self) -> KalturaUpdateMethodType: ...
    def setUpdateMethodEqual(self, newUpdateMethodEqual: KalturaUpdateMethodType) -> None: ...
    def getUpdateMethodIn(self) -> str: ...
    def setUpdateMethodIn(self, newUpdateMethodIn: str) -> None: ...
    def getCategoryFullIdsStartsWith(self) -> str: ...
    def setCategoryFullIdsStartsWith(self, newCategoryFullIdsStartsWith: str) -> None: ...
    def getCategoryFullIdsEqual(self) -> str: ...
    def setCategoryFullIdsEqual(self, newCategoryFullIdsEqual: str) -> None: ...
    def getPermissionNamesMatchAnd(self) -> str: ...
    def setPermissionNamesMatchAnd(self, newPermissionNamesMatchAnd: str) -> None: ...
    def getPermissionNamesMatchOr(self) -> str: ...
    def setPermissionNamesMatchOr(self, newPermissionNamesMatchOr: str) -> None: ...
    def getPermissionNamesNotContains(self) -> str: ...
    def setPermissionNamesNotContains(self, newPermissionNamesNotContains: str) -> None: ...

class KalturaCategoryUserFilter(KalturaCategoryUserBaseFilter):
    categoryDirectMembers: bool
    freeText: str
    relatedGroupsByUserId: str
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            categoryIdEqual: int = NotImplemented,
            categoryIdIn: str = NotImplemented,
            userIdEqual: str = NotImplemented,
            userIdIn: str = NotImplemented,
            permissionLevelEqual: KalturaCategoryUserPermissionLevel = NotImplemented,
            permissionLevelIn: str = NotImplemented,
            statusEqual: KalturaCategoryUserStatus = NotImplemented,
            statusIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            updateMethodEqual: KalturaUpdateMethodType = NotImplemented,
            updateMethodIn: str = NotImplemented,
            categoryFullIdsStartsWith: str = NotImplemented,
            categoryFullIdsEqual: str = NotImplemented,
            permissionNamesMatchAnd: str = NotImplemented,
            permissionNamesMatchOr: str = NotImplemented,
            permissionNamesNotContains: str = NotImplemented,
            categoryDirectMembers: bool = NotImplemented,
            freeText: str = NotImplemented,
            relatedGroupsByUserId: str = NotImplemented): ...

    def getCategoryDirectMembers(self) -> bool: ...
    def setCategoryDirectMembers(self, newCategoryDirectMembers: bool) -> None: ...
    def getFreeText(self) -> str: ...
    def setFreeText(self, newFreeText: str) -> None: ...
    def getRelatedGroupsByUserId(self) -> str: ...
    def setRelatedGroupsByUserId(self, newRelatedGroupsByUserId: str) -> None: ...

class KalturaBaseUserBaseFilter(KalturaRelatedFilter):
    partnerIdEqual: int
    screenNameLike: str
    screenNameStartsWith: str
    emailLike: str
    emailStartsWith: str
    tagsMultiLikeOr: str
    tagsMultiLikeAnd: str
    statusEqual: KalturaUserStatus
    statusIn: str
    createdAtGreaterThanOrEqual: int
    createdAtLessThanOrEqual: int
    updatedAtGreaterThanOrEqual: int
    updatedAtLessThanOrEqual: int
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            screenNameLike: str = NotImplemented,
            screenNameStartsWith: str = NotImplemented,
            emailLike: str = NotImplemented,
            emailStartsWith: str = NotImplemented,
            tagsMultiLikeOr: str = NotImplemented,
            tagsMultiLikeAnd: str = NotImplemented,
            statusEqual: KalturaUserStatus = NotImplemented,
            statusIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented): ...

    def getPartnerIdEqual(self) -> int: ...
    def setPartnerIdEqual(self, newPartnerIdEqual: int) -> None: ...
    def getScreenNameLike(self) -> str: ...
    def setScreenNameLike(self, newScreenNameLike: str) -> None: ...
    def getScreenNameStartsWith(self) -> str: ...
    def setScreenNameStartsWith(self, newScreenNameStartsWith: str) -> None: ...
    def getEmailLike(self) -> str: ...
    def setEmailLike(self, newEmailLike: str) -> None: ...
    def getEmailStartsWith(self) -> str: ...
    def setEmailStartsWith(self, newEmailStartsWith: str) -> None: ...
    def getTagsMultiLikeOr(self) -> str: ...
    def setTagsMultiLikeOr(self, newTagsMultiLikeOr: str) -> None: ...
    def getTagsMultiLikeAnd(self) -> str: ...
    def setTagsMultiLikeAnd(self, newTagsMultiLikeAnd: str) -> None: ...
    def getStatusEqual(self) -> KalturaUserStatus: ...
    def setStatusEqual(self, newStatusEqual: KalturaUserStatus) -> None: ...
    def getStatusIn(self) -> str: ...
    def setStatusIn(self, newStatusIn: str) -> None: ...
    def getCreatedAtGreaterThanOrEqual(self) -> int: ...
    def setCreatedAtGreaterThanOrEqual(self, newCreatedAtGreaterThanOrEqual: int) -> None: ...
    def getCreatedAtLessThanOrEqual(self) -> int: ...
    def setCreatedAtLessThanOrEqual(self, newCreatedAtLessThanOrEqual: int) -> None: ...
    def getUpdatedAtGreaterThanOrEqual(self) -> int: ...
    def setUpdatedAtGreaterThanOrEqual(self, newUpdatedAtGreaterThanOrEqual: int) -> None: ...
    def getUpdatedAtLessThanOrEqual(self) -> int: ...
    def setUpdatedAtLessThanOrEqual(self, newUpdatedAtLessThanOrEqual: int) -> None: ...

class KalturaBaseUserFilter(KalturaBaseUserBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            screenNameLike: str = NotImplemented,
            screenNameStartsWith: str = NotImplemented,
            emailLike: str = NotImplemented,
            emailStartsWith: str = NotImplemented,
            tagsMultiLikeOr: str = NotImplemented,
            tagsMultiLikeAnd: str = NotImplemented,
            statusEqual: KalturaUserStatus = NotImplemented,
            statusIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented): ...
        pass

class KalturaUserBaseFilter(KalturaBaseUserFilter):
    idEqual: str
    idIn: str
    typeEqual: KalturaUserType
    typeIn: str
    isAdminEqual: KalturaNullableBoolean
    firstNameStartsWith: str
    lastNameStartsWith: str
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            screenNameLike: str = NotImplemented,
            screenNameStartsWith: str = NotImplemented,
            emailLike: str = NotImplemented,
            emailStartsWith: str = NotImplemented,
            tagsMultiLikeOr: str = NotImplemented,
            tagsMultiLikeAnd: str = NotImplemented,
            statusEqual: KalturaUserStatus = NotImplemented,
            statusIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            idEqual: str = NotImplemented,
            idIn: str = NotImplemented,
            typeEqual: KalturaUserType = NotImplemented,
            typeIn: str = NotImplemented,
            isAdminEqual: KalturaNullableBoolean = NotImplemented,
            firstNameStartsWith: str = NotImplemented,
            lastNameStartsWith: str = NotImplemented): ...

    def getIdEqual(self) -> str: ...
    def setIdEqual(self, newIdEqual: str) -> None: ...
    def getIdIn(self) -> str: ...
    def setIdIn(self, newIdIn: str) -> None: ...
    def getTypeEqual(self) -> KalturaUserType: ...
    def setTypeEqual(self, newTypeEqual: KalturaUserType) -> None: ...
    def getTypeIn(self) -> str: ...
    def setTypeIn(self, newTypeIn: str) -> None: ...
    def getIsAdminEqual(self) -> KalturaNullableBoolean: ...
    def setIsAdminEqual(self, newIsAdminEqual: KalturaNullableBoolean) -> None: ...
    def getFirstNameStartsWith(self) -> str: ...
    def setFirstNameStartsWith(self, newFirstNameStartsWith: str) -> None: ...
    def getLastNameStartsWith(self) -> str: ...
    def setLastNameStartsWith(self, newLastNameStartsWith: str) -> None: ...

class KalturaUserFilter(KalturaUserBaseFilter):
    idOrScreenNameStartsWith: str
    loginEnabledEqual: KalturaNullableBoolean
    roleIdEqual: str
    roleIdsEqual: str
    roleIdsIn: str
    firstNameOrLastNameStartsWith: str
    permissionNamesMultiLikeOr: str
    permissionNamesMultiLikeAnd: str
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            screenNameLike: str = NotImplemented,
            screenNameStartsWith: str = NotImplemented,
            emailLike: str = NotImplemented,
            emailStartsWith: str = NotImplemented,
            tagsMultiLikeOr: str = NotImplemented,
            tagsMultiLikeAnd: str = NotImplemented,
            statusEqual: KalturaUserStatus = NotImplemented,
            statusIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            idEqual: str = NotImplemented,
            idIn: str = NotImplemented,
            typeEqual: KalturaUserType = NotImplemented,
            typeIn: str = NotImplemented,
            isAdminEqual: KalturaNullableBoolean = NotImplemented,
            firstNameStartsWith: str = NotImplemented,
            lastNameStartsWith: str = NotImplemented,
            idOrScreenNameStartsWith: str = NotImplemented,
            loginEnabledEqual: KalturaNullableBoolean = NotImplemented,
            roleIdEqual: str = NotImplemented,
            roleIdsEqual: str = NotImplemented,
            roleIdsIn: str = NotImplemented,
            firstNameOrLastNameStartsWith: str = NotImplemented,
            permissionNamesMultiLikeOr: str = NotImplemented,
            permissionNamesMultiLikeAnd: str = NotImplemented): ...

    def getIdOrScreenNameStartsWith(self) -> str: ...
    def setIdOrScreenNameStartsWith(self, newIdOrScreenNameStartsWith: str) -> None: ...
    def getLoginEnabledEqual(self) -> KalturaNullableBoolean: ...
    def setLoginEnabledEqual(self, newLoginEnabledEqual: KalturaNullableBoolean) -> None: ...
    def getRoleIdEqual(self) -> str: ...
    def setRoleIdEqual(self, newRoleIdEqual: str) -> None: ...
    def getRoleIdsEqual(self) -> str: ...
    def setRoleIdsEqual(self, newRoleIdsEqual: str) -> None: ...
    def getRoleIdsIn(self) -> str: ...
    def setRoleIdsIn(self, newRoleIdsIn: str) -> None: ...
    def getFirstNameOrLastNameStartsWith(self) -> str: ...
    def setFirstNameOrLastNameStartsWith(self, newFirstNameOrLastNameStartsWith: str) -> None: ...
    def getPermissionNamesMultiLikeOr(self) -> str: ...
    def setPermissionNamesMultiLikeOr(self, newPermissionNamesMultiLikeOr: str) -> None: ...
    def getPermissionNamesMultiLikeAnd(self) -> str: ...
    def setPermissionNamesMultiLikeAnd(self, newPermissionNamesMultiLikeAnd: str) -> None: ...

class KalturaEntryContext(KalturaContext):
    entryId: str
    followEntryRedirect: KalturaNullableBoolean
    def __init__(self,
            entryId: str = NotImplemented,
            followEntryRedirect: KalturaNullableBoolean = NotImplemented): ...

    def getEntryId(self) -> str: ...
    def setEntryId(self, newEntryId: str) -> None: ...
    def getFollowEntryRedirect(self) -> KalturaNullableBoolean: ...
    def setFollowEntryRedirect(self, newFollowEntryRedirect: KalturaNullableBoolean) -> None: ...

class KalturaEntryContextDataParams(KalturaAccessControlScope):
    flavorAssetId: str
    flavorTags: str
    streamerType: str
    mediaProtocol: str
    def __init__(self,
            referrer: str = NotImplemented,
            ip: str = NotImplemented,
            ks: str = NotImplemented,
            userAgent: str = NotImplemented,
            time: int = NotImplemented,
            contexts: List[KalturaAccessControlContextTypeHolder] = NotImplemented,
            hashes: List[KalturaKeyValue] = NotImplemented,
            flavorAssetId: str = NotImplemented,
            flavorTags: str = NotImplemented,
            streamerType: str = NotImplemented,
            mediaProtocol: str = NotImplemented): ...

    def getFlavorAssetId(self) -> str: ...
    def setFlavorAssetId(self, newFlavorAssetId: str) -> None: ...
    def getFlavorTags(self) -> str: ...
    def setFlavorTags(self, newFlavorTags: str) -> None: ...
    def getStreamerType(self) -> str: ...
    def setStreamerType(self, newStreamerType: str) -> None: ...
    def getMediaProtocol(self) -> str: ...
    def setMediaProtocol(self, newMediaProtocol: str) -> None: ...

class KalturaEntryContextDataResult(KalturaContextDataResult):
    isSiteRestricted: bool
    isCountryRestricted: bool
    isSessionRestricted: bool
    isIpAddressRestricted: bool
    isUserAgentRestricted: bool
    previewLength: int
    isScheduledNow: bool
    isAdmin: bool
    streamerType: str
    mediaProtocol: str
    storageProfilesXML: str
    accessControlMessages: List[KalturaString]
    accessControlActions: List[KalturaRuleAction]
    flavorAssets: List[KalturaFlavorAsset]
    msDuration: int
    pluginData: map
    def __init__(self,
            messages: List[KalturaString] = NotImplemented,
            actions: List[KalturaRuleAction] = NotImplemented,
            isSiteRestricted: bool = NotImplemented,
            isCountryRestricted: bool = NotImplemented,
            isSessionRestricted: bool = NotImplemented,
            isIpAddressRestricted: bool = NotImplemented,
            isUserAgentRestricted: bool = NotImplemented,
            previewLength: int = NotImplemented,
            isScheduledNow: bool = NotImplemented,
            isAdmin: bool = NotImplemented,
            streamerType: str = NotImplemented,
            mediaProtocol: str = NotImplemented,
            storageProfilesXML: str = NotImplemented,
            accessControlMessages: List[KalturaString] = NotImplemented,
            accessControlActions: List[KalturaRuleAction] = NotImplemented,
            flavorAssets: List[KalturaFlavorAsset] = NotImplemented,
            msDuration: int = NotImplemented,
            pluginData: map = NotImplemented): ...

    def getIsSiteRestricted(self) -> bool: ...
    def setIsSiteRestricted(self, newIsSiteRestricted: bool) -> None: ...
    def getIsCountryRestricted(self) -> bool: ...
    def setIsCountryRestricted(self, newIsCountryRestricted: bool) -> None: ...
    def getIsSessionRestricted(self) -> bool: ...
    def setIsSessionRestricted(self, newIsSessionRestricted: bool) -> None: ...
    def getIsIpAddressRestricted(self) -> bool: ...
    def setIsIpAddressRestricted(self, newIsIpAddressRestricted: bool) -> None: ...
    def getIsUserAgentRestricted(self) -> bool: ...
    def setIsUserAgentRestricted(self, newIsUserAgentRestricted: bool) -> None: ...
    def getPreviewLength(self) -> int: ...
    def setPreviewLength(self, newPreviewLength: int) -> None: ...
    def getIsScheduledNow(self) -> bool: ...
    def setIsScheduledNow(self, newIsScheduledNow: bool) -> None: ...
    def getIsAdmin(self) -> bool: ...
    def setIsAdmin(self, newIsAdmin: bool) -> None: ...
    def getStreamerType(self) -> str: ...
    def setStreamerType(self, newStreamerType: str) -> None: ...
    def getMediaProtocol(self) -> str: ...
    def setMediaProtocol(self, newMediaProtocol: str) -> None: ...
    def getStorageProfilesXML(self) -> str: ...
    def setStorageProfilesXML(self, newStorageProfilesXML: str) -> None: ...
    def getAccessControlMessages(self) -> List[KalturaString]: ...
    def setAccessControlMessages(self, newAccessControlMessages: List[KalturaString]) -> None: ...
    def getAccessControlActions(self) -> List[KalturaRuleAction]: ...
    def setAccessControlActions(self, newAccessControlActions: List[KalturaRuleAction]) -> None: ...
    def getFlavorAssets(self) -> List[KalturaFlavorAsset]: ...
    def setFlavorAssets(self, newFlavorAssets: List[KalturaFlavorAsset]) -> None: ...
    def getMsDuration(self) -> int: ...
    def setMsDuration(self, newMsDuration: int) -> None: ...
    def getPluginData(self) -> map: ...
    def setPluginData(self, newPluginData: map) -> None: ...

class KalturaEntryCuePointSearchFilter(KalturaSearchItem):
    cuePointsFreeText: str
    cuePointTypeIn: str
    cuePointSubTypeEqual: int
    def __init__(self,
            cuePointsFreeText: str = NotImplemented,
            cuePointTypeIn: str = NotImplemented,
            cuePointSubTypeEqual: int = NotImplemented): ...

    def getCuePointsFreeText(self) -> str: ...
    def setCuePointsFreeText(self, newCuePointsFreeText: str) -> None: ...
    def getCuePointTypeIn(self) -> str: ...
    def setCuePointTypeIn(self, newCuePointTypeIn: str) -> None: ...
    def getCuePointSubTypeEqual(self) -> int: ...
    def setCuePointSubTypeEqual(self, newCuePointSubTypeEqual: int) -> None: ...

class KalturaEntryIdentifier(KalturaObjectIdentifier):
    identifier: KalturaEntryIdentifierField
    def __init__(self,
            extendedFeatures: str = NotImplemented,
            identifier: KalturaEntryIdentifierField = NotImplemented): ...

    def getIdentifier(self) -> KalturaEntryIdentifierField: ...
    def setIdentifier(self, newIdentifier: KalturaEntryIdentifierField) -> None: ...

class KalturaEntryLiveStats(KalturaLiveStats):
    entryId: str
    peakAudience: int
    peakDvrAudience: int
    def __init__(self,
            audience: int = NotImplemented,
            dvrAudience: int = NotImplemented,
            avgBitrate: float = NotImplemented,
            bufferTime: int = NotImplemented,
            plays: int = NotImplemented,
            secondsViewed: int = NotImplemented,
            startEvent: int = NotImplemented,
            timestamp: int = NotImplemented,
            entryId: str = NotImplemented,
            peakAudience: int = NotImplemented,
            peakDvrAudience: int = NotImplemented): ...

    def getEntryId(self) -> str: ...
    def setEntryId(self, newEntryId: str) -> None: ...
    def getPeakAudience(self) -> int: ...
    def setPeakAudience(self, newPeakAudience: int) -> None: ...
    def getPeakDvrAudience(self) -> int: ...
    def setPeakDvrAudience(self, newPeakDvrAudience: int) -> None: ...

class KalturaEntryScheduledCondition(KalturaCondition):
    def __init__(self,
            type: KalturaConditionType = NotImplemented,
            description: str = NotImplemented,
            not_: bool = NotImplemented): ...
        pass

class KalturaEntryServerNodeBaseFilter(KalturaFilter):
    entryIdEqual: str
    entryIdIn: str
    serverNodeIdEqual: int
    serverNodeIdIn: str
    serverNodeIdNotIn: str
    createdAtLessThanOrEqual: int
    createdAtGreaterThanOrEqual: int
    updatedAtGreaterThanOrEqual: int
    updatedAtLessThanOrEqual: int
    statusEqual: KalturaEntryServerNodeStatus
    statusIn: str
    serverTypeEqual: KalturaEntryServerNodeType
    serverTypeIn: str
    serverTypeNotIn: str
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            entryIdEqual: str = NotImplemented,
            entryIdIn: str = NotImplemented,
            serverNodeIdEqual: int = NotImplemented,
            serverNodeIdIn: str = NotImplemented,
            serverNodeIdNotIn: str = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            statusEqual: KalturaEntryServerNodeStatus = NotImplemented,
            statusIn: str = NotImplemented,
            serverTypeEqual: KalturaEntryServerNodeType = NotImplemented,
            serverTypeIn: str = NotImplemented,
            serverTypeNotIn: str = NotImplemented): ...

    def getEntryIdEqual(self) -> str: ...
    def setEntryIdEqual(self, newEntryIdEqual: str) -> None: ...
    def getEntryIdIn(self) -> str: ...
    def setEntryIdIn(self, newEntryIdIn: str) -> None: ...
    def getServerNodeIdEqual(self) -> int: ...
    def setServerNodeIdEqual(self, newServerNodeIdEqual: int) -> None: ...
    def getServerNodeIdIn(self) -> str: ...
    def setServerNodeIdIn(self, newServerNodeIdIn: str) -> None: ...
    def getServerNodeIdNotIn(self) -> str: ...
    def setServerNodeIdNotIn(self, newServerNodeIdNotIn: str) -> None: ...
    def getCreatedAtLessThanOrEqual(self) -> int: ...
    def setCreatedAtLessThanOrEqual(self, newCreatedAtLessThanOrEqual: int) -> None: ...
    def getCreatedAtGreaterThanOrEqual(self) -> int: ...
    def setCreatedAtGreaterThanOrEqual(self, newCreatedAtGreaterThanOrEqual: int) -> None: ...
    def getUpdatedAtGreaterThanOrEqual(self) -> int: ...
    def setUpdatedAtGreaterThanOrEqual(self, newUpdatedAtGreaterThanOrEqual: int) -> None: ...
    def getUpdatedAtLessThanOrEqual(self) -> int: ...
    def setUpdatedAtLessThanOrEqual(self, newUpdatedAtLessThanOrEqual: int) -> None: ...
    def getStatusEqual(self) -> KalturaEntryServerNodeStatus: ...
    def setStatusEqual(self, newStatusEqual: KalturaEntryServerNodeStatus) -> None: ...
    def getStatusIn(self) -> str: ...
    def setStatusIn(self, newStatusIn: str) -> None: ...
    def getServerTypeEqual(self) -> KalturaEntryServerNodeType: ...
    def setServerTypeEqual(self, newServerTypeEqual: KalturaEntryServerNodeType) -> None: ...
    def getServerTypeIn(self) -> str: ...
    def setServerTypeIn(self, newServerTypeIn: str) -> None: ...
    def getServerTypeNotIn(self) -> str: ...
    def setServerTypeNotIn(self, newServerTypeNotIn: str) -> None: ...

class KalturaEntryServerNodeListResponse(KalturaListResponse):
    objects: List[KalturaEntryServerNode]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaEntryServerNode] = NotImplemented): ...

    def getObjects(self) -> List[KalturaEntryServerNode]: ...

class KalturaBooleanField(KalturaBooleanValue):
    def __init__(self,
            description: str = NotImplemented,
            value: bool = NotImplemented): ...
        pass

class KalturaExportCsvJobData(KalturaJobData):
    userName: str
    userMail: str
    outputPath: str
    sharedOutputPath: str
    def __init__(self,
            userName: str = NotImplemented,
            userMail: str = NotImplemented,
            outputPath: str = NotImplemented,
            sharedOutputPath: str = NotImplemented): ...

    def getUserName(self) -> str: ...
    def setUserName(self, newUserName: str) -> None: ...
    def getUserMail(self) -> str: ...
    def setUserMail(self, newUserMail: str) -> None: ...
    def getOutputPath(self) -> str: ...
    def setOutputPath(self, newOutputPath: str) -> None: ...
    def getSharedOutputPath(self) -> str: ...
    def setSharedOutputPath(self, newSharedOutputPath: str) -> None: ...

class KalturaFeatureStatusListResponse(KalturaListResponse):
    objects: List[KalturaFeatureStatus]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaFeatureStatus] = NotImplemented): ...

    def getObjects(self) -> List[KalturaFeatureStatus]: ...

class KalturaFileAssetListResponse(KalturaListResponse):
    objects: List[KalturaFileAsset]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaFileAsset] = NotImplemented): ...

    def getObjects(self) -> List[KalturaFileAsset]: ...

class KalturaFlattenJobData(KalturaJobData):
    def __init__(self): ...
        pass

class KalturaFlavorAssetListResponse(KalturaListResponse):
    objects: List[KalturaFlavorAsset]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaFlavorAsset] = NotImplemented): ...

    def getObjects(self) -> List[KalturaFlavorAsset]: ...

class KalturaFlavorParamsListResponse(KalturaListResponse):
    objects: List[KalturaFlavorParams]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaFlavorParams] = NotImplemented): ...

    def getObjects(self) -> List[KalturaFlavorParams]: ...

class KalturaFlavorParamsOutputListResponse(KalturaListResponse):
    objects: List[KalturaFlavorParamsOutput]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaFlavorParamsOutput] = NotImplemented): ...

    def getObjects(self) -> List[KalturaFlavorParamsOutput]: ...

class KalturaGenericSyndicationFeed(KalturaBaseSyndicationFeed):
    feedDescription: str
    feedLandingPage: str
    entryFilter: KalturaBaseEntryFilter
    pageSize: int
    def __init__(self,
            id: str = NotImplemented,
            feedUrl: str = NotImplemented,
            partnerId: int = NotImplemented,
            playlistId: str = NotImplemented,
            name: str = NotImplemented,
            status: KalturaSyndicationFeedStatus = NotImplemented,
            type: KalturaSyndicationFeedType = NotImplemented,
            landingPage: str = NotImplemented,
            createdAt: int = NotImplemented,
            allowEmbed: bool = NotImplemented,
            playerUiconfId: int = NotImplemented,
            flavorParamId: int = NotImplemented,
            transcodeExistingContent: bool = NotImplemented,
            addToDefaultConversionProfile: bool = NotImplemented,
            categories: str = NotImplemented,
            storageId: int = NotImplemented,
            entriesOrderBy: KalturaSyndicationFeedEntriesOrderBy = NotImplemented,
            enforceEntitlement: bool = NotImplemented,
            privacyContext: str = NotImplemented,
            updatedAt: int = NotImplemented,
            useCategoryEntries: bool = NotImplemented,
            feedContentTypeHeader: str = NotImplemented,
            feedDescription: str = NotImplemented,
            feedLandingPage: str = NotImplemented,
            entryFilter: KalturaBaseEntryFilter = NotImplemented,
            pageSize: int = NotImplemented): ...

    def getFeedDescription(self) -> str: ...
    def setFeedDescription(self, newFeedDescription: str) -> None: ...
    def getFeedLandingPage(self) -> str: ...
    def setFeedLandingPage(self, newFeedLandingPage: str) -> None: ...
    def getEntryFilter(self) -> KalturaBaseEntryFilter: ...
    def setEntryFilter(self, newEntryFilter: KalturaBaseEntryFilter) -> None: ...
    def getPageSize(self) -> int: ...
    def setPageSize(self, newPageSize: int) -> None: ...

class KalturaGoogleVideoSyndicationFeed(KalturaBaseSyndicationFeed):
    adultContent: KalturaGoogleSyndicationFeedAdultValues
    def __init__(self,
            id: str = NotImplemented,
            feedUrl: str = NotImplemented,
            partnerId: int = NotImplemented,
            playlistId: str = NotImplemented,
            name: str = NotImplemented,
            status: KalturaSyndicationFeedStatus = NotImplemented,
            type: KalturaSyndicationFeedType = NotImplemented,
            landingPage: str = NotImplemented,
            createdAt: int = NotImplemented,
            allowEmbed: bool = NotImplemented,
            playerUiconfId: int = NotImplemented,
            flavorParamId: int = NotImplemented,
            transcodeExistingContent: bool = NotImplemented,
            addToDefaultConversionProfile: bool = NotImplemented,
            categories: str = NotImplemented,
            storageId: int = NotImplemented,
            entriesOrderBy: KalturaSyndicationFeedEntriesOrderBy = NotImplemented,
            enforceEntitlement: bool = NotImplemented,
            privacyContext: str = NotImplemented,
            updatedAt: int = NotImplemented,
            useCategoryEntries: bool = NotImplemented,
            feedContentTypeHeader: str = NotImplemented,
            adultContent: KalturaGoogleSyndicationFeedAdultValues = NotImplemented): ...

    def getAdultContent(self) -> KalturaGoogleSyndicationFeedAdultValues: ...
    def setAdultContent(self, newAdultContent: KalturaGoogleSyndicationFeedAdultValues) -> None: ...

class KalturaGroupUserListResponse(KalturaListResponse):
    objects: List[KalturaGroupUser]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaGroupUser] = NotImplemented): ...

    def getObjects(self) -> List[KalturaGroupUser]: ...

class KalturaHashCondition(KalturaCondition):
    hashName: str
    hashSecret: str
    def __init__(self,
            type: KalturaConditionType = NotImplemented,
            description: str = NotImplemented,
            not_: bool = NotImplemented,
            hashName: str = NotImplemented,
            hashSecret: str = NotImplemented): ...

    def getHashName(self) -> str: ...
    def setHashName(self, newHashName: str) -> None: ...
    def getHashSecret(self) -> str: ...
    def setHashSecret(self, newHashSecret: str) -> None: ...

class KalturaITunesSyndicationFeed(KalturaBaseSyndicationFeed):
    feedDescription: str
    language: str
    feedLandingPage: str
    ownerName: str
    ownerEmail: str
    feedImageUrl: str
    category: KalturaITunesSyndicationFeedCategories
    adultContent: KalturaITunesSyndicationFeedAdultValues
    feedAuthor: str
    enforceFeedAuthor: bool
    enforceOrder: KalturaNullableBoolean
    def __init__(self,
            id: str = NotImplemented,
            feedUrl: str = NotImplemented,
            partnerId: int = NotImplemented,
            playlistId: str = NotImplemented,
            name: str = NotImplemented,
            status: KalturaSyndicationFeedStatus = NotImplemented,
            type: KalturaSyndicationFeedType = NotImplemented,
            landingPage: str = NotImplemented,
            createdAt: int = NotImplemented,
            allowEmbed: bool = NotImplemented,
            playerUiconfId: int = NotImplemented,
            flavorParamId: int = NotImplemented,
            transcodeExistingContent: bool = NotImplemented,
            addToDefaultConversionProfile: bool = NotImplemented,
            categories: str = NotImplemented,
            storageId: int = NotImplemented,
            entriesOrderBy: KalturaSyndicationFeedEntriesOrderBy = NotImplemented,
            enforceEntitlement: bool = NotImplemented,
            privacyContext: str = NotImplemented,
            updatedAt: int = NotImplemented,
            useCategoryEntries: bool = NotImplemented,
            feedContentTypeHeader: str = NotImplemented,
            feedDescription: str = NotImplemented,
            language: str = NotImplemented,
            feedLandingPage: str = NotImplemented,
            ownerName: str = NotImplemented,
            ownerEmail: str = NotImplemented,
            feedImageUrl: str = NotImplemented,
            category: KalturaITunesSyndicationFeedCategories = NotImplemented,
            adultContent: KalturaITunesSyndicationFeedAdultValues = NotImplemented,
            feedAuthor: str = NotImplemented,
            enforceFeedAuthor: bool = NotImplemented,
            enforceOrder: KalturaNullableBoolean = NotImplemented): ...

    def getFeedDescription(self) -> str: ...
    def setFeedDescription(self, newFeedDescription: str) -> None: ...
    def getLanguage(self) -> str: ...
    def setLanguage(self, newLanguage: str) -> None: ...
    def getFeedLandingPage(self) -> str: ...
    def setFeedLandingPage(self, newFeedLandingPage: str) -> None: ...
    def getOwnerName(self) -> str: ...
    def setOwnerName(self, newOwnerName: str) -> None: ...
    def getOwnerEmail(self) -> str: ...
    def setOwnerEmail(self, newOwnerEmail: str) -> None: ...
    def getFeedImageUrl(self) -> str: ...
    def setFeedImageUrl(self, newFeedImageUrl: str) -> None: ...
    def getCategory(self) -> KalturaITunesSyndicationFeedCategories: ...
    def getAdultContent(self) -> KalturaITunesSyndicationFeedAdultValues: ...
    def setAdultContent(self, newAdultContent: KalturaITunesSyndicationFeedAdultValues) -> None: ...
    def getFeedAuthor(self) -> str: ...
    def setFeedAuthor(self, newFeedAuthor: str) -> None: ...
    def getEnforceFeedAuthor(self) -> bool: ...
    def setEnforceFeedAuthor(self, newEnforceFeedAuthor: bool) -> None: ...
    def getEnforceOrder(self) -> KalturaNullableBoolean: ...
    def setEnforceOrder(self, newEnforceOrder: KalturaNullableBoolean) -> None: ...

class KalturaImportJobData(KalturaJobData):
    srcFileUrl: str
    destFileLocalPath: str
    flavorAssetId: str
    fileSize: int
    destFileSharedPath: str
    urlHeaders: List[KalturaString]
    shouldRedirect: bool
    def __init__(self,
            srcFileUrl: str = NotImplemented,
            destFileLocalPath: str = NotImplemented,
            flavorAssetId: str = NotImplemented,
            fileSize: int = NotImplemented,
            destFileSharedPath: str = NotImplemented,
            urlHeaders: List[KalturaString] = NotImplemented,
            shouldRedirect: bool = NotImplemented): ...

    def getSrcFileUrl(self) -> str: ...
    def setSrcFileUrl(self, newSrcFileUrl: str) -> None: ...
    def getDestFileLocalPath(self) -> str: ...
    def setDestFileLocalPath(self, newDestFileLocalPath: str) -> None: ...
    def getFlavorAssetId(self) -> str: ...
    def setFlavorAssetId(self, newFlavorAssetId: str) -> None: ...
    def getFileSize(self) -> int: ...
    def setFileSize(self, newFileSize: int) -> None: ...
    def getDestFileSharedPath(self) -> str: ...
    def setDestFileSharedPath(self, newDestFileSharedPath: str) -> None: ...
    def getUrlHeaders(self) -> List[KalturaString]: ...
    def setUrlHeaders(self, newUrlHeaders: List[KalturaString]) -> None: ...
    def getShouldRedirect(self) -> bool: ...
    def setShouldRedirect(self, newShouldRedirect: bool) -> None: ...

class KalturaIndexAdvancedFilter(KalturaSearchItem):
    indexIdGreaterThan: int
    depthGreaterThanEqual: int
    def __init__(self,
            indexIdGreaterThan: int = NotImplemented,
            depthGreaterThanEqual: int = NotImplemented): ...

    def getIndexIdGreaterThan(self) -> int: ...
    def setIndexIdGreaterThan(self, newIndexIdGreaterThan: int) -> None: ...
    def getDepthGreaterThanEqual(self) -> int: ...
    def setDepthGreaterThanEqual(self, newDepthGreaterThanEqual: int) -> None: ...

class KalturaIndexJobData(KalturaJobData):
    filter: KalturaFilter
    lastIndexId: int
    lastIndexDepth: int
    shouldUpdate: bool
    def __init__(self,
            filter: KalturaFilter = NotImplemented,
            lastIndexId: int = NotImplemented,
            lastIndexDepth: int = NotImplemented,
            shouldUpdate: bool = NotImplemented): ...

    def getFilter(self) -> KalturaFilter: ...
    def setFilter(self, newFilter: KalturaFilter) -> None: ...
    def getLastIndexId(self) -> int: ...
    def setLastIndexId(self, newLastIndexId: int) -> None: ...
    def getLastIndexDepth(self) -> int: ...
    def setLastIndexDepth(self, newLastIndexDepth: int) -> None: ...
    def getShouldUpdate(self) -> bool: ...
    def setShouldUpdate(self, newShouldUpdate: bool) -> None: ...

class KalturaIpAddressRestriction(KalturaBaseRestriction):
    ipAddressRestrictionType: KalturaIpAddressRestrictionType
    ipAddressList: str
    def __init__(self,
            ipAddressRestrictionType: KalturaIpAddressRestrictionType = NotImplemented,
            ipAddressList: str = NotImplemented): ...

    def getIpAddressRestrictionType(self) -> KalturaIpAddressRestrictionType: ...
    def setIpAddressRestrictionType(self, newIpAddressRestrictionType: KalturaIpAddressRestrictionType) -> None: ...
    def getIpAddressList(self) -> str: ...
    def setIpAddressList(self, newIpAddressList: str) -> None: ...

class KalturaKeyValueExtended(KalturaKeyValue):
    predefinedFormat: KalturaNullableBoolean
    def __init__(self,
            key: str = NotImplemented,
            value: str = NotImplemented,
            predefinedFormat: KalturaNullableBoolean = NotImplemented): ...

    def getPredefinedFormat(self) -> KalturaNullableBoolean: ...
    def setPredefinedFormat(self, newPredefinedFormat: KalturaNullableBoolean) -> None: ...

class KalturaLimitFlavorsRestriction(KalturaBaseRestriction):
    limitFlavorsRestrictionType: KalturaLimitFlavorsRestrictionType
    flavorParamsIds: str
    def __init__(self,
            limitFlavorsRestrictionType: KalturaLimitFlavorsRestrictionType = NotImplemented,
            flavorParamsIds: str = NotImplemented): ...

    def getLimitFlavorsRestrictionType(self) -> KalturaLimitFlavorsRestrictionType: ...
    def setLimitFlavorsRestrictionType(self, newLimitFlavorsRestrictionType: KalturaLimitFlavorsRestrictionType) -> None: ...
    def getFlavorParamsIds(self) -> str: ...
    def setFlavorParamsIds(self, newFlavorParamsIds: str) -> None: ...

class KalturaLiveChannelListResponse(KalturaListResponse):
    objects: List[KalturaLiveChannel]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaLiveChannel] = NotImplemented): ...

    def getObjects(self) -> List[KalturaLiveChannel]: ...

class KalturaLiveChannelSegmentListResponse(KalturaListResponse):
    objects: List[KalturaLiveChannelSegment]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaLiveChannelSegment] = NotImplemented): ...

    def getObjects(self) -> List[KalturaLiveChannelSegment]: ...

class KalturaLiveEntryArchiveJobData(KalturaJobData):
    liveEntryId: str
    vodEntryId: str
    def __init__(self,
            liveEntryId: str = NotImplemented,
            vodEntryId: str = NotImplemented): ...

    def getLiveEntryId(self) -> str: ...
    def setLiveEntryId(self, newLiveEntryId: str) -> None: ...
    def getVodEntryId(self) -> str: ...
    def setVodEntryId(self, newVodEntryId: str) -> None: ...

class KalturaLiveEntryServerNode(KalturaEntryServerNode):
    streams: List[KalturaLiveStreamParams]
    recordingInfo: List[KalturaLiveEntryServerNodeRecordingInfo]
    isPlayableUser: bool
    viewMode: KalturaViewMode
    featuresUpdatedAt: int
    viewModeUpdatedAt: int
    def __init__(self,
            id: int = NotImplemented,
            entryId: str = NotImplemented,
            serverNodeId: int = NotImplemented,
            partnerId: int = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            status: KalturaEntryServerNodeStatus = NotImplemented,
            serverType: KalturaEntryServerNodeType = NotImplemented,
            streams: List[KalturaLiveStreamParams] = NotImplemented,
            recordingInfo: List[KalturaLiveEntryServerNodeRecordingInfo] = NotImplemented,
            isPlayableUser: bool = NotImplemented,
            viewMode: KalturaViewMode = NotImplemented,
            featuresUpdatedAt: int = NotImplemented,
            viewModeUpdatedAt: int = NotImplemented): ...

    def getStreams(self) -> List[KalturaLiveStreamParams]: ...
    def setStreams(self, newStreams: List[KalturaLiveStreamParams]) -> None: ...
    def getRecordingInfo(self) -> List[KalturaLiveEntryServerNodeRecordingInfo]: ...
    def setRecordingInfo(self, newRecordingInfo: List[KalturaLiveEntryServerNodeRecordingInfo]) -> None: ...
    def getIsPlayableUser(self) -> bool: ...
    def setIsPlayableUser(self, newIsPlayableUser: bool) -> None: ...
    def getViewMode(self) -> KalturaViewMode: ...
    def setViewMode(self, newViewMode: KalturaViewMode) -> None: ...
    def getFeaturesUpdatedAt(self) -> int: ...
    def setFeaturesUpdatedAt(self, newFeaturesUpdatedAt: int) -> None: ...
    def getViewModeUpdatedAt(self) -> int: ...
    def setViewModeUpdatedAt(self, newViewModeUpdatedAt: int) -> None: ...

class KalturaLiveReportExportJobData(KalturaJobData):
    timeReference: int
    timeZoneOffset: int
    entryIds: str
    outputPath: str
    recipientEmail: str
    def __init__(self,
            timeReference: int = NotImplemented,
            timeZoneOffset: int = NotImplemented,
            entryIds: str = NotImplemented,
            outputPath: str = NotImplemented,
            recipientEmail: str = NotImplemented): ...

    def getTimeReference(self) -> int: ...
    def setTimeReference(self, newTimeReference: int) -> None: ...
    def getTimeZoneOffset(self) -> int: ...
    def setTimeZoneOffset(self, newTimeZoneOffset: int) -> None: ...
    def getEntryIds(self) -> str: ...
    def setEntryIds(self, newEntryIds: str) -> None: ...
    def getOutputPath(self) -> str: ...
    def setOutputPath(self, newOutputPath: str) -> None: ...
    def getRecipientEmail(self) -> str: ...
    def setRecipientEmail(self, newRecipientEmail: str) -> None: ...

class KalturaLiveStatsListResponse(KalturaListResponse):
    objects: KalturaLiveStats
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: KalturaLiveStats = NotImplemented): ...

    def getObjects(self) -> KalturaLiveStats: ...
    def setObjects(self, newObjects: KalturaLiveStats) -> None: ...

class KalturaLiveStreamListResponse(KalturaListResponse):
    objects: List[KalturaLiveStreamEntry]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaLiveStreamEntry] = NotImplemented): ...

    def getObjects(self) -> List[KalturaLiveStreamEntry]: ...

class KalturaLiveStreamPushPublishRTMPConfiguration(KalturaLiveStreamPushPublishConfiguration):
    userId: str
    password: str
    streamName: str
    applicationName: str
    def __init__(self,
            publishUrl: str = NotImplemented,
            backupPublishUrl: str = NotImplemented,
            port: str = NotImplemented,
            userId: str = NotImplemented,
            password: str = NotImplemented,
            streamName: str = NotImplemented,
            applicationName: str = NotImplemented): ...

    def getUserId(self) -> str: ...
    def setUserId(self, newUserId: str) -> None: ...
    def getPassword(self) -> str: ...
    def setPassword(self, newPassword: str) -> None: ...
    def getStreamName(self) -> str: ...
    def setStreamName(self, newStreamName: str) -> None: ...
    def getApplicationName(self) -> str: ...
    def setApplicationName(self, newApplicationName: str) -> None: ...

class KalturaLiveToVodJobData(KalturaJobData):
    vodEntryId: str
    liveEntryId: str
    totalVodDuration: float
    lastSegmentDuration: float
    amfArray: str
    lastCuePointSyncTime: int
    lastSegmentDrift: int
    def __init__(self,
            vodEntryId: str = NotImplemented,
            liveEntryId: str = NotImplemented,
            totalVodDuration: float = NotImplemented,
            lastSegmentDuration: float = NotImplemented,
            amfArray: str = NotImplemented,
            lastCuePointSyncTime: int = NotImplemented,
            lastSegmentDrift: int = NotImplemented): ...

    def getVodEntryId(self) -> str: ...
    def setVodEntryId(self, newVodEntryId: str) -> None: ...
    def getLiveEntryId(self) -> str: ...
    def setLiveEntryId(self, newLiveEntryId: str) -> None: ...
    def getTotalVodDuration(self) -> float: ...
    def setTotalVodDuration(self, newTotalVodDuration: float) -> None: ...
    def getLastSegmentDuration(self) -> float: ...
    def setLastSegmentDuration(self, newLastSegmentDuration: float) -> None: ...
    def getAmfArray(self) -> str: ...
    def setAmfArray(self, newAmfArray: str) -> None: ...
    def getLastCuePointSyncTime(self) -> int: ...
    def setLastCuePointSyncTime(self, newLastCuePointSyncTime: int) -> None: ...
    def getLastSegmentDrift(self) -> int: ...
    def setLastSegmentDrift(self, newLastSegmentDrift: int) -> None: ...

class KalturaMailJobData(KalturaJobData):
    mailType: KalturaMailType
    mailPriority: int
    status: KalturaMailJobStatus
    recipientName: str
    recipientEmail: str
    recipientId: int
    fromName: str
    fromEmail: str
    bodyParams: str
    subjectParams: str
    dynamicEmailContents: KalturaDynamicEmailContents
    templatePath: str
    language: KalturaLanguageCode
    campaignId: int
    minSendDate: int
    isHtml: bool
    separator: str
    def __init__(self,
            mailType: KalturaMailType = NotImplemented,
            mailPriority: int = NotImplemented,
            status: KalturaMailJobStatus = NotImplemented,
            recipientName: str = NotImplemented,
            recipientEmail: str = NotImplemented,
            recipientId: int = NotImplemented,
            fromName: str = NotImplemented,
            fromEmail: str = NotImplemented,
            bodyParams: str = NotImplemented,
            subjectParams: str = NotImplemented,
            dynamicEmailContents: KalturaDynamicEmailContents = NotImplemented,
            templatePath: str = NotImplemented,
            language: KalturaLanguageCode = NotImplemented,
            campaignId: int = NotImplemented,
            minSendDate: int = NotImplemented,
            isHtml: bool = NotImplemented,
            separator: str = NotImplemented): ...

    def getMailType(self) -> KalturaMailType: ...
    def setMailType(self, newMailType: KalturaMailType) -> None: ...
    def getMailPriority(self) -> int: ...
    def setMailPriority(self, newMailPriority: int) -> None: ...
    def getStatus(self) -> KalturaMailJobStatus: ...
    def setStatus(self, newStatus: KalturaMailJobStatus) -> None: ...
    def getRecipientName(self) -> str: ...
    def setRecipientName(self, newRecipientName: str) -> None: ...
    def getRecipientEmail(self) -> str: ...
    def setRecipientEmail(self, newRecipientEmail: str) -> None: ...
    def getRecipientId(self) -> int: ...
    def setRecipientId(self, newRecipientId: int) -> None: ...
    def getFromName(self) -> str: ...
    def setFromName(self, newFromName: str) -> None: ...
    def getFromEmail(self) -> str: ...
    def setFromEmail(self, newFromEmail: str) -> None: ...
    def getBodyParams(self) -> str: ...
    def setBodyParams(self, newBodyParams: str) -> None: ...
    def getSubjectParams(self) -> str: ...
    def setSubjectParams(self, newSubjectParams: str) -> None: ...
    def getDynamicEmailContents(self) -> KalturaDynamicEmailContents: ...
    def setDynamicEmailContents(self, newDynamicEmailContents: KalturaDynamicEmailContents) -> None: ...
    def getTemplatePath(self) -> str: ...
    def setTemplatePath(self, newTemplatePath: str) -> None: ...
    def getLanguage(self) -> KalturaLanguageCode: ...
    def setLanguage(self, newLanguage: KalturaLanguageCode) -> None: ...
    def getCampaignId(self) -> int: ...
    def setCampaignId(self, newCampaignId: int) -> None: ...
    def getMinSendDate(self) -> int: ...
    def setMinSendDate(self, newMinSendDate: int) -> None: ...
    def getIsHtml(self) -> bool: ...
    def setIsHtml(self, newIsHtml: bool) -> None: ...
    def getSeparator(self) -> str: ...
    def setSeparator(self, newSeparator: str) -> None: ...

class KalturaMatchCondition(KalturaCondition):
    values: List[KalturaStringValue]
    matchType: KalturaMatchConditionType
    def __init__(self,
            type: KalturaConditionType = NotImplemented,
            description: str = NotImplemented,
            not_: bool = NotImplemented,
            values: List[KalturaStringValue] = NotImplemented,
            matchType: KalturaMatchConditionType = NotImplemented): ...

    def getValues(self) -> List[KalturaStringValue]: ...
    def setValues(self, newValues: List[KalturaStringValue]) -> None: ...
    def getMatchType(self) -> KalturaMatchConditionType: ...
    def setMatchType(self, newMatchType: KalturaMatchConditionType) -> None: ...

class KalturaMediaInfoBaseFilter(KalturaFilter):
    flavorAssetIdEqual: str
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            flavorAssetIdEqual: str = NotImplemented): ...

    def getFlavorAssetIdEqual(self) -> str: ...
    def setFlavorAssetIdEqual(self, newFlavorAssetIdEqual: str) -> None: ...

class KalturaMediaInfoListResponse(KalturaListResponse):
    objects: List[KalturaMediaInfo]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaMediaInfo] = NotImplemented): ...

    def getObjects(self) -> List[KalturaMediaInfo]: ...

class KalturaMediaListResponse(KalturaListResponse):
    objects: List[KalturaMediaEntry]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaMediaEntry] = NotImplemented): ...

    def getObjects(self) -> List[KalturaMediaEntry]: ...

class KalturaMixListResponse(KalturaListResponse):
    objects: List[KalturaMixEntry]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaMixEntry] = NotImplemented): ...

    def getObjects(self) -> List[KalturaMixEntry]: ...

class KalturaModerationFlagListResponse(KalturaListResponse):
    objects: List[KalturaModerationFlag]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaModerationFlag] = NotImplemented): ...

    def getObjects(self) -> List[KalturaModerationFlag]: ...

class KalturaMoveCategoryEntriesJobData(KalturaJobData):
    srcCategoryId: int
    destCategoryId: int
    lastMovedCategoryId: int
    lastMovedCategoryPageIndex: int
    lastMovedCategoryEntryPageIndex: int
    moveFromChildren: bool
    destCategoryFullIds: str
    def __init__(self,
            srcCategoryId: int = NotImplemented,
            destCategoryId: int = NotImplemented,
            lastMovedCategoryId: int = NotImplemented,
            lastMovedCategoryPageIndex: int = NotImplemented,
            lastMovedCategoryEntryPageIndex: int = NotImplemented,
            moveFromChildren: bool = NotImplemented,
            destCategoryFullIds: str = NotImplemented): ...

    def getSrcCategoryId(self) -> int: ...
    def setSrcCategoryId(self, newSrcCategoryId: int) -> None: ...
    def getDestCategoryId(self) -> int: ...
    def setDestCategoryId(self, newDestCategoryId: int) -> None: ...
    def getLastMovedCategoryId(self) -> int: ...
    def setLastMovedCategoryId(self, newLastMovedCategoryId: int) -> None: ...
    def getLastMovedCategoryPageIndex(self) -> int: ...
    def setLastMovedCategoryPageIndex(self, newLastMovedCategoryPageIndex: int) -> None: ...
    def getLastMovedCategoryEntryPageIndex(self) -> int: ...
    def setLastMovedCategoryEntryPageIndex(self, newLastMovedCategoryEntryPageIndex: int) -> None: ...
    def getMoveFromChildren(self) -> bool: ...
    def setMoveFromChildren(self, newMoveFromChildren: bool) -> None: ...
    def getDestCategoryFullIds(self) -> str: ...
    def setDestCategoryFullIds(self, newDestCategoryFullIds: str) -> None: ...

class KalturaMultiClipConcatJobData(KalturaJobData):
    destEntryId: str
    multiTempEntryId: str
    partnerId: int
    priority: int
    chapterNamePolicy: KalturaChapterNamePolicy
    aspectRatio: KalturaCropAspectRatio
    operationResources: List[KalturaOperationResource]
    def __init__(self,
            destEntryId: str = NotImplemented,
            multiTempEntryId: str = NotImplemented,
            partnerId: int = NotImplemented,
            priority: int = NotImplemented,
            chapterNamePolicy: KalturaChapterNamePolicy = NotImplemented,
            aspectRatio: KalturaCropAspectRatio = NotImplemented,
            operationResources: List[KalturaOperationResource] = NotImplemented): ...

    def getDestEntryId(self) -> str: ...
    def setDestEntryId(self, newDestEntryId: str) -> None: ...
    def getMultiTempEntryId(self) -> str: ...
    def setMultiTempEntryId(self, newMultiTempEntryId: str) -> None: ...
    def getPartnerId(self) -> int: ...
    def setPartnerId(self, newPartnerId: int) -> None: ...
    def getPriority(self) -> int: ...
    def setPriority(self, newPriority: int) -> None: ...
    def getChapterNamePolicy(self) -> KalturaChapterNamePolicy: ...
    def setChapterNamePolicy(self, newChapterNamePolicy: KalturaChapterNamePolicy) -> None: ...
    def getAspectRatio(self) -> KalturaCropAspectRatio: ...
    def setAspectRatio(self, newAspectRatio: KalturaCropAspectRatio) -> None: ...
    def getOperationResources(self) -> List[KalturaOperationResource]: ...
    def setOperationResources(self, newOperationResources: List[KalturaOperationResource]) -> None: ...

class KalturaNotificationJobData(KalturaJobData):
    userId: str
    type: KalturaNotificationType
    typeAsString: str
    objectId: str
    status: KalturaNotificationStatus
    data: str
    numberOfAttempts: int
    notificationResult: str
    objType: KalturaNotificationObjectType
    def __init__(self,
            userId: str = NotImplemented,
            type: KalturaNotificationType = NotImplemented,
            typeAsString: str = NotImplemented,
            objectId: str = NotImplemented,
            status: KalturaNotificationStatus = NotImplemented,
            data: str = NotImplemented,
            numberOfAttempts: int = NotImplemented,
            notificationResult: str = NotImplemented,
            objType: KalturaNotificationObjectType = NotImplemented): ...

    def getUserId(self) -> str: ...
    def setUserId(self, newUserId: str) -> None: ...
    def getType(self) -> KalturaNotificationType: ...
    def setType(self, newType: KalturaNotificationType) -> None: ...
    def getTypeAsString(self) -> str: ...
    def setTypeAsString(self, newTypeAsString: str) -> None: ...
    def getObjectId(self) -> str: ...
    def setObjectId(self, newObjectId: str) -> None: ...
    def getStatus(self) -> KalturaNotificationStatus: ...
    def setStatus(self, newStatus: KalturaNotificationStatus) -> None: ...
    def getData(self) -> str: ...
    def setData(self, newData: str) -> None: ...
    def getNumberOfAttempts(self) -> int: ...
    def setNumberOfAttempts(self, newNumberOfAttempts: int) -> None: ...
    def getNotificationResult(self) -> str: ...
    def setNotificationResult(self, newNotificationResult: str) -> None: ...
    def getObjType(self) -> KalturaNotificationObjectType: ...
    def setObjType(self, newObjType: KalturaNotificationObjectType) -> None: ...

class KalturaObjectListResponse(KalturaListResponse):
    objects: List[KalturaObject]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaObject] = NotImplemented): ...

    def getObjects(self) -> List[KalturaObject]: ...

class KalturaOrCondition(KalturaCondition):
    conditions: List[KalturaCondition]
    def __init__(self,
            type: KalturaConditionType = NotImplemented,
            description: str = NotImplemented,
            not_: bool = NotImplemented,
            conditions: List[KalturaCondition] = NotImplemented): ...

    def getConditions(self) -> List[KalturaCondition]: ...
    def setConditions(self, newConditions: List[KalturaCondition]) -> None: ...

class KalturaPartnerBaseFilter(KalturaFilter):
    idEqual: int
    idIn: str
    idNotIn: str
    nameLike: str
    nameMultiLikeOr: str
    nameMultiLikeAnd: str
    nameEqual: str
    statusEqual: KalturaPartnerStatus
    statusIn: str
    partnerPackageEqual: int
    partnerPackageGreaterThanOrEqual: int
    partnerPackageLessThanOrEqual: int
    partnerPackageIn: str
    partnerGroupTypeEqual: KalturaPartnerGroupType
    partnerNameDescriptionWebsiteAdminNameAdminEmailLike: str
    createdAtGreaterThanOrEqual: int
    idGreaterThan: int
    monitorUsageEqual: int
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            idNotIn: str = NotImplemented,
            nameLike: str = NotImplemented,
            nameMultiLikeOr: str = NotImplemented,
            nameMultiLikeAnd: str = NotImplemented,
            nameEqual: str = NotImplemented,
            statusEqual: KalturaPartnerStatus = NotImplemented,
            statusIn: str = NotImplemented,
            partnerPackageEqual: int = NotImplemented,
            partnerPackageGreaterThanOrEqual: int = NotImplemented,
            partnerPackageLessThanOrEqual: int = NotImplemented,
            partnerPackageIn: str = NotImplemented,
            partnerGroupTypeEqual: KalturaPartnerGroupType = NotImplemented,
            partnerNameDescriptionWebsiteAdminNameAdminEmailLike: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            idGreaterThan: int = NotImplemented,
            monitorUsageEqual: int = NotImplemented): ...

    def getIdEqual(self) -> int: ...
    def setIdEqual(self, newIdEqual: int) -> None: ...
    def getIdIn(self) -> str: ...
    def setIdIn(self, newIdIn: str) -> None: ...
    def getIdNotIn(self) -> str: ...
    def setIdNotIn(self, newIdNotIn: str) -> None: ...
    def getNameLike(self) -> str: ...
    def setNameLike(self, newNameLike: str) -> None: ...
    def getNameMultiLikeOr(self) -> str: ...
    def setNameMultiLikeOr(self, newNameMultiLikeOr: str) -> None: ...
    def getNameMultiLikeAnd(self) -> str: ...
    def setNameMultiLikeAnd(self, newNameMultiLikeAnd: str) -> None: ...
    def getNameEqual(self) -> str: ...
    def setNameEqual(self, newNameEqual: str) -> None: ...
    def getStatusEqual(self) -> KalturaPartnerStatus: ...
    def setStatusEqual(self, newStatusEqual: KalturaPartnerStatus) -> None: ...
    def getStatusIn(self) -> str: ...
    def setStatusIn(self, newStatusIn: str) -> None: ...
    def getPartnerPackageEqual(self) -> int: ...
    def setPartnerPackageEqual(self, newPartnerPackageEqual: int) -> None: ...
    def getPartnerPackageGreaterThanOrEqual(self) -> int: ...
    def setPartnerPackageGreaterThanOrEqual(self, newPartnerPackageGreaterThanOrEqual: int) -> None: ...
    def getPartnerPackageLessThanOrEqual(self) -> int: ...
    def setPartnerPackageLessThanOrEqual(self, newPartnerPackageLessThanOrEqual: int) -> None: ...
    def getPartnerPackageIn(self) -> str: ...
    def setPartnerPackageIn(self, newPartnerPackageIn: str) -> None: ...
    def getPartnerGroupTypeEqual(self) -> KalturaPartnerGroupType: ...
    def setPartnerGroupTypeEqual(self, newPartnerGroupTypeEqual: KalturaPartnerGroupType) -> None: ...
    def getPartnerNameDescriptionWebsiteAdminNameAdminEmailLike(self) -> str: ...
    def setPartnerNameDescriptionWebsiteAdminNameAdminEmailLike(self, newPartnerNameDescriptionWebsiteAdminNameAdminEmailLike: str) -> None: ...
    def getCreatedAtGreaterThanOrEqual(self) -> int: ...
    def setCreatedAtGreaterThanOrEqual(self, newCreatedAtGreaterThanOrEqual: int) -> None: ...
    def getIdGreaterThan(self) -> int: ...
    def setIdGreaterThan(self, newIdGreaterThan: int) -> None: ...
    def getMonitorUsageEqual(self) -> int: ...
    def setMonitorUsageEqual(self, newMonitorUsageEqual: int) -> None: ...

class KalturaPartnerListResponse(KalturaListResponse):
    objects: List[KalturaPartner]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaPartner] = NotImplemented): ...

    def getObjects(self) -> List[KalturaPartner]: ...

class KalturaPermissionItemListResponse(KalturaListResponse):
    objects: List[KalturaPermissionItem]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaPermissionItem] = NotImplemented): ...

    def getObjects(self) -> List[KalturaPermissionItem]: ...

class KalturaPermissionListResponse(KalturaListResponse):
    objects: List[KalturaPermission]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaPermission] = NotImplemented): ...

    def getObjects(self) -> List[KalturaPermission]: ...

class KalturaPlaylistListResponse(KalturaListResponse):
    objects: List[KalturaPlaylist]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaPlaylist] = NotImplemented): ...

    def getObjects(self) -> List[KalturaPlaylist]: ...

class KalturaProvisionJobData(KalturaJobData):
    streamID: str
    backupStreamID: str
    rtmp: str
    encoderIP: str
    backupEncoderIP: str
    encoderPassword: str
    encoderUsername: str
    endDate: int
    returnVal: str
    mediaType: int
    primaryBroadcastingUrl: str
    secondaryBroadcastingUrl: str
    streamName: str
    def __init__(self,
            streamID: str = NotImplemented,
            backupStreamID: str = NotImplemented,
            rtmp: str = NotImplemented,
            encoderIP: str = NotImplemented,
            backupEncoderIP: str = NotImplemented,
            encoderPassword: str = NotImplemented,
            encoderUsername: str = NotImplemented,
            endDate: int = NotImplemented,
            returnVal: str = NotImplemented,
            mediaType: int = NotImplemented,
            primaryBroadcastingUrl: str = NotImplemented,
            secondaryBroadcastingUrl: str = NotImplemented,
            streamName: str = NotImplemented): ...

    def getStreamID(self) -> str: ...
    def setStreamID(self, newStreamID: str) -> None: ...
    def getBackupStreamID(self) -> str: ...
    def setBackupStreamID(self, newBackupStreamID: str) -> None: ...
    def getRtmp(self) -> str: ...
    def setRtmp(self, newRtmp: str) -> None: ...
    def getEncoderIP(self) -> str: ...
    def setEncoderIP(self, newEncoderIP: str) -> None: ...
    def getBackupEncoderIP(self) -> str: ...
    def setBackupEncoderIP(self, newBackupEncoderIP: str) -> None: ...
    def getEncoderPassword(self) -> str: ...
    def setEncoderPassword(self, newEncoderPassword: str) -> None: ...
    def getEncoderUsername(self) -> str: ...
    def setEncoderUsername(self, newEncoderUsername: str) -> None: ...
    def getEndDate(self) -> int: ...
    def setEndDate(self, newEndDate: int) -> None: ...
    def getReturnVal(self) -> str: ...
    def setReturnVal(self, newReturnVal: str) -> None: ...
    def getMediaType(self) -> int: ...
    def setMediaType(self, newMediaType: int) -> None: ...
    def getPrimaryBroadcastingUrl(self) -> str: ...
    def setPrimaryBroadcastingUrl(self, newPrimaryBroadcastingUrl: str) -> None: ...
    def getSecondaryBroadcastingUrl(self) -> str: ...
    def setSecondaryBroadcastingUrl(self, newSecondaryBroadcastingUrl: str) -> None: ...
    def getStreamName(self) -> str: ...
    def setStreamName(self, newStreamName: str) -> None: ...

class KalturaQuizUserEntry(KalturaUserEntry):
    score: float
    calculatedScore: float
    feedback: str
    version: int
    def __init__(self,
            id: int = NotImplemented,
            entryId: str = NotImplemented,
            userId: str = NotImplemented,
            partnerId: int = NotImplemented,
            status: KalturaUserEntryStatus = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            type: KalturaUserEntryType = NotImplemented,
            score: float = NotImplemented,
            calculatedScore: float = NotImplemented,
            feedback: str = NotImplemented,
            version: int = NotImplemented): ...

    def getScore(self) -> float: ...
    def getCalculatedScore(self) -> float: ...
    def getFeedback(self) -> str: ...
    def setFeedback(self, newFeedback: str) -> None: ...
    def getVersion(self) -> int: ...

class KalturaRecalculateCacheJobData(KalturaJobData):
    def __init__(self): ...
        pass

class KalturaRemotePathListResponse(KalturaListResponse):
    objects: List[KalturaRemotePath]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaRemotePath] = NotImplemented): ...

    def getObjects(self) -> List[KalturaRemotePath]: ...

class KalturaRenderCaptionAttributes(KalturaCaptionAttributes):
    fontName: str
    fontSize: int
    primaryColour: str
    borderStyle: KalturaBorderStyle
    backColour: str
    outlineColour: str
    shadow: int
    bold: bool
    italic: bool
    underline: bool
    alignment: KalturaCaptionsAlignment
    captionAssetId: str
    def __init__(self,
            fontName: str = NotImplemented,
            fontSize: int = NotImplemented,
            primaryColour: str = NotImplemented,
            borderStyle: KalturaBorderStyle = NotImplemented,
            backColour: str = NotImplemented,
            outlineColour: str = NotImplemented,
            shadow: int = NotImplemented,
            bold: bool = NotImplemented,
            italic: bool = NotImplemented,
            underline: bool = NotImplemented,
            alignment: KalturaCaptionsAlignment = NotImplemented,
            captionAssetId: str = NotImplemented): ...

    def getFontName(self) -> str: ...
    def setFontName(self, newFontName: str) -> None: ...
    def getFontSize(self) -> int: ...
    def setFontSize(self, newFontSize: int) -> None: ...
    def getPrimaryColour(self) -> str: ...
    def setPrimaryColour(self, newPrimaryColour: str) -> None: ...
    def getBorderStyle(self) -> KalturaBorderStyle: ...
    def setBorderStyle(self, newBorderStyle: KalturaBorderStyle) -> None: ...
    def getBackColour(self) -> str: ...
    def setBackColour(self, newBackColour: str) -> None: ...
    def getOutlineColour(self) -> str: ...
    def setOutlineColour(self, newOutlineColour: str) -> None: ...
    def getShadow(self) -> int: ...
    def setShadow(self, newShadow: int) -> None: ...
    def getBold(self) -> bool: ...
    def setBold(self, newBold: bool) -> None: ...
    def getItalic(self) -> bool: ...
    def setItalic(self, newItalic: bool) -> None: ...
    def getUnderline(self) -> bool: ...
    def setUnderline(self, newUnderline: bool) -> None: ...
    def getAlignment(self) -> KalturaCaptionsAlignment: ...
    def setAlignment(self, newAlignment: KalturaCaptionsAlignment) -> None: ...
    def getCaptionAssetId(self) -> str: ...
    def setCaptionAssetId(self, newCaptionAssetId: str) -> None: ...

class KalturaReportExportJobData(KalturaJobData):
    recipientEmail: str
    reportItems: List[KalturaReportExportItem]
    filePaths: str
    reportsGroup: str
    files: List[KalturaReportExportFile]
    baseUrl: str
    def __init__(self,
            recipientEmail: str = NotImplemented,
            reportItems: List[KalturaReportExportItem] = NotImplemented,
            filePaths: str = NotImplemented,
            reportsGroup: str = NotImplemented,
            files: List[KalturaReportExportFile] = NotImplemented,
            baseUrl: str = NotImplemented): ...

    def getRecipientEmail(self) -> str: ...
    def setRecipientEmail(self, newRecipientEmail: str) -> None: ...
    def getReportItems(self) -> List[KalturaReportExportItem]: ...
    def setReportItems(self, newReportItems: List[KalturaReportExportItem]) -> None: ...
    def getFilePaths(self) -> str: ...
    def setFilePaths(self, newFilePaths: str) -> None: ...
    def getReportsGroup(self) -> str: ...
    def setReportsGroup(self, newReportsGroup: str) -> None: ...
    def getFiles(self) -> List[KalturaReportExportFile]: ...
    def setFiles(self, newFiles: List[KalturaReportExportFile]) -> None: ...
    def getBaseUrl(self) -> str: ...
    def setBaseUrl(self, newBaseUrl: str) -> None: ...

class KalturaReportListResponse(KalturaListResponse):
    objects: List[KalturaReport]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaReport] = NotImplemented): ...

    def getObjects(self) -> List[KalturaReport]: ...

class KalturaResponseProfileBaseFilter(KalturaFilter):
    idEqual: int
    idIn: str
    systemNameEqual: str
    systemNameIn: str
    createdAtGreaterThanOrEqual: int
    createdAtLessThanOrEqual: int
    updatedAtGreaterThanOrEqual: int
    updatedAtLessThanOrEqual: int
    statusEqual: KalturaResponseProfileStatus
    statusIn: str
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            systemNameEqual: str = NotImplemented,
            systemNameIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            statusEqual: KalturaResponseProfileStatus = NotImplemented,
            statusIn: str = NotImplemented): ...

    def getIdEqual(self) -> int: ...
    def setIdEqual(self, newIdEqual: int) -> None: ...
    def getIdIn(self) -> str: ...
    def setIdIn(self, newIdIn: str) -> None: ...
    def getSystemNameEqual(self) -> str: ...
    def setSystemNameEqual(self, newSystemNameEqual: str) -> None: ...
    def getSystemNameIn(self) -> str: ...
    def setSystemNameIn(self, newSystemNameIn: str) -> None: ...
    def getCreatedAtGreaterThanOrEqual(self) -> int: ...
    def setCreatedAtGreaterThanOrEqual(self, newCreatedAtGreaterThanOrEqual: int) -> None: ...
    def getCreatedAtLessThanOrEqual(self) -> int: ...
    def setCreatedAtLessThanOrEqual(self, newCreatedAtLessThanOrEqual: int) -> None: ...
    def getUpdatedAtGreaterThanOrEqual(self) -> int: ...
    def setUpdatedAtGreaterThanOrEqual(self, newUpdatedAtGreaterThanOrEqual: int) -> None: ...
    def getUpdatedAtLessThanOrEqual(self) -> int: ...
    def setUpdatedAtLessThanOrEqual(self, newUpdatedAtLessThanOrEqual: int) -> None: ...
    def getStatusEqual(self) -> KalturaResponseProfileStatus: ...
    def setStatusEqual(self, newStatusEqual: KalturaResponseProfileStatus) -> None: ...
    def getStatusIn(self) -> str: ...
    def setStatusIn(self, newStatusIn: str) -> None: ...

class KalturaResponseProfileHolder(KalturaBaseResponseProfile):
    id: int
    systemName: str
    def __init__(self,
            id: int = NotImplemented,
            systemName: str = NotImplemented): ...

    def getId(self) -> int: ...
    def setId(self, newId: int) -> None: ...
    def getSystemName(self) -> str: ...
    def setSystemName(self, newSystemName: str) -> None: ...

class KalturaResponseProfileListResponse(KalturaListResponse):
    objects: List[KalturaResponseProfile]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaResponseProfile] = NotImplemented): ...

    def getObjects(self) -> List[KalturaResponseProfile]: ...

class KalturaSchedulerListResponse(KalturaListResponse):
    objects: List[KalturaScheduler]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaScheduler] = NotImplemented): ...

    def getObjects(self) -> List[KalturaScheduler]: ...

class KalturaSchedulerWorkerListResponse(KalturaListResponse):
    objects: List[KalturaSchedulerWorker]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaSchedulerWorker] = NotImplemented): ...

    def getObjects(self) -> List[KalturaSchedulerWorker]: ...

class KalturaSearchCondition(KalturaSearchItem):
    field: str
    value: str
    def __init__(self,
            field: str = NotImplemented,
            value: str = NotImplemented): ...

    def getField(self) -> str: ...
    def setField(self, newField: str) -> None: ...
    def getValue(self) -> str: ...
    def setValue(self, newValue: str) -> None: ...

class KalturaSearchOperator(KalturaSearchItem):
    type: KalturaSearchOperatorType
    items: List[KalturaSearchItem]
    def __init__(self,
            type: KalturaSearchOperatorType = NotImplemented,
            items: List[KalturaSearchItem] = NotImplemented): ...

    def getType(self) -> KalturaSearchOperatorType: ...
    def setType(self, newType: KalturaSearchOperatorType) -> None: ...
    def getItems(self) -> List[KalturaSearchItem]: ...
    def setItems(self, newItems: List[KalturaSearchItem]) -> None: ...

class KalturaServerNodeBaseFilter(KalturaFilter):
    idEqual: int
    idIn: str
    createdAtGreaterThanOrEqual: int
    createdAtLessThanOrEqual: int
    updatedAtGreaterThanOrEqual: int
    updatedAtLessThanOrEqual: int
    heartbeatTimeGreaterThanOrEqual: int
    heartbeatTimeLessThanOrEqual: int
    nameEqual: str
    nameIn: str
    systemNameEqual: str
    systemNameIn: str
    hostNameLike: str
    hostNameMultiLikeOr: str
    hostNameMultiLikeAnd: str
    statusEqual: KalturaServerNodeStatus
    statusIn: str
    typeEqual: KalturaServerNodeType
    typeIn: str
    tagsLike: str
    tagsMultiLikeOr: str
    tagsMultiLikeAnd: str
    dcEqual: int
    dcIn: str
    parentIdLike: str
    parentIdMultiLikeOr: str
    parentIdMultiLikeAnd: str
    environmentEqual: str
    environmentIn: str
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            heartbeatTimeGreaterThanOrEqual: int = NotImplemented,
            heartbeatTimeLessThanOrEqual: int = NotImplemented,
            nameEqual: str = NotImplemented,
            nameIn: str = NotImplemented,
            systemNameEqual: str = NotImplemented,
            systemNameIn: str = NotImplemented,
            hostNameLike: str = NotImplemented,
            hostNameMultiLikeOr: str = NotImplemented,
            hostNameMultiLikeAnd: str = NotImplemented,
            statusEqual: KalturaServerNodeStatus = NotImplemented,
            statusIn: str = NotImplemented,
            typeEqual: KalturaServerNodeType = NotImplemented,
            typeIn: str = NotImplemented,
            tagsLike: str = NotImplemented,
            tagsMultiLikeOr: str = NotImplemented,
            tagsMultiLikeAnd: str = NotImplemented,
            dcEqual: int = NotImplemented,
            dcIn: str = NotImplemented,
            parentIdLike: str = NotImplemented,
            parentIdMultiLikeOr: str = NotImplemented,
            parentIdMultiLikeAnd: str = NotImplemented,
            environmentEqual: str = NotImplemented,
            environmentIn: str = NotImplemented): ...

    def getIdEqual(self) -> int: ...
    def setIdEqual(self, newIdEqual: int) -> None: ...
    def getIdIn(self) -> str: ...
    def setIdIn(self, newIdIn: str) -> None: ...
    def getCreatedAtGreaterThanOrEqual(self) -> int: ...
    def setCreatedAtGreaterThanOrEqual(self, newCreatedAtGreaterThanOrEqual: int) -> None: ...
    def getCreatedAtLessThanOrEqual(self) -> int: ...
    def setCreatedAtLessThanOrEqual(self, newCreatedAtLessThanOrEqual: int) -> None: ...
    def getUpdatedAtGreaterThanOrEqual(self) -> int: ...
    def setUpdatedAtGreaterThanOrEqual(self, newUpdatedAtGreaterThanOrEqual: int) -> None: ...
    def getUpdatedAtLessThanOrEqual(self) -> int: ...
    def setUpdatedAtLessThanOrEqual(self, newUpdatedAtLessThanOrEqual: int) -> None: ...
    def getHeartbeatTimeGreaterThanOrEqual(self) -> int: ...
    def setHeartbeatTimeGreaterThanOrEqual(self, newHeartbeatTimeGreaterThanOrEqual: int) -> None: ...
    def getHeartbeatTimeLessThanOrEqual(self) -> int: ...
    def setHeartbeatTimeLessThanOrEqual(self, newHeartbeatTimeLessThanOrEqual: int) -> None: ...
    def getNameEqual(self) -> str: ...
    def setNameEqual(self, newNameEqual: str) -> None: ...
    def getNameIn(self) -> str: ...
    def setNameIn(self, newNameIn: str) -> None: ...
    def getSystemNameEqual(self) -> str: ...
    def setSystemNameEqual(self, newSystemNameEqual: str) -> None: ...
    def getSystemNameIn(self) -> str: ...
    def setSystemNameIn(self, newSystemNameIn: str) -> None: ...
    def getHostNameLike(self) -> str: ...
    def setHostNameLike(self, newHostNameLike: str) -> None: ...
    def getHostNameMultiLikeOr(self) -> str: ...
    def setHostNameMultiLikeOr(self, newHostNameMultiLikeOr: str) -> None: ...
    def getHostNameMultiLikeAnd(self) -> str: ...
    def setHostNameMultiLikeAnd(self, newHostNameMultiLikeAnd: str) -> None: ...
    def getStatusEqual(self) -> KalturaServerNodeStatus: ...
    def setStatusEqual(self, newStatusEqual: KalturaServerNodeStatus) -> None: ...
    def getStatusIn(self) -> str: ...
    def setStatusIn(self, newStatusIn: str) -> None: ...
    def getTypeEqual(self) -> KalturaServerNodeType: ...
    def setTypeEqual(self, newTypeEqual: KalturaServerNodeType) -> None: ...
    def getTypeIn(self) -> str: ...
    def setTypeIn(self, newTypeIn: str) -> None: ...
    def getTagsLike(self) -> str: ...
    def setTagsLike(self, newTagsLike: str) -> None: ...
    def getTagsMultiLikeOr(self) -> str: ...
    def setTagsMultiLikeOr(self, newTagsMultiLikeOr: str) -> None: ...
    def getTagsMultiLikeAnd(self) -> str: ...
    def setTagsMultiLikeAnd(self, newTagsMultiLikeAnd: str) -> None: ...
    def getDcEqual(self) -> int: ...
    def setDcEqual(self, newDcEqual: int) -> None: ...
    def getDcIn(self) -> str: ...
    def setDcIn(self, newDcIn: str) -> None: ...
    def getParentIdLike(self) -> str: ...
    def setParentIdLike(self, newParentIdLike: str) -> None: ...
    def getParentIdMultiLikeOr(self) -> str: ...
    def setParentIdMultiLikeOr(self, newParentIdMultiLikeOr: str) -> None: ...
    def getParentIdMultiLikeAnd(self) -> str: ...
    def setParentIdMultiLikeAnd(self, newParentIdMultiLikeAnd: str) -> None: ...
    def getEnvironmentEqual(self) -> str: ...
    def setEnvironmentEqual(self, newEnvironmentEqual: str) -> None: ...
    def getEnvironmentIn(self) -> str: ...
    def setEnvironmentIn(self, newEnvironmentIn: str) -> None: ...

class KalturaServerNodeListResponse(KalturaListResponse):
    objects: List[KalturaServerNode]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaServerNode] = NotImplemented): ...

    def getObjects(self) -> List[KalturaServerNode]: ...

class KalturaSessionResponse(KalturaStartWidgetSessionResponse):
    def __init__(self,
            partnerId: int = NotImplemented,
            ks: str = NotImplemented,
            userId: str = NotImplemented): ...
        pass

class KalturaSessionRestriction(KalturaBaseRestriction):
    def __init__(self): ...
        pass

class KalturaSiteRestriction(KalturaBaseRestriction):
    siteRestrictionType: KalturaSiteRestrictionType
    siteList: str
    def __init__(self,
            siteRestrictionType: KalturaSiteRestrictionType = NotImplemented,
            siteList: str = NotImplemented): ...

    def getSiteRestrictionType(self) -> KalturaSiteRestrictionType: ...
    def setSiteRestrictionType(self, newSiteRestrictionType: KalturaSiteRestrictionType) -> None: ...
    def getSiteList(self) -> str: ...
    def setSiteList(self, newSiteList: str) -> None: ...

class KalturaStorageAddAction(KalturaRuleAction):
    def __init__(self,
            type: KalturaRuleActionType = NotImplemented): ...
        pass

class KalturaStorageJobData(KalturaJobData):
    serverUrl: str
    serverUsername: str
    serverPassword: str
    serverPrivateKey: str
    serverPublicKey: str
    serverPassPhrase: str
    ftpPassiveMode: bool
    srcFileSyncLocalPath: str
    srcFileEncryptionKey: str
    srcFileSyncId: str
    destFileSyncStoredPath: str
    def __init__(self,
            serverUrl: str = NotImplemented,
            serverUsername: str = NotImplemented,
            serverPassword: str = NotImplemented,
            serverPrivateKey: str = NotImplemented,
            serverPublicKey: str = NotImplemented,
            serverPassPhrase: str = NotImplemented,
            ftpPassiveMode: bool = NotImplemented,
            srcFileSyncLocalPath: str = NotImplemented,
            srcFileEncryptionKey: str = NotImplemented,
            srcFileSyncId: str = NotImplemented,
            destFileSyncStoredPath: str = NotImplemented): ...

    def getServerUrl(self) -> str: ...
    def setServerUrl(self, newServerUrl: str) -> None: ...
    def getServerUsername(self) -> str: ...
    def setServerUsername(self, newServerUsername: str) -> None: ...
    def getServerPassword(self) -> str: ...
    def setServerPassword(self, newServerPassword: str) -> None: ...
    def getServerPrivateKey(self) -> str: ...
    def setServerPrivateKey(self, newServerPrivateKey: str) -> None: ...
    def getServerPublicKey(self) -> str: ...
    def setServerPublicKey(self, newServerPublicKey: str) -> None: ...
    def getServerPassPhrase(self) -> str: ...
    def setServerPassPhrase(self, newServerPassPhrase: str) -> None: ...
    def getFtpPassiveMode(self) -> bool: ...
    def setFtpPassiveMode(self, newFtpPassiveMode: bool) -> None: ...
    def getSrcFileSyncLocalPath(self) -> str: ...
    def setSrcFileSyncLocalPath(self, newSrcFileSyncLocalPath: str) -> None: ...
    def getSrcFileEncryptionKey(self) -> str: ...
    def setSrcFileEncryptionKey(self, newSrcFileEncryptionKey: str) -> None: ...
    def getSrcFileSyncId(self) -> str: ...
    def setSrcFileSyncId(self, newSrcFileSyncId: str) -> None: ...
    def getDestFileSyncStoredPath(self) -> str: ...
    def setDestFileSyncStoredPath(self, newDestFileSyncStoredPath: str) -> None: ...

class KalturaStorageProfileBaseFilter(KalturaFilter):
    idEqual: int
    idIn: str
    createdAtGreaterThanOrEqual: int
    createdAtLessThanOrEqual: int
    updatedAtGreaterThanOrEqual: int
    updatedAtLessThanOrEqual: int
    partnerIdEqual: int
    partnerIdIn: str
    systemNameEqual: str
    systemNameIn: str
    statusEqual: KalturaStorageProfileStatus
    statusIn: str
    protocolEqual: KalturaStorageProfileProtocol
    protocolIn: str
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            systemNameEqual: str = NotImplemented,
            systemNameIn: str = NotImplemented,
            statusEqual: KalturaStorageProfileStatus = NotImplemented,
            statusIn: str = NotImplemented,
            protocolEqual: KalturaStorageProfileProtocol = NotImplemented,
            protocolIn: str = NotImplemented): ...

    def getIdEqual(self) -> int: ...
    def setIdEqual(self, newIdEqual: int) -> None: ...
    def getIdIn(self) -> str: ...
    def setIdIn(self, newIdIn: str) -> None: ...
    def getCreatedAtGreaterThanOrEqual(self) -> int: ...
    def setCreatedAtGreaterThanOrEqual(self, newCreatedAtGreaterThanOrEqual: int) -> None: ...
    def getCreatedAtLessThanOrEqual(self) -> int: ...
    def setCreatedAtLessThanOrEqual(self, newCreatedAtLessThanOrEqual: int) -> None: ...
    def getUpdatedAtGreaterThanOrEqual(self) -> int: ...
    def setUpdatedAtGreaterThanOrEqual(self, newUpdatedAtGreaterThanOrEqual: int) -> None: ...
    def getUpdatedAtLessThanOrEqual(self) -> int: ...
    def setUpdatedAtLessThanOrEqual(self, newUpdatedAtLessThanOrEqual: int) -> None: ...
    def getPartnerIdEqual(self) -> int: ...
    def setPartnerIdEqual(self, newPartnerIdEqual: int) -> None: ...
    def getPartnerIdIn(self) -> str: ...
    def setPartnerIdIn(self, newPartnerIdIn: str) -> None: ...
    def getSystemNameEqual(self) -> str: ...
    def setSystemNameEqual(self, newSystemNameEqual: str) -> None: ...
    def getSystemNameIn(self) -> str: ...
    def setSystemNameIn(self, newSystemNameIn: str) -> None: ...
    def getStatusEqual(self) -> KalturaStorageProfileStatus: ...
    def setStatusEqual(self, newStatusEqual: KalturaStorageProfileStatus) -> None: ...
    def getStatusIn(self) -> str: ...
    def setStatusIn(self, newStatusIn: str) -> None: ...
    def getProtocolEqual(self) -> KalturaStorageProfileProtocol: ...
    def setProtocolEqual(self, newProtocolEqual: KalturaStorageProfileProtocol) -> None: ...
    def getProtocolIn(self) -> str: ...
    def setProtocolIn(self, newProtocolIn: str) -> None: ...

class KalturaStorageProfileListResponse(KalturaListResponse):
    objects: List[KalturaStorageProfile]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaStorageProfile] = NotImplemented): ...

    def getObjects(self) -> List[KalturaStorageProfile]: ...

class KalturaSyncCategoryPrivacyContextJobData(KalturaJobData):
    categoryId: int
    lastUpdatedCategoryEntryCreatedAt: int
    lastUpdatedCategoryCreatedAt: int
    def __init__(self,
            categoryId: int = NotImplemented,
            lastUpdatedCategoryEntryCreatedAt: int = NotImplemented,
            lastUpdatedCategoryCreatedAt: int = NotImplemented): ...

    def getCategoryId(self) -> int: ...
    def setCategoryId(self, newCategoryId: int) -> None: ...
    def getLastUpdatedCategoryEntryCreatedAt(self) -> int: ...
    def setLastUpdatedCategoryEntryCreatedAt(self, newLastUpdatedCategoryEntryCreatedAt: int) -> None: ...
    def getLastUpdatedCategoryCreatedAt(self) -> int: ...
    def setLastUpdatedCategoryCreatedAt(self, newLastUpdatedCategoryCreatedAt: int) -> None: ...

class KalturaTaskEntryServerNode(KalturaEntryServerNode):
    def __init__(self,
            id: int = NotImplemented,
            entryId: str = NotImplemented,
            serverNodeId: int = NotImplemented,
            partnerId: int = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            status: KalturaEntryServerNodeStatus = NotImplemented,
            serverType: KalturaEntryServerNodeType = NotImplemented): ...
        pass

class KalturaThumbAssetListResponse(KalturaListResponse):
    objects: List[KalturaThumbAsset]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaThumbAsset] = NotImplemented): ...

    def getObjects(self) -> List[KalturaThumbAsset]: ...

class KalturaThumbParamsListResponse(KalturaListResponse):
    objects: List[KalturaThumbParams]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaThumbParams] = NotImplemented): ...

    def getObjects(self) -> List[KalturaThumbParams]: ...

class KalturaThumbParamsOutputListResponse(KalturaListResponse):
    objects: List[KalturaThumbParamsOutput]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaThumbParamsOutput] = NotImplemented): ...

    def getObjects(self) -> List[KalturaThumbParamsOutput]: ...

class KalturaThumbnailServeOptions(KalturaAssetServeOptions):
    def __init__(self,
            download: bool = NotImplemented,
            referrer: str = NotImplemented): ...
        pass

class KalturaTubeMogulSyndicationFeed(KalturaBaseSyndicationFeed):
    category: KalturaTubeMogulSyndicationFeedCategories
    def __init__(self,
            id: str = NotImplemented,
            feedUrl: str = NotImplemented,
            partnerId: int = NotImplemented,
            playlistId: str = NotImplemented,
            name: str = NotImplemented,
            status: KalturaSyndicationFeedStatus = NotImplemented,
            type: KalturaSyndicationFeedType = NotImplemented,
            landingPage: str = NotImplemented,
            createdAt: int = NotImplemented,
            allowEmbed: bool = NotImplemented,
            playerUiconfId: int = NotImplemented,
            flavorParamId: int = NotImplemented,
            transcodeExistingContent: bool = NotImplemented,
            addToDefaultConversionProfile: bool = NotImplemented,
            categories: str = NotImplemented,
            storageId: int = NotImplemented,
            entriesOrderBy: KalturaSyndicationFeedEntriesOrderBy = NotImplemented,
            enforceEntitlement: bool = NotImplemented,
            privacyContext: str = NotImplemented,
            updatedAt: int = NotImplemented,
            useCategoryEntries: bool = NotImplemented,
            feedContentTypeHeader: str = NotImplemented,
            category: KalturaTubeMogulSyndicationFeedCategories = NotImplemented): ...

    def getCategory(self) -> KalturaTubeMogulSyndicationFeedCategories: ...

class KalturaUiConfBaseFilter(KalturaFilter):
    idEqual: int
    idIn: str
    nameLike: str
    partnerIdEqual: int
    partnerIdIn: str
    objTypeEqual: KalturaUiConfObjType
    objTypeIn: str
    tagsMultiLikeOr: str
    tagsMultiLikeAnd: str
    createdAtGreaterThanOrEqual: int
    createdAtLessThanOrEqual: int
    updatedAtGreaterThanOrEqual: int
    updatedAtLessThanOrEqual: int
    creationModeEqual: KalturaUiConfCreationMode
    creationModeIn: str
    versionEqual: str
    versionMultiLikeOr: str
    versionMultiLikeAnd: str
    partnerTagsMultiLikeOr: str
    partnerTagsMultiLikeAnd: str
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            nameLike: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            objTypeEqual: KalturaUiConfObjType = NotImplemented,
            objTypeIn: str = NotImplemented,
            tagsMultiLikeOr: str = NotImplemented,
            tagsMultiLikeAnd: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            creationModeEqual: KalturaUiConfCreationMode = NotImplemented,
            creationModeIn: str = NotImplemented,
            versionEqual: str = NotImplemented,
            versionMultiLikeOr: str = NotImplemented,
            versionMultiLikeAnd: str = NotImplemented,
            partnerTagsMultiLikeOr: str = NotImplemented,
            partnerTagsMultiLikeAnd: str = NotImplemented): ...

    def getIdEqual(self) -> int: ...
    def setIdEqual(self, newIdEqual: int) -> None: ...
    def getIdIn(self) -> str: ...
    def setIdIn(self, newIdIn: str) -> None: ...
    def getNameLike(self) -> str: ...
    def setNameLike(self, newNameLike: str) -> None: ...
    def getPartnerIdEqual(self) -> int: ...
    def setPartnerIdEqual(self, newPartnerIdEqual: int) -> None: ...
    def getPartnerIdIn(self) -> str: ...
    def setPartnerIdIn(self, newPartnerIdIn: str) -> None: ...
    def getObjTypeEqual(self) -> KalturaUiConfObjType: ...
    def setObjTypeEqual(self, newObjTypeEqual: KalturaUiConfObjType) -> None: ...
    def getObjTypeIn(self) -> str: ...
    def setObjTypeIn(self, newObjTypeIn: str) -> None: ...
    def getTagsMultiLikeOr(self) -> str: ...
    def setTagsMultiLikeOr(self, newTagsMultiLikeOr: str) -> None: ...
    def getTagsMultiLikeAnd(self) -> str: ...
    def setTagsMultiLikeAnd(self, newTagsMultiLikeAnd: str) -> None: ...
    def getCreatedAtGreaterThanOrEqual(self) -> int: ...
    def setCreatedAtGreaterThanOrEqual(self, newCreatedAtGreaterThanOrEqual: int) -> None: ...
    def getCreatedAtLessThanOrEqual(self) -> int: ...
    def setCreatedAtLessThanOrEqual(self, newCreatedAtLessThanOrEqual: int) -> None: ...
    def getUpdatedAtGreaterThanOrEqual(self) -> int: ...
    def setUpdatedAtGreaterThanOrEqual(self, newUpdatedAtGreaterThanOrEqual: int) -> None: ...
    def getUpdatedAtLessThanOrEqual(self) -> int: ...
    def setUpdatedAtLessThanOrEqual(self, newUpdatedAtLessThanOrEqual: int) -> None: ...
    def getCreationModeEqual(self) -> KalturaUiConfCreationMode: ...
    def setCreationModeEqual(self, newCreationModeEqual: KalturaUiConfCreationMode) -> None: ...
    def getCreationModeIn(self) -> str: ...
    def setCreationModeIn(self, newCreationModeIn: str) -> None: ...
    def getVersionEqual(self) -> str: ...
    def setVersionEqual(self, newVersionEqual: str) -> None: ...
    def getVersionMultiLikeOr(self) -> str: ...
    def setVersionMultiLikeOr(self, newVersionMultiLikeOr: str) -> None: ...
    def getVersionMultiLikeAnd(self) -> str: ...
    def setVersionMultiLikeAnd(self, newVersionMultiLikeAnd: str) -> None: ...
    def getPartnerTagsMultiLikeOr(self) -> str: ...
    def setPartnerTagsMultiLikeOr(self, newPartnerTagsMultiLikeOr: str) -> None: ...
    def getPartnerTagsMultiLikeAnd(self) -> str: ...
    def setPartnerTagsMultiLikeAnd(self, newPartnerTagsMultiLikeAnd: str) -> None: ...

class KalturaUiConfListResponse(KalturaListResponse):
    objects: List[KalturaUiConf]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaUiConf] = NotImplemented): ...

    def getObjects(self) -> List[KalturaUiConf]: ...

class KalturaUploadTokenBaseFilter(KalturaFilter):
    idEqual: str
    idIn: str
    userIdEqual: str
    statusEqual: KalturaUploadTokenStatus
    statusIn: str
    fileNameEqual: str
    fileSizeEqual: float
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: str = NotImplemented,
            idIn: str = NotImplemented,
            userIdEqual: str = NotImplemented,
            statusEqual: KalturaUploadTokenStatus = NotImplemented,
            statusIn: str = NotImplemented,
            fileNameEqual: str = NotImplemented,
            fileSizeEqual: float = NotImplemented): ...

    def getIdEqual(self) -> str: ...
    def setIdEqual(self, newIdEqual: str) -> None: ...
    def getIdIn(self) -> str: ...
    def setIdIn(self, newIdIn: str) -> None: ...
    def getUserIdEqual(self) -> str: ...
    def setUserIdEqual(self, newUserIdEqual: str) -> None: ...
    def getStatusEqual(self) -> KalturaUploadTokenStatus: ...
    def setStatusEqual(self, newStatusEqual: KalturaUploadTokenStatus) -> None: ...
    def getStatusIn(self) -> str: ...
    def setStatusIn(self, newStatusIn: str) -> None: ...
    def getFileNameEqual(self) -> str: ...
    def setFileNameEqual(self, newFileNameEqual: str) -> None: ...
    def getFileSizeEqual(self) -> float: ...
    def setFileSizeEqual(self, newFileSizeEqual: float) -> None: ...

class KalturaUploadTokenListResponse(KalturaListResponse):
    objects: List[KalturaUploadToken]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaUploadToken] = NotImplemented): ...

    def getObjects(self) -> List[KalturaUploadToken]: ...

class KalturaUrlAuthenticationParamsCondition(KalturaCondition):
    def __init__(self,
            type: KalturaConditionType = NotImplemented,
            description: str = NotImplemented,
            not_: bool = NotImplemented): ...
        pass

class KalturaUrlRecognizerAkamaiG2O(KalturaUrlRecognizer):
    headerData: str
    headerSign: str
    timeout: int
    salt: str
    def __init__(self,
            hosts: str = NotImplemented,
            uriPrefix: str = NotImplemented,
            headerData: str = NotImplemented,
            headerSign: str = NotImplemented,
            timeout: int = NotImplemented,
            salt: str = NotImplemented): ...

    def getHeaderData(self) -> str: ...
    def setHeaderData(self, newHeaderData: str) -> None: ...
    def getHeaderSign(self) -> str: ...
    def setHeaderSign(self, newHeaderSign: str) -> None: ...
    def getTimeout(self) -> int: ...
    def setTimeout(self, newTimeout: int) -> None: ...
    def getSalt(self) -> str: ...
    def setSalt(self, newSalt: str) -> None: ...

class KalturaUrlRecognizerKaltura(KalturaUrlRecognizer):
    key: str
    def __init__(self,
            hosts: str = NotImplemented,
            uriPrefix: str = NotImplemented,
            key: str = NotImplemented): ...

    def getKey(self) -> str: ...
    def setKey(self, newKey: str) -> None: ...

class KalturaUrlTokenizerAkamaiHttp(KalturaUrlTokenizer):
    paramName: str
    rootDir: str
    def __init__(self,
            window: int = NotImplemented,
            key: str = NotImplemented,
            limitIpAddress: bool = NotImplemented,
            paramName: str = NotImplemented,
            rootDir: str = NotImplemented): ...

    def getParamName(self) -> str: ...
    def setParamName(self, newParamName: str) -> None: ...
    def getRootDir(self) -> str: ...
    def setRootDir(self, newRootDir: str) -> None: ...

class KalturaUrlTokenizerAkamaiRtmp(KalturaUrlTokenizer):
    profile: str
    type: str
    aifp: str
    usePrefix: bool
    def __init__(self,
            window: int = NotImplemented,
            key: str = NotImplemented,
            limitIpAddress: bool = NotImplemented,
            profile: str = NotImplemented,
            type: str = NotImplemented,
            aifp: str = NotImplemented,
            usePrefix: bool = NotImplemented): ...

    def getProfile(self) -> str: ...
    def setProfile(self, newProfile: str) -> None: ...
    def getType(self) -> str: ...
    def setType(self, newType: str) -> None: ...
    def getAifp(self) -> str: ...
    def setAifp(self, newAifp: str) -> None: ...
    def getUsePrefix(self) -> bool: ...
    def setUsePrefix(self, newUsePrefix: bool) -> None: ...

class KalturaUrlTokenizerAkamaiRtsp(KalturaUrlTokenizer):
    host: str
    cpcode: int
    def __init__(self,
            window: int = NotImplemented,
            key: str = NotImplemented,
            limitIpAddress: bool = NotImplemented,
            host: str = NotImplemented,
            cpcode: int = NotImplemented): ...

    def getHost(self) -> str: ...
    def setHost(self, newHost: str) -> None: ...
    def getCpcode(self) -> int: ...
    def setCpcode(self, newCpcode: int) -> None: ...

class KalturaUrlTokenizerAkamaiSecureHd(KalturaUrlTokenizer):
    paramName: str
    aclPostfix: str
    customPostfixes: str
    useCookieHosts: str
    rootDir: str
    def __init__(self,
            window: int = NotImplemented,
            key: str = NotImplemented,
            limitIpAddress: bool = NotImplemented,
            paramName: str = NotImplemented,
            aclPostfix: str = NotImplemented,
            customPostfixes: str = NotImplemented,
            useCookieHosts: str = NotImplemented,
            rootDir: str = NotImplemented): ...

    def getParamName(self) -> str: ...
    def setParamName(self, newParamName: str) -> None: ...
    def getAclPostfix(self) -> str: ...
    def setAclPostfix(self, newAclPostfix: str) -> None: ...
    def getCustomPostfixes(self) -> str: ...
    def setCustomPostfixes(self, newCustomPostfixes: str) -> None: ...
    def getUseCookieHosts(self) -> str: ...
    def setUseCookieHosts(self, newUseCookieHosts: str) -> None: ...
    def getRootDir(self) -> str: ...
    def setRootDir(self, newRootDir: str) -> None: ...

class KalturaUrlTokenizerBitGravity(KalturaUrlTokenizer):
    hashPatternRegex: str
    def __init__(self,
            window: int = NotImplemented,
            key: str = NotImplemented,
            limitIpAddress: bool = NotImplemented,
            hashPatternRegex: str = NotImplemented): ...

    def getHashPatternRegex(self) -> str: ...
    def setHashPatternRegex(self, newHashPatternRegex: str) -> None: ...

class KalturaUrlTokenizerChinaCache(KalturaUrlTokenizer):
    algorithmId: KalturaChinaCacheAlgorithmType
    keyId: int
    def __init__(self,
            window: int = NotImplemented,
            key: str = NotImplemented,
            limitIpAddress: bool = NotImplemented,
            algorithmId: KalturaChinaCacheAlgorithmType = NotImplemented,
            keyId: int = NotImplemented): ...

    def getAlgorithmId(self) -> KalturaChinaCacheAlgorithmType: ...
    def setAlgorithmId(self, newAlgorithmId: KalturaChinaCacheAlgorithmType) -> None: ...
    def getKeyId(self) -> int: ...
    def setKeyId(self, newKeyId: int) -> None: ...

class KalturaUrlTokenizerCht(KalturaUrlTokenizer):
    def __init__(self,
            window: int = NotImplemented,
            key: str = NotImplemented,
            limitIpAddress: bool = NotImplemented): ...
        pass

class KalturaUrlTokenizerCloudFront(KalturaUrlTokenizer):
    keyPairId: str
    rootDir: str
    def __init__(self,
            window: int = NotImplemented,
            key: str = NotImplemented,
            limitIpAddress: bool = NotImplemented,
            keyPairId: str = NotImplemented,
            rootDir: str = NotImplemented): ...

    def getKeyPairId(self) -> str: ...
    def setKeyPairId(self, newKeyPairId: str) -> None: ...
    def getRootDir(self) -> str: ...
    def setRootDir(self, newRootDir: str) -> None: ...

class KalturaUrlTokenizerKaltura(KalturaUrlTokenizer):
    def __init__(self,
            window: int = NotImplemented,
            key: str = NotImplemented,
            limitIpAddress: bool = NotImplemented): ...
        pass

class KalturaUrlTokenizerKs(KalturaUrlTokenizer):
    usePath: bool
    additionalUris: str
    def __init__(self,
            window: int = NotImplemented,
            key: str = NotImplemented,
            limitIpAddress: bool = NotImplemented,
            usePath: bool = NotImplemented,
            additionalUris: str = NotImplemented): ...

    def getUsePath(self) -> bool: ...
    def setUsePath(self, newUsePath: bool) -> None: ...
    def getAdditionalUris(self) -> str: ...
    def setAdditionalUris(self, newAdditionalUris: str) -> None: ...

class KalturaUrlTokenizerL3(KalturaUrlTokenizer):
    gen: str
    paramName: str
    def __init__(self,
            window: int = NotImplemented,
            key: str = NotImplemented,
            limitIpAddress: bool = NotImplemented,
            gen: str = NotImplemented,
            paramName: str = NotImplemented): ...

    def getGen(self) -> str: ...
    def setGen(self, newGen: str) -> None: ...
    def getParamName(self) -> str: ...
    def setParamName(self, newParamName: str) -> None: ...

class KalturaUrlTokenizerLevel3(KalturaUrlTokenizer):
    paramName: str
    expiryName: str
    gen: str
    def __init__(self,
            window: int = NotImplemented,
            key: str = NotImplemented,
            limitIpAddress: bool = NotImplemented,
            paramName: str = NotImplemented,
            expiryName: str = NotImplemented,
            gen: str = NotImplemented): ...

    def getParamName(self) -> str: ...
    def setParamName(self, newParamName: str) -> None: ...
    def getExpiryName(self) -> str: ...
    def setExpiryName(self, newExpiryName: str) -> None: ...
    def getGen(self) -> str: ...
    def setGen(self, newGen: str) -> None: ...

class KalturaUrlTokenizerLimeLight(KalturaUrlTokenizer):
    def __init__(self,
            window: int = NotImplemented,
            key: str = NotImplemented,
            limitIpAddress: bool = NotImplemented): ...
        pass

class KalturaUrlTokenizerUplynk(KalturaUrlTokenizer):
    accountId: str
    def __init__(self,
            window: int = NotImplemented,
            key: str = NotImplemented,
            limitIpAddress: bool = NotImplemented,
            accountId: str = NotImplemented): ...

    def getAccountId(self) -> str: ...
    def setAccountId(self, newAccountId: str) -> None: ...

class KalturaUrlTokenizerVelocix(KalturaUrlTokenizer):
    hdsPaths: str
    paramName: str
    authPrefix: str
    def __init__(self,
            window: int = NotImplemented,
            key: str = NotImplemented,
            limitIpAddress: bool = NotImplemented,
            hdsPaths: str = NotImplemented,
            paramName: str = NotImplemented,
            authPrefix: str = NotImplemented): ...

    def getHdsPaths(self) -> str: ...
    def setHdsPaths(self, newHdsPaths: str) -> None: ...
    def getParamName(self) -> str: ...
    def setParamName(self, newParamName: str) -> None: ...
    def getAuthPrefix(self) -> str: ...
    def setAuthPrefix(self, newAuthPrefix: str) -> None: ...

class KalturaUrlTokenizerVnpt(KalturaUrlTokenizer):
    tokenizationFormat: int
    shouldIncludeClientIp: bool
    def __init__(self,
            window: int = NotImplemented,
            key: str = NotImplemented,
            limitIpAddress: bool = NotImplemented,
            tokenizationFormat: int = NotImplemented,
            shouldIncludeClientIp: bool = NotImplemented): ...

    def getTokenizationFormat(self) -> int: ...
    def setTokenizationFormat(self, newTokenizationFormat: int) -> None: ...
    def getShouldIncludeClientIp(self) -> bool: ...
    def setShouldIncludeClientIp(self, newShouldIncludeClientIp: bool) -> None: ...

class KalturaUrlTokenizerWowzaSecureToken(KalturaUrlTokenizer):
    paramPrefix: str
    hashAlgorithm: str
    def __init__(self,
            window: int = NotImplemented,
            key: str = NotImplemented,
            limitIpAddress: bool = NotImplemented,
            paramPrefix: str = NotImplemented,
            hashAlgorithm: str = NotImplemented): ...

    def getParamPrefix(self) -> str: ...
    def setParamPrefix(self, newParamPrefix: str) -> None: ...
    def getHashAlgorithm(self) -> str: ...
    def setHashAlgorithm(self, newHashAlgorithm: str) -> None: ...

class KalturaUserAgentRestriction(KalturaBaseRestriction):
    userAgentRestrictionType: KalturaUserAgentRestrictionType
    userAgentRegexList: str
    def __init__(self,
            userAgentRestrictionType: KalturaUserAgentRestrictionType = NotImplemented,
            userAgentRegexList: str = NotImplemented): ...

    def getUserAgentRestrictionType(self) -> KalturaUserAgentRestrictionType: ...
    def setUserAgentRestrictionType(self, newUserAgentRestrictionType: KalturaUserAgentRestrictionType) -> None: ...
    def getUserAgentRegexList(self) -> str: ...
    def setUserAgentRegexList(self, newUserAgentRegexList: str) -> None: ...

class KalturaUserAppRoleListResponse(KalturaListResponse):
    objects: List[KalturaUserAppRole]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaUserAppRole] = NotImplemented): ...

    def getObjects(self) -> List[KalturaUserAppRole]: ...

class KalturaUserEntryListResponse(KalturaListResponse):
    objects: List[KalturaUserEntry]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaUserEntry] = NotImplemented): ...

    def getObjects(self) -> List[KalturaUserEntry]: ...

class KalturaUserListResponse(KalturaListResponse):
    objects: List[KalturaUser]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaUser] = NotImplemented): ...

    def getObjects(self) -> List[KalturaUser]: ...

class KalturaUserLoginDataListResponse(KalturaListResponse):
    objects: List[KalturaUserLoginData]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaUserLoginData] = NotImplemented): ...

    def getObjects(self) -> List[KalturaUserLoginData]: ...

class KalturaUserRoleCondition(KalturaCondition):
    roleIds: str
    def __init__(self,
            type: KalturaConditionType = NotImplemented,
            description: str = NotImplemented,
            not_: bool = NotImplemented,
            roleIds: str = NotImplemented): ...

    def getRoleIds(self) -> str: ...
    def setRoleIds(self, newRoleIds: str) -> None: ...

class KalturaUserRoleListResponse(KalturaListResponse):
    objects: List[KalturaUserRole]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaUserRole] = NotImplemented): ...

    def getObjects(self) -> List[KalturaUserRole]: ...

class KalturaValidateActiveEdgeCondition(KalturaCondition):
    edgeServerIds: str
    def __init__(self,
            type: KalturaConditionType = NotImplemented,
            description: str = NotImplemented,
            not_: bool = NotImplemented,
            edgeServerIds: str = NotImplemented): ...

    def getEdgeServerIds(self) -> str: ...
    def setEdgeServerIds(self, newEdgeServerIds: str) -> None: ...

class KalturaWidgetBaseFilter(KalturaFilter):
    idEqual: str
    idIn: str
    sourceWidgetIdEqual: str
    rootWidgetIdEqual: str
    partnerIdEqual: int
    entryIdEqual: str
    uiConfIdEqual: int
    createdAtGreaterThanOrEqual: int
    createdAtLessThanOrEqual: int
    updatedAtGreaterThanOrEqual: int
    updatedAtLessThanOrEqual: int
    partnerDataLike: str
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: str = NotImplemented,
            idIn: str = NotImplemented,
            sourceWidgetIdEqual: str = NotImplemented,
            rootWidgetIdEqual: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            entryIdEqual: str = NotImplemented,
            uiConfIdEqual: int = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            partnerDataLike: str = NotImplemented): ...

    def getIdEqual(self) -> str: ...
    def setIdEqual(self, newIdEqual: str) -> None: ...
    def getIdIn(self) -> str: ...
    def setIdIn(self, newIdIn: str) -> None: ...
    def getSourceWidgetIdEqual(self) -> str: ...
    def setSourceWidgetIdEqual(self, newSourceWidgetIdEqual: str) -> None: ...
    def getRootWidgetIdEqual(self) -> str: ...
    def setRootWidgetIdEqual(self, newRootWidgetIdEqual: str) -> None: ...
    def getPartnerIdEqual(self) -> int: ...
    def setPartnerIdEqual(self, newPartnerIdEqual: int) -> None: ...
    def getEntryIdEqual(self) -> str: ...
    def setEntryIdEqual(self, newEntryIdEqual: str) -> None: ...
    def getUiConfIdEqual(self) -> int: ...
    def setUiConfIdEqual(self, newUiConfIdEqual: int) -> None: ...
    def getCreatedAtGreaterThanOrEqual(self) -> int: ...
    def setCreatedAtGreaterThanOrEqual(self, newCreatedAtGreaterThanOrEqual: int) -> None: ...
    def getCreatedAtLessThanOrEqual(self) -> int: ...
    def setCreatedAtLessThanOrEqual(self, newCreatedAtLessThanOrEqual: int) -> None: ...
    def getUpdatedAtGreaterThanOrEqual(self) -> int: ...
    def setUpdatedAtGreaterThanOrEqual(self, newUpdatedAtGreaterThanOrEqual: int) -> None: ...
    def getUpdatedAtLessThanOrEqual(self) -> int: ...
    def setUpdatedAtLessThanOrEqual(self, newUpdatedAtLessThanOrEqual: int) -> None: ...
    def getPartnerDataLike(self) -> str: ...
    def setPartnerDataLike(self, newPartnerDataLike: str) -> None: ...

class KalturaWidgetListResponse(KalturaListResponse):
    objects: List[KalturaWidget]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaWidget] = NotImplemented): ...

    def getObjects(self) -> List[KalturaWidget]: ...

class KalturaYahooSyndicationFeed(KalturaBaseSyndicationFeed):
    category: KalturaYahooSyndicationFeedCategories
    adultContent: KalturaYahooSyndicationFeedAdultValues
    feedDescription: str
    feedLandingPage: str
    def __init__(self,
            id: str = NotImplemented,
            feedUrl: str = NotImplemented,
            partnerId: int = NotImplemented,
            playlistId: str = NotImplemented,
            name: str = NotImplemented,
            status: KalturaSyndicationFeedStatus = NotImplemented,
            type: KalturaSyndicationFeedType = NotImplemented,
            landingPage: str = NotImplemented,
            createdAt: int = NotImplemented,
            allowEmbed: bool = NotImplemented,
            playerUiconfId: int = NotImplemented,
            flavorParamId: int = NotImplemented,
            transcodeExistingContent: bool = NotImplemented,
            addToDefaultConversionProfile: bool = NotImplemented,
            categories: str = NotImplemented,
            storageId: int = NotImplemented,
            entriesOrderBy: KalturaSyndicationFeedEntriesOrderBy = NotImplemented,
            enforceEntitlement: bool = NotImplemented,
            privacyContext: str = NotImplemented,
            updatedAt: int = NotImplemented,
            useCategoryEntries: bool = NotImplemented,
            feedContentTypeHeader: str = NotImplemented,
            category: KalturaYahooSyndicationFeedCategories = NotImplemented,
            adultContent: KalturaYahooSyndicationFeedAdultValues = NotImplemented,
            feedDescription: str = NotImplemented,
            feedLandingPage: str = NotImplemented): ...

    def getCategory(self) -> KalturaYahooSyndicationFeedCategories: ...
    def getAdultContent(self) -> KalturaYahooSyndicationFeedAdultValues: ...
    def setAdultContent(self, newAdultContent: KalturaYahooSyndicationFeedAdultValues) -> None: ...
    def getFeedDescription(self) -> str: ...
    def setFeedDescription(self, newFeedDescription: str) -> None: ...
    def getFeedLandingPage(self) -> str: ...
    def setFeedLandingPage(self, newFeedLandingPage: str) -> None: ...

class KalturaAccessControlBaseFilter(KalturaRelatedFilter):
    idEqual: int
    idIn: str
    systemNameEqual: str
    systemNameIn: str
    createdAtGreaterThanOrEqual: int
    createdAtLessThanOrEqual: int
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            systemNameEqual: str = NotImplemented,
            systemNameIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented): ...

    def getIdEqual(self) -> int: ...
    def setIdEqual(self, newIdEqual: int) -> None: ...
    def getIdIn(self) -> str: ...
    def setIdIn(self, newIdIn: str) -> None: ...
    def getSystemNameEqual(self) -> str: ...
    def setSystemNameEqual(self, newSystemNameEqual: str) -> None: ...
    def getSystemNameIn(self) -> str: ...
    def setSystemNameIn(self, newSystemNameIn: str) -> None: ...
    def getCreatedAtGreaterThanOrEqual(self) -> int: ...
    def setCreatedAtGreaterThanOrEqual(self, newCreatedAtGreaterThanOrEqual: int) -> None: ...
    def getCreatedAtLessThanOrEqual(self) -> int: ...
    def setCreatedAtLessThanOrEqual(self, newCreatedAtLessThanOrEqual: int) -> None: ...

class KalturaAccessControlProfileBaseFilter(KalturaRelatedFilter):
    idEqual: int
    idIn: str
    systemNameEqual: str
    systemNameIn: str
    createdAtGreaterThanOrEqual: int
    createdAtLessThanOrEqual: int
    updatedAtGreaterThanOrEqual: int
    updatedAtLessThanOrEqual: int
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            systemNameEqual: str = NotImplemented,
            systemNameIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented): ...

    def getIdEqual(self) -> int: ...
    def setIdEqual(self, newIdEqual: int) -> None: ...
    def getIdIn(self) -> str: ...
    def setIdIn(self, newIdIn: str) -> None: ...
    def getSystemNameEqual(self) -> str: ...
    def setSystemNameEqual(self, newSystemNameEqual: str) -> None: ...
    def getSystemNameIn(self) -> str: ...
    def setSystemNameIn(self, newSystemNameIn: str) -> None: ...
    def getCreatedAtGreaterThanOrEqual(self) -> int: ...
    def setCreatedAtGreaterThanOrEqual(self, newCreatedAtGreaterThanOrEqual: int) -> None: ...
    def getCreatedAtLessThanOrEqual(self) -> int: ...
    def setCreatedAtLessThanOrEqual(self, newCreatedAtLessThanOrEqual: int) -> None: ...
    def getUpdatedAtGreaterThanOrEqual(self) -> int: ...
    def setUpdatedAtGreaterThanOrEqual(self, newUpdatedAtGreaterThanOrEqual: int) -> None: ...
    def getUpdatedAtLessThanOrEqual(self) -> int: ...
    def setUpdatedAtLessThanOrEqual(self, newUpdatedAtLessThanOrEqual: int) -> None: ...

class KalturaAdminUser(KalturaUser):
    def __init__(self,
            id: str = NotImplemented,
            partnerId: int = NotImplemented,
            screenName: str = NotImplemented,
            fullName: str = NotImplemented,
            email: str = NotImplemented,
            country: str = NotImplemented,
            state: str = NotImplemented,
            city: str = NotImplemented,
            zip: str = NotImplemented,
            thumbnailUrl: str = NotImplemented,
            description: str = NotImplemented,
            tags: str = NotImplemented,
            adminTags: str = NotImplemented,
            status: KalturaUserStatus = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            partnerData: str = NotImplemented,
            indexedPartnerDataInt: int = NotImplemented,
            indexedPartnerDataString: str = NotImplemented,
            storageSize: int = NotImplemented,
            language: KalturaLanguageCode = NotImplemented,
            lastLoginTime: int = NotImplemented,
            statusUpdatedAt: int = NotImplemented,
            deletedAt: int = NotImplemented,
            allowedPartnerIds: str = NotImplemented,
            allowedPartnerPackages: str = NotImplemented,
            userMode: KalturaUserMode = NotImplemented,
            capabilities: List[KalturaUserCapability] = NotImplemented,
            type: KalturaUserType = NotImplemented,
            dateOfBirth: int = NotImplemented,
            gender: KalturaGender = NotImplemented,
            isAdmin: bool = NotImplemented,
            isGuest: bool = NotImplemented,
            roleIds: str = NotImplemented,
            roleNames: str = NotImplemented,
            isAccountOwner: bool = NotImplemented,
            password: str = NotImplemented,
            firstName: str = NotImplemented,
            lastName: str = NotImplemented,
            loginEnabled: bool = NotImplemented,
            registrationInfo: str = NotImplemented,
            attendanceInfo: str = NotImplemented,
            title: str = NotImplemented,
            company: str = NotImplemented,
            ksPrivileges: str = NotImplemented,
            encryptedSeed: str = NotImplemented,
            isSsoExcluded: bool = NotImplemented,
            externalId: str = NotImplemented): ...
        pass

class KalturaAkamaiProvisionJobData(KalturaProvisionJobData):
    wsdlUsername: str
    wsdlPassword: str
    cpcode: str
    emailId: str
    primaryContact: str
    secondaryContact: str
    def __init__(self,
            streamID: str = NotImplemented,
            backupStreamID: str = NotImplemented,
            rtmp: str = NotImplemented,
            encoderIP: str = NotImplemented,
            backupEncoderIP: str = NotImplemented,
            encoderPassword: str = NotImplemented,
            encoderUsername: str = NotImplemented,
            endDate: int = NotImplemented,
            returnVal: str = NotImplemented,
            mediaType: int = NotImplemented,
            primaryBroadcastingUrl: str = NotImplemented,
            secondaryBroadcastingUrl: str = NotImplemented,
            streamName: str = NotImplemented,
            wsdlUsername: str = NotImplemented,
            wsdlPassword: str = NotImplemented,
            cpcode: str = NotImplemented,
            emailId: str = NotImplemented,
            primaryContact: str = NotImplemented,
            secondaryContact: str = NotImplemented): ...

    def getWsdlUsername(self) -> str: ...
    def setWsdlUsername(self, newWsdlUsername: str) -> None: ...
    def getWsdlPassword(self) -> str: ...
    def setWsdlPassword(self, newWsdlPassword: str) -> None: ...
    def getCpcode(self) -> str: ...
    def setCpcode(self, newCpcode: str) -> None: ...
    def getEmailId(self) -> str: ...
    def setEmailId(self, newEmailId: str) -> None: ...
    def getPrimaryContact(self) -> str: ...
    def setPrimaryContact(self, newPrimaryContact: str) -> None: ...
    def getSecondaryContact(self) -> str: ...
    def setSecondaryContact(self, newSecondaryContact: str) -> None: ...

class KalturaAkamaiUniversalProvisionJobData(KalturaProvisionJobData):
    streamId: int
    systemUserName: str
    systemPassword: str
    domainName: str
    dvrEnabled: KalturaDVRStatus
    dvrWindow: int
    primaryContact: str
    secondaryContact: str
    streamType: KalturaAkamaiUniversalStreamType
    notificationEmail: str
    def __init__(self,
            streamID: str = NotImplemented,
            backupStreamID: str = NotImplemented,
            rtmp: str = NotImplemented,
            encoderIP: str = NotImplemented,
            backupEncoderIP: str = NotImplemented,
            encoderPassword: str = NotImplemented,
            encoderUsername: str = NotImplemented,
            endDate: int = NotImplemented,
            returnVal: str = NotImplemented,
            mediaType: int = NotImplemented,
            primaryBroadcastingUrl: str = NotImplemented,
            secondaryBroadcastingUrl: str = NotImplemented,
            streamName: str = NotImplemented,
            streamId: int = NotImplemented,
            systemUserName: str = NotImplemented,
            systemPassword: str = NotImplemented,
            domainName: str = NotImplemented,
            dvrEnabled: KalturaDVRStatus = NotImplemented,
            dvrWindow: int = NotImplemented,
            primaryContact: str = NotImplemented,
            secondaryContact: str = NotImplemented,
            streamType: KalturaAkamaiUniversalStreamType = NotImplemented,
            notificationEmail: str = NotImplemented): ...

    def getStreamId(self) -> int: ...
    def setStreamId(self, newStreamId: int) -> None: ...
    def getSystemUserName(self) -> str: ...
    def setSystemUserName(self, newSystemUserName: str) -> None: ...
    def getSystemPassword(self) -> str: ...
    def setSystemPassword(self, newSystemPassword: str) -> None: ...
    def getDomainName(self) -> str: ...
    def setDomainName(self, newDomainName: str) -> None: ...
    def getDvrEnabled(self) -> KalturaDVRStatus: ...
    def setDvrEnabled(self, newDvrEnabled: KalturaDVRStatus) -> None: ...
    def getDvrWindow(self) -> int: ...
    def setDvrWindow(self, newDvrWindow: int) -> None: ...
    def getPrimaryContact(self) -> str: ...
    def setPrimaryContact(self, newPrimaryContact: str) -> None: ...
    def getSecondaryContact(self) -> str: ...
    def setSecondaryContact(self, newSecondaryContact: str) -> None: ...
    def getStreamType(self) -> KalturaAkamaiUniversalStreamType: ...
    def setStreamType(self, newStreamType: KalturaAkamaiUniversalStreamType) -> None: ...
    def getNotificationEmail(self) -> str: ...
    def setNotificationEmail(self, newNotificationEmail: str) -> None: ...

class KalturaAnonymousIPCondition(KalturaMatchCondition):
    geoCoderType: KalturaGeoCoderType
    def __init__(self,
            type: KalturaConditionType = NotImplemented,
            description: str = NotImplemented,
            not_: bool = NotImplemented,
            values: List[KalturaStringValue] = NotImplemented,
            matchType: KalturaMatchConditionType = NotImplemented,
            geoCoderType: KalturaGeoCoderType = NotImplemented): ...

    def getGeoCoderType(self) -> KalturaGeoCoderType: ...
    def setGeoCoderType(self, newGeoCoderType: KalturaGeoCoderType) -> None: ...

class KalturaAppTokenFilter(KalturaAppTokenBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: str = NotImplemented,
            idIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            statusEqual: KalturaAppTokenStatus = NotImplemented,
            statusIn: str = NotImplemented,
            sessionUserIdEqual: str = NotImplemented): ...
        pass

class KalturaAssetParamsBaseFilter(KalturaRelatedFilter):
    idEqual: int
    idIn: str
    systemNameEqual: str
    systemNameIn: str
    isSystemDefaultEqual: KalturaNullableBoolean
    tagsEqual: str
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            systemNameEqual: str = NotImplemented,
            systemNameIn: str = NotImplemented,
            isSystemDefaultEqual: KalturaNullableBoolean = NotImplemented,
            tagsEqual: str = NotImplemented): ...

    def getIdEqual(self) -> int: ...
    def setIdEqual(self, newIdEqual: int) -> None: ...
    def getIdIn(self) -> str: ...
    def setIdIn(self, newIdIn: str) -> None: ...
    def getSystemNameEqual(self) -> str: ...
    def setSystemNameEqual(self, newSystemNameEqual: str) -> None: ...
    def getSystemNameIn(self) -> str: ...
    def setSystemNameIn(self, newSystemNameIn: str) -> None: ...
    def getIsSystemDefaultEqual(self) -> KalturaNullableBoolean: ...
    def setIsSystemDefaultEqual(self, newIsSystemDefaultEqual: KalturaNullableBoolean) -> None: ...
    def getTagsEqual(self) -> str: ...
    def setTagsEqual(self, newTagsEqual: str) -> None: ...

class KalturaAssetResource(KalturaContentResource):
    assetId: str
    def __init__(self,
            assetId: str = NotImplemented): ...

    def getAssetId(self) -> str: ...
    def setAssetId(self, newAssetId: str) -> None: ...

class KalturaBaseSyndicationFeedFilter(KalturaBaseSyndicationFeedBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented): ...
        pass

class KalturaBulkUploadFilter(KalturaBulkUploadBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            uploadedOnGreaterThanOrEqual: int = NotImplemented,
            uploadedOnLessThanOrEqual: int = NotImplemented,
            uploadedOnEqual: int = NotImplemented,
            statusIn: str = NotImplemented,
            statusEqual: KalturaBatchJobStatus = NotImplemented,
            bulkUploadObjectTypeEqual: KalturaBulkUploadObjectType = NotImplemented,
            bulkUploadObjectTypeIn: str = NotImplemented): ...
        pass

class KalturaCategoryBaseFilter(KalturaRelatedFilter):
    idEqual: int
    idIn: str
    idNotIn: str
    parentIdEqual: int
    parentIdIn: str
    depthEqual: int
    fullNameEqual: str
    fullNameStartsWith: str
    fullNameIn: str
    fullIdsEqual: str
    fullIdsStartsWith: str
    fullIdsMatchOr: str
    createdAtGreaterThanOrEqual: int
    createdAtLessThanOrEqual: int
    updatedAtGreaterThanOrEqual: int
    updatedAtLessThanOrEqual: int
    tagsLike: str
    tagsMultiLikeOr: str
    tagsMultiLikeAnd: str
    appearInListEqual: KalturaAppearInListType
    privacyEqual: KalturaPrivacyType
    privacyIn: str
    inheritanceTypeEqual: KalturaInheritanceType
    inheritanceTypeIn: str
    referenceIdEqual: str
    referenceIdEmpty: KalturaNullableBoolean
    contributionPolicyEqual: KalturaContributionPolicyType
    membersCountGreaterThanOrEqual: int
    membersCountLessThanOrEqual: int
    pendingMembersCountGreaterThanOrEqual: int
    pendingMembersCountLessThanOrEqual: int
    privacyContextEqual: str
    statusEqual: KalturaCategoryStatus
    statusIn: str
    inheritedParentIdEqual: int
    inheritedParentIdIn: str
    partnerSortValueGreaterThanOrEqual: int
    partnerSortValueLessThanOrEqual: int
    aggregationCategoriesMultiLikeOr: str
    aggregationCategoriesMultiLikeAnd: str
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            idNotIn: str = NotImplemented,
            parentIdEqual: int = NotImplemented,
            parentIdIn: str = NotImplemented,
            depthEqual: int = NotImplemented,
            fullNameEqual: str = NotImplemented,
            fullNameStartsWith: str = NotImplemented,
            fullNameIn: str = NotImplemented,
            fullIdsEqual: str = NotImplemented,
            fullIdsStartsWith: str = NotImplemented,
            fullIdsMatchOr: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            tagsLike: str = NotImplemented,
            tagsMultiLikeOr: str = NotImplemented,
            tagsMultiLikeAnd: str = NotImplemented,
            appearInListEqual: KalturaAppearInListType = NotImplemented,
            privacyEqual: KalturaPrivacyType = NotImplemented,
            privacyIn: str = NotImplemented,
            inheritanceTypeEqual: KalturaInheritanceType = NotImplemented,
            inheritanceTypeIn: str = NotImplemented,
            referenceIdEqual: str = NotImplemented,
            referenceIdEmpty: KalturaNullableBoolean = NotImplemented,
            contributionPolicyEqual: KalturaContributionPolicyType = NotImplemented,
            membersCountGreaterThanOrEqual: int = NotImplemented,
            membersCountLessThanOrEqual: int = NotImplemented,
            pendingMembersCountGreaterThanOrEqual: int = NotImplemented,
            pendingMembersCountLessThanOrEqual: int = NotImplemented,
            privacyContextEqual: str = NotImplemented,
            statusEqual: KalturaCategoryStatus = NotImplemented,
            statusIn: str = NotImplemented,
            inheritedParentIdEqual: int = NotImplemented,
            inheritedParentIdIn: str = NotImplemented,
            partnerSortValueGreaterThanOrEqual: int = NotImplemented,
            partnerSortValueLessThanOrEqual: int = NotImplemented,
            aggregationCategoriesMultiLikeOr: str = NotImplemented,
            aggregationCategoriesMultiLikeAnd: str = NotImplemented): ...

    def getIdEqual(self) -> int: ...
    def setIdEqual(self, newIdEqual: int) -> None: ...
    def getIdIn(self) -> str: ...
    def setIdIn(self, newIdIn: str) -> None: ...
    def getIdNotIn(self) -> str: ...
    def setIdNotIn(self, newIdNotIn: str) -> None: ...
    def getParentIdEqual(self) -> int: ...
    def setParentIdEqual(self, newParentIdEqual: int) -> None: ...
    def getParentIdIn(self) -> str: ...
    def setParentIdIn(self, newParentIdIn: str) -> None: ...
    def getDepthEqual(self) -> int: ...
    def setDepthEqual(self, newDepthEqual: int) -> None: ...
    def getFullNameEqual(self) -> str: ...
    def setFullNameEqual(self, newFullNameEqual: str) -> None: ...
    def getFullNameStartsWith(self) -> str: ...
    def setFullNameStartsWith(self, newFullNameStartsWith: str) -> None: ...
    def getFullNameIn(self) -> str: ...
    def setFullNameIn(self, newFullNameIn: str) -> None: ...
    def getFullIdsEqual(self) -> str: ...
    def setFullIdsEqual(self, newFullIdsEqual: str) -> None: ...
    def getFullIdsStartsWith(self) -> str: ...
    def setFullIdsStartsWith(self, newFullIdsStartsWith: str) -> None: ...
    def getFullIdsMatchOr(self) -> str: ...
    def setFullIdsMatchOr(self, newFullIdsMatchOr: str) -> None: ...
    def getCreatedAtGreaterThanOrEqual(self) -> int: ...
    def setCreatedAtGreaterThanOrEqual(self, newCreatedAtGreaterThanOrEqual: int) -> None: ...
    def getCreatedAtLessThanOrEqual(self) -> int: ...
    def setCreatedAtLessThanOrEqual(self, newCreatedAtLessThanOrEqual: int) -> None: ...
    def getUpdatedAtGreaterThanOrEqual(self) -> int: ...
    def setUpdatedAtGreaterThanOrEqual(self, newUpdatedAtGreaterThanOrEqual: int) -> None: ...
    def getUpdatedAtLessThanOrEqual(self) -> int: ...
    def setUpdatedAtLessThanOrEqual(self, newUpdatedAtLessThanOrEqual: int) -> None: ...
    def getTagsLike(self) -> str: ...
    def setTagsLike(self, newTagsLike: str) -> None: ...
    def getTagsMultiLikeOr(self) -> str: ...
    def setTagsMultiLikeOr(self, newTagsMultiLikeOr: str) -> None: ...
    def getTagsMultiLikeAnd(self) -> str: ...
    def setTagsMultiLikeAnd(self, newTagsMultiLikeAnd: str) -> None: ...
    def getAppearInListEqual(self) -> KalturaAppearInListType: ...
    def setAppearInListEqual(self, newAppearInListEqual: KalturaAppearInListType) -> None: ...
    def getPrivacyEqual(self) -> KalturaPrivacyType: ...
    def setPrivacyEqual(self, newPrivacyEqual: KalturaPrivacyType) -> None: ...
    def getPrivacyIn(self) -> str: ...
    def setPrivacyIn(self, newPrivacyIn: str) -> None: ...
    def getInheritanceTypeEqual(self) -> KalturaInheritanceType: ...
    def setInheritanceTypeEqual(self, newInheritanceTypeEqual: KalturaInheritanceType) -> None: ...
    def getInheritanceTypeIn(self) -> str: ...
    def setInheritanceTypeIn(self, newInheritanceTypeIn: str) -> None: ...
    def getReferenceIdEqual(self) -> str: ...
    def setReferenceIdEqual(self, newReferenceIdEqual: str) -> None: ...
    def getReferenceIdEmpty(self) -> KalturaNullableBoolean: ...
    def setReferenceIdEmpty(self, newReferenceIdEmpty: KalturaNullableBoolean) -> None: ...
    def getContributionPolicyEqual(self) -> KalturaContributionPolicyType: ...
    def setContributionPolicyEqual(self, newContributionPolicyEqual: KalturaContributionPolicyType) -> None: ...
    def getMembersCountGreaterThanOrEqual(self) -> int: ...
    def setMembersCountGreaterThanOrEqual(self, newMembersCountGreaterThanOrEqual: int) -> None: ...
    def getMembersCountLessThanOrEqual(self) -> int: ...
    def setMembersCountLessThanOrEqual(self, newMembersCountLessThanOrEqual: int) -> None: ...
    def getPendingMembersCountGreaterThanOrEqual(self) -> int: ...
    def setPendingMembersCountGreaterThanOrEqual(self, newPendingMembersCountGreaterThanOrEqual: int) -> None: ...
    def getPendingMembersCountLessThanOrEqual(self) -> int: ...
    def setPendingMembersCountLessThanOrEqual(self, newPendingMembersCountLessThanOrEqual: int) -> None: ...
    def getPrivacyContextEqual(self) -> str: ...
    def setPrivacyContextEqual(self, newPrivacyContextEqual: str) -> None: ...
    def getStatusEqual(self) -> KalturaCategoryStatus: ...
    def setStatusEqual(self, newStatusEqual: KalturaCategoryStatus) -> None: ...
    def getStatusIn(self) -> str: ...
    def setStatusIn(self, newStatusIn: str) -> None: ...
    def getInheritedParentIdEqual(self) -> int: ...
    def setInheritedParentIdEqual(self, newInheritedParentIdEqual: int) -> None: ...
    def getInheritedParentIdIn(self) -> str: ...
    def setInheritedParentIdIn(self, newInheritedParentIdIn: str) -> None: ...
    def getPartnerSortValueGreaterThanOrEqual(self) -> int: ...
    def setPartnerSortValueGreaterThanOrEqual(self, newPartnerSortValueGreaterThanOrEqual: int) -> None: ...
    def getPartnerSortValueLessThanOrEqual(self) -> int: ...
    def setPartnerSortValueLessThanOrEqual(self, newPartnerSortValueLessThanOrEqual: int) -> None: ...
    def getAggregationCategoriesMultiLikeOr(self) -> str: ...
    def setAggregationCategoriesMultiLikeOr(self, newAggregationCategoriesMultiLikeOr: str) -> None: ...
    def getAggregationCategoriesMultiLikeAnd(self) -> str: ...
    def setAggregationCategoriesMultiLikeAnd(self, newAggregationCategoriesMultiLikeAnd: str) -> None: ...

class KalturaCategoryEntryBaseFilter(KalturaRelatedFilter):
    categoryIdEqual: int
    categoryIdIn: str
    entryIdEqual: str
    entryIdIn: str
    createdAtGreaterThanOrEqual: int
    createdAtLessThanOrEqual: int
    categoryFullIdsStartsWith: str
    statusEqual: KalturaCategoryEntryStatus
    statusIn: str
    creatorUserIdEqual: str
    creatorUserIdIn: str
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            categoryIdEqual: int = NotImplemented,
            categoryIdIn: str = NotImplemented,
            entryIdEqual: str = NotImplemented,
            entryIdIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            categoryFullIdsStartsWith: str = NotImplemented,
            statusEqual: KalturaCategoryEntryStatus = NotImplemented,
            statusIn: str = NotImplemented,
            creatorUserIdEqual: str = NotImplemented,
            creatorUserIdIn: str = NotImplemented): ...

    def getCategoryIdEqual(self) -> int: ...
    def setCategoryIdEqual(self, newCategoryIdEqual: int) -> None: ...
    def getCategoryIdIn(self) -> str: ...
    def setCategoryIdIn(self, newCategoryIdIn: str) -> None: ...
    def getEntryIdEqual(self) -> str: ...
    def setEntryIdEqual(self, newEntryIdEqual: str) -> None: ...
    def getEntryIdIn(self) -> str: ...
    def setEntryIdIn(self, newEntryIdIn: str) -> None: ...
    def getCreatedAtGreaterThanOrEqual(self) -> int: ...
    def setCreatedAtGreaterThanOrEqual(self, newCreatedAtGreaterThanOrEqual: int) -> None: ...
    def getCreatedAtLessThanOrEqual(self) -> int: ...
    def setCreatedAtLessThanOrEqual(self, newCreatedAtLessThanOrEqual: int) -> None: ...
    def getCategoryFullIdsStartsWith(self) -> str: ...
    def setCategoryFullIdsStartsWith(self, newCategoryFullIdsStartsWith: str) -> None: ...
    def getStatusEqual(self) -> KalturaCategoryEntryStatus: ...
    def setStatusEqual(self, newStatusEqual: KalturaCategoryEntryStatus) -> None: ...
    def getStatusIn(self) -> str: ...
    def setStatusIn(self, newStatusIn: str) -> None: ...
    def getCreatorUserIdEqual(self) -> str: ...
    def setCreatorUserIdEqual(self, newCreatorUserIdEqual: str) -> None: ...
    def getCreatorUserIdIn(self) -> str: ...
    def setCreatorUserIdIn(self, newCreatorUserIdIn: str) -> None: ...

class KalturaClippingTaskEntryServerNode(KalturaTaskEntryServerNode):
    clipAttributes: KalturaClipAttributes
    clippedEntryId: str
    liveEntryId: str
    def __init__(self,
            id: int = NotImplemented,
            entryId: str = NotImplemented,
            serverNodeId: int = NotImplemented,
            partnerId: int = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            status: KalturaEntryServerNodeStatus = NotImplemented,
            serverType: KalturaEntryServerNodeType = NotImplemented,
            clipAttributes: KalturaClipAttributes = NotImplemented,
            clippedEntryId: str = NotImplemented,
            liveEntryId: str = NotImplemented): ...

    def getClipAttributes(self) -> KalturaClipAttributes: ...
    def setClipAttributes(self, newClipAttributes: KalturaClipAttributes) -> None: ...
    def getClippedEntryId(self) -> str: ...
    def setClippedEntryId(self, newClippedEntryId: str) -> None: ...
    def getLiveEntryId(self) -> str: ...
    def setLiveEntryId(self, newLiveEntryId: str) -> None: ...

class KalturaControlPanelCommandFilter(KalturaControlPanelCommandBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            createdByIdEqual: int = NotImplemented,
            typeEqual: KalturaControlPanelCommandType = NotImplemented,
            typeIn: str = NotImplemented,
            targetTypeEqual: KalturaControlPanelCommandTargetType = NotImplemented,
            targetTypeIn: str = NotImplemented,
            statusEqual: KalturaControlPanelCommandStatus = NotImplemented,
            statusIn: str = NotImplemented): ...
        pass

class KalturaConversionProfileAssetParamsBaseFilter(KalturaRelatedFilter):
    conversionProfileIdEqual: int
    conversionProfileIdIn: str
    assetParamsIdEqual: int
    assetParamsIdIn: str
    readyBehaviorEqual: KalturaFlavorReadyBehaviorType
    readyBehaviorIn: str
    originEqual: KalturaAssetParamsOrigin
    originIn: str
    systemNameEqual: str
    systemNameIn: str
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            conversionProfileIdEqual: int = NotImplemented,
            conversionProfileIdIn: str = NotImplemented,
            assetParamsIdEqual: int = NotImplemented,
            assetParamsIdIn: str = NotImplemented,
            readyBehaviorEqual: KalturaFlavorReadyBehaviorType = NotImplemented,
            readyBehaviorIn: str = NotImplemented,
            originEqual: KalturaAssetParamsOrigin = NotImplemented,
            originIn: str = NotImplemented,
            systemNameEqual: str = NotImplemented,
            systemNameIn: str = NotImplemented): ...

    def getConversionProfileIdEqual(self) -> int: ...
    def setConversionProfileIdEqual(self, newConversionProfileIdEqual: int) -> None: ...
    def getConversionProfileIdIn(self) -> str: ...
    def setConversionProfileIdIn(self, newConversionProfileIdIn: str) -> None: ...
    def getAssetParamsIdEqual(self) -> int: ...
    def setAssetParamsIdEqual(self, newAssetParamsIdEqual: int) -> None: ...
    def getAssetParamsIdIn(self) -> str: ...
    def setAssetParamsIdIn(self, newAssetParamsIdIn: str) -> None: ...
    def getReadyBehaviorEqual(self) -> KalturaFlavorReadyBehaviorType: ...
    def setReadyBehaviorEqual(self, newReadyBehaviorEqual: KalturaFlavorReadyBehaviorType) -> None: ...
    def getReadyBehaviorIn(self) -> str: ...
    def setReadyBehaviorIn(self, newReadyBehaviorIn: str) -> None: ...
    def getOriginEqual(self) -> KalturaAssetParamsOrigin: ...
    def setOriginEqual(self, newOriginEqual: KalturaAssetParamsOrigin) -> None: ...
    def getOriginIn(self) -> str: ...
    def setOriginIn(self, newOriginIn: str) -> None: ...
    def getSystemNameEqual(self) -> str: ...
    def setSystemNameEqual(self, newSystemNameEqual: str) -> None: ...
    def getSystemNameIn(self) -> str: ...
    def setSystemNameIn(self, newSystemNameIn: str) -> None: ...

class KalturaConversionProfileBaseFilter(KalturaRelatedFilter):
    idEqual: int
    idIn: str
    statusEqual: KalturaConversionProfileStatus
    statusIn: str
    typeEqual: KalturaConversionProfileType
    typeIn: str
    nameEqual: str
    systemNameEqual: str
    systemNameIn: str
    tagsMultiLikeOr: str
    tagsMultiLikeAnd: str
    defaultEntryIdEqual: str
    defaultEntryIdIn: str
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            statusEqual: KalturaConversionProfileStatus = NotImplemented,
            statusIn: str = NotImplemented,
            typeEqual: KalturaConversionProfileType = NotImplemented,
            typeIn: str = NotImplemented,
            nameEqual: str = NotImplemented,
            systemNameEqual: str = NotImplemented,
            systemNameIn: str = NotImplemented,
            tagsMultiLikeOr: str = NotImplemented,
            tagsMultiLikeAnd: str = NotImplemented,
            defaultEntryIdEqual: str = NotImplemented,
            defaultEntryIdIn: str = NotImplemented): ...

    def getIdEqual(self) -> int: ...
    def setIdEqual(self, newIdEqual: int) -> None: ...
    def getIdIn(self) -> str: ...
    def setIdIn(self, newIdIn: str) -> None: ...
    def getStatusEqual(self) -> KalturaConversionProfileStatus: ...
    def setStatusEqual(self, newStatusEqual: KalturaConversionProfileStatus) -> None: ...
    def getStatusIn(self) -> str: ...
    def setStatusIn(self, newStatusIn: str) -> None: ...
    def getTypeEqual(self) -> KalturaConversionProfileType: ...
    def setTypeEqual(self, newTypeEqual: KalturaConversionProfileType) -> None: ...
    def getTypeIn(self) -> str: ...
    def setTypeIn(self, newTypeIn: str) -> None: ...
    def getNameEqual(self) -> str: ...
    def setNameEqual(self, newNameEqual: str) -> None: ...
    def getSystemNameEqual(self) -> str: ...
    def setSystemNameEqual(self, newSystemNameEqual: str) -> None: ...
    def getSystemNameIn(self) -> str: ...
    def setSystemNameIn(self, newSystemNameIn: str) -> None: ...
    def getTagsMultiLikeOr(self) -> str: ...
    def setTagsMultiLikeOr(self, newTagsMultiLikeOr: str) -> None: ...
    def getTagsMultiLikeAnd(self) -> str: ...
    def setTagsMultiLikeAnd(self, newTagsMultiLikeAnd: str) -> None: ...
    def getDefaultEntryIdEqual(self) -> str: ...
    def setDefaultEntryIdEqual(self, newDefaultEntryIdEqual: str) -> None: ...
    def getDefaultEntryIdIn(self) -> str: ...
    def setDefaultEntryIdIn(self, newDefaultEntryIdIn: str) -> None: ...

class KalturaConvertCollectionJobData(KalturaConvartableJobData):
    destDirLocalPath: str
    destDirRemoteUrl: str
    destFileName: str
    inputXmlLocalPath: str
    inputXmlRemoteUrl: str
    commandLinesStr: str
    flavors: List[KalturaConvertCollectionFlavorData]
    def __init__(self,
            srcFileSyncLocalPath: str = NotImplemented,
            actualSrcFileSyncLocalPath: str = NotImplemented,
            srcFileSyncRemoteUrl: str = NotImplemented,
            srcFileSyncs: List[KalturaSourceFileSyncDescriptor] = NotImplemented,
            engineVersion: int = NotImplemented,
            flavorParamsOutputId: int = NotImplemented,
            flavorParamsOutput: KalturaFlavorParamsOutput = NotImplemented,
            mediaInfoId: int = NotImplemented,
            currentOperationSet: int = NotImplemented,
            currentOperationIndex: int = NotImplemented,
            pluginData: List[KalturaKeyValue] = NotImplemented,
            destDirLocalPath: str = NotImplemented,
            destDirRemoteUrl: str = NotImplemented,
            destFileName: str = NotImplemented,
            inputXmlLocalPath: str = NotImplemented,
            inputXmlRemoteUrl: str = NotImplemented,
            commandLinesStr: str = NotImplemented,
            flavors: List[KalturaConvertCollectionFlavorData] = NotImplemented): ...

    def getDestDirLocalPath(self) -> str: ...
    def setDestDirLocalPath(self, newDestDirLocalPath: str) -> None: ...
    def getDestDirRemoteUrl(self) -> str: ...
    def setDestDirRemoteUrl(self, newDestDirRemoteUrl: str) -> None: ...
    def getDestFileName(self) -> str: ...
    def setDestFileName(self, newDestFileName: str) -> None: ...
    def getInputXmlLocalPath(self) -> str: ...
    def setInputXmlLocalPath(self, newInputXmlLocalPath: str) -> None: ...
    def getInputXmlRemoteUrl(self) -> str: ...
    def setInputXmlRemoteUrl(self, newInputXmlRemoteUrl: str) -> None: ...
    def getCommandLinesStr(self) -> str: ...
    def setCommandLinesStr(self, newCommandLinesStr: str) -> None: ...
    def getFlavors(self) -> List[KalturaConvertCollectionFlavorData]: ...
    def setFlavors(self, newFlavors: List[KalturaConvertCollectionFlavorData]) -> None: ...

class KalturaConvertJobData(KalturaConvartableJobData):
    destFileSyncLocalPath: str
    destFileSyncRemoteUrl: str
    logFileSyncLocalPath: str
    logFileSyncRemoteUrl: str
    flavorAssetId: str
    remoteMediaId: str
    customData: str
    extraDestFileSyncs: List[KalturaDestFileSyncDescriptor]
    engineMessage: str
    destFileSyncSharedPath: str
    userCpu: int
    estimatedEffort: int
    def __init__(self,
            srcFileSyncLocalPath: str = NotImplemented,
            actualSrcFileSyncLocalPath: str = NotImplemented,
            srcFileSyncRemoteUrl: str = NotImplemented,
            srcFileSyncs: List[KalturaSourceFileSyncDescriptor] = NotImplemented,
            engineVersion: int = NotImplemented,
            flavorParamsOutputId: int = NotImplemented,
            flavorParamsOutput: KalturaFlavorParamsOutput = NotImplemented,
            mediaInfoId: int = NotImplemented,
            currentOperationSet: int = NotImplemented,
            currentOperationIndex: int = NotImplemented,
            pluginData: List[KalturaKeyValue] = NotImplemented,
            destFileSyncLocalPath: str = NotImplemented,
            destFileSyncRemoteUrl: str = NotImplemented,
            logFileSyncLocalPath: str = NotImplemented,
            logFileSyncRemoteUrl: str = NotImplemented,
            flavorAssetId: str = NotImplemented,
            remoteMediaId: str = NotImplemented,
            customData: str = NotImplemented,
            extraDestFileSyncs: List[KalturaDestFileSyncDescriptor] = NotImplemented,
            engineMessage: str = NotImplemented,
            destFileSyncSharedPath: str = NotImplemented,
            userCpu: int = NotImplemented,
            estimatedEffort: int = NotImplemented): ...

    def getDestFileSyncLocalPath(self) -> str: ...
    def setDestFileSyncLocalPath(self, newDestFileSyncLocalPath: str) -> None: ...
    def getDestFileSyncRemoteUrl(self) -> str: ...
    def setDestFileSyncRemoteUrl(self, newDestFileSyncRemoteUrl: str) -> None: ...
    def getLogFileSyncLocalPath(self) -> str: ...
    def setLogFileSyncLocalPath(self, newLogFileSyncLocalPath: str) -> None: ...
    def getLogFileSyncRemoteUrl(self) -> str: ...
    def setLogFileSyncRemoteUrl(self, newLogFileSyncRemoteUrl: str) -> None: ...
    def getFlavorAssetId(self) -> str: ...
    def setFlavorAssetId(self, newFlavorAssetId: str) -> None: ...
    def getRemoteMediaId(self) -> str: ...
    def setRemoteMediaId(self, newRemoteMediaId: str) -> None: ...
    def getCustomData(self) -> str: ...
    def setCustomData(self, newCustomData: str) -> None: ...
    def getExtraDestFileSyncs(self) -> List[KalturaDestFileSyncDescriptor]: ...
    def setExtraDestFileSyncs(self, newExtraDestFileSyncs: List[KalturaDestFileSyncDescriptor]) -> None: ...
    def getEngineMessage(self) -> str: ...
    def setEngineMessage(self, newEngineMessage: str) -> None: ...
    def getDestFileSyncSharedPath(self) -> str: ...
    def setDestFileSyncSharedPath(self, newDestFileSyncSharedPath: str) -> None: ...
    def getUserCpu(self) -> int: ...
    def setUserCpu(self, newUserCpu: int) -> None: ...
    def getEstimatedEffort(self) -> int: ...
    def setEstimatedEffort(self, newEstimatedEffort: int) -> None: ...

class KalturaCountryCondition(KalturaMatchCondition):
    geoCoderType: KalturaGeoCoderType
    def __init__(self,
            type: KalturaConditionType = NotImplemented,
            description: str = NotImplemented,
            not_: bool = NotImplemented,
            values: List[KalturaStringValue] = NotImplemented,
            matchType: KalturaMatchConditionType = NotImplemented,
            geoCoderType: KalturaGeoCoderType = NotImplemented): ...

    def getGeoCoderType(self) -> KalturaGeoCoderType: ...
    def setGeoCoderType(self, newGeoCoderType: KalturaGeoCoderType) -> None: ...

class KalturaDeliveryProfileAkamaiHttp(KalturaDeliveryProfileHttp):
    useIntelliseek: bool
    def __init__(self,
            id: int = NotImplemented,
            partnerId: int = NotImplemented,
            name: str = NotImplemented,
            type: KalturaDeliveryProfileType = NotImplemented,
            systemName: str = NotImplemented,
            description: str = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            streamerType: KalturaPlaybackProtocol = NotImplemented,
            url: str = NotImplemented,
            hostName: str = NotImplemented,
            status: KalturaDeliveryStatus = NotImplemented,
            recognizer: KalturaUrlRecognizer = NotImplemented,
            tokenizer: KalturaUrlTokenizer = NotImplemented,
            isDefault: KalturaNullableBoolean = NotImplemented,
            parentId: int = NotImplemented,
            mediaProtocols: str = NotImplemented,
            priority: int = NotImplemented,
            extraParams: str = NotImplemented,
            supplementaryAssetsFilter: KalturaAssetFilter = NotImplemented,
            enforceDeliveriesSupport: str = NotImplemented,
            maxSize: int = NotImplemented,
            useIntelliseek: bool = NotImplemented): ...

    def getUseIntelliseek(self) -> bool: ...
    def setUseIntelliseek(self, newUseIntelliseek: bool) -> None: ...

class KalturaDeliveryProfileFilter(KalturaDeliveryProfileBaseFilter):
    isLive: KalturaNullableBoolean
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            systemNameEqual: str = NotImplemented,
            systemNameIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            streamerTypeEqual: KalturaPlaybackProtocol = NotImplemented,
            statusEqual: KalturaDeliveryStatus = NotImplemented,
            statusIn: str = NotImplemented,
            isLive: KalturaNullableBoolean = NotImplemented): ...

    def getIsLive(self) -> KalturaNullableBoolean: ...
    def setIsLive(self, newIsLive: KalturaNullableBoolean) -> None: ...

class KalturaDeliveryProfileGenericHttp(KalturaDeliveryProfileHttp):
    pattern: str
    def __init__(self,
            id: int = NotImplemented,
            partnerId: int = NotImplemented,
            name: str = NotImplemented,
            type: KalturaDeliveryProfileType = NotImplemented,
            systemName: str = NotImplemented,
            description: str = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            streamerType: KalturaPlaybackProtocol = NotImplemented,
            url: str = NotImplemented,
            hostName: str = NotImplemented,
            status: KalturaDeliveryStatus = NotImplemented,
            recognizer: KalturaUrlRecognizer = NotImplemented,
            tokenizer: KalturaUrlTokenizer = NotImplemented,
            isDefault: KalturaNullableBoolean = NotImplemented,
            parentId: int = NotImplemented,
            mediaProtocols: str = NotImplemented,
            priority: int = NotImplemented,
            extraParams: str = NotImplemented,
            supplementaryAssetsFilter: KalturaAssetFilter = NotImplemented,
            enforceDeliveriesSupport: str = NotImplemented,
            maxSize: int = NotImplemented,
            pattern: str = NotImplemented): ...

    def getPattern(self) -> str: ...
    def setPattern(self, newPattern: str) -> None: ...

class KalturaDeliveryProfileGenericRtmp(KalturaDeliveryProfileRtmp):
    pattern: str
    rendererClass: str
    def __init__(self,
            id: int = NotImplemented,
            partnerId: int = NotImplemented,
            name: str = NotImplemented,
            type: KalturaDeliveryProfileType = NotImplemented,
            systemName: str = NotImplemented,
            description: str = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            streamerType: KalturaPlaybackProtocol = NotImplemented,
            url: str = NotImplemented,
            hostName: str = NotImplemented,
            status: KalturaDeliveryStatus = NotImplemented,
            recognizer: KalturaUrlRecognizer = NotImplemented,
            tokenizer: KalturaUrlTokenizer = NotImplemented,
            isDefault: KalturaNullableBoolean = NotImplemented,
            parentId: int = NotImplemented,
            mediaProtocols: str = NotImplemented,
            priority: int = NotImplemented,
            extraParams: str = NotImplemented,
            supplementaryAssetsFilter: KalturaAssetFilter = NotImplemented,
            enforceDeliveriesSupport: str = NotImplemented,
            enforceRtmpe: bool = NotImplemented,
            prefix: str = NotImplemented,
            pattern: str = NotImplemented,
            rendererClass: str = NotImplemented): ...

    def getPattern(self) -> str: ...
    def setPattern(self, newPattern: str) -> None: ...
    def getRendererClass(self) -> str: ...
    def setRendererClass(self, newRendererClass: str) -> None: ...

class KalturaDeliveryProfileLivePackagerHls(KalturaDeliveryProfileLivePackager):
    disableExtraAttributes: bool
    forceProxy: bool
    def __init__(self,
            id: int = NotImplemented,
            partnerId: int = NotImplemented,
            name: str = NotImplemented,
            type: KalturaDeliveryProfileType = NotImplemented,
            systemName: str = NotImplemented,
            description: str = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            streamerType: KalturaPlaybackProtocol = NotImplemented,
            url: str = NotImplemented,
            hostName: str = NotImplemented,
            status: KalturaDeliveryStatus = NotImplemented,
            recognizer: KalturaUrlRecognizer = NotImplemented,
            tokenizer: KalturaUrlTokenizer = NotImplemented,
            isDefault: KalturaNullableBoolean = NotImplemented,
            parentId: int = NotImplemented,
            mediaProtocols: str = NotImplemented,
            priority: int = NotImplemented,
            extraParams: str = NotImplemented,
            supplementaryAssetsFilter: KalturaAssetFilter = NotImplemented,
            enforceDeliveriesSupport: str = NotImplemented,
            livePackagerSigningDomain: str = NotImplemented,
            shouldRedirect: bool = NotImplemented,
            disableExtraAttributes: bool = NotImplemented,
            forceProxy: bool = NotImplemented): ...

    def getDisableExtraAttributes(self) -> bool: ...
    def setDisableExtraAttributes(self, newDisableExtraAttributes: bool) -> None: ...
    def getForceProxy(self) -> bool: ...
    def setForceProxy(self, newForceProxy: bool) -> None: ...

class KalturaDeliveryProfileVodPackagerPlayServer(KalturaDeliveryProfileVod):
    adStitchingEnabled: bool
    def __init__(self,
            id: int = NotImplemented,
            partnerId: int = NotImplemented,
            name: str = NotImplemented,
            type: KalturaDeliveryProfileType = NotImplemented,
            systemName: str = NotImplemented,
            description: str = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            streamerType: KalturaPlaybackProtocol = NotImplemented,
            url: str = NotImplemented,
            hostName: str = NotImplemented,
            status: KalturaDeliveryStatus = NotImplemented,
            recognizer: KalturaUrlRecognizer = NotImplemented,
            tokenizer: KalturaUrlTokenizer = NotImplemented,
            isDefault: KalturaNullableBoolean = NotImplemented,
            parentId: int = NotImplemented,
            mediaProtocols: str = NotImplemented,
            priority: int = NotImplemented,
            extraParams: str = NotImplemented,
            supplementaryAssetsFilter: KalturaAssetFilter = NotImplemented,
            enforceDeliveriesSupport: str = NotImplemented,
            simuliveSupport: bool = NotImplemented,
            adStitchingEnabled: bool = NotImplemented): ...

    def getAdStitchingEnabled(self) -> bool: ...
    def setAdStitchingEnabled(self, newAdStitchingEnabled: bool) -> None: ...

class KalturaEdgeServerNode(KalturaDeliveryServerNode):
    playbackDomain: str
    def __init__(self,
            id: int = NotImplemented,
            partnerId: int = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            heartbeatTime: int = NotImplemented,
            name: str = NotImplemented,
            systemName: str = NotImplemented,
            description: str = NotImplemented,
            hostName: str = NotImplemented,
            status: KalturaServerNodeStatus = NotImplemented,
            type: KalturaServerNodeType = NotImplemented,
            tags: str = NotImplemented,
            dc: int = NotImplemented,
            parentId: str = NotImplemented,
            environment: str = NotImplemented,
            deliveryProfileIds: List[KalturaKeyValue] = NotImplemented,
            config: str = NotImplemented,
            playbackDomain: str = NotImplemented): ...

    def getPlaybackDomain(self) -> str: ...
    def setPlaybackDomain(self, newPlaybackDomain: str) -> None: ...

class KalturaEndUserReportInputFilter(KalturaReportInputFilter):
    application: str
    userIds: str
    playbackContext: str
    ancestorPlaybackContext: str
    def __init__(self,
            fromDate: int = NotImplemented,
            toDate: int = NotImplemented,
            fromDay: str = NotImplemented,
            toDay: str = NotImplemented,
            keywords: str = NotImplemented,
            searchInTags: bool = NotImplemented,
            searchInAdminTags: bool = NotImplemented,
            categories: str = NotImplemented,
            categoriesIdsIn: str = NotImplemented,
            customVar1In: str = NotImplemented,
            customVar2In: str = NotImplemented,
            customVar3In: str = NotImplemented,
            deviceIn: str = NotImplemented,
            countryIn: str = NotImplemented,
            regionIn: str = NotImplemented,
            citiesIn: str = NotImplemented,
            operatingSystemFamilyIn: str = NotImplemented,
            operatingSystemIn: str = NotImplemented,
            browserFamilyIn: str = NotImplemented,
            browserIn: str = NotImplemented,
            timeZoneOffset: int = NotImplemented,
            interval: KalturaReportInterval = NotImplemented,
            mediaTypeIn: str = NotImplemented,
            sourceTypeIn: str = NotImplemented,
            ownerIdsIn: str = NotImplemented,
            entryOperator: KalturaESearchEntryOperator = NotImplemented,
            entryCreatedAtGreaterThanOrEqual: int = NotImplemented,
            entryCreatedAtLessThanOrEqual: int = NotImplemented,
            entryIdIn: str = NotImplemented,
            playbackTypeIn: str = NotImplemented,
            playbackContextIdsIn: str = NotImplemented,
            rootEntryIdIn: str = NotImplemented,
            errorCodeIn: str = NotImplemented,
            playerVersionIn: str = NotImplemented,
            ispIn: str = NotImplemented,
            applicationVersionIn: str = NotImplemented,
            nodeIdsIn: str = NotImplemented,
            categoriesAncestorIdIn: str = NotImplemented,
            hotspotIdIn: str = NotImplemented,
            crmIdIn: str = NotImplemented,
            playlistIdIn: str = NotImplemented,
            domainIn: str = NotImplemented,
            canonicalUrlIn: str = NotImplemented,
            virtualEventIdIn: str = NotImplemented,
            originIn: str = NotImplemented,
            uiConfIdIn: str = NotImplemented,
            cuePointIdIn: str = NotImplemented,
            contextIdIn: str = NotImplemented,
            roleIn: str = NotImplemented,
            industryIn: str = NotImplemented,
            playbackModeIn: str = NotImplemented,
            companyIn: str = NotImplemented,
            eventSessionContextIdIn: str = NotImplemented,
            application: str = NotImplemented,
            userIds: str = NotImplemented,
            playbackContext: str = NotImplemented,
            ancestorPlaybackContext: str = NotImplemented): ...

    def getApplication(self) -> str: ...
    def setApplication(self, newApplication: str) -> None: ...
    def getUserIds(self) -> str: ...
    def setUserIds(self, newUserIds: str) -> None: ...
    def getPlaybackContext(self) -> str: ...
    def setPlaybackContext(self, newPlaybackContext: str) -> None: ...
    def getAncestorPlaybackContext(self) -> str: ...
    def setAncestorPlaybackContext(self, newAncestorPlaybackContext: str) -> None: ...

class KalturaEntryIndexAdvancedFilter(KalturaIndexAdvancedFilter):
    def __init__(self,
            indexIdGreaterThan: int = NotImplemented,
            depthGreaterThanEqual: int = NotImplemented): ...
        pass

class KalturaEntryReferrerLiveStats(KalturaEntryLiveStats):
    referrer: str
    def __init__(self,
            audience: int = NotImplemented,
            dvrAudience: int = NotImplemented,
            avgBitrate: float = NotImplemented,
            bufferTime: int = NotImplemented,
            plays: int = NotImplemented,
            secondsViewed: int = NotImplemented,
            startEvent: int = NotImplemented,
            timestamp: int = NotImplemented,
            entryId: str = NotImplemented,
            peakAudience: int = NotImplemented,
            peakDvrAudience: int = NotImplemented,
            referrer: str = NotImplemented): ...

    def getReferrer(self) -> str: ...
    def setReferrer(self, newReferrer: str) -> None: ...

class KalturaEntryResource(KalturaContentResource):
    entryId: str
    flavorParamsId: int
    def __init__(self,
            entryId: str = NotImplemented,
            flavorParamsId: int = NotImplemented): ...

    def getEntryId(self) -> str: ...
    def setEntryId(self, newEntryId: str) -> None: ...
    def getFlavorParamsId(self) -> int: ...
    def setFlavorParamsId(self, newFlavorParamsId: int) -> None: ...

class KalturaEntryServerNodeFilter(KalturaEntryServerNodeBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            entryIdEqual: str = NotImplemented,
            entryIdIn: str = NotImplemented,
            serverNodeIdEqual: int = NotImplemented,
            serverNodeIdIn: str = NotImplemented,
            serverNodeIdNotIn: str = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            statusEqual: KalturaEntryServerNodeStatus = NotImplemented,
            statusIn: str = NotImplemented,
            serverTypeEqual: KalturaEntryServerNodeType = NotImplemented,
            serverTypeIn: str = NotImplemented,
            serverTypeNotIn: str = NotImplemented): ...
        pass

class KalturaExtractMediaJobData(KalturaConvartableJobData):
    flavorAssetId: str
    calculateComplexity: bool
    extractId3Tags: bool
    destDataFilePath: str
    detectGOP: int
    def __init__(self,
            srcFileSyncLocalPath: str = NotImplemented,
            actualSrcFileSyncLocalPath: str = NotImplemented,
            srcFileSyncRemoteUrl: str = NotImplemented,
            srcFileSyncs: List[KalturaSourceFileSyncDescriptor] = NotImplemented,
            engineVersion: int = NotImplemented,
            flavorParamsOutputId: int = NotImplemented,
            flavorParamsOutput: KalturaFlavorParamsOutput = NotImplemented,
            mediaInfoId: int = NotImplemented,
            currentOperationSet: int = NotImplemented,
            currentOperationIndex: int = NotImplemented,
            pluginData: List[KalturaKeyValue] = NotImplemented,
            flavorAssetId: str = NotImplemented,
            calculateComplexity: bool = NotImplemented,
            extractId3Tags: bool = NotImplemented,
            destDataFilePath: str = NotImplemented,
            detectGOP: int = NotImplemented): ...

    def getFlavorAssetId(self) -> str: ...
    def setFlavorAssetId(self, newFlavorAssetId: str) -> None: ...
    def getCalculateComplexity(self) -> bool: ...
    def setCalculateComplexity(self, newCalculateComplexity: bool) -> None: ...
    def getExtractId3Tags(self) -> bool: ...
    def setExtractId3Tags(self, newExtractId3Tags: bool) -> None: ...
    def getDestDataFilePath(self) -> str: ...
    def setDestDataFilePath(self, newDestDataFilePath: str) -> None: ...
    def getDetectGOP(self) -> int: ...
    def setDetectGOP(self, newDetectGOP: int) -> None: ...

class KalturaFairPlayPlaybackPluginData(KalturaDrmPlaybackPluginData):
    certificate: str
    def __init__(self,
            scheme: KalturaDrmSchemeName = NotImplemented,
            licenseURL: str = NotImplemented,
            certificate: str = NotImplemented): ...

    def getCertificate(self) -> str: ...
    def setCertificate(self, newCertificate: str) -> None: ...

class KalturaIntegerField(KalturaIntegerValue):
    def __init__(self,
            description: str = NotImplemented,
            value: int = NotImplemented): ...
        pass

class KalturaFieldCompareCondition(KalturaCompareCondition):
    field: KalturaIntegerField
    def __init__(self,
            type: KalturaConditionType = NotImplemented,
            description: str = NotImplemented,
            not_: bool = NotImplemented,
            value: KalturaIntegerValue = NotImplemented,
            comparison: KalturaSearchConditionComparison = NotImplemented,
            field: KalturaIntegerField = NotImplemented): ...

    def getField(self) -> KalturaIntegerField: ...
    def setField(self, newField: KalturaIntegerField) -> None: ...

class KalturaStringField(KalturaStringValue):
    def __init__(self,
            description: str = NotImplemented,
            value: str = NotImplemented): ...
        pass

class KalturaFieldMatchCondition(KalturaMatchCondition):
    field: KalturaStringField
    def __init__(self,
            type: KalturaConditionType = NotImplemented,
            description: str = NotImplemented,
            not_: bool = NotImplemented,
            values: List[KalturaStringValue] = NotImplemented,
            matchType: KalturaMatchConditionType = NotImplemented,
            field: KalturaStringField = NotImplemented): ...

    def getField(self) -> KalturaStringField: ...
    def setField(self, newField: KalturaStringField) -> None: ...

class KalturaFileAssetBaseFilter(KalturaRelatedFilter):
    idEqual: int
    idIn: str
    partnerIdEqual: int
    fileAssetObjectTypeEqual: KalturaFileAssetObjectType
    objectIdEqual: str
    objectIdIn: str
    createdAtGreaterThanOrEqual: int
    createdAtLessThanOrEqual: int
    updatedAtGreaterThanOrEqual: int
    updatedAtLessThanOrEqual: int
    statusEqual: KalturaFileAssetStatus
    statusIn: str
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            fileAssetObjectTypeEqual: KalturaFileAssetObjectType = NotImplemented,
            objectIdEqual: str = NotImplemented,
            objectIdIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            statusEqual: KalturaFileAssetStatus = NotImplemented,
            statusIn: str = NotImplemented): ...

    def getIdEqual(self) -> int: ...
    def setIdEqual(self, newIdEqual: int) -> None: ...
    def getIdIn(self) -> str: ...
    def setIdIn(self, newIdIn: str) -> None: ...
    def getPartnerIdEqual(self) -> int: ...
    def setPartnerIdEqual(self, newPartnerIdEqual: int) -> None: ...
    def getFileAssetObjectTypeEqual(self) -> KalturaFileAssetObjectType: ...
    def setFileAssetObjectTypeEqual(self, newFileAssetObjectTypeEqual: KalturaFileAssetObjectType) -> None: ...
    def getObjectIdEqual(self) -> str: ...
    def setObjectIdEqual(self, newObjectIdEqual: str) -> None: ...
    def getObjectIdIn(self) -> str: ...
    def setObjectIdIn(self, newObjectIdIn: str) -> None: ...
    def getCreatedAtGreaterThanOrEqual(self) -> int: ...
    def setCreatedAtGreaterThanOrEqual(self, newCreatedAtGreaterThanOrEqual: int) -> None: ...
    def getCreatedAtLessThanOrEqual(self) -> int: ...
    def setCreatedAtLessThanOrEqual(self, newCreatedAtLessThanOrEqual: int) -> None: ...
    def getUpdatedAtGreaterThanOrEqual(self) -> int: ...
    def setUpdatedAtGreaterThanOrEqual(self, newUpdatedAtGreaterThanOrEqual: int) -> None: ...
    def getUpdatedAtLessThanOrEqual(self) -> int: ...
    def setUpdatedAtLessThanOrEqual(self, newUpdatedAtLessThanOrEqual: int) -> None: ...
    def getStatusEqual(self) -> KalturaFileAssetStatus: ...
    def setStatusEqual(self, newStatusEqual: KalturaFileAssetStatus) -> None: ...
    def getStatusIn(self) -> str: ...
    def setStatusIn(self, newStatusIn: str) -> None: ...

class KalturaFileSyncResource(KalturaContentResource):
    fileSyncObjectType: int
    objectSubType: int
    objectId: str
    version: str
    originEntryId: str
    def __init__(self,
            fileSyncObjectType: int = NotImplemented,
            objectSubType: int = NotImplemented,
            objectId: str = NotImplemented,
            version: str = NotImplemented,
            originEntryId: str = NotImplemented): ...

    def getFileSyncObjectType(self) -> int: ...
    def setFileSyncObjectType(self, newFileSyncObjectType: int) -> None: ...
    def getObjectSubType(self) -> int: ...
    def setObjectSubType(self, newObjectSubType: int) -> None: ...
    def getObjectId(self) -> str: ...
    def setObjectId(self, newObjectId: str) -> None: ...
    def getVersion(self) -> str: ...
    def setVersion(self, newVersion: str) -> None: ...
    def getOriginEntryId(self) -> str: ...
    def setOriginEntryId(self, newOriginEntryId: str) -> None: ...

class KalturaGenericXsltSyndicationFeed(KalturaGenericSyndicationFeed):
    xslt: str
    itemXpathsToExtend: List[KalturaExtendingItemMrssParameter]
    def __init__(self,
            id: str = NotImplemented,
            feedUrl: str = NotImplemented,
            partnerId: int = NotImplemented,
            playlistId: str = NotImplemented,
            name: str = NotImplemented,
            status: KalturaSyndicationFeedStatus = NotImplemented,
            type: KalturaSyndicationFeedType = NotImplemented,
            landingPage: str = NotImplemented,
            createdAt: int = NotImplemented,
            allowEmbed: bool = NotImplemented,
            playerUiconfId: int = NotImplemented,
            flavorParamId: int = NotImplemented,
            transcodeExistingContent: bool = NotImplemented,
            addToDefaultConversionProfile: bool = NotImplemented,
            categories: str = NotImplemented,
            storageId: int = NotImplemented,
            entriesOrderBy: KalturaSyndicationFeedEntriesOrderBy = NotImplemented,
            enforceEntitlement: bool = NotImplemented,
            privacyContext: str = NotImplemented,
            updatedAt: int = NotImplemented,
            useCategoryEntries: bool = NotImplemented,
            feedContentTypeHeader: str = NotImplemented,
            feedDescription: str = NotImplemented,
            feedLandingPage: str = NotImplemented,
            entryFilter: KalturaBaseEntryFilter = NotImplemented,
            pageSize: int = NotImplemented,
            xslt: str = NotImplemented,
            itemXpathsToExtend: List[KalturaExtendingItemMrssParameter] = NotImplemented): ...

    def getXslt(self) -> str: ...
    def setXslt(self, newXslt: str) -> None: ...
    def getItemXpathsToExtend(self) -> List[KalturaExtendingItemMrssParameter]: ...
    def setItemXpathsToExtend(self, newItemXpathsToExtend: List[KalturaExtendingItemMrssParameter]) -> None: ...

class KalturaGeoDistanceCondition(KalturaMatchCondition):
    geoCoderType: KalturaGeoCoderType
    def __init__(self,
            type: KalturaConditionType = NotImplemented,
            description: str = NotImplemented,
            not_: bool = NotImplemented,
            values: List[KalturaStringValue] = NotImplemented,
            matchType: KalturaMatchConditionType = NotImplemented,
            geoCoderType: KalturaGeoCoderType = NotImplemented): ...

    def getGeoCoderType(self) -> KalturaGeoCoderType: ...
    def setGeoCoderType(self, newGeoCoderType: KalturaGeoCoderType) -> None: ...

class KalturaGeoTimeLiveStats(KalturaEntryLiveStats):
    city: KalturaCoordinate
    country: KalturaCoordinate
    def __init__(self,
            audience: int = NotImplemented,
            dvrAudience: int = NotImplemented,
            avgBitrate: float = NotImplemented,
            bufferTime: int = NotImplemented,
            plays: int = NotImplemented,
            secondsViewed: int = NotImplemented,
            startEvent: int = NotImplemented,
            timestamp: int = NotImplemented,
            entryId: str = NotImplemented,
            peakAudience: int = NotImplemented,
            peakDvrAudience: int = NotImplemented,
            city: KalturaCoordinate = NotImplemented,
            country: KalturaCoordinate = NotImplemented): ...

    def getCity(self) -> KalturaCoordinate: ...
    def setCity(self, newCity: KalturaCoordinate) -> None: ...
    def getCountry(self) -> KalturaCoordinate: ...
    def setCountry(self, newCountry: KalturaCoordinate) -> None: ...

class KalturaGroupUserBaseFilter(KalturaRelatedFilter):
    userIdEqual: str
    userIdIn: str
    groupIdEqual: str
    groupIdIn: str
    statusEqual: KalturaGroupUserStatus
    statusIn: str
    createdAtGreaterThanOrEqual: int
    createdAtLessThanOrEqual: int
    updatedAtGreaterThanOrEqual: int
    updatedAtLessThanOrEqual: int
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            userIdEqual: str = NotImplemented,
            userIdIn: str = NotImplemented,
            groupIdEqual: str = NotImplemented,
            groupIdIn: str = NotImplemented,
            statusEqual: KalturaGroupUserStatus = NotImplemented,
            statusIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented): ...

    def getUserIdEqual(self) -> str: ...
    def setUserIdEqual(self, newUserIdEqual: str) -> None: ...
    def getUserIdIn(self) -> str: ...
    def setUserIdIn(self, newUserIdIn: str) -> None: ...
    def getGroupIdEqual(self) -> str: ...
    def setGroupIdEqual(self, newGroupIdEqual: str) -> None: ...
    def getGroupIdIn(self) -> str: ...
    def setGroupIdIn(self, newGroupIdIn: str) -> None: ...
    def getStatusEqual(self) -> KalturaGroupUserStatus: ...
    def setStatusEqual(self, newStatusEqual: KalturaGroupUserStatus) -> None: ...
    def getStatusIn(self) -> str: ...
    def setStatusIn(self, newStatusIn: str) -> None: ...
    def getCreatedAtGreaterThanOrEqual(self) -> int: ...
    def setCreatedAtGreaterThanOrEqual(self, newCreatedAtGreaterThanOrEqual: int) -> None: ...
    def getCreatedAtLessThanOrEqual(self) -> int: ...
    def setCreatedAtLessThanOrEqual(self, newCreatedAtLessThanOrEqual: int) -> None: ...
    def getUpdatedAtGreaterThanOrEqual(self) -> int: ...
    def setUpdatedAtGreaterThanOrEqual(self, newUpdatedAtGreaterThanOrEqual: int) -> None: ...
    def getUpdatedAtLessThanOrEqual(self) -> int: ...
    def setUpdatedAtLessThanOrEqual(self, newUpdatedAtLessThanOrEqual: int) -> None: ...

class KalturaIpAddressCondition(KalturaMatchCondition):
    acceptInternalIps: bool
    httpHeader: str
    def __init__(self,
            type: KalturaConditionType = NotImplemented,
            description: str = NotImplemented,
            not_: bool = NotImplemented,
            values: List[KalturaStringValue] = NotImplemented,
            matchType: KalturaMatchConditionType = NotImplemented,
            acceptInternalIps: bool = NotImplemented,
            httpHeader: str = NotImplemented): ...

    def getAcceptInternalIps(self) -> bool: ...
    def setAcceptInternalIps(self, newAcceptInternalIps: bool) -> None: ...
    def getHttpHeader(self) -> str: ...
    def setHttpHeader(self, newHttpHeader: str) -> None: ...

class KalturaLiveAsset(KalturaFlavorAsset):
    multicastIP: str
    multicastPort: int
    def __init__(self,
            id: str = NotImplemented,
            entryId: str = NotImplemented,
            partnerId: int = NotImplemented,
            version: int = NotImplemented,
            size: int = NotImplemented,
            tags: str = NotImplemented,
            fileExt: str = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            deletedAt: int = NotImplemented,
            description: str = NotImplemented,
            partnerData: str = NotImplemented,
            partnerDescription: str = NotImplemented,
            actualSourceAssetParamsIds: str = NotImplemented,
            sizeInBytes: int = NotImplemented,
            flavorParamsId: int = NotImplemented,
            width: int = NotImplemented,
            height: int = NotImplemented,
            bitrate: int = NotImplemented,
            frameRate: float = NotImplemented,
            isOriginal: bool = NotImplemented,
            isWeb: bool = NotImplemented,
            containerFormat: str = NotImplemented,
            videoCodecId: str = NotImplemented,
            status: KalturaFlavorAssetStatus = NotImplemented,
            language: KalturaLanguage = NotImplemented,
            label: str = NotImplemented,
            isDefault: KalturaNullableBoolean = NotImplemented,
            multicastIP: str = NotImplemented,
            multicastPort: int = NotImplemented): ...

    def getMulticastIP(self) -> str: ...
    def setMulticastIP(self, newMulticastIP: str) -> None: ...
    def getMulticastPort(self) -> int: ...
    def setMulticastPort(self, newMulticastPort: int) -> None: ...

class KalturaLiveChannelSegmentBaseFilter(KalturaRelatedFilter):
    createdAtGreaterThanOrEqual: int
    createdAtLessThanOrEqual: int
    updatedAtGreaterThanOrEqual: int
    updatedAtLessThanOrEqual: int
    statusEqual: KalturaLiveChannelSegmentStatus
    statusIn: str
    channelIdEqual: str
    channelIdIn: str
    startTimeGreaterThanOrEqual: float
    startTimeLessThanOrEqual: float
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            statusEqual: KalturaLiveChannelSegmentStatus = NotImplemented,
            statusIn: str = NotImplemented,
            channelIdEqual: str = NotImplemented,
            channelIdIn: str = NotImplemented,
            startTimeGreaterThanOrEqual: float = NotImplemented,
            startTimeLessThanOrEqual: float = NotImplemented): ...

    def getCreatedAtGreaterThanOrEqual(self) -> int: ...
    def setCreatedAtGreaterThanOrEqual(self, newCreatedAtGreaterThanOrEqual: int) -> None: ...
    def getCreatedAtLessThanOrEqual(self) -> int: ...
    def setCreatedAtLessThanOrEqual(self, newCreatedAtLessThanOrEqual: int) -> None: ...
    def getUpdatedAtGreaterThanOrEqual(self) -> int: ...
    def setUpdatedAtGreaterThanOrEqual(self, newUpdatedAtGreaterThanOrEqual: int) -> None: ...
    def getUpdatedAtLessThanOrEqual(self) -> int: ...
    def setUpdatedAtLessThanOrEqual(self, newUpdatedAtLessThanOrEqual: int) -> None: ...
    def getStatusEqual(self) -> KalturaLiveChannelSegmentStatus: ...
    def setStatusEqual(self, newStatusEqual: KalturaLiveChannelSegmentStatus) -> None: ...
    def getStatusIn(self) -> str: ...
    def setStatusIn(self, newStatusIn: str) -> None: ...
    def getChannelIdEqual(self) -> str: ...
    def setChannelIdEqual(self, newChannelIdEqual: str) -> None: ...
    def getChannelIdIn(self) -> str: ...
    def setChannelIdIn(self, newChannelIdIn: str) -> None: ...
    def getStartTimeGreaterThanOrEqual(self) -> float: ...
    def setStartTimeGreaterThanOrEqual(self, newStartTimeGreaterThanOrEqual: float) -> None: ...
    def getStartTimeLessThanOrEqual(self) -> float: ...
    def setStartTimeLessThanOrEqual(self, newStartTimeLessThanOrEqual: float) -> None: ...

class KalturaLiveParams(KalturaFlavorParams):
    streamSuffix: str
    def __init__(self,
            id: int = NotImplemented,
            partnerId: int = NotImplemented,
            name: str = NotImplemented,
            systemName: str = NotImplemented,
            description: str = NotImplemented,
            createdAt: int = NotImplemented,
            isSystemDefault: KalturaNullableBoolean = NotImplemented,
            tags: str = NotImplemented,
            requiredPermissions: List[KalturaString] = NotImplemented,
            sourceRemoteStorageProfileId: int = NotImplemented,
            remoteStorageProfileIds: int = NotImplemented,
            mediaParserType: KalturaMediaParserType = NotImplemented,
            sourceAssetParamsIds: str = NotImplemented,
            videoCodec: KalturaVideoCodec = NotImplemented,
            videoBitrate: int = NotImplemented,
            audioCodec: KalturaAudioCodec = NotImplemented,
            audioBitrate: int = NotImplemented,
            audioChannels: int = NotImplemented,
            audioSampleRate: int = NotImplemented,
            width: int = NotImplemented,
            height: int = NotImplemented,
            frameRate: float = NotImplemented,
            gopSize: int = NotImplemented,
            conversionEngines: str = NotImplemented,
            conversionEnginesExtraParams: str = NotImplemented,
            twoPass: bool = NotImplemented,
            deinterlice: int = NotImplemented,
            rotate: int = NotImplemented,
            operators: str = NotImplemented,
            engineVersion: int = NotImplemented,
            format: KalturaContainerFormat = NotImplemented,
            aspectRatioProcessingMode: int = NotImplemented,
            forceFrameToMultiplication16: int = NotImplemented,
            isGopInSec: int = NotImplemented,
            isAvoidVideoShrinkFramesizeToSource: int = NotImplemented,
            isAvoidVideoShrinkBitrateToSource: int = NotImplemented,
            isVideoFrameRateForLowBrAppleHls: int = NotImplemented,
            multiStream: str = NotImplemented,
            anamorphicPixels: float = NotImplemented,
            isAvoidForcedKeyFrames: int = NotImplemented,
            forcedKeyFramesMode: int = NotImplemented,
            isCropIMX: int = NotImplemented,
            optimizationPolicy: int = NotImplemented,
            maxFrameRate: int = NotImplemented,
            videoConstantBitrate: int = NotImplemented,
            videoBitrateTolerance: int = NotImplemented,
            watermarkData: str = NotImplemented,
            subtitlesData: str = NotImplemented,
            cropData: str = NotImplemented,
            isEncrypted: int = NotImplemented,
            contentAwareness: float = NotImplemented,
            chunkedEncodeMode: int = NotImplemented,
            clipOffset: int = NotImplemented,
            clipDuration: int = NotImplemented,
            streamSuffix: str = NotImplemented): ...

    def getStreamSuffix(self) -> str: ...
    def setStreamSuffix(self, newStreamSuffix: str) -> None: ...

class KalturaMappedObjectsCsvJobData(KalturaExportCsvJobData):
    metadataProfileId: int
    additionalFields: List[KalturaCsvAdditionalFieldInfo]
    mappedFields: List[KalturaKeyValue]
    options: KalturaExportToCsvOptions
    def __init__(self,
            userName: str = NotImplemented,
            userMail: str = NotImplemented,
            outputPath: str = NotImplemented,
            sharedOutputPath: str = NotImplemented,
            metadataProfileId: int = NotImplemented,
            additionalFields: List[KalturaCsvAdditionalFieldInfo] = NotImplemented,
            mappedFields: List[KalturaKeyValue] = NotImplemented,
            options: KalturaExportToCsvOptions = NotImplemented): ...

    def getMetadataProfileId(self) -> int: ...
    def setMetadataProfileId(self, newMetadataProfileId: int) -> None: ...
    def getAdditionalFields(self) -> List[KalturaCsvAdditionalFieldInfo]: ...
    def setAdditionalFields(self, newAdditionalFields: List[KalturaCsvAdditionalFieldInfo]) -> None: ...
    def getMappedFields(self) -> List[KalturaKeyValue]: ...
    def setMappedFields(self, newMappedFields: List[KalturaKeyValue]) -> None: ...
    def getOptions(self) -> KalturaExportToCsvOptions: ...
    def setOptions(self, newOptions: KalturaExportToCsvOptions) -> None: ...

class KalturaMediaFlavorParams(KalturaFlavorParams):
    def __init__(self,
            id: int = NotImplemented,
            partnerId: int = NotImplemented,
            name: str = NotImplemented,
            systemName: str = NotImplemented,
            description: str = NotImplemented,
            createdAt: int = NotImplemented,
            isSystemDefault: KalturaNullableBoolean = NotImplemented,
            tags: str = NotImplemented,
            requiredPermissions: List[KalturaString] = NotImplemented,
            sourceRemoteStorageProfileId: int = NotImplemented,
            remoteStorageProfileIds: int = NotImplemented,
            mediaParserType: KalturaMediaParserType = NotImplemented,
            sourceAssetParamsIds: str = NotImplemented,
            videoCodec: KalturaVideoCodec = NotImplemented,
            videoBitrate: int = NotImplemented,
            audioCodec: KalturaAudioCodec = NotImplemented,
            audioBitrate: int = NotImplemented,
            audioChannels: int = NotImplemented,
            audioSampleRate: int = NotImplemented,
            width: int = NotImplemented,
            height: int = NotImplemented,
            frameRate: float = NotImplemented,
            gopSize: int = NotImplemented,
            conversionEngines: str = NotImplemented,
            conversionEnginesExtraParams: str = NotImplemented,
            twoPass: bool = NotImplemented,
            deinterlice: int = NotImplemented,
            rotate: int = NotImplemented,
            operators: str = NotImplemented,
            engineVersion: int = NotImplemented,
            format: KalturaContainerFormat = NotImplemented,
            aspectRatioProcessingMode: int = NotImplemented,
            forceFrameToMultiplication16: int = NotImplemented,
            isGopInSec: int = NotImplemented,
            isAvoidVideoShrinkFramesizeToSource: int = NotImplemented,
            isAvoidVideoShrinkBitrateToSource: int = NotImplemented,
            isVideoFrameRateForLowBrAppleHls: int = NotImplemented,
            multiStream: str = NotImplemented,
            anamorphicPixels: float = NotImplemented,
            isAvoidForcedKeyFrames: int = NotImplemented,
            forcedKeyFramesMode: int = NotImplemented,
            isCropIMX: int = NotImplemented,
            optimizationPolicy: int = NotImplemented,
            maxFrameRate: int = NotImplemented,
            videoConstantBitrate: int = NotImplemented,
            videoBitrateTolerance: int = NotImplemented,
            watermarkData: str = NotImplemented,
            subtitlesData: str = NotImplemented,
            cropData: str = NotImplemented,
            isEncrypted: int = NotImplemented,
            contentAwareness: float = NotImplemented,
            chunkedEncodeMode: int = NotImplemented,
            clipOffset: int = NotImplemented,
            clipDuration: int = NotImplemented): ...
        pass

class KalturaMediaInfoFilter(KalturaMediaInfoBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            flavorAssetIdEqual: str = NotImplemented): ...
        pass

class KalturaMediaServerNode(KalturaDeliveryServerNode):
    applicationName: str
    mediaServerPortConfig: List[KalturaKeyValue]
    mediaServerPlaybackDomainConfig: List[KalturaKeyValue]
    def __init__(self,
            id: int = NotImplemented,
            partnerId: int = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            heartbeatTime: int = NotImplemented,
            name: str = NotImplemented,
            systemName: str = NotImplemented,
            description: str = NotImplemented,
            hostName: str = NotImplemented,
            status: KalturaServerNodeStatus = NotImplemented,
            type: KalturaServerNodeType = NotImplemented,
            tags: str = NotImplemented,
            dc: int = NotImplemented,
            parentId: str = NotImplemented,
            environment: str = NotImplemented,
            deliveryProfileIds: List[KalturaKeyValue] = NotImplemented,
            config: str = NotImplemented,
            applicationName: str = NotImplemented,
            mediaServerPortConfig: List[KalturaKeyValue] = NotImplemented,
            mediaServerPlaybackDomainConfig: List[KalturaKeyValue] = NotImplemented): ...

    def getApplicationName(self) -> str: ...
    def setApplicationName(self, newApplicationName: str) -> None: ...
    def getMediaServerPortConfig(self) -> List[KalturaKeyValue]: ...
    def setMediaServerPortConfig(self, newMediaServerPortConfig: List[KalturaKeyValue]) -> None: ...
    def getMediaServerPlaybackDomainConfig(self) -> List[KalturaKeyValue]: ...
    def setMediaServerPlaybackDomainConfig(self, newMediaServerPlaybackDomainConfig: List[KalturaKeyValue]) -> None: ...

class KalturaOperationResources(KalturaContentResource):
    resources: List[KalturaOperationResource]
    chapterNamePolicy: KalturaChapterNamePolicy
    dimensionsAttributes: List[KalturaDimensionsAttributes]
    def __init__(self,
            resources: List[KalturaOperationResource] = NotImplemented,
            chapterNamePolicy: KalturaChapterNamePolicy = NotImplemented,
            dimensionsAttributes: List[KalturaDimensionsAttributes] = NotImplemented): ...

    def getResources(self) -> List[KalturaOperationResource]: ...
    def setResources(self, newResources: List[KalturaOperationResource]) -> None: ...
    def getChapterNamePolicy(self) -> KalturaChapterNamePolicy: ...
    def setChapterNamePolicy(self, newChapterNamePolicy: KalturaChapterNamePolicy) -> None: ...
    def getDimensionsAttributes(self) -> List[KalturaDimensionsAttributes]: ...
    def setDimensionsAttributes(self, newDimensionsAttributes: List[KalturaDimensionsAttributes]) -> None: ...

class KalturaPartnerFilter(KalturaPartnerBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            idNotIn: str = NotImplemented,
            nameLike: str = NotImplemented,
            nameMultiLikeOr: str = NotImplemented,
            nameMultiLikeAnd: str = NotImplemented,
            nameEqual: str = NotImplemented,
            statusEqual: KalturaPartnerStatus = NotImplemented,
            statusIn: str = NotImplemented,
            partnerPackageEqual: int = NotImplemented,
            partnerPackageGreaterThanOrEqual: int = NotImplemented,
            partnerPackageLessThanOrEqual: int = NotImplemented,
            partnerPackageIn: str = NotImplemented,
            partnerGroupTypeEqual: KalturaPartnerGroupType = NotImplemented,
            partnerNameDescriptionWebsiteAdminNameAdminEmailLike: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            idGreaterThan: int = NotImplemented,
            monitorUsageEqual: int = NotImplemented): ...
        pass

class KalturaPermissionBaseFilter(KalturaRelatedFilter):
    idEqual: int
    idIn: str
    typeEqual: KalturaPermissionType
    typeIn: str
    nameEqual: str
    nameIn: str
    friendlyNameLike: str
    descriptionLike: str
    statusEqual: KalturaPermissionStatus
    statusIn: str
    partnerIdEqual: int
    partnerIdIn: str
    dependsOnPermissionNamesMultiLikeOr: str
    dependsOnPermissionNamesMultiLikeAnd: str
    tagsMultiLikeOr: str
    tagsMultiLikeAnd: str
    createdAtGreaterThanOrEqual: int
    createdAtLessThanOrEqual: int
    updatedAtGreaterThanOrEqual: int
    updatedAtLessThanOrEqual: int
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            typeEqual: KalturaPermissionType = NotImplemented,
            typeIn: str = NotImplemented,
            nameEqual: str = NotImplemented,
            nameIn: str = NotImplemented,
            friendlyNameLike: str = NotImplemented,
            descriptionLike: str = NotImplemented,
            statusEqual: KalturaPermissionStatus = NotImplemented,
            statusIn: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            dependsOnPermissionNamesMultiLikeOr: str = NotImplemented,
            dependsOnPermissionNamesMultiLikeAnd: str = NotImplemented,
            tagsMultiLikeOr: str = NotImplemented,
            tagsMultiLikeAnd: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented): ...

    def getIdEqual(self) -> int: ...
    def setIdEqual(self, newIdEqual: int) -> None: ...
    def getIdIn(self) -> str: ...
    def setIdIn(self, newIdIn: str) -> None: ...
    def getTypeEqual(self) -> KalturaPermissionType: ...
    def setTypeEqual(self, newTypeEqual: KalturaPermissionType) -> None: ...
    def getTypeIn(self) -> str: ...
    def setTypeIn(self, newTypeIn: str) -> None: ...
    def getNameEqual(self) -> str: ...
    def setNameEqual(self, newNameEqual: str) -> None: ...
    def getNameIn(self) -> str: ...
    def setNameIn(self, newNameIn: str) -> None: ...
    def getFriendlyNameLike(self) -> str: ...
    def setFriendlyNameLike(self, newFriendlyNameLike: str) -> None: ...
    def getDescriptionLike(self) -> str: ...
    def setDescriptionLike(self, newDescriptionLike: str) -> None: ...
    def getStatusEqual(self) -> KalturaPermissionStatus: ...
    def setStatusEqual(self, newStatusEqual: KalturaPermissionStatus) -> None: ...
    def getStatusIn(self) -> str: ...
    def setStatusIn(self, newStatusIn: str) -> None: ...
    def getPartnerIdEqual(self) -> int: ...
    def setPartnerIdEqual(self, newPartnerIdEqual: int) -> None: ...
    def getPartnerIdIn(self) -> str: ...
    def setPartnerIdIn(self, newPartnerIdIn: str) -> None: ...
    def getDependsOnPermissionNamesMultiLikeOr(self) -> str: ...
    def setDependsOnPermissionNamesMultiLikeOr(self, newDependsOnPermissionNamesMultiLikeOr: str) -> None: ...
    def getDependsOnPermissionNamesMultiLikeAnd(self) -> str: ...
    def setDependsOnPermissionNamesMultiLikeAnd(self, newDependsOnPermissionNamesMultiLikeAnd: str) -> None: ...
    def getTagsMultiLikeOr(self) -> str: ...
    def setTagsMultiLikeOr(self, newTagsMultiLikeOr: str) -> None: ...
    def getTagsMultiLikeAnd(self) -> str: ...
    def setTagsMultiLikeAnd(self, newTagsMultiLikeAnd: str) -> None: ...
    def getCreatedAtGreaterThanOrEqual(self) -> int: ...
    def setCreatedAtGreaterThanOrEqual(self, newCreatedAtGreaterThanOrEqual: int) -> None: ...
    def getCreatedAtLessThanOrEqual(self) -> int: ...
    def setCreatedAtLessThanOrEqual(self, newCreatedAtLessThanOrEqual: int) -> None: ...
    def getUpdatedAtGreaterThanOrEqual(self) -> int: ...
    def setUpdatedAtGreaterThanOrEqual(self, newUpdatedAtGreaterThanOrEqual: int) -> None: ...
    def getUpdatedAtLessThanOrEqual(self) -> int: ...
    def setUpdatedAtLessThanOrEqual(self, newUpdatedAtLessThanOrEqual: int) -> None: ...

class KalturaPermissionItemBaseFilter(KalturaRelatedFilter):
    idEqual: int
    idIn: str
    typeEqual: KalturaPermissionItemType
    typeIn: str
    partnerIdEqual: int
    partnerIdIn: str
    tagsMultiLikeOr: str
    tagsMultiLikeAnd: str
    createdAtGreaterThanOrEqual: int
    createdAtLessThanOrEqual: int
    updatedAtGreaterThanOrEqual: int
    updatedAtLessThanOrEqual: int
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            typeEqual: KalturaPermissionItemType = NotImplemented,
            typeIn: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            tagsMultiLikeOr: str = NotImplemented,
            tagsMultiLikeAnd: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented): ...

    def getIdEqual(self) -> int: ...
    def setIdEqual(self, newIdEqual: int) -> None: ...
    def getIdIn(self) -> str: ...
    def setIdIn(self, newIdIn: str) -> None: ...
    def getTypeEqual(self) -> KalturaPermissionItemType: ...
    def setTypeEqual(self, newTypeEqual: KalturaPermissionItemType) -> None: ...
    def getTypeIn(self) -> str: ...
    def setTypeIn(self, newTypeIn: str) -> None: ...
    def getPartnerIdEqual(self) -> int: ...
    def setPartnerIdEqual(self, newPartnerIdEqual: int) -> None: ...
    def getPartnerIdIn(self) -> str: ...
    def setPartnerIdIn(self, newPartnerIdIn: str) -> None: ...
    def getTagsMultiLikeOr(self) -> str: ...
    def setTagsMultiLikeOr(self, newTagsMultiLikeOr: str) -> None: ...
    def getTagsMultiLikeAnd(self) -> str: ...
    def setTagsMultiLikeAnd(self, newTagsMultiLikeAnd: str) -> None: ...
    def getCreatedAtGreaterThanOrEqual(self) -> int: ...
    def setCreatedAtGreaterThanOrEqual(self, newCreatedAtGreaterThanOrEqual: int) -> None: ...
    def getCreatedAtLessThanOrEqual(self) -> int: ...
    def setCreatedAtLessThanOrEqual(self, newCreatedAtLessThanOrEqual: int) -> None: ...
    def getUpdatedAtGreaterThanOrEqual(self) -> int: ...
    def setUpdatedAtGreaterThanOrEqual(self, newUpdatedAtGreaterThanOrEqual: int) -> None: ...
    def getUpdatedAtLessThanOrEqual(self) -> int: ...
    def setUpdatedAtLessThanOrEqual(self, newUpdatedAtLessThanOrEqual: int) -> None: ...

class KalturaPlaybackContextOptions(KalturaEntryContextDataParams):
    def __init__(self,
            referrer: str = NotImplemented,
            ip: str = NotImplemented,
            ks: str = NotImplemented,
            userAgent: str = NotImplemented,
            time: int = NotImplemented,
            contexts: List[KalturaAccessControlContextTypeHolder] = NotImplemented,
            hashes: List[KalturaKeyValue] = NotImplemented,
            flavorAssetId: str = NotImplemented,
            flavorTags: str = NotImplemented,
            streamerType: str = NotImplemented,
            mediaProtocol: str = NotImplemented): ...
        pass

class KalturaPostConvertJobData(KalturaConvartableJobData):
    flavorAssetId: str
    flavorAssetEncryptionKey: str
    createThumb: bool
    thumbPath: str
    thumbOffset: int
    thumbHeight: int
    thumbBitrate: int
    customData: str
    def __init__(self,
            srcFileSyncLocalPath: str = NotImplemented,
            actualSrcFileSyncLocalPath: str = NotImplemented,
            srcFileSyncRemoteUrl: str = NotImplemented,
            srcFileSyncs: List[KalturaSourceFileSyncDescriptor] = NotImplemented,
            engineVersion: int = NotImplemented,
            flavorParamsOutputId: int = NotImplemented,
            flavorParamsOutput: KalturaFlavorParamsOutput = NotImplemented,
            mediaInfoId: int = NotImplemented,
            currentOperationSet: int = NotImplemented,
            currentOperationIndex: int = NotImplemented,
            pluginData: List[KalturaKeyValue] = NotImplemented,
            flavorAssetId: str = NotImplemented,
            flavorAssetEncryptionKey: str = NotImplemented,
            createThumb: bool = NotImplemented,
            thumbPath: str = NotImplemented,
            thumbOffset: int = NotImplemented,
            thumbHeight: int = NotImplemented,
            thumbBitrate: int = NotImplemented,
            customData: str = NotImplemented): ...

    def getFlavorAssetId(self) -> str: ...
    def setFlavorAssetId(self, newFlavorAssetId: str) -> None: ...
    def getFlavorAssetEncryptionKey(self) -> str: ...
    def setFlavorAssetEncryptionKey(self, newFlavorAssetEncryptionKey: str) -> None: ...
    def getCreateThumb(self) -> bool: ...
    def setCreateThumb(self, newCreateThumb: bool) -> None: ...
    def getThumbPath(self) -> str: ...
    def setThumbPath(self, newThumbPath: str) -> None: ...
    def getThumbOffset(self) -> int: ...
    def setThumbOffset(self, newThumbOffset: int) -> None: ...
    def getThumbHeight(self) -> int: ...
    def setThumbHeight(self, newThumbHeight: int) -> None: ...
    def getThumbBitrate(self) -> int: ...
    def setThumbBitrate(self, newThumbBitrate: int) -> None: ...
    def getCustomData(self) -> str: ...
    def setCustomData(self, newCustomData: str) -> None: ...

class KalturaPreviewRestriction(KalturaSessionRestriction):
    previewLength: int
    def __init__(self,
            previewLength: int = NotImplemented): ...

    def getPreviewLength(self) -> int: ...
    def setPreviewLength(self, newPreviewLength: int) -> None: ...

class KalturaRecalculateResponseProfileCacheJobData(KalturaRecalculateCacheJobData):
    protocol: str
    ksType: KalturaSessionType
    userRoles: List[KalturaIntegerValue]
    cachedObjectType: str
    objectId: str
    startObjectKey: str
    endObjectKey: str
    def __init__(self,
            protocol: str = NotImplemented,
            ksType: KalturaSessionType = NotImplemented,
            userRoles: List[KalturaIntegerValue] = NotImplemented,
            cachedObjectType: str = NotImplemented,
            objectId: str = NotImplemented,
            startObjectKey: str = NotImplemented,
            endObjectKey: str = NotImplemented): ...

    def getProtocol(self) -> str: ...
    def setProtocol(self, newProtocol: str) -> None: ...
    def getKsType(self) -> KalturaSessionType: ...
    def setKsType(self, newKsType: KalturaSessionType) -> None: ...
    def getUserRoles(self) -> List[KalturaIntegerValue]: ...
    def setUserRoles(self, newUserRoles: List[KalturaIntegerValue]) -> None: ...
    def getCachedObjectType(self) -> str: ...
    def setCachedObjectType(self, newCachedObjectType: str) -> None: ...
    def getObjectId(self) -> str: ...
    def setObjectId(self, newObjectId: str) -> None: ...
    def getStartObjectKey(self) -> str: ...
    def setStartObjectKey(self, newStartObjectKey: str) -> None: ...
    def getEndObjectKey(self) -> str: ...
    def setEndObjectKey(self, newEndObjectKey: str) -> None: ...

class KalturaRegexCondition(KalturaMatchCondition):
    def __init__(self,
            type: KalturaConditionType = NotImplemented,
            description: str = NotImplemented,
            not_: bool = NotImplemented,
            values: List[KalturaStringValue] = NotImplemented,
            matchType: KalturaMatchConditionType = NotImplemented): ...
        pass

class KalturaRemoteStorageResources(KalturaContentResource):
    resources: List[KalturaRemoteStorageResource]
    def __init__(self,
            resources: List[KalturaRemoteStorageResource] = NotImplemented): ...

    def getResources(self) -> List[KalturaRemoteStorageResource]: ...
    def setResources(self, newResources: List[KalturaRemoteStorageResource]) -> None: ...

class KalturaResponseProfileFilter(KalturaResponseProfileBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            systemNameEqual: str = NotImplemented,
            systemNameIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            statusEqual: KalturaResponseProfileStatus = NotImplemented,
            statusIn: str = NotImplemented): ...
        pass

class KalturaSearchComparableAttributeCondition(KalturaAttributeCondition):
    comparison: KalturaSearchConditionComparison
    def __init__(self,
            value: str = NotImplemented,
            comparison: KalturaSearchConditionComparison = NotImplemented): ...

    def getComparison(self) -> KalturaSearchConditionComparison: ...
    def setComparison(self, newComparison: KalturaSearchConditionComparison) -> None: ...

class KalturaSearchComparableCondition(KalturaSearchCondition):
    comparison: KalturaSearchConditionComparison
    def __init__(self,
            field: str = NotImplemented,
            value: str = NotImplemented,
            comparison: KalturaSearchConditionComparison = NotImplemented): ...

    def getComparison(self) -> KalturaSearchConditionComparison: ...
    def setComparison(self, newComparison: KalturaSearchConditionComparison) -> None: ...

class KalturaSearchMatchAttributeCondition(KalturaAttributeCondition):
    not_: bool
    def __init__(self,
            value: str = NotImplemented,
            not_: bool = NotImplemented): ...

    def getNot_(self) -> bool: ...
    def setNot_(self, newNot_: bool) -> None: ...

class KalturaSearchMatchCondition(KalturaSearchCondition):
    not_: bool
    def __init__(self,
            field: str = NotImplemented,
            value: str = NotImplemented,
            not_: bool = NotImplemented): ...

    def getNot_(self) -> bool: ...
    def setNot_(self, newNot_: bool) -> None: ...

class KalturaServerNodeFilter(KalturaServerNodeBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            heartbeatTimeGreaterThanOrEqual: int = NotImplemented,
            heartbeatTimeLessThanOrEqual: int = NotImplemented,
            nameEqual: str = NotImplemented,
            nameIn: str = NotImplemented,
            systemNameEqual: str = NotImplemented,
            systemNameIn: str = NotImplemented,
            hostNameLike: str = NotImplemented,
            hostNameMultiLikeOr: str = NotImplemented,
            hostNameMultiLikeAnd: str = NotImplemented,
            statusEqual: KalturaServerNodeStatus = NotImplemented,
            statusIn: str = NotImplemented,
            typeEqual: KalturaServerNodeType = NotImplemented,
            typeIn: str = NotImplemented,
            tagsLike: str = NotImplemented,
            tagsMultiLikeOr: str = NotImplemented,
            tagsMultiLikeAnd: str = NotImplemented,
            dcEqual: int = NotImplemented,
            dcIn: str = NotImplemented,
            parentIdLike: str = NotImplemented,
            parentIdMultiLikeOr: str = NotImplemented,
            parentIdMultiLikeAnd: str = NotImplemented,
            environmentEqual: str = NotImplemented,
            environmentIn: str = NotImplemented): ...
        pass

class KalturaSiteCondition(KalturaMatchCondition):
    def __init__(self,
            type: KalturaConditionType = NotImplemented,
            description: str = NotImplemented,
            not_: bool = NotImplemented,
            values: List[KalturaStringValue] = NotImplemented,
            matchType: KalturaMatchConditionType = NotImplemented): ...
        pass

class KalturaSshImportJobData(KalturaImportJobData):
    privateKey: str
    publicKey: str
    passPhrase: str
    def __init__(self,
            srcFileUrl: str = NotImplemented,
            destFileLocalPath: str = NotImplemented,
            flavorAssetId: str = NotImplemented,
            fileSize: int = NotImplemented,
            destFileSharedPath: str = NotImplemented,
            urlHeaders: List[KalturaString] = NotImplemented,
            shouldRedirect: bool = NotImplemented,
            privateKey: str = NotImplemented,
            publicKey: str = NotImplemented,
            passPhrase: str = NotImplemented): ...

    def getPrivateKey(self) -> str: ...
    def setPrivateKey(self, newPrivateKey: str) -> None: ...
    def getPublicKey(self) -> str: ...
    def setPublicKey(self, newPublicKey: str) -> None: ...
    def getPassPhrase(self) -> str: ...
    def setPassPhrase(self, newPassPhrase: str) -> None: ...

class KalturaStorageDeleteJobData(KalturaStorageJobData):
    def __init__(self,
            serverUrl: str = NotImplemented,
            serverUsername: str = NotImplemented,
            serverPassword: str = NotImplemented,
            serverPrivateKey: str = NotImplemented,
            serverPublicKey: str = NotImplemented,
            serverPassPhrase: str = NotImplemented,
            ftpPassiveMode: bool = NotImplemented,
            srcFileSyncLocalPath: str = NotImplemented,
            srcFileEncryptionKey: str = NotImplemented,
            srcFileSyncId: str = NotImplemented,
            destFileSyncStoredPath: str = NotImplemented): ...
        pass

class KalturaStorageExportJobData(KalturaStorageJobData):
    force: bool
    createLink: bool
    assetId: str
    externalUrl: str
    port: int
    def __init__(self,
            serverUrl: str = NotImplemented,
            serverUsername: str = NotImplemented,
            serverPassword: str = NotImplemented,
            serverPrivateKey: str = NotImplemented,
            serverPublicKey: str = NotImplemented,
            serverPassPhrase: str = NotImplemented,
            ftpPassiveMode: bool = NotImplemented,
            srcFileSyncLocalPath: str = NotImplemented,
            srcFileEncryptionKey: str = NotImplemented,
            srcFileSyncId: str = NotImplemented,
            destFileSyncStoredPath: str = NotImplemented,
            force: bool = NotImplemented,
            createLink: bool = NotImplemented,
            assetId: str = NotImplemented,
            externalUrl: str = NotImplemented,
            port: int = NotImplemented): ...

    def getForce(self) -> bool: ...
    def setForce(self, newForce: bool) -> None: ...
    def getCreateLink(self) -> bool: ...
    def setCreateLink(self, newCreateLink: bool) -> None: ...
    def getAssetId(self) -> str: ...
    def setAssetId(self, newAssetId: str) -> None: ...
    def getExternalUrl(self) -> str: ...
    def setExternalUrl(self, newExternalUrl: str) -> None: ...
    def getPort(self) -> int: ...
    def setPort(self, newPort: int) -> None: ...

class KalturaStorageProfileFilter(KalturaStorageProfileBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            systemNameEqual: str = NotImplemented,
            systemNameIn: str = NotImplemented,
            statusEqual: KalturaStorageProfileStatus = NotImplemented,
            statusIn: str = NotImplemented,
            protocolEqual: KalturaStorageProfileProtocol = NotImplemented,
            protocolIn: str = NotImplemented): ...
        pass

class KalturaStringResource(KalturaContentResource):
    content: str
    def __init__(self,
            content: str = NotImplemented): ...

    def getContent(self) -> str: ...
    def setContent(self, newContent: str) -> None: ...

class KalturaUiConfFilter(KalturaUiConfBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            nameLike: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            objTypeEqual: KalturaUiConfObjType = NotImplemented,
            objTypeIn: str = NotImplemented,
            tagsMultiLikeOr: str = NotImplemented,
            tagsMultiLikeAnd: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            creationModeEqual: KalturaUiConfCreationMode = NotImplemented,
            creationModeIn: str = NotImplemented,
            versionEqual: str = NotImplemented,
            versionMultiLikeOr: str = NotImplemented,
            versionMultiLikeAnd: str = NotImplemented,
            partnerTagsMultiLikeOr: str = NotImplemented,
            partnerTagsMultiLikeAnd: str = NotImplemented): ...
        pass

class KalturaUploadTokenFilter(KalturaUploadTokenBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: str = NotImplemented,
            idIn: str = NotImplemented,
            userIdEqual: str = NotImplemented,
            statusEqual: KalturaUploadTokenStatus = NotImplemented,
            statusIn: str = NotImplemented,
            fileNameEqual: str = NotImplemented,
            fileSizeEqual: float = NotImplemented): ...
        pass

class KalturaUserAppRoleBaseFilter(KalturaRelatedFilter):
    appGuidEqual: str
    appGuidIn: str
    userRoleIdEqual: str
    userRoleIdIn: str
    createdAtLessThanOrEqual: int
    createdAtGreaterThanOrEqual: int
    updatedAtLessThanOrEqual: int
    updatedAtGreaterThanOrEqual: int
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            appGuidEqual: str = NotImplemented,
            appGuidIn: str = NotImplemented,
            userRoleIdEqual: str = NotImplemented,
            userRoleIdIn: str = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented): ...

    def getAppGuidEqual(self) -> str: ...
    def setAppGuidEqual(self, newAppGuidEqual: str) -> None: ...
    def getAppGuidIn(self) -> str: ...
    def setAppGuidIn(self, newAppGuidIn: str) -> None: ...
    def getUserRoleIdEqual(self) -> str: ...
    def setUserRoleIdEqual(self, newUserRoleIdEqual: str) -> None: ...
    def getUserRoleIdIn(self) -> str: ...
    def setUserRoleIdIn(self, newUserRoleIdIn: str) -> None: ...
    def getCreatedAtLessThanOrEqual(self) -> int: ...
    def setCreatedAtLessThanOrEqual(self, newCreatedAtLessThanOrEqual: int) -> None: ...
    def getCreatedAtGreaterThanOrEqual(self) -> int: ...
    def setCreatedAtGreaterThanOrEqual(self, newCreatedAtGreaterThanOrEqual: int) -> None: ...
    def getUpdatedAtLessThanOrEqual(self) -> int: ...
    def setUpdatedAtLessThanOrEqual(self, newUpdatedAtLessThanOrEqual: int) -> None: ...
    def getUpdatedAtGreaterThanOrEqual(self) -> int: ...
    def setUpdatedAtGreaterThanOrEqual(self, newUpdatedAtGreaterThanOrEqual: int) -> None: ...

class KalturaUserEntryBaseFilter(KalturaRelatedFilter):
    idEqual: int
    idIn: str
    idNotIn: str
    entryIdEqual: str
    entryIdIn: str
    entryIdNotIn: str
    userIdEqual: str
    userIdIn: str
    userIdNotIn: str
    statusEqual: KalturaUserEntryStatus
    createdAtLessThanOrEqual: int
    createdAtGreaterThanOrEqual: int
    updatedAtLessThanOrEqual: int
    updatedAtGreaterThanOrEqual: int
    typeEqual: KalturaUserEntryType
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            idNotIn: str = NotImplemented,
            entryIdEqual: str = NotImplemented,
            entryIdIn: str = NotImplemented,
            entryIdNotIn: str = NotImplemented,
            userIdEqual: str = NotImplemented,
            userIdIn: str = NotImplemented,
            userIdNotIn: str = NotImplemented,
            statusEqual: KalturaUserEntryStatus = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            typeEqual: KalturaUserEntryType = NotImplemented): ...

    def getIdEqual(self) -> int: ...
    def setIdEqual(self, newIdEqual: int) -> None: ...
    def getIdIn(self) -> str: ...
    def setIdIn(self, newIdIn: str) -> None: ...
    def getIdNotIn(self) -> str: ...
    def setIdNotIn(self, newIdNotIn: str) -> None: ...
    def getEntryIdEqual(self) -> str: ...
    def setEntryIdEqual(self, newEntryIdEqual: str) -> None: ...
    def getEntryIdIn(self) -> str: ...
    def setEntryIdIn(self, newEntryIdIn: str) -> None: ...
    def getEntryIdNotIn(self) -> str: ...
    def setEntryIdNotIn(self, newEntryIdNotIn: str) -> None: ...
    def getUserIdEqual(self) -> str: ...
    def setUserIdEqual(self, newUserIdEqual: str) -> None: ...
    def getUserIdIn(self) -> str: ...
    def setUserIdIn(self, newUserIdIn: str) -> None: ...
    def getUserIdNotIn(self) -> str: ...
    def setUserIdNotIn(self, newUserIdNotIn: str) -> None: ...
    def getStatusEqual(self) -> KalturaUserEntryStatus: ...
    def setStatusEqual(self, newStatusEqual: KalturaUserEntryStatus) -> None: ...
    def getCreatedAtLessThanOrEqual(self) -> int: ...
    def setCreatedAtLessThanOrEqual(self, newCreatedAtLessThanOrEqual: int) -> None: ...
    def getCreatedAtGreaterThanOrEqual(self) -> int: ...
    def setCreatedAtGreaterThanOrEqual(self, newCreatedAtGreaterThanOrEqual: int) -> None: ...
    def getUpdatedAtLessThanOrEqual(self) -> int: ...
    def setUpdatedAtLessThanOrEqual(self, newUpdatedAtLessThanOrEqual: int) -> None: ...
    def getUpdatedAtGreaterThanOrEqual(self) -> int: ...
    def setUpdatedAtGreaterThanOrEqual(self, newUpdatedAtGreaterThanOrEqual: int) -> None: ...
    def getTypeEqual(self) -> KalturaUserEntryType: ...
    def setTypeEqual(self, newTypeEqual: KalturaUserEntryType) -> None: ...

class KalturaUserLoginDataBaseFilter(KalturaRelatedFilter):
    loginEmailEqual: str
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            loginEmailEqual: str = NotImplemented): ...

    def getLoginEmailEqual(self) -> str: ...
    def setLoginEmailEqual(self, newLoginEmailEqual: str) -> None: ...

class KalturaUserRoleBaseFilter(KalturaRelatedFilter):
    idEqual: int
    idIn: str
    nameEqual: str
    nameIn: str
    systemNameEqual: str
    systemNameIn: str
    descriptionLike: str
    statusEqual: KalturaUserRoleStatus
    statusIn: str
    partnerIdEqual: int
    partnerIdIn: str
    tagsMultiLikeOr: str
    tagsMultiLikeAnd: str
    createdAtGreaterThanOrEqual: int
    createdAtLessThanOrEqual: int
    updatedAtGreaterThanOrEqual: int
    updatedAtLessThanOrEqual: int
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            nameEqual: str = NotImplemented,
            nameIn: str = NotImplemented,
            systemNameEqual: str = NotImplemented,
            systemNameIn: str = NotImplemented,
            descriptionLike: str = NotImplemented,
            statusEqual: KalturaUserRoleStatus = NotImplemented,
            statusIn: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            tagsMultiLikeOr: str = NotImplemented,
            tagsMultiLikeAnd: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented): ...

    def getIdEqual(self) -> int: ...
    def setIdEqual(self, newIdEqual: int) -> None: ...
    def getIdIn(self) -> str: ...
    def setIdIn(self, newIdIn: str) -> None: ...
    def getNameEqual(self) -> str: ...
    def setNameEqual(self, newNameEqual: str) -> None: ...
    def getNameIn(self) -> str: ...
    def setNameIn(self, newNameIn: str) -> None: ...
    def getSystemNameEqual(self) -> str: ...
    def setSystemNameEqual(self, newSystemNameEqual: str) -> None: ...
    def getSystemNameIn(self) -> str: ...
    def setSystemNameIn(self, newSystemNameIn: str) -> None: ...
    def getDescriptionLike(self) -> str: ...
    def setDescriptionLike(self, newDescriptionLike: str) -> None: ...
    def getStatusEqual(self) -> KalturaUserRoleStatus: ...
    def setStatusEqual(self, newStatusEqual: KalturaUserRoleStatus) -> None: ...
    def getStatusIn(self) -> str: ...
    def setStatusIn(self, newStatusIn: str) -> None: ...
    def getPartnerIdEqual(self) -> int: ...
    def setPartnerIdEqual(self, newPartnerIdEqual: int) -> None: ...
    def getPartnerIdIn(self) -> str: ...
    def setPartnerIdIn(self, newPartnerIdIn: str) -> None: ...
    def getTagsMultiLikeOr(self) -> str: ...
    def setTagsMultiLikeOr(self, newTagsMultiLikeOr: str) -> None: ...
    def getTagsMultiLikeAnd(self) -> str: ...
    def setTagsMultiLikeAnd(self, newTagsMultiLikeAnd: str) -> None: ...
    def getCreatedAtGreaterThanOrEqual(self) -> int: ...
    def setCreatedAtGreaterThanOrEqual(self, newCreatedAtGreaterThanOrEqual: int) -> None: ...
    def getCreatedAtLessThanOrEqual(self) -> int: ...
    def setCreatedAtLessThanOrEqual(self, newCreatedAtLessThanOrEqual: int) -> None: ...
    def getUpdatedAtGreaterThanOrEqual(self) -> int: ...
    def setUpdatedAtGreaterThanOrEqual(self, newUpdatedAtGreaterThanOrEqual: int) -> None: ...
    def getUpdatedAtLessThanOrEqual(self) -> int: ...
    def setUpdatedAtLessThanOrEqual(self, newUpdatedAtLessThanOrEqual: int) -> None: ...

class KalturaWidgetFilter(KalturaWidgetBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: str = NotImplemented,
            idIn: str = NotImplemented,
            sourceWidgetIdEqual: str = NotImplemented,
            rootWidgetIdEqual: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            entryIdEqual: str = NotImplemented,
            uiConfIdEqual: int = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            partnerDataLike: str = NotImplemented): ...
        pass

class KalturaAccessControlFilter(KalturaAccessControlBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            systemNameEqual: str = NotImplemented,
            systemNameIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented): ...
        pass

class KalturaAccessControlProfileFilter(KalturaAccessControlProfileBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            systemNameEqual: str = NotImplemented,
            systemNameIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented): ...
        pass

class KalturaActionNameCondition(KalturaRegexCondition):
    def __init__(self,
            type: KalturaConditionType = NotImplemented,
            description: str = NotImplemented,
            not_: bool = NotImplemented,
            values: List[KalturaStringValue] = NotImplemented,
            matchType: KalturaMatchConditionType = NotImplemented): ...
        pass

class KalturaAmazonS3StorageExportJobData(KalturaStorageExportJobData):
    filesPermissionInS3: KalturaAmazonS3StorageProfileFilesPermissionLevel
    s3Region: str
    sseType: str
    sseKmsKeyId: str
    signatureType: str
    endPoint: str
    storageClass: str
    def __init__(self,
            serverUrl: str = NotImplemented,
            serverUsername: str = NotImplemented,
            serverPassword: str = NotImplemented,
            serverPrivateKey: str = NotImplemented,
            serverPublicKey: str = NotImplemented,
            serverPassPhrase: str = NotImplemented,
            ftpPassiveMode: bool = NotImplemented,
            srcFileSyncLocalPath: str = NotImplemented,
            srcFileEncryptionKey: str = NotImplemented,
            srcFileSyncId: str = NotImplemented,
            destFileSyncStoredPath: str = NotImplemented,
            force: bool = NotImplemented,
            createLink: bool = NotImplemented,
            assetId: str = NotImplemented,
            externalUrl: str = NotImplemented,
            port: int = NotImplemented,
            filesPermissionInS3: KalturaAmazonS3StorageProfileFilesPermissionLevel = NotImplemented,
            s3Region: str = NotImplemented,
            sseType: str = NotImplemented,
            sseKmsKeyId: str = NotImplemented,
            signatureType: str = NotImplemented,
            endPoint: str = NotImplemented,
            storageClass: str = NotImplemented): ...

    def getFilesPermissionInS3(self) -> KalturaAmazonS3StorageProfileFilesPermissionLevel: ...
    def setFilesPermissionInS3(self, newFilesPermissionInS3: KalturaAmazonS3StorageProfileFilesPermissionLevel) -> None: ...
    def getS3Region(self) -> str: ...
    def setS3Region(self, newS3Region: str) -> None: ...
    def getSseType(self) -> str: ...
    def setSseType(self, newSseType: str) -> None: ...
    def getSseKmsKeyId(self) -> str: ...
    def setSseKmsKeyId(self, newSseKmsKeyId: str) -> None: ...
    def getSignatureType(self) -> str: ...
    def setSignatureType(self, newSignatureType: str) -> None: ...
    def getEndPoint(self) -> str: ...
    def setEndPoint(self, newEndPoint: str) -> None: ...
    def getStorageClass(self) -> str: ...
    def setStorageClass(self, newStorageClass: str) -> None: ...

class KalturaAmazonS3StorageProfileBaseFilter(KalturaStorageProfileFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            systemNameEqual: str = NotImplemented,
            systemNameIn: str = NotImplemented,
            statusEqual: KalturaStorageProfileStatus = NotImplemented,
            statusIn: str = NotImplemented,
            protocolEqual: KalturaStorageProfileProtocol = NotImplemented,
            protocolIn: str = NotImplemented): ...
        pass

class KalturaAnonymousIPContextField(KalturaStringField):
    geoCoderType: KalturaGeoCoderType
    def __init__(self,
            description: str = NotImplemented,
            value: str = NotImplemented,
            geoCoderType: KalturaGeoCoderType = NotImplemented): ...

    def getGeoCoderType(self) -> KalturaGeoCoderType: ...
    def setGeoCoderType(self, newGeoCoderType: KalturaGeoCoderType) -> None: ...

class KalturaAssetParamsFilter(KalturaAssetParamsBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            systemNameEqual: str = NotImplemented,
            systemNameIn: str = NotImplemented,
            isSystemDefaultEqual: KalturaNullableBoolean = NotImplemented,
            tagsEqual: str = NotImplemented): ...
        pass

class KalturaBaseEntryCompareAttributeCondition(KalturaSearchComparableAttributeCondition):
    attribute: KalturaBaseEntryCompareAttribute
    def __init__(self,
            value: str = NotImplemented,
            comparison: KalturaSearchConditionComparison = NotImplemented,
            attribute: KalturaBaseEntryCompareAttribute = NotImplemented): ...

    def getAttribute(self) -> KalturaBaseEntryCompareAttribute: ...
    def setAttribute(self, newAttribute: KalturaBaseEntryCompareAttribute) -> None: ...

class KalturaBaseEntryMatchAttributeCondition(KalturaSearchMatchAttributeCondition):
    attribute: KalturaBaseEntryMatchAttribute
    def __init__(self,
            value: str = NotImplemented,
            not_: bool = NotImplemented,
            attribute: KalturaBaseEntryMatchAttribute = NotImplemented): ...

    def getAttribute(self) -> KalturaBaseEntryMatchAttribute: ...
    def setAttribute(self, newAttribute: KalturaBaseEntryMatchAttribute) -> None: ...

class KalturaBatchJobFilterExt(KalturaBatchJobFilter):
    jobTypeAndSubTypeIn: str
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idGreaterThanOrEqual: int = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            partnerIdNotIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            executionAttemptsGreaterThanOrEqual: int = NotImplemented,
            executionAttemptsLessThanOrEqual: int = NotImplemented,
            lockVersionGreaterThanOrEqual: int = NotImplemented,
            lockVersionLessThanOrEqual: int = NotImplemented,
            entryIdEqual: str = NotImplemented,
            jobTypeEqual: KalturaBatchJobType = NotImplemented,
            jobTypeIn: str = NotImplemented,
            jobTypeNotIn: str = NotImplemented,
            jobSubTypeEqual: int = NotImplemented,
            jobSubTypeIn: str = NotImplemented,
            jobSubTypeNotIn: str = NotImplemented,
            statusEqual: KalturaBatchJobStatus = NotImplemented,
            statusIn: str = NotImplemented,
            statusNotIn: str = NotImplemented,
            priorityGreaterThanOrEqual: int = NotImplemented,
            priorityLessThanOrEqual: int = NotImplemented,
            priorityEqual: int = NotImplemented,
            priorityIn: str = NotImplemented,
            priorityNotIn: str = NotImplemented,
            batchVersionGreaterThanOrEqual: int = NotImplemented,
            batchVersionLessThanOrEqual: int = NotImplemented,
            batchVersionEqual: int = NotImplemented,
            queueTimeGreaterThanOrEqual: int = NotImplemented,
            queueTimeLessThanOrEqual: int = NotImplemented,
            finishTimeGreaterThanOrEqual: int = NotImplemented,
            finishTimeLessThanOrEqual: int = NotImplemented,
            errTypeEqual: KalturaBatchJobErrorTypes = NotImplemented,
            errTypeIn: str = NotImplemented,
            errTypeNotIn: str = NotImplemented,
            errNumberEqual: int = NotImplemented,
            errNumberIn: str = NotImplemented,
            errNumberNotIn: str = NotImplemented,
            estimatedEffortLessThan: int = NotImplemented,
            estimatedEffortGreaterThan: int = NotImplemented,
            urgencyLessThanOrEqual: int = NotImplemented,
            urgencyGreaterThanOrEqual: int = NotImplemented,
            jobTypeAndSubTypeIn: str = NotImplemented): ...

    def getJobTypeAndSubTypeIn(self) -> str: ...
    def setJobTypeAndSubTypeIn(self, newJobTypeAndSubTypeIn: str) -> None: ...

class KalturaCategoryFilter(KalturaCategoryBaseFilter):
    freeText: str
    membersIn: str
    nameOrReferenceIdStartsWith: str
    managerEqual: str
    memberEqual: str
    fullNameStartsWithIn: str
    ancestorIdIn: str
    idOrInheritedParentIdIn: str
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            idNotIn: str = NotImplemented,
            parentIdEqual: int = NotImplemented,
            parentIdIn: str = NotImplemented,
            depthEqual: int = NotImplemented,
            fullNameEqual: str = NotImplemented,
            fullNameStartsWith: str = NotImplemented,
            fullNameIn: str = NotImplemented,
            fullIdsEqual: str = NotImplemented,
            fullIdsStartsWith: str = NotImplemented,
            fullIdsMatchOr: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            tagsLike: str = NotImplemented,
            tagsMultiLikeOr: str = NotImplemented,
            tagsMultiLikeAnd: str = NotImplemented,
            appearInListEqual: KalturaAppearInListType = NotImplemented,
            privacyEqual: KalturaPrivacyType = NotImplemented,
            privacyIn: str = NotImplemented,
            inheritanceTypeEqual: KalturaInheritanceType = NotImplemented,
            inheritanceTypeIn: str = NotImplemented,
            referenceIdEqual: str = NotImplemented,
            referenceIdEmpty: KalturaNullableBoolean = NotImplemented,
            contributionPolicyEqual: KalturaContributionPolicyType = NotImplemented,
            membersCountGreaterThanOrEqual: int = NotImplemented,
            membersCountLessThanOrEqual: int = NotImplemented,
            pendingMembersCountGreaterThanOrEqual: int = NotImplemented,
            pendingMembersCountLessThanOrEqual: int = NotImplemented,
            privacyContextEqual: str = NotImplemented,
            statusEqual: KalturaCategoryStatus = NotImplemented,
            statusIn: str = NotImplemented,
            inheritedParentIdEqual: int = NotImplemented,
            inheritedParentIdIn: str = NotImplemented,
            partnerSortValueGreaterThanOrEqual: int = NotImplemented,
            partnerSortValueLessThanOrEqual: int = NotImplemented,
            aggregationCategoriesMultiLikeOr: str = NotImplemented,
            aggregationCategoriesMultiLikeAnd: str = NotImplemented,
            freeText: str = NotImplemented,
            membersIn: str = NotImplemented,
            nameOrReferenceIdStartsWith: str = NotImplemented,
            managerEqual: str = NotImplemented,
            memberEqual: str = NotImplemented,
            fullNameStartsWithIn: str = NotImplemented,
            ancestorIdIn: str = NotImplemented,
            idOrInheritedParentIdIn: str = NotImplemented): ...

    def getFreeText(self) -> str: ...
    def setFreeText(self, newFreeText: str) -> None: ...
    def getMembersIn(self) -> str: ...
    def setMembersIn(self, newMembersIn: str) -> None: ...
    def getNameOrReferenceIdStartsWith(self) -> str: ...
    def setNameOrReferenceIdStartsWith(self, newNameOrReferenceIdStartsWith: str) -> None: ...
    def getManagerEqual(self) -> str: ...
    def setManagerEqual(self, newManagerEqual: str) -> None: ...
    def getMemberEqual(self) -> str: ...
    def setMemberEqual(self, newMemberEqual: str) -> None: ...
    def getFullNameStartsWithIn(self) -> str: ...
    def setFullNameStartsWithIn(self, newFullNameStartsWithIn: str) -> None: ...
    def getAncestorIdIn(self) -> str: ...
    def setAncestorIdIn(self, newAncestorIdIn: str) -> None: ...
    def getIdOrInheritedParentIdIn(self) -> str: ...
    def setIdOrInheritedParentIdIn(self, newIdOrInheritedParentIdIn: str) -> None: ...

class KalturaCategoriesCsvJobData(KalturaMappedObjectsCsvJobData):
    filter: KalturaCategoryFilter
    def __init__(self,
            userName: str = NotImplemented,
            userMail: str = NotImplemented,
            outputPath: str = NotImplemented,
            sharedOutputPath: str = NotImplemented,
            metadataProfileId: int = NotImplemented,
            additionalFields: List[KalturaCsvAdditionalFieldInfo] = NotImplemented,
            mappedFields: List[KalturaKeyValue] = NotImplemented,
            options: KalturaExportToCsvOptions = NotImplemented,
            filter: KalturaCategoryFilter = NotImplemented): ...

    def getFilter(self) -> KalturaCategoryFilter: ...
    def setFilter(self, newFilter: KalturaCategoryFilter) -> None: ...

class KalturaCategoryEntryFilter(KalturaCategoryEntryBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            categoryIdEqual: int = NotImplemented,
            categoryIdIn: str = NotImplemented,
            entryIdEqual: str = NotImplemented,
            entryIdIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            categoryFullIdsStartsWith: str = NotImplemented,
            statusEqual: KalturaCategoryEntryStatus = NotImplemented,
            statusIn: str = NotImplemented,
            creatorUserIdEqual: str = NotImplemented,
            creatorUserIdIn: str = NotImplemented): ...
        pass

class KalturaConstantXsltSyndicationFeed(KalturaGenericXsltSyndicationFeed):
    def __init__(self,
            id: str = NotImplemented,
            feedUrl: str = NotImplemented,
            partnerId: int = NotImplemented,
            playlistId: str = NotImplemented,
            name: str = NotImplemented,
            status: KalturaSyndicationFeedStatus = NotImplemented,
            type: KalturaSyndicationFeedType = NotImplemented,
            landingPage: str = NotImplemented,
            createdAt: int = NotImplemented,
            allowEmbed: bool = NotImplemented,
            playerUiconfId: int = NotImplemented,
            flavorParamId: int = NotImplemented,
            transcodeExistingContent: bool = NotImplemented,
            addToDefaultConversionProfile: bool = NotImplemented,
            categories: str = NotImplemented,
            storageId: int = NotImplemented,
            entriesOrderBy: KalturaSyndicationFeedEntriesOrderBy = NotImplemented,
            enforceEntitlement: bool = NotImplemented,
            privacyContext: str = NotImplemented,
            updatedAt: int = NotImplemented,
            useCategoryEntries: bool = NotImplemented,
            feedContentTypeHeader: str = NotImplemented,
            feedDescription: str = NotImplemented,
            feedLandingPage: str = NotImplemented,
            entryFilter: KalturaBaseEntryFilter = NotImplemented,
            pageSize: int = NotImplemented,
            xslt: str = NotImplemented,
            itemXpathsToExtend: List[KalturaExtendingItemMrssParameter] = NotImplemented): ...
        pass

class KalturaConversionProfileFilter(KalturaConversionProfileBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            statusEqual: KalturaConversionProfileStatus = NotImplemented,
            statusIn: str = NotImplemented,
            typeEqual: KalturaConversionProfileType = NotImplemented,
            typeIn: str = NotImplemented,
            nameEqual: str = NotImplemented,
            systemNameEqual: str = NotImplemented,
            systemNameIn: str = NotImplemented,
            tagsMultiLikeOr: str = NotImplemented,
            tagsMultiLikeAnd: str = NotImplemented,
            defaultEntryIdEqual: str = NotImplemented,
            defaultEntryIdIn: str = NotImplemented): ...
        pass

class KalturaConversionProfileAssetParamsFilter(KalturaConversionProfileAssetParamsBaseFilter):
    conversionProfileIdFilter: KalturaConversionProfileFilter
    assetParamsIdFilter: KalturaAssetParamsFilter
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            conversionProfileIdEqual: int = NotImplemented,
            conversionProfileIdIn: str = NotImplemented,
            assetParamsIdEqual: int = NotImplemented,
            assetParamsIdIn: str = NotImplemented,
            readyBehaviorEqual: KalturaFlavorReadyBehaviorType = NotImplemented,
            readyBehaviorIn: str = NotImplemented,
            originEqual: KalturaAssetParamsOrigin = NotImplemented,
            originIn: str = NotImplemented,
            systemNameEqual: str = NotImplemented,
            systemNameIn: str = NotImplemented,
            conversionProfileIdFilter: KalturaConversionProfileFilter = NotImplemented,
            assetParamsIdFilter: KalturaAssetParamsFilter = NotImplemented): ...

    def getConversionProfileIdFilter(self) -> KalturaConversionProfileFilter: ...
    def setConversionProfileIdFilter(self, newConversionProfileIdFilter: KalturaConversionProfileFilter) -> None: ...
    def getAssetParamsIdFilter(self) -> KalturaAssetParamsFilter: ...
    def setAssetParamsIdFilter(self, newAssetParamsIdFilter: KalturaAssetParamsFilter) -> None: ...

class KalturaCoordinatesContextField(KalturaStringField):
    geoCoderType: KalturaGeoCoderType
    def __init__(self,
            description: str = NotImplemented,
            value: str = NotImplemented,
            geoCoderType: KalturaGeoCoderType = NotImplemented): ...

    def getGeoCoderType(self) -> KalturaGeoCoderType: ...
    def setGeoCoderType(self, newGeoCoderType: KalturaGeoCoderType) -> None: ...

class KalturaCountryContextField(KalturaStringField):
    geoCoderType: KalturaGeoCoderType
    def __init__(self,
            description: str = NotImplemented,
            value: str = NotImplemented,
            geoCoderType: KalturaGeoCoderType = NotImplemented): ...

    def getGeoCoderType(self) -> KalturaGeoCoderType: ...
    def setGeoCoderType(self, newGeoCoderType: KalturaGeoCoderType) -> None: ...

class KalturaDataEntryCompareAttributeCondition(KalturaSearchComparableAttributeCondition):
    attribute: KalturaDataEntryCompareAttribute
    def __init__(self,
            value: str = NotImplemented,
            comparison: KalturaSearchConditionComparison = NotImplemented,
            attribute: KalturaDataEntryCompareAttribute = NotImplemented): ...

    def getAttribute(self) -> KalturaDataEntryCompareAttribute: ...
    def setAttribute(self, newAttribute: KalturaDataEntryCompareAttribute) -> None: ...

class KalturaDataEntryMatchAttributeCondition(KalturaSearchMatchAttributeCondition):
    attribute: KalturaDataEntryMatchAttribute
    def __init__(self,
            value: str = NotImplemented,
            not_: bool = NotImplemented,
            attribute: KalturaDataEntryMatchAttribute = NotImplemented): ...

    def getAttribute(self) -> KalturaDataEntryMatchAttribute: ...
    def setAttribute(self, newAttribute: KalturaDataEntryMatchAttribute) -> None: ...

class KalturaDeliveryProfileAkamaiAppleHttpManifestBaseFilter(KalturaDeliveryProfileFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            systemNameEqual: str = NotImplemented,
            systemNameIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            streamerTypeEqual: KalturaPlaybackProtocol = NotImplemented,
            statusEqual: KalturaDeliveryStatus = NotImplemented,
            statusIn: str = NotImplemented,
            isLive: KalturaNullableBoolean = NotImplemented): ...
        pass

class KalturaDeliveryProfileAkamaiHdsBaseFilter(KalturaDeliveryProfileFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            systemNameEqual: str = NotImplemented,
            systemNameIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            streamerTypeEqual: KalturaPlaybackProtocol = NotImplemented,
            statusEqual: KalturaDeliveryStatus = NotImplemented,
            statusIn: str = NotImplemented,
            isLive: KalturaNullableBoolean = NotImplemented): ...
        pass

class KalturaDeliveryProfileAkamaiHttpBaseFilter(KalturaDeliveryProfileFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            systemNameEqual: str = NotImplemented,
            systemNameIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            streamerTypeEqual: KalturaPlaybackProtocol = NotImplemented,
            statusEqual: KalturaDeliveryStatus = NotImplemented,
            statusIn: str = NotImplemented,
            isLive: KalturaNullableBoolean = NotImplemented): ...
        pass

class KalturaDeliveryProfileGenericAppleHttpBaseFilter(KalturaDeliveryProfileFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            systemNameEqual: str = NotImplemented,
            systemNameIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            streamerTypeEqual: KalturaPlaybackProtocol = NotImplemented,
            statusEqual: KalturaDeliveryStatus = NotImplemented,
            statusIn: str = NotImplemented,
            isLive: KalturaNullableBoolean = NotImplemented): ...
        pass

class KalturaDeliveryProfileGenericHdsBaseFilter(KalturaDeliveryProfileFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            systemNameEqual: str = NotImplemented,
            systemNameIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            streamerTypeEqual: KalturaPlaybackProtocol = NotImplemented,
            statusEqual: KalturaDeliveryStatus = NotImplemented,
            statusIn: str = NotImplemented,
            isLive: KalturaNullableBoolean = NotImplemented): ...
        pass

class KalturaDeliveryProfileGenericHttpBaseFilter(KalturaDeliveryProfileFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            systemNameEqual: str = NotImplemented,
            systemNameIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            streamerTypeEqual: KalturaPlaybackProtocol = NotImplemented,
            statusEqual: KalturaDeliveryStatus = NotImplemented,
            statusIn: str = NotImplemented,
            isLive: KalturaNullableBoolean = NotImplemented): ...
        pass

class KalturaDeliveryProfileGenericSilverLightBaseFilter(KalturaDeliveryProfileFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            systemNameEqual: str = NotImplemented,
            systemNameIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            streamerTypeEqual: KalturaPlaybackProtocol = NotImplemented,
            statusEqual: KalturaDeliveryStatus = NotImplemented,
            statusIn: str = NotImplemented,
            isLive: KalturaNullableBoolean = NotImplemented): ...
        pass

class KalturaDeliveryProfileLiveAppleHttpBaseFilter(KalturaDeliveryProfileFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            systemNameEqual: str = NotImplemented,
            systemNameIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            streamerTypeEqual: KalturaPlaybackProtocol = NotImplemented,
            statusEqual: KalturaDeliveryStatus = NotImplemented,
            statusIn: str = NotImplemented,
            isLive: KalturaNullableBoolean = NotImplemented): ...
        pass

class KalturaDeliveryProfileRtmpBaseFilter(KalturaDeliveryProfileFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            systemNameEqual: str = NotImplemented,
            systemNameIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            streamerTypeEqual: KalturaPlaybackProtocol = NotImplemented,
            statusEqual: KalturaDeliveryStatus = NotImplemented,
            statusIn: str = NotImplemented,
            isLive: KalturaNullableBoolean = NotImplemented): ...
        pass

class KalturaDeliveryProfileVodPackagerHls(KalturaDeliveryProfileVodPackagerPlayServer):
    allowFairplayOffline: bool
    supportFmp4: bool
    def __init__(self,
            id: int = NotImplemented,
            partnerId: int = NotImplemented,
            name: str = NotImplemented,
            type: KalturaDeliveryProfileType = NotImplemented,
            systemName: str = NotImplemented,
            description: str = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            streamerType: KalturaPlaybackProtocol = NotImplemented,
            url: str = NotImplemented,
            hostName: str = NotImplemented,
            status: KalturaDeliveryStatus = NotImplemented,
            recognizer: KalturaUrlRecognizer = NotImplemented,
            tokenizer: KalturaUrlTokenizer = NotImplemented,
            isDefault: KalturaNullableBoolean = NotImplemented,
            parentId: int = NotImplemented,
            mediaProtocols: str = NotImplemented,
            priority: int = NotImplemented,
            extraParams: str = NotImplemented,
            supplementaryAssetsFilter: KalturaAssetFilter = NotImplemented,
            enforceDeliveriesSupport: str = NotImplemented,
            simuliveSupport: bool = NotImplemented,
            adStitchingEnabled: bool = NotImplemented,
            allowFairplayOffline: bool = NotImplemented,
            supportFmp4: bool = NotImplemented): ...

    def getAllowFairplayOffline(self) -> bool: ...
    def setAllowFairplayOffline(self, newAllowFairplayOffline: bool) -> None: ...
    def getSupportFmp4(self) -> bool: ...
    def setSupportFmp4(self, newSupportFmp4: bool) -> None: ...

class KalturaDeliveryServerNodeBaseFilter(KalturaServerNodeFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            heartbeatTimeGreaterThanOrEqual: int = NotImplemented,
            heartbeatTimeLessThanOrEqual: int = NotImplemented,
            nameEqual: str = NotImplemented,
            nameIn: str = NotImplemented,
            systemNameEqual: str = NotImplemented,
            systemNameIn: str = NotImplemented,
            hostNameLike: str = NotImplemented,
            hostNameMultiLikeOr: str = NotImplemented,
            hostNameMultiLikeAnd: str = NotImplemented,
            statusEqual: KalturaServerNodeStatus = NotImplemented,
            statusIn: str = NotImplemented,
            typeEqual: KalturaServerNodeType = NotImplemented,
            typeIn: str = NotImplemented,
            tagsLike: str = NotImplemented,
            tagsMultiLikeOr: str = NotImplemented,
            tagsMultiLikeAnd: str = NotImplemented,
            dcEqual: int = NotImplemented,
            dcIn: str = NotImplemented,
            parentIdLike: str = NotImplemented,
            parentIdMultiLikeOr: str = NotImplemented,
            parentIdMultiLikeAnd: str = NotImplemented,
            environmentEqual: str = NotImplemented,
            environmentIn: str = NotImplemented): ...
        pass

class KalturaDocumentEntryCompareAttributeCondition(KalturaSearchComparableAttributeCondition):
    attribute: KalturaDocumentEntryCompareAttribute
    def __init__(self,
            value: str = NotImplemented,
            comparison: KalturaSearchConditionComparison = NotImplemented,
            attribute: KalturaDocumentEntryCompareAttribute = NotImplemented): ...

    def getAttribute(self) -> KalturaDocumentEntryCompareAttribute: ...
    def setAttribute(self, newAttribute: KalturaDocumentEntryCompareAttribute) -> None: ...

class KalturaDocumentEntryMatchAttributeCondition(KalturaSearchMatchAttributeCondition):
    attribute: KalturaDocumentEntryMatchAttribute
    def __init__(self,
            value: str = NotImplemented,
            not_: bool = NotImplemented,
            attribute: KalturaDocumentEntryMatchAttribute = NotImplemented): ...

    def getAttribute(self) -> KalturaDocumentEntryMatchAttribute: ...
    def setAttribute(self, newAttribute: KalturaDocumentEntryMatchAttribute) -> None: ...

class KalturaEntriesCsvJobData(KalturaMappedObjectsCsvJobData):
    filter: KalturaBaseEntryFilter
    def __init__(self,
            userName: str = NotImplemented,
            userMail: str = NotImplemented,
            outputPath: str = NotImplemented,
            sharedOutputPath: str = NotImplemented,
            metadataProfileId: int = NotImplemented,
            additionalFields: List[KalturaCsvAdditionalFieldInfo] = NotImplemented,
            mappedFields: List[KalturaKeyValue] = NotImplemented,
            options: KalturaExportToCsvOptions = NotImplemented,
            filter: KalturaBaseEntryFilter = NotImplemented): ...

    def getFilter(self) -> KalturaBaseEntryFilter: ...
    def setFilter(self, newFilter: KalturaBaseEntryFilter) -> None: ...

class KalturaEvalBooleanField(KalturaBooleanField):
    code: str
    def __init__(self,
            description: str = NotImplemented,
            value: bool = NotImplemented,
            code: str = NotImplemented): ...

    def getCode(self) -> str: ...
    def setCode(self, newCode: str) -> None: ...

class KalturaEvalStringField(KalturaStringField):
    code: str
    def __init__(self,
            description: str = NotImplemented,
            value: str = NotImplemented,
            code: str = NotImplemented): ...

    def getCode(self) -> str: ...
    def setCode(self, newCode: str) -> None: ...

class KalturaExternalMediaEntryCompareAttributeCondition(KalturaSearchComparableAttributeCondition):
    attribute: KalturaExternalMediaEntryCompareAttribute
    def __init__(self,
            value: str = NotImplemented,
            comparison: KalturaSearchConditionComparison = NotImplemented,
            attribute: KalturaExternalMediaEntryCompareAttribute = NotImplemented): ...

    def getAttribute(self) -> KalturaExternalMediaEntryCompareAttribute: ...
    def setAttribute(self, newAttribute: KalturaExternalMediaEntryCompareAttribute) -> None: ...

class KalturaExternalMediaEntryMatchAttributeCondition(KalturaSearchMatchAttributeCondition):
    attribute: KalturaExternalMediaEntryMatchAttribute
    def __init__(self,
            value: str = NotImplemented,
            not_: bool = NotImplemented,
            attribute: KalturaExternalMediaEntryMatchAttribute = NotImplemented): ...

    def getAttribute(self) -> KalturaExternalMediaEntryMatchAttribute: ...
    def setAttribute(self, newAttribute: KalturaExternalMediaEntryMatchAttribute) -> None: ...

class KalturaFileAssetFilter(KalturaFileAssetBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            fileAssetObjectTypeEqual: KalturaFileAssetObjectType = NotImplemented,
            objectIdEqual: str = NotImplemented,
            objectIdIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            statusEqual: KalturaFileAssetStatus = NotImplemented,
            statusIn: str = NotImplemented): ...
        pass

class KalturaGenericDataCenterContentResource(KalturaDataCenterContentResource):
    def __init__(self): ...
        pass

class KalturaGenericSyndicationFeedBaseFilter(KalturaBaseSyndicationFeedFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented): ...
        pass

class KalturaGoogleVideoSyndicationFeedBaseFilter(KalturaBaseSyndicationFeedFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented): ...
        pass

class KalturaGroupUserFilter(KalturaGroupUserBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            userIdEqual: str = NotImplemented,
            userIdIn: str = NotImplemented,
            groupIdEqual: str = NotImplemented,
            groupIdIn: str = NotImplemented,
            statusEqual: KalturaGroupUserStatus = NotImplemented,
            statusIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented): ...
        pass

class KalturaHttpHeaderCondition(KalturaRegexCondition):
    headerName: str
    def __init__(self,
            type: KalturaConditionType = NotImplemented,
            description: str = NotImplemented,
            not_: bool = NotImplemented,
            values: List[KalturaStringValue] = NotImplemented,
            matchType: KalturaMatchConditionType = NotImplemented,
            headerName: str = NotImplemented): ...

    def getHeaderName(self) -> str: ...
    def setHeaderName(self, newHeaderName: str) -> None: ...

class KalturaITunesSyndicationFeedBaseFilter(KalturaBaseSyndicationFeedFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented): ...
        pass

class KalturaIpAddressContextField(KalturaStringField):
    def __init__(self,
            description: str = NotImplemented,
            value: str = NotImplemented): ...
        pass

class KalturaLiveChannelCompareAttributeCondition(KalturaSearchComparableAttributeCondition):
    attribute: KalturaLiveChannelCompareAttribute
    def __init__(self,
            value: str = NotImplemented,
            comparison: KalturaSearchConditionComparison = NotImplemented,
            attribute: KalturaLiveChannelCompareAttribute = NotImplemented): ...

    def getAttribute(self) -> KalturaLiveChannelCompareAttribute: ...
    def setAttribute(self, newAttribute: KalturaLiveChannelCompareAttribute) -> None: ...

class KalturaLiveChannelMatchAttributeCondition(KalturaSearchMatchAttributeCondition):
    attribute: KalturaLiveChannelMatchAttribute
    def __init__(self,
            value: str = NotImplemented,
            not_: bool = NotImplemented,
            attribute: KalturaLiveChannelMatchAttribute = NotImplemented): ...

    def getAttribute(self) -> KalturaLiveChannelMatchAttribute: ...
    def setAttribute(self, newAttribute: KalturaLiveChannelMatchAttribute) -> None: ...

class KalturaLiveChannelSegmentFilter(KalturaLiveChannelSegmentBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            statusEqual: KalturaLiveChannelSegmentStatus = NotImplemented,
            statusIn: str = NotImplemented,
            channelIdEqual: str = NotImplemented,
            channelIdIn: str = NotImplemented,
            startTimeGreaterThanOrEqual: float = NotImplemented,
            startTimeLessThanOrEqual: float = NotImplemented): ...
        pass

class KalturaLiveEntryCompareAttributeCondition(KalturaSearchComparableAttributeCondition):
    attribute: KalturaLiveEntryCompareAttribute
    def __init__(self,
            value: str = NotImplemented,
            comparison: KalturaSearchConditionComparison = NotImplemented,
            attribute: KalturaLiveEntryCompareAttribute = NotImplemented): ...

    def getAttribute(self) -> KalturaLiveEntryCompareAttribute: ...
    def setAttribute(self, newAttribute: KalturaLiveEntryCompareAttribute) -> None: ...

class KalturaLiveEntryMatchAttributeCondition(KalturaSearchMatchAttributeCondition):
    attribute: KalturaLiveEntryMatchAttribute
    def __init__(self,
            value: str = NotImplemented,
            not_: bool = NotImplemented,
            attribute: KalturaLiveEntryMatchAttribute = NotImplemented): ...

    def getAttribute(self) -> KalturaLiveEntryMatchAttribute: ...
    def setAttribute(self, newAttribute: KalturaLiveEntryMatchAttribute) -> None: ...

class KalturaLiveEntryServerNodeBaseFilter(KalturaEntryServerNodeFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            entryIdEqual: str = NotImplemented,
            entryIdIn: str = NotImplemented,
            serverNodeIdEqual: int = NotImplemented,
            serverNodeIdIn: str = NotImplemented,
            serverNodeIdNotIn: str = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            statusEqual: KalturaEntryServerNodeStatus = NotImplemented,
            statusIn: str = NotImplemented,
            serverTypeEqual: KalturaEntryServerNodeType = NotImplemented,
            serverTypeIn: str = NotImplemented,
            serverTypeNotIn: str = NotImplemented): ...
        pass

class KalturaLiveStreamAdminEntryCompareAttributeCondition(KalturaSearchComparableAttributeCondition):
    attribute: KalturaLiveStreamAdminEntryCompareAttribute
    def __init__(self,
            value: str = NotImplemented,
            comparison: KalturaSearchConditionComparison = NotImplemented,
            attribute: KalturaLiveStreamAdminEntryCompareAttribute = NotImplemented): ...

    def getAttribute(self) -> KalturaLiveStreamAdminEntryCompareAttribute: ...
    def setAttribute(self, newAttribute: KalturaLiveStreamAdminEntryCompareAttribute) -> None: ...

class KalturaLiveStreamAdminEntryMatchAttributeCondition(KalturaSearchMatchAttributeCondition):
    attribute: KalturaLiveStreamAdminEntryMatchAttribute
    def __init__(self,
            value: str = NotImplemented,
            not_: bool = NotImplemented,
            attribute: KalturaLiveStreamAdminEntryMatchAttribute = NotImplemented): ...

    def getAttribute(self) -> KalturaLiveStreamAdminEntryMatchAttribute: ...
    def setAttribute(self, newAttribute: KalturaLiveStreamAdminEntryMatchAttribute) -> None: ...

class KalturaLiveStreamEntryCompareAttributeCondition(KalturaSearchComparableAttributeCondition):
    attribute: KalturaLiveStreamEntryCompareAttribute
    def __init__(self,
            value: str = NotImplemented,
            comparison: KalturaSearchConditionComparison = NotImplemented,
            attribute: KalturaLiveStreamEntryCompareAttribute = NotImplemented): ...

    def getAttribute(self) -> KalturaLiveStreamEntryCompareAttribute: ...
    def setAttribute(self, newAttribute: KalturaLiveStreamEntryCompareAttribute) -> None: ...

class KalturaLiveStreamEntryMatchAttributeCondition(KalturaSearchMatchAttributeCondition):
    attribute: KalturaLiveStreamEntryMatchAttribute
    def __init__(self,
            value: str = NotImplemented,
            not_: bool = NotImplemented,
            attribute: KalturaLiveStreamEntryMatchAttribute = NotImplemented): ...

    def getAttribute(self) -> KalturaLiveStreamEntryMatchAttribute: ...
    def setAttribute(self, newAttribute: KalturaLiveStreamEntryMatchAttribute) -> None: ...

class KalturaMediaEntryCompareAttributeCondition(KalturaSearchComparableAttributeCondition):
    attribute: KalturaMediaEntryCompareAttribute
    def __init__(self,
            value: str = NotImplemented,
            comparison: KalturaSearchConditionComparison = NotImplemented,
            attribute: KalturaMediaEntryCompareAttribute = NotImplemented): ...

    def getAttribute(self) -> KalturaMediaEntryCompareAttribute: ...
    def setAttribute(self, newAttribute: KalturaMediaEntryCompareAttribute) -> None: ...

class KalturaMediaEntryMatchAttributeCondition(KalturaSearchMatchAttributeCondition):
    attribute: KalturaMediaEntryMatchAttribute
    def __init__(self,
            value: str = NotImplemented,
            not_: bool = NotImplemented,
            attribute: KalturaMediaEntryMatchAttribute = NotImplemented): ...

    def getAttribute(self) -> KalturaMediaEntryMatchAttribute: ...
    def setAttribute(self, newAttribute: KalturaMediaEntryMatchAttribute) -> None: ...

class KalturaMediaFlavorParamsOutput(KalturaFlavorParamsOutput):
    def __init__(self,
            id: int = NotImplemented,
            partnerId: int = NotImplemented,
            name: str = NotImplemented,
            systemName: str = NotImplemented,
            description: str = NotImplemented,
            createdAt: int = NotImplemented,
            isSystemDefault: KalturaNullableBoolean = NotImplemented,
            tags: str = NotImplemented,
            requiredPermissions: List[KalturaString] = NotImplemented,
            sourceRemoteStorageProfileId: int = NotImplemented,
            remoteStorageProfileIds: int = NotImplemented,
            mediaParserType: KalturaMediaParserType = NotImplemented,
            sourceAssetParamsIds: str = NotImplemented,
            videoCodec: KalturaVideoCodec = NotImplemented,
            videoBitrate: int = NotImplemented,
            audioCodec: KalturaAudioCodec = NotImplemented,
            audioBitrate: int = NotImplemented,
            audioChannels: int = NotImplemented,
            audioSampleRate: int = NotImplemented,
            width: int = NotImplemented,
            height: int = NotImplemented,
            frameRate: float = NotImplemented,
            gopSize: int = NotImplemented,
            conversionEngines: str = NotImplemented,
            conversionEnginesExtraParams: str = NotImplemented,
            twoPass: bool = NotImplemented,
            deinterlice: int = NotImplemented,
            rotate: int = NotImplemented,
            operators: str = NotImplemented,
            engineVersion: int = NotImplemented,
            format: KalturaContainerFormat = NotImplemented,
            aspectRatioProcessingMode: int = NotImplemented,
            forceFrameToMultiplication16: int = NotImplemented,
            isGopInSec: int = NotImplemented,
            isAvoidVideoShrinkFramesizeToSource: int = NotImplemented,
            isAvoidVideoShrinkBitrateToSource: int = NotImplemented,
            isVideoFrameRateForLowBrAppleHls: int = NotImplemented,
            multiStream: str = NotImplemented,
            anamorphicPixels: float = NotImplemented,
            isAvoidForcedKeyFrames: int = NotImplemented,
            forcedKeyFramesMode: int = NotImplemented,
            isCropIMX: int = NotImplemented,
            optimizationPolicy: int = NotImplemented,
            maxFrameRate: int = NotImplemented,
            videoConstantBitrate: int = NotImplemented,
            videoBitrateTolerance: int = NotImplemented,
            watermarkData: str = NotImplemented,
            subtitlesData: str = NotImplemented,
            cropData: str = NotImplemented,
            isEncrypted: int = NotImplemented,
            contentAwareness: float = NotImplemented,
            chunkedEncodeMode: int = NotImplemented,
            clipOffset: int = NotImplemented,
            clipDuration: int = NotImplemented,
            flavorParamsId: int = NotImplemented,
            commandLinesStr: str = NotImplemented,
            flavorParamsVersion: str = NotImplemented,
            flavorAssetId: str = NotImplemented,
            flavorAssetVersion: str = NotImplemented,
            readyBehavior: int = NotImplemented): ...
        pass

class KalturaMixEntryCompareAttributeCondition(KalturaSearchComparableAttributeCondition):
    attribute: KalturaMixEntryCompareAttribute
    def __init__(self,
            value: str = NotImplemented,
            comparison: KalturaSearchConditionComparison = NotImplemented,
            attribute: KalturaMixEntryCompareAttribute = NotImplemented): ...

    def getAttribute(self) -> KalturaMixEntryCompareAttribute: ...
    def setAttribute(self, newAttribute: KalturaMixEntryCompareAttribute) -> None: ...

class KalturaMixEntryMatchAttributeCondition(KalturaSearchMatchAttributeCondition):
    attribute: KalturaMixEntryMatchAttribute
    def __init__(self,
            value: str = NotImplemented,
            not_: bool = NotImplemented,
            attribute: KalturaMixEntryMatchAttribute = NotImplemented): ...

    def getAttribute(self) -> KalturaMixEntryMatchAttribute: ...
    def setAttribute(self, newAttribute: KalturaMixEntryMatchAttribute) -> None: ...

class KalturaObjectIdField(KalturaStringField):
    def __init__(self,
            description: str = NotImplemented,
            value: str = NotImplemented): ...
        pass

class KalturaPermissionFilter(KalturaPermissionBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            typeEqual: KalturaPermissionType = NotImplemented,
            typeIn: str = NotImplemented,
            nameEqual: str = NotImplemented,
            nameIn: str = NotImplemented,
            friendlyNameLike: str = NotImplemented,
            descriptionLike: str = NotImplemented,
            statusEqual: KalturaPermissionStatus = NotImplemented,
            statusIn: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            dependsOnPermissionNamesMultiLikeOr: str = NotImplemented,
            dependsOnPermissionNamesMultiLikeAnd: str = NotImplemented,
            tagsMultiLikeOr: str = NotImplemented,
            tagsMultiLikeAnd: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented): ...
        pass

class KalturaPermissionItemFilter(KalturaPermissionItemBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            typeEqual: KalturaPermissionItemType = NotImplemented,
            typeIn: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            tagsMultiLikeOr: str = NotImplemented,
            tagsMultiLikeAnd: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented): ...
        pass

class KalturaPlayableEntryCompareAttributeCondition(KalturaSearchComparableAttributeCondition):
    attribute: KalturaPlayableEntryCompareAttribute
    def __init__(self,
            value: str = NotImplemented,
            comparison: KalturaSearchConditionComparison = NotImplemented,
            attribute: KalturaPlayableEntryCompareAttribute = NotImplemented): ...

    def getAttribute(self) -> KalturaPlayableEntryCompareAttribute: ...
    def setAttribute(self, newAttribute: KalturaPlayableEntryCompareAttribute) -> None: ...

class KalturaPlayableEntryMatchAttributeCondition(KalturaSearchMatchAttributeCondition):
    attribute: KalturaPlayableEntryMatchAttribute
    def __init__(self,
            value: str = NotImplemented,
            not_: bool = NotImplemented,
            attribute: KalturaPlayableEntryMatchAttribute = NotImplemented): ...

    def getAttribute(self) -> KalturaPlayableEntryMatchAttribute: ...
    def setAttribute(self, newAttribute: KalturaPlayableEntryMatchAttribute) -> None: ...

class KalturaPlaylistCompareAttributeCondition(KalturaSearchComparableAttributeCondition):
    attribute: KalturaPlaylistCompareAttribute
    def __init__(self,
            value: str = NotImplemented,
            comparison: KalturaSearchConditionComparison = NotImplemented,
            attribute: KalturaPlaylistCompareAttribute = NotImplemented): ...

    def getAttribute(self) -> KalturaPlaylistCompareAttribute: ...
    def setAttribute(self, newAttribute: KalturaPlaylistCompareAttribute) -> None: ...

class KalturaPlaylistMatchAttributeCondition(KalturaSearchMatchAttributeCondition):
    attribute: KalturaPlaylistMatchAttribute
    def __init__(self,
            value: str = NotImplemented,
            not_: bool = NotImplemented,
            attribute: KalturaPlaylistMatchAttribute = NotImplemented): ...

    def getAttribute(self) -> KalturaPlaylistMatchAttribute: ...
    def setAttribute(self, newAttribute: KalturaPlaylistMatchAttribute) -> None: ...

class KalturaSshUrlResource(KalturaUrlResource):
    privateKey: str
    publicKey: str
    keyPassphrase: str
    def __init__(self,
            url: str = NotImplemented,
            forceAsyncDownload: bool = NotImplemented,
            urlHeaders: List[KalturaString] = NotImplemented,
            shouldRedirect: bool = NotImplemented,
            privateKey: str = NotImplemented,
            publicKey: str = NotImplemented,
            keyPassphrase: str = NotImplemented): ...

    def getPrivateKey(self) -> str: ...
    def setPrivateKey(self, newPrivateKey: str) -> None: ...
    def getPublicKey(self) -> str: ...
    def setPublicKey(self, newPublicKey: str) -> None: ...
    def getKeyPassphrase(self) -> str: ...
    def setKeyPassphrase(self, newKeyPassphrase: str) -> None: ...

class KalturaTimeContextField(KalturaIntegerField):
    offset: int
    def __init__(self,
            description: str = NotImplemented,
            value: int = NotImplemented,
            offset: int = NotImplemented): ...

    def getOffset(self) -> int: ...
    def setOffset(self, newOffset: int) -> None: ...

class KalturaTubeMogulSyndicationFeedBaseFilter(KalturaBaseSyndicationFeedFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented): ...
        pass

class KalturaUserAgentCondition(KalturaRegexCondition):
    def __init__(self,
            type: KalturaConditionType = NotImplemented,
            description: str = NotImplemented,
            not_: bool = NotImplemented,
            values: List[KalturaStringValue] = NotImplemented,
            matchType: KalturaMatchConditionType = NotImplemented): ...
        pass

class KalturaUserAgentContextField(KalturaStringField):
    def __init__(self,
            description: str = NotImplemented,
            value: str = NotImplemented): ...
        pass

class KalturaUserAppRoleFilter(KalturaUserAppRoleBaseFilter):
    userIdEqual: str
    userIdIn: str
    userStatusEqual: KalturaUserStatus
    userStatusIn: str
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            appGuidEqual: str = NotImplemented,
            appGuidIn: str = NotImplemented,
            userRoleIdEqual: str = NotImplemented,
            userRoleIdIn: str = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            userIdEqual: str = NotImplemented,
            userIdIn: str = NotImplemented,
            userStatusEqual: KalturaUserStatus = NotImplemented,
            userStatusIn: str = NotImplemented): ...

    def getUserIdEqual(self) -> str: ...
    def setUserIdEqual(self, newUserIdEqual: str) -> None: ...
    def getUserIdIn(self) -> str: ...
    def setUserIdIn(self, newUserIdIn: str) -> None: ...
    def getUserStatusEqual(self) -> KalturaUserStatus: ...
    def setUserStatusEqual(self, newUserStatusEqual: KalturaUserStatus) -> None: ...
    def getUserStatusIn(self) -> str: ...
    def setUserStatusIn(self, newUserStatusIn: str) -> None: ...

class KalturaUserEmailContextField(KalturaStringField):
    def __init__(self,
            description: str = NotImplemented,
            value: str = NotImplemented): ...
        pass

class KalturaUserEntryFilter(KalturaUserEntryBaseFilter):
    userIdEqualCurrent: KalturaNullableBoolean
    isAnonymous: KalturaNullableBoolean
    privacyContextEqual: str
    privacyContextIn: str
    partnerId: int
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            idNotIn: str = NotImplemented,
            entryIdEqual: str = NotImplemented,
            entryIdIn: str = NotImplemented,
            entryIdNotIn: str = NotImplemented,
            userIdEqual: str = NotImplemented,
            userIdIn: str = NotImplemented,
            userIdNotIn: str = NotImplemented,
            statusEqual: KalturaUserEntryStatus = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            typeEqual: KalturaUserEntryType = NotImplemented,
            userIdEqualCurrent: KalturaNullableBoolean = NotImplemented,
            isAnonymous: KalturaNullableBoolean = NotImplemented,
            privacyContextEqual: str = NotImplemented,
            privacyContextIn: str = NotImplemented,
            partnerId: int = NotImplemented): ...

    def getUserIdEqualCurrent(self) -> KalturaNullableBoolean: ...
    def setUserIdEqualCurrent(self, newUserIdEqualCurrent: KalturaNullableBoolean) -> None: ...
    def getIsAnonymous(self) -> KalturaNullableBoolean: ...
    def setIsAnonymous(self, newIsAnonymous: KalturaNullableBoolean) -> None: ...
    def getPrivacyContextEqual(self) -> str: ...
    def setPrivacyContextEqual(self, newPrivacyContextEqual: str) -> None: ...
    def getPrivacyContextIn(self) -> str: ...
    def setPrivacyContextIn(self, newPrivacyContextIn: str) -> None: ...
    def getPartnerId(self) -> int: ...
    def setPartnerId(self, newPartnerId: int) -> None: ...

class KalturaUserLoginDataFilter(KalturaUserLoginDataBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            loginEmailEqual: str = NotImplemented): ...
        pass

class KalturaUserRoleFilter(KalturaUserRoleBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            nameEqual: str = NotImplemented,
            nameIn: str = NotImplemented,
            systemNameEqual: str = NotImplemented,
            systemNameIn: str = NotImplemented,
            descriptionLike: str = NotImplemented,
            statusEqual: KalturaUserRoleStatus = NotImplemented,
            statusIn: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            tagsMultiLikeOr: str = NotImplemented,
            tagsMultiLikeAnd: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented): ...
        pass

class KalturaUsersCsvJobData(KalturaMappedObjectsCsvJobData):
    filter: KalturaUserFilter
    def __init__(self,
            userName: str = NotImplemented,
            userMail: str = NotImplemented,
            outputPath: str = NotImplemented,
            sharedOutputPath: str = NotImplemented,
            metadataProfileId: int = NotImplemented,
            additionalFields: List[KalturaCsvAdditionalFieldInfo] = NotImplemented,
            mappedFields: List[KalturaKeyValue] = NotImplemented,
            options: KalturaExportToCsvOptions = NotImplemented,
            filter: KalturaUserFilter = NotImplemented): ...

    def getFilter(self) -> KalturaUserFilter: ...
    def setFilter(self, newFilter: KalturaUserFilter) -> None: ...

class KalturaWebcamTokenResource(KalturaDataCenterContentResource):
    token: str
    def __init__(self,
            token: str = NotImplemented): ...

    def getToken(self) -> str: ...
    def setToken(self, newToken: str) -> None: ...

class KalturaYahooSyndicationFeedBaseFilter(KalturaBaseSyndicationFeedFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented): ...
        pass

class KalturaAmazonS3StorageProfileFilter(KalturaAmazonS3StorageProfileBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            systemNameEqual: str = NotImplemented,
            systemNameIn: str = NotImplemented,
            statusEqual: KalturaStorageProfileStatus = NotImplemented,
            statusIn: str = NotImplemented,
            protocolEqual: KalturaStorageProfileProtocol = NotImplemented,
            protocolIn: str = NotImplemented): ...
        pass

class KalturaApiActionPermissionItemBaseFilter(KalturaPermissionItemFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            typeEqual: KalturaPermissionItemType = NotImplemented,
            typeIn: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            tagsMultiLikeOr: str = NotImplemented,
            tagsMultiLikeAnd: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented): ...
        pass

class KalturaApiParameterPermissionItemBaseFilter(KalturaPermissionItemFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            typeEqual: KalturaPermissionItemType = NotImplemented,
            typeIn: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            tagsMultiLikeOr: str = NotImplemented,
            tagsMultiLikeAnd: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented): ...
        pass

class KalturaAssetParamsOutputBaseFilter(KalturaAssetParamsFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            systemNameEqual: str = NotImplemented,
            systemNameIn: str = NotImplemented,
            isSystemDefaultEqual: KalturaNullableBoolean = NotImplemented,
            tagsEqual: str = NotImplemented): ...
        pass

class KalturaDataEntryBaseFilter(KalturaBaseEntryFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: str = NotImplemented,
            idIn: str = NotImplemented,
            idNotIn: str = NotImplemented,
            nameLike: str = NotImplemented,
            nameMultiLikeOr: str = NotImplemented,
            nameMultiLikeAnd: str = NotImplemented,
            nameEqual: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            userIdEqual: str = NotImplemented,
            userIdIn: str = NotImplemented,
            userIdNotIn: str = NotImplemented,
            creatorIdEqual: str = NotImplemented,
            tagsLike: str = NotImplemented,
            tagsMultiLikeOr: str = NotImplemented,
            tagsMultiLikeAnd: str = NotImplemented,
            adminTagsLike: str = NotImplemented,
            adminTagsMultiLikeOr: str = NotImplemented,
            adminTagsMultiLikeAnd: str = NotImplemented,
            categoriesMatchAnd: str = NotImplemented,
            categoriesMatchOr: str = NotImplemented,
            categoriesNotContains: str = NotImplemented,
            categoriesIdsMatchAnd: str = NotImplemented,
            categoriesIdsMatchOr: str = NotImplemented,
            categoriesIdsNotContains: str = NotImplemented,
            categoriesIdsEmpty: KalturaNullableBoolean = NotImplemented,
            statusEqual: KalturaEntryStatus = NotImplemented,
            statusNotEqual: KalturaEntryStatus = NotImplemented,
            statusIn: str = NotImplemented,
            statusNotIn: str = NotImplemented,
            moderationStatusEqual: KalturaEntryModerationStatus = NotImplemented,
            moderationStatusNotEqual: KalturaEntryModerationStatus = NotImplemented,
            moderationStatusIn: str = NotImplemented,
            moderationStatusNotIn: str = NotImplemented,
            typeEqual: KalturaEntryType = NotImplemented,
            typeIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            rankLessThanOrEqual: float = NotImplemented,
            rankGreaterThanOrEqual: float = NotImplemented,
            totalRankLessThanOrEqual: int = NotImplemented,
            totalRankGreaterThanOrEqual: int = NotImplemented,
            groupIdEqual: int = NotImplemented,
            searchTextMatchAnd: str = NotImplemented,
            searchTextMatchOr: str = NotImplemented,
            accessControlIdEqual: int = NotImplemented,
            accessControlIdIn: str = NotImplemented,
            startDateGreaterThanOrEqual: int = NotImplemented,
            startDateLessThanOrEqual: int = NotImplemented,
            startDateGreaterThanOrEqualOrNull: int = NotImplemented,
            startDateLessThanOrEqualOrNull: int = NotImplemented,
            endDateGreaterThanOrEqual: int = NotImplemented,
            endDateLessThanOrEqual: int = NotImplemented,
            endDateGreaterThanOrEqualOrNull: int = NotImplemented,
            endDateLessThanOrEqualOrNull: int = NotImplemented,
            referenceIdEqual: str = NotImplemented,
            referenceIdIn: str = NotImplemented,
            replacingEntryIdEqual: str = NotImplemented,
            replacingEntryIdIn: str = NotImplemented,
            replacedEntryIdEqual: str = NotImplemented,
            replacedEntryIdIn: str = NotImplemented,
            replacementStatusEqual: KalturaEntryReplacementStatus = NotImplemented,
            replacementStatusIn: str = NotImplemented,
            partnerSortValueGreaterThanOrEqual: int = NotImplemented,
            partnerSortValueLessThanOrEqual: int = NotImplemented,
            rootEntryIdEqual: str = NotImplemented,
            rootEntryIdIn: str = NotImplemented,
            parentEntryIdEqual: str = NotImplemented,
            entitledUsersEditMatchAnd: str = NotImplemented,
            entitledUsersEditMatchOr: str = NotImplemented,
            entitledUsersPublishMatchAnd: str = NotImplemented,
            entitledUsersPublishMatchOr: str = NotImplemented,
            entitledUsersViewMatchAnd: str = NotImplemented,
            entitledUsersViewMatchOr: str = NotImplemented,
            tagsNameMultiLikeOr: str = NotImplemented,
            tagsAdminTagsMultiLikeOr: str = NotImplemented,
            tagsAdminTagsNameMultiLikeOr: str = NotImplemented,
            tagsNameMultiLikeAnd: str = NotImplemented,
            tagsAdminTagsMultiLikeAnd: str = NotImplemented,
            tagsAdminTagsNameMultiLikeAnd: str = NotImplemented,
            displayInSearchEqual: KalturaEntryDisplayInSearchType = NotImplemented,
            displayInSearchIn: str = NotImplemented,
            freeText: str = NotImplemented,
            excludedFreeTextGroups: str = NotImplemented,
            descriptionLike: str = NotImplemented,
            isRoot: KalturaNullableBoolean = NotImplemented,
            categoriesFullNameIn: str = NotImplemented,
            categoryAncestorIdIn: str = NotImplemented,
            redirectFromEntryId: str = NotImplemented,
            conversionProfileIdEqual: int = NotImplemented): ...
        pass

class KalturaDeliveryProfileAkamaiAppleHttpManifestFilter(KalturaDeliveryProfileAkamaiAppleHttpManifestBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            systemNameEqual: str = NotImplemented,
            systemNameIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            streamerTypeEqual: KalturaPlaybackProtocol = NotImplemented,
            statusEqual: KalturaDeliveryStatus = NotImplemented,
            statusIn: str = NotImplemented,
            isLive: KalturaNullableBoolean = NotImplemented): ...
        pass

class KalturaDeliveryProfileAkamaiHdsFilter(KalturaDeliveryProfileAkamaiHdsBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            systemNameEqual: str = NotImplemented,
            systemNameIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            streamerTypeEqual: KalturaPlaybackProtocol = NotImplemented,
            statusEqual: KalturaDeliveryStatus = NotImplemented,
            statusIn: str = NotImplemented,
            isLive: KalturaNullableBoolean = NotImplemented): ...
        pass

class KalturaDeliveryProfileAkamaiHttpFilter(KalturaDeliveryProfileAkamaiHttpBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            systemNameEqual: str = NotImplemented,
            systemNameIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            streamerTypeEqual: KalturaPlaybackProtocol = NotImplemented,
            statusEqual: KalturaDeliveryStatus = NotImplemented,
            statusIn: str = NotImplemented,
            isLive: KalturaNullableBoolean = NotImplemented): ...
        pass

class KalturaDeliveryProfileGenericAppleHttpFilter(KalturaDeliveryProfileGenericAppleHttpBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            systemNameEqual: str = NotImplemented,
            systemNameIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            streamerTypeEqual: KalturaPlaybackProtocol = NotImplemented,
            statusEqual: KalturaDeliveryStatus = NotImplemented,
            statusIn: str = NotImplemented,
            isLive: KalturaNullableBoolean = NotImplemented): ...
        pass

class KalturaDeliveryProfileGenericHdsFilter(KalturaDeliveryProfileGenericHdsBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            systemNameEqual: str = NotImplemented,
            systemNameIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            streamerTypeEqual: KalturaPlaybackProtocol = NotImplemented,
            statusEqual: KalturaDeliveryStatus = NotImplemented,
            statusIn: str = NotImplemented,
            isLive: KalturaNullableBoolean = NotImplemented): ...
        pass

class KalturaDeliveryProfileGenericHttpFilter(KalturaDeliveryProfileGenericHttpBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            systemNameEqual: str = NotImplemented,
            systemNameIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            streamerTypeEqual: KalturaPlaybackProtocol = NotImplemented,
            statusEqual: KalturaDeliveryStatus = NotImplemented,
            statusIn: str = NotImplemented,
            isLive: KalturaNullableBoolean = NotImplemented): ...
        pass

class KalturaDeliveryProfileGenericSilverLightFilter(KalturaDeliveryProfileGenericSilverLightBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            systemNameEqual: str = NotImplemented,
            systemNameIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            streamerTypeEqual: KalturaPlaybackProtocol = NotImplemented,
            statusEqual: KalturaDeliveryStatus = NotImplemented,
            statusIn: str = NotImplemented,
            isLive: KalturaNullableBoolean = NotImplemented): ...
        pass

class KalturaDeliveryProfileLiveAppleHttpFilter(KalturaDeliveryProfileLiveAppleHttpBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            systemNameEqual: str = NotImplemented,
            systemNameIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            streamerTypeEqual: KalturaPlaybackProtocol = NotImplemented,
            statusEqual: KalturaDeliveryStatus = NotImplemented,
            statusIn: str = NotImplemented,
            isLive: KalturaNullableBoolean = NotImplemented): ...
        pass

class KalturaDeliveryProfileRtmpFilter(KalturaDeliveryProfileRtmpBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            systemNameEqual: str = NotImplemented,
            systemNameIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            streamerTypeEqual: KalturaPlaybackProtocol = NotImplemented,
            statusEqual: KalturaDeliveryStatus = NotImplemented,
            statusIn: str = NotImplemented,
            isLive: KalturaNullableBoolean = NotImplemented): ...
        pass

class KalturaDeliveryServerNodeFilter(KalturaDeliveryServerNodeBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            heartbeatTimeGreaterThanOrEqual: int = NotImplemented,
            heartbeatTimeLessThanOrEqual: int = NotImplemented,
            nameEqual: str = NotImplemented,
            nameIn: str = NotImplemented,
            systemNameEqual: str = NotImplemented,
            systemNameIn: str = NotImplemented,
            hostNameLike: str = NotImplemented,
            hostNameMultiLikeOr: str = NotImplemented,
            hostNameMultiLikeAnd: str = NotImplemented,
            statusEqual: KalturaServerNodeStatus = NotImplemented,
            statusIn: str = NotImplemented,
            typeEqual: KalturaServerNodeType = NotImplemented,
            typeIn: str = NotImplemented,
            tagsLike: str = NotImplemented,
            tagsMultiLikeOr: str = NotImplemented,
            tagsMultiLikeAnd: str = NotImplemented,
            dcEqual: int = NotImplemented,
            dcIn: str = NotImplemented,
            parentIdLike: str = NotImplemented,
            parentIdMultiLikeOr: str = NotImplemented,
            parentIdMultiLikeAnd: str = NotImplemented,
            environmentEqual: str = NotImplemented,
            environmentIn: str = NotImplemented): ...
        pass

class KalturaFlavorAssetBaseFilter(KalturaAssetFilter):
    flavorParamsIdEqual: int
    flavorParamsIdIn: str
    statusEqual: KalturaFlavorAssetStatus
    statusIn: str
    statusNotIn: str
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: str = NotImplemented,
            idIn: str = NotImplemented,
            entryIdEqual: str = NotImplemented,
            entryIdIn: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            sizeGreaterThanOrEqual: int = NotImplemented,
            sizeLessThanOrEqual: int = NotImplemented,
            tagsLike: str = NotImplemented,
            tagsMultiLikeOr: str = NotImplemented,
            tagsMultiLikeAnd: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            deletedAtGreaterThanOrEqual: int = NotImplemented,
            deletedAtLessThanOrEqual: int = NotImplemented,
            typeIn: str = NotImplemented,
            flavorParamsIdEqual: int = NotImplemented,
            flavorParamsIdIn: str = NotImplemented,
            statusEqual: KalturaFlavorAssetStatus = NotImplemented,
            statusIn: str = NotImplemented,
            statusNotIn: str = NotImplemented): ...

    def getFlavorParamsIdEqual(self) -> int: ...
    def setFlavorParamsIdEqual(self, newFlavorParamsIdEqual: int) -> None: ...
    def getFlavorParamsIdIn(self) -> str: ...
    def setFlavorParamsIdIn(self, newFlavorParamsIdIn: str) -> None: ...
    def getStatusEqual(self) -> KalturaFlavorAssetStatus: ...
    def setStatusEqual(self, newStatusEqual: KalturaFlavorAssetStatus) -> None: ...
    def getStatusIn(self) -> str: ...
    def setStatusIn(self, newStatusIn: str) -> None: ...
    def getStatusNotIn(self) -> str: ...
    def setStatusNotIn(self, newStatusNotIn: str) -> None: ...

class KalturaFlavorParamsBaseFilter(KalturaAssetParamsFilter):
    formatEqual: KalturaContainerFormat
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            systemNameEqual: str = NotImplemented,
            systemNameIn: str = NotImplemented,
            isSystemDefaultEqual: KalturaNullableBoolean = NotImplemented,
            tagsEqual: str = NotImplemented,
            formatEqual: KalturaContainerFormat = NotImplemented): ...

    def getFormatEqual(self) -> KalturaContainerFormat: ...
    def setFormatEqual(self, newFormatEqual: KalturaContainerFormat) -> None: ...

class KalturaGenericSyndicationFeedFilter(KalturaGenericSyndicationFeedBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented): ...
        pass

class KalturaGoogleVideoSyndicationFeedFilter(KalturaGoogleVideoSyndicationFeedBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented): ...
        pass

class KalturaITunesSyndicationFeedFilter(KalturaITunesSyndicationFeedBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented): ...
        pass

class KalturaLiveEntryServerNodeFilter(KalturaLiveEntryServerNodeBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            entryIdEqual: str = NotImplemented,
            entryIdIn: str = NotImplemented,
            serverNodeIdEqual: int = NotImplemented,
            serverNodeIdIn: str = NotImplemented,
            serverNodeIdNotIn: str = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            statusEqual: KalturaEntryServerNodeStatus = NotImplemented,
            statusIn: str = NotImplemented,
            serverTypeEqual: KalturaEntryServerNodeType = NotImplemented,
            serverTypeIn: str = NotImplemented,
            serverTypeNotIn: str = NotImplemented): ...
        pass

class KalturaOperaSyndicationFeed(KalturaConstantXsltSyndicationFeed):
    def __init__(self,
            id: str = NotImplemented,
            feedUrl: str = NotImplemented,
            partnerId: int = NotImplemented,
            playlistId: str = NotImplemented,
            name: str = NotImplemented,
            status: KalturaSyndicationFeedStatus = NotImplemented,
            type: KalturaSyndicationFeedType = NotImplemented,
            landingPage: str = NotImplemented,
            createdAt: int = NotImplemented,
            allowEmbed: bool = NotImplemented,
            playerUiconfId: int = NotImplemented,
            flavorParamId: int = NotImplemented,
            transcodeExistingContent: bool = NotImplemented,
            addToDefaultConversionProfile: bool = NotImplemented,
            categories: str = NotImplemented,
            storageId: int = NotImplemented,
            entriesOrderBy: KalturaSyndicationFeedEntriesOrderBy = NotImplemented,
            enforceEntitlement: bool = NotImplemented,
            privacyContext: str = NotImplemented,
            updatedAt: int = NotImplemented,
            useCategoryEntries: bool = NotImplemented,
            feedContentTypeHeader: str = NotImplemented,
            feedDescription: str = NotImplemented,
            feedLandingPage: str = NotImplemented,
            entryFilter: KalturaBaseEntryFilter = NotImplemented,
            pageSize: int = NotImplemented,
            xslt: str = NotImplemented,
            itemXpathsToExtend: List[KalturaExtendingItemMrssParameter] = NotImplemented): ...
        pass

class KalturaPlaylistBaseFilter(KalturaBaseEntryFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: str = NotImplemented,
            idIn: str = NotImplemented,
            idNotIn: str = NotImplemented,
            nameLike: str = NotImplemented,
            nameMultiLikeOr: str = NotImplemented,
            nameMultiLikeAnd: str = NotImplemented,
            nameEqual: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            userIdEqual: str = NotImplemented,
            userIdIn: str = NotImplemented,
            userIdNotIn: str = NotImplemented,
            creatorIdEqual: str = NotImplemented,
            tagsLike: str = NotImplemented,
            tagsMultiLikeOr: str = NotImplemented,
            tagsMultiLikeAnd: str = NotImplemented,
            adminTagsLike: str = NotImplemented,
            adminTagsMultiLikeOr: str = NotImplemented,
            adminTagsMultiLikeAnd: str = NotImplemented,
            categoriesMatchAnd: str = NotImplemented,
            categoriesMatchOr: str = NotImplemented,
            categoriesNotContains: str = NotImplemented,
            categoriesIdsMatchAnd: str = NotImplemented,
            categoriesIdsMatchOr: str = NotImplemented,
            categoriesIdsNotContains: str = NotImplemented,
            categoriesIdsEmpty: KalturaNullableBoolean = NotImplemented,
            statusEqual: KalturaEntryStatus = NotImplemented,
            statusNotEqual: KalturaEntryStatus = NotImplemented,
            statusIn: str = NotImplemented,
            statusNotIn: str = NotImplemented,
            moderationStatusEqual: KalturaEntryModerationStatus = NotImplemented,
            moderationStatusNotEqual: KalturaEntryModerationStatus = NotImplemented,
            moderationStatusIn: str = NotImplemented,
            moderationStatusNotIn: str = NotImplemented,
            typeEqual: KalturaEntryType = NotImplemented,
            typeIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            rankLessThanOrEqual: float = NotImplemented,
            rankGreaterThanOrEqual: float = NotImplemented,
            totalRankLessThanOrEqual: int = NotImplemented,
            totalRankGreaterThanOrEqual: int = NotImplemented,
            groupIdEqual: int = NotImplemented,
            searchTextMatchAnd: str = NotImplemented,
            searchTextMatchOr: str = NotImplemented,
            accessControlIdEqual: int = NotImplemented,
            accessControlIdIn: str = NotImplemented,
            startDateGreaterThanOrEqual: int = NotImplemented,
            startDateLessThanOrEqual: int = NotImplemented,
            startDateGreaterThanOrEqualOrNull: int = NotImplemented,
            startDateLessThanOrEqualOrNull: int = NotImplemented,
            endDateGreaterThanOrEqual: int = NotImplemented,
            endDateLessThanOrEqual: int = NotImplemented,
            endDateGreaterThanOrEqualOrNull: int = NotImplemented,
            endDateLessThanOrEqualOrNull: int = NotImplemented,
            referenceIdEqual: str = NotImplemented,
            referenceIdIn: str = NotImplemented,
            replacingEntryIdEqual: str = NotImplemented,
            replacingEntryIdIn: str = NotImplemented,
            replacedEntryIdEqual: str = NotImplemented,
            replacedEntryIdIn: str = NotImplemented,
            replacementStatusEqual: KalturaEntryReplacementStatus = NotImplemented,
            replacementStatusIn: str = NotImplemented,
            partnerSortValueGreaterThanOrEqual: int = NotImplemented,
            partnerSortValueLessThanOrEqual: int = NotImplemented,
            rootEntryIdEqual: str = NotImplemented,
            rootEntryIdIn: str = NotImplemented,
            parentEntryIdEqual: str = NotImplemented,
            entitledUsersEditMatchAnd: str = NotImplemented,
            entitledUsersEditMatchOr: str = NotImplemented,
            entitledUsersPublishMatchAnd: str = NotImplemented,
            entitledUsersPublishMatchOr: str = NotImplemented,
            entitledUsersViewMatchAnd: str = NotImplemented,
            entitledUsersViewMatchOr: str = NotImplemented,
            tagsNameMultiLikeOr: str = NotImplemented,
            tagsAdminTagsMultiLikeOr: str = NotImplemented,
            tagsAdminTagsNameMultiLikeOr: str = NotImplemented,
            tagsNameMultiLikeAnd: str = NotImplemented,
            tagsAdminTagsMultiLikeAnd: str = NotImplemented,
            tagsAdminTagsNameMultiLikeAnd: str = NotImplemented,
            displayInSearchEqual: KalturaEntryDisplayInSearchType = NotImplemented,
            displayInSearchIn: str = NotImplemented,
            freeText: str = NotImplemented,
            excludedFreeTextGroups: str = NotImplemented,
            descriptionLike: str = NotImplemented,
            isRoot: KalturaNullableBoolean = NotImplemented,
            categoriesFullNameIn: str = NotImplemented,
            categoryAncestorIdIn: str = NotImplemented,
            redirectFromEntryId: str = NotImplemented,
            conversionProfileIdEqual: int = NotImplemented): ...
        pass

class KalturaQuizUserEntryBaseFilter(KalturaUserEntryFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            idNotIn: str = NotImplemented,
            entryIdEqual: str = NotImplemented,
            entryIdIn: str = NotImplemented,
            entryIdNotIn: str = NotImplemented,
            userIdEqual: str = NotImplemented,
            userIdIn: str = NotImplemented,
            userIdNotIn: str = NotImplemented,
            statusEqual: KalturaUserEntryStatus = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            typeEqual: KalturaUserEntryType = NotImplemented,
            userIdEqualCurrent: KalturaNullableBoolean = NotImplemented,
            isAnonymous: KalturaNullableBoolean = NotImplemented,
            privacyContextEqual: str = NotImplemented,
            privacyContextIn: str = NotImplemented,
            partnerId: int = NotImplemented): ...
        pass

class KalturaRokuSyndicationFeed(KalturaConstantXsltSyndicationFeed):
    def __init__(self,
            id: str = NotImplemented,
            feedUrl: str = NotImplemented,
            partnerId: int = NotImplemented,
            playlistId: str = NotImplemented,
            name: str = NotImplemented,
            status: KalturaSyndicationFeedStatus = NotImplemented,
            type: KalturaSyndicationFeedType = NotImplemented,
            landingPage: str = NotImplemented,
            createdAt: int = NotImplemented,
            allowEmbed: bool = NotImplemented,
            playerUiconfId: int = NotImplemented,
            flavorParamId: int = NotImplemented,
            transcodeExistingContent: bool = NotImplemented,
            addToDefaultConversionProfile: bool = NotImplemented,
            categories: str = NotImplemented,
            storageId: int = NotImplemented,
            entriesOrderBy: KalturaSyndicationFeedEntriesOrderBy = NotImplemented,
            enforceEntitlement: bool = NotImplemented,
            privacyContext: str = NotImplemented,
            updatedAt: int = NotImplemented,
            useCategoryEntries: bool = NotImplemented,
            feedContentTypeHeader: str = NotImplemented,
            feedDescription: str = NotImplemented,
            feedLandingPage: str = NotImplemented,
            entryFilter: KalturaBaseEntryFilter = NotImplemented,
            pageSize: int = NotImplemented,
            xslt: str = NotImplemented,
            itemXpathsToExtend: List[KalturaExtendingItemMrssParameter] = NotImplemented): ...
        pass

class KalturaServerFileResource(KalturaGenericDataCenterContentResource):
    localFilePath: str
    keepOriginalFile: bool
    def __init__(self,
            localFilePath: str = NotImplemented,
            keepOriginalFile: bool = NotImplemented): ...

    def getLocalFilePath(self) -> str: ...
    def setLocalFilePath(self, newLocalFilePath: str) -> None: ...
    def getKeepOriginalFile(self) -> bool: ...
    def setKeepOriginalFile(self, newKeepOriginalFile: bool) -> None: ...

class KalturaThumbAssetBaseFilter(KalturaAssetFilter):
    thumbParamsIdEqual: int
    thumbParamsIdIn: str
    statusEqual: KalturaThumbAssetStatus
    statusIn: str
    statusNotIn: str
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: str = NotImplemented,
            idIn: str = NotImplemented,
            entryIdEqual: str = NotImplemented,
            entryIdIn: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            sizeGreaterThanOrEqual: int = NotImplemented,
            sizeLessThanOrEqual: int = NotImplemented,
            tagsLike: str = NotImplemented,
            tagsMultiLikeOr: str = NotImplemented,
            tagsMultiLikeAnd: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            deletedAtGreaterThanOrEqual: int = NotImplemented,
            deletedAtLessThanOrEqual: int = NotImplemented,
            typeIn: str = NotImplemented,
            thumbParamsIdEqual: int = NotImplemented,
            thumbParamsIdIn: str = NotImplemented,
            statusEqual: KalturaThumbAssetStatus = NotImplemented,
            statusIn: str = NotImplemented,
            statusNotIn: str = NotImplemented): ...

    def getThumbParamsIdEqual(self) -> int: ...
    def setThumbParamsIdEqual(self, newThumbParamsIdEqual: int) -> None: ...
    def getThumbParamsIdIn(self) -> str: ...
    def setThumbParamsIdIn(self, newThumbParamsIdIn: str) -> None: ...
    def getStatusEqual(self) -> KalturaThumbAssetStatus: ...
    def setStatusEqual(self, newStatusEqual: KalturaThumbAssetStatus) -> None: ...
    def getStatusIn(self) -> str: ...
    def setStatusIn(self, newStatusIn: str) -> None: ...
    def getStatusNotIn(self) -> str: ...
    def setStatusNotIn(self, newStatusNotIn: str) -> None: ...

class KalturaThumbParamsBaseFilter(KalturaAssetParamsFilter):
    formatEqual: KalturaContainerFormat
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            systemNameEqual: str = NotImplemented,
            systemNameIn: str = NotImplemented,
            isSystemDefaultEqual: KalturaNullableBoolean = NotImplemented,
            tagsEqual: str = NotImplemented,
            formatEqual: KalturaContainerFormat = NotImplemented): ...

    def getFormatEqual(self) -> KalturaContainerFormat: ...
    def setFormatEqual(self, newFormatEqual: KalturaContainerFormat) -> None: ...

class KalturaTubeMogulSyndicationFeedFilter(KalturaTubeMogulSyndicationFeedBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented): ...
        pass

class KalturaUploadedFileTokenResource(KalturaGenericDataCenterContentResource):
    token: str
    def __init__(self,
            token: str = NotImplemented): ...

    def getToken(self) -> str: ...
    def setToken(self, newToken: str) -> None: ...

class KalturaYahooSyndicationFeedFilter(KalturaYahooSyndicationFeedBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented): ...
        pass

class KalturaApiActionPermissionItemFilter(KalturaApiActionPermissionItemBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            typeEqual: KalturaPermissionItemType = NotImplemented,
            typeIn: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            tagsMultiLikeOr: str = NotImplemented,
            tagsMultiLikeAnd: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented): ...
        pass

class KalturaApiParameterPermissionItemFilter(KalturaApiParameterPermissionItemBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            typeEqual: KalturaPermissionItemType = NotImplemented,
            typeIn: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            tagsMultiLikeOr: str = NotImplemented,
            tagsMultiLikeAnd: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented): ...
        pass

class KalturaAssetParamsOutputFilter(KalturaAssetParamsOutputBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            systemNameEqual: str = NotImplemented,
            systemNameIn: str = NotImplemented,
            isSystemDefaultEqual: KalturaNullableBoolean = NotImplemented,
            tagsEqual: str = NotImplemented): ...
        pass

class KalturaDataEntryFilter(KalturaDataEntryBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: str = NotImplemented,
            idIn: str = NotImplemented,
            idNotIn: str = NotImplemented,
            nameLike: str = NotImplemented,
            nameMultiLikeOr: str = NotImplemented,
            nameMultiLikeAnd: str = NotImplemented,
            nameEqual: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            userIdEqual: str = NotImplemented,
            userIdIn: str = NotImplemented,
            userIdNotIn: str = NotImplemented,
            creatorIdEqual: str = NotImplemented,
            tagsLike: str = NotImplemented,
            tagsMultiLikeOr: str = NotImplemented,
            tagsMultiLikeAnd: str = NotImplemented,
            adminTagsLike: str = NotImplemented,
            adminTagsMultiLikeOr: str = NotImplemented,
            adminTagsMultiLikeAnd: str = NotImplemented,
            categoriesMatchAnd: str = NotImplemented,
            categoriesMatchOr: str = NotImplemented,
            categoriesNotContains: str = NotImplemented,
            categoriesIdsMatchAnd: str = NotImplemented,
            categoriesIdsMatchOr: str = NotImplemented,
            categoriesIdsNotContains: str = NotImplemented,
            categoriesIdsEmpty: KalturaNullableBoolean = NotImplemented,
            statusEqual: KalturaEntryStatus = NotImplemented,
            statusNotEqual: KalturaEntryStatus = NotImplemented,
            statusIn: str = NotImplemented,
            statusNotIn: str = NotImplemented,
            moderationStatusEqual: KalturaEntryModerationStatus = NotImplemented,
            moderationStatusNotEqual: KalturaEntryModerationStatus = NotImplemented,
            moderationStatusIn: str = NotImplemented,
            moderationStatusNotIn: str = NotImplemented,
            typeEqual: KalturaEntryType = NotImplemented,
            typeIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            rankLessThanOrEqual: float = NotImplemented,
            rankGreaterThanOrEqual: float = NotImplemented,
            totalRankLessThanOrEqual: int = NotImplemented,
            totalRankGreaterThanOrEqual: int = NotImplemented,
            groupIdEqual: int = NotImplemented,
            searchTextMatchAnd: str = NotImplemented,
            searchTextMatchOr: str = NotImplemented,
            accessControlIdEqual: int = NotImplemented,
            accessControlIdIn: str = NotImplemented,
            startDateGreaterThanOrEqual: int = NotImplemented,
            startDateLessThanOrEqual: int = NotImplemented,
            startDateGreaterThanOrEqualOrNull: int = NotImplemented,
            startDateLessThanOrEqualOrNull: int = NotImplemented,
            endDateGreaterThanOrEqual: int = NotImplemented,
            endDateLessThanOrEqual: int = NotImplemented,
            endDateGreaterThanOrEqualOrNull: int = NotImplemented,
            endDateLessThanOrEqualOrNull: int = NotImplemented,
            referenceIdEqual: str = NotImplemented,
            referenceIdIn: str = NotImplemented,
            replacingEntryIdEqual: str = NotImplemented,
            replacingEntryIdIn: str = NotImplemented,
            replacedEntryIdEqual: str = NotImplemented,
            replacedEntryIdIn: str = NotImplemented,
            replacementStatusEqual: KalturaEntryReplacementStatus = NotImplemented,
            replacementStatusIn: str = NotImplemented,
            partnerSortValueGreaterThanOrEqual: int = NotImplemented,
            partnerSortValueLessThanOrEqual: int = NotImplemented,
            rootEntryIdEqual: str = NotImplemented,
            rootEntryIdIn: str = NotImplemented,
            parentEntryIdEqual: str = NotImplemented,
            entitledUsersEditMatchAnd: str = NotImplemented,
            entitledUsersEditMatchOr: str = NotImplemented,
            entitledUsersPublishMatchAnd: str = NotImplemented,
            entitledUsersPublishMatchOr: str = NotImplemented,
            entitledUsersViewMatchAnd: str = NotImplemented,
            entitledUsersViewMatchOr: str = NotImplemented,
            tagsNameMultiLikeOr: str = NotImplemented,
            tagsAdminTagsMultiLikeOr: str = NotImplemented,
            tagsAdminTagsNameMultiLikeOr: str = NotImplemented,
            tagsNameMultiLikeAnd: str = NotImplemented,
            tagsAdminTagsMultiLikeAnd: str = NotImplemented,
            tagsAdminTagsNameMultiLikeAnd: str = NotImplemented,
            displayInSearchEqual: KalturaEntryDisplayInSearchType = NotImplemented,
            displayInSearchIn: str = NotImplemented,
            freeText: str = NotImplemented,
            excludedFreeTextGroups: str = NotImplemented,
            descriptionLike: str = NotImplemented,
            isRoot: KalturaNullableBoolean = NotImplemented,
            categoriesFullNameIn: str = NotImplemented,
            categoryAncestorIdIn: str = NotImplemented,
            redirectFromEntryId: str = NotImplemented,
            conversionProfileIdEqual: int = NotImplemented): ...
        pass

class KalturaDeliveryProfileGenericRtmpBaseFilter(KalturaDeliveryProfileRtmpFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            systemNameEqual: str = NotImplemented,
            systemNameIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            streamerTypeEqual: KalturaPlaybackProtocol = NotImplemented,
            statusEqual: KalturaDeliveryStatus = NotImplemented,
            statusIn: str = NotImplemented,
            isLive: KalturaNullableBoolean = NotImplemented): ...
        pass

class KalturaEdgeServerNodeBaseFilter(KalturaDeliveryServerNodeFilter):
    playbackDomainLike: str
    playbackDomainMultiLikeOr: str
    playbackDomainMultiLikeAnd: str
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            heartbeatTimeGreaterThanOrEqual: int = NotImplemented,
            heartbeatTimeLessThanOrEqual: int = NotImplemented,
            nameEqual: str = NotImplemented,
            nameIn: str = NotImplemented,
            systemNameEqual: str = NotImplemented,
            systemNameIn: str = NotImplemented,
            hostNameLike: str = NotImplemented,
            hostNameMultiLikeOr: str = NotImplemented,
            hostNameMultiLikeAnd: str = NotImplemented,
            statusEqual: KalturaServerNodeStatus = NotImplemented,
            statusIn: str = NotImplemented,
            typeEqual: KalturaServerNodeType = NotImplemented,
            typeIn: str = NotImplemented,
            tagsLike: str = NotImplemented,
            tagsMultiLikeOr: str = NotImplemented,
            tagsMultiLikeAnd: str = NotImplemented,
            dcEqual: int = NotImplemented,
            dcIn: str = NotImplemented,
            parentIdLike: str = NotImplemented,
            parentIdMultiLikeOr: str = NotImplemented,
            parentIdMultiLikeAnd: str = NotImplemented,
            environmentEqual: str = NotImplemented,
            environmentIn: str = NotImplemented,
            playbackDomainLike: str = NotImplemented,
            playbackDomainMultiLikeOr: str = NotImplemented,
            playbackDomainMultiLikeAnd: str = NotImplemented): ...

    def getPlaybackDomainLike(self) -> str: ...
    def setPlaybackDomainLike(self, newPlaybackDomainLike: str) -> None: ...
    def getPlaybackDomainMultiLikeOr(self) -> str: ...
    def setPlaybackDomainMultiLikeOr(self, newPlaybackDomainMultiLikeOr: str) -> None: ...
    def getPlaybackDomainMultiLikeAnd(self) -> str: ...
    def setPlaybackDomainMultiLikeAnd(self, newPlaybackDomainMultiLikeAnd: str) -> None: ...

class KalturaFlavorAssetFilter(KalturaFlavorAssetBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: str = NotImplemented,
            idIn: str = NotImplemented,
            entryIdEqual: str = NotImplemented,
            entryIdIn: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            sizeGreaterThanOrEqual: int = NotImplemented,
            sizeLessThanOrEqual: int = NotImplemented,
            tagsLike: str = NotImplemented,
            tagsMultiLikeOr: str = NotImplemented,
            tagsMultiLikeAnd: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            deletedAtGreaterThanOrEqual: int = NotImplemented,
            deletedAtLessThanOrEqual: int = NotImplemented,
            typeIn: str = NotImplemented,
            flavorParamsIdEqual: int = NotImplemented,
            flavorParamsIdIn: str = NotImplemented,
            statusEqual: KalturaFlavorAssetStatus = NotImplemented,
            statusIn: str = NotImplemented,
            statusNotIn: str = NotImplemented): ...
        pass

class KalturaFlavorParamsFilter(KalturaFlavorParamsBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            systemNameEqual: str = NotImplemented,
            systemNameIn: str = NotImplemented,
            isSystemDefaultEqual: KalturaNullableBoolean = NotImplemented,
            tagsEqual: str = NotImplemented,
            formatEqual: KalturaContainerFormat = NotImplemented): ...
        pass

class KalturaGenericXsltSyndicationFeedBaseFilter(KalturaGenericSyndicationFeedFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented): ...
        pass

class KalturaLiveStreamAdminEntry(KalturaLiveStreamEntry):
    def __init__(self,
            id: str = NotImplemented,
            name: str = NotImplemented,
            multiLingual_name: List[KalturaMultiLingualString] = NotImplemented,
            description: str = NotImplemented,
            multiLingual_description: List[KalturaMultiLingualString] = NotImplemented,
            partnerId: int = NotImplemented,
            userId: str = NotImplemented,
            creatorId: str = NotImplemented,
            tags: str = NotImplemented,
            multiLingual_tags: List[KalturaMultiLingualString] = NotImplemented,
            adminTags: str = NotImplemented,
            categories: str = NotImplemented,
            categoriesIds: str = NotImplemented,
            status: KalturaEntryStatus = NotImplemented,
            moderationStatus: KalturaEntryModerationStatus = NotImplemented,
            moderationCount: int = NotImplemented,
            type: KalturaEntryType = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            rank: float = NotImplemented,
            totalRank: int = NotImplemented,
            votes: int = NotImplemented,
            groupId: int = NotImplemented,
            partnerData: str = NotImplemented,
            downloadUrl: str = NotImplemented,
            searchText: str = NotImplemented,
            licenseType: KalturaLicenseType = NotImplemented,
            version: int = NotImplemented,
            thumbnailUrl: str = NotImplemented,
            accessControlId: int = NotImplemented,
            startDate: int = NotImplemented,
            endDate: int = NotImplemented,
            referenceId: str = NotImplemented,
            replacingEntryId: str = NotImplemented,
            replacedEntryId: str = NotImplemented,
            replacementStatus: KalturaEntryReplacementStatus = NotImplemented,
            partnerSortValue: int = NotImplemented,
            conversionProfileId: int = NotImplemented,
            redirectEntryId: str = NotImplemented,
            rootEntryId: str = NotImplemented,
            parentEntryId: str = NotImplemented,
            operationAttributes: List[KalturaOperationAttributes] = NotImplemented,
            entitledUsersEdit: str = NotImplemented,
            entitledUsersPublish: str = NotImplemented,
            entitledUsersView: str = NotImplemented,
            capabilities: str = NotImplemented,
            templateEntryId: str = NotImplemented,
            displayInSearch: KalturaEntryDisplayInSearchType = NotImplemented,
            application: KalturaEntryApplication = NotImplemented,
            applicationVersion: str = NotImplemented,
            blockAutoTranscript: bool = NotImplemented,
            defaultLanguage: str = NotImplemented,
            responseLanguage: str = NotImplemented,
            plays: int = NotImplemented,
            views: int = NotImplemented,
            lastPlayedAt: int = NotImplemented,
            width: int = NotImplemented,
            height: int = NotImplemented,
            duration: int = NotImplemented,
            msDuration: int = NotImplemented,
            durationType: KalturaDurationType = NotImplemented,
            mediaType: KalturaMediaType = NotImplemented,
            conversionQuality: str = NotImplemented,
            sourceType: KalturaSourceType = NotImplemented,
            sourceVersion: str = NotImplemented,
            searchProviderType: KalturaSearchProviderType = NotImplemented,
            searchProviderId: str = NotImplemented,
            creditUserName: str = NotImplemented,
            creditUrl: str = NotImplemented,
            mediaDate: int = NotImplemented,
            dataUrl: str = NotImplemented,
            flavorParamsIds: str = NotImplemented,
            isTrimDisabled: KalturaNullableBoolean = NotImplemented,
            streams: List[KalturaStreamContainer] = NotImplemented,
            offlineMessage: str = NotImplemented,
            recordStatus: KalturaRecordStatus = NotImplemented,
            dvrStatus: KalturaDVRStatus = NotImplemented,
            dvrWindow: int = NotImplemented,
            lastElapsedRecordingTime: int = NotImplemented,
            liveStreamConfigurations: List[KalturaLiveStreamConfiguration] = NotImplemented,
            recordedEntryId: str = NotImplemented,
            pushPublishEnabled: KalturaLivePublishStatus = NotImplemented,
            publishConfigurations: List[KalturaLiveStreamPushPublishConfiguration] = NotImplemented,
            firstBroadcast: int = NotImplemented,
            lastBroadcast: int = NotImplemented,
            currentBroadcastStartTime: float = NotImplemented,
            recordingOptions: KalturaLiveEntryRecordingOptions = NotImplemented,
            liveStatus: KalturaEntryServerNodeStatus = NotImplemented,
            segmentDuration: int = NotImplemented,
            explicitLive: KalturaNullableBoolean = NotImplemented,
            viewMode: KalturaViewMode = NotImplemented,
            recordingStatus: KalturaRecordingStatus = NotImplemented,
            lastBroadcastEndTime: int = NotImplemented,
            broadcastTime: int = NotImplemented,
            streamRemoteId: str = NotImplemented,
            streamRemoteBackupId: str = NotImplemented,
            bitrates: List[KalturaLiveStreamBitrate] = NotImplemented,
            primaryBroadcastingUrl: str = NotImplemented,
            secondaryBroadcastingUrl: str = NotImplemented,
            primarySecuredBroadcastingUrl: str = NotImplemented,
            secondarySecuredBroadcastingUrl: str = NotImplemented,
            primaryRtspBroadcastingUrl: str = NotImplemented,
            secondaryRtspBroadcastingUrl: str = NotImplemented,
            primarySrtBroadcastingUrl: str = NotImplemented,
            primarySrtStreamId: str = NotImplemented,
            secondarySrtBroadcastingUrl: str = NotImplemented,
            secondarySrtStreamId: str = NotImplemented,
            streamName: str = NotImplemented,
            streamUrl: str = NotImplemented,
            hlsStreamUrl: str = NotImplemented,
            urlManager: str = NotImplemented,
            encodingIP1: str = NotImplemented,
            encodingIP2: str = NotImplemented,
            streamPassword: str = NotImplemented,
            streamUsername: str = NotImplemented,
            srtPass: str = NotImplemented,
            primaryServerNodeId: int = NotImplemented,
            sipToken: str = NotImplemented,
            sipSourceType: KalturaSipSourceType = NotImplemented): ...
        pass

class KalturaMediaServerNodeBaseFilter(KalturaDeliveryServerNodeFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            heartbeatTimeGreaterThanOrEqual: int = NotImplemented,
            heartbeatTimeLessThanOrEqual: int = NotImplemented,
            nameEqual: str = NotImplemented,
            nameIn: str = NotImplemented,
            systemNameEqual: str = NotImplemented,
            systemNameIn: str = NotImplemented,
            hostNameLike: str = NotImplemented,
            hostNameMultiLikeOr: str = NotImplemented,
            hostNameMultiLikeAnd: str = NotImplemented,
            statusEqual: KalturaServerNodeStatus = NotImplemented,
            statusIn: str = NotImplemented,
            typeEqual: KalturaServerNodeType = NotImplemented,
            typeIn: str = NotImplemented,
            tagsLike: str = NotImplemented,
            tagsMultiLikeOr: str = NotImplemented,
            tagsMultiLikeAnd: str = NotImplemented,
            dcEqual: int = NotImplemented,
            dcIn: str = NotImplemented,
            parentIdLike: str = NotImplemented,
            parentIdMultiLikeOr: str = NotImplemented,
            parentIdMultiLikeAnd: str = NotImplemented,
            environmentEqual: str = NotImplemented,
            environmentIn: str = NotImplemented): ...
        pass

class KalturaPlaylistFilter(KalturaPlaylistBaseFilter):
    playListTypeEqual: KalturaPlaylistType
    playListTypeIn: str
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: str = NotImplemented,
            idIn: str = NotImplemented,
            idNotIn: str = NotImplemented,
            nameLike: str = NotImplemented,
            nameMultiLikeOr: str = NotImplemented,
            nameMultiLikeAnd: str = NotImplemented,
            nameEqual: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            userIdEqual: str = NotImplemented,
            userIdIn: str = NotImplemented,
            userIdNotIn: str = NotImplemented,
            creatorIdEqual: str = NotImplemented,
            tagsLike: str = NotImplemented,
            tagsMultiLikeOr: str = NotImplemented,
            tagsMultiLikeAnd: str = NotImplemented,
            adminTagsLike: str = NotImplemented,
            adminTagsMultiLikeOr: str = NotImplemented,
            adminTagsMultiLikeAnd: str = NotImplemented,
            categoriesMatchAnd: str = NotImplemented,
            categoriesMatchOr: str = NotImplemented,
            categoriesNotContains: str = NotImplemented,
            categoriesIdsMatchAnd: str = NotImplemented,
            categoriesIdsMatchOr: str = NotImplemented,
            categoriesIdsNotContains: str = NotImplemented,
            categoriesIdsEmpty: KalturaNullableBoolean = NotImplemented,
            statusEqual: KalturaEntryStatus = NotImplemented,
            statusNotEqual: KalturaEntryStatus = NotImplemented,
            statusIn: str = NotImplemented,
            statusNotIn: str = NotImplemented,
            moderationStatusEqual: KalturaEntryModerationStatus = NotImplemented,
            moderationStatusNotEqual: KalturaEntryModerationStatus = NotImplemented,
            moderationStatusIn: str = NotImplemented,
            moderationStatusNotIn: str = NotImplemented,
            typeEqual: KalturaEntryType = NotImplemented,
            typeIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            rankLessThanOrEqual: float = NotImplemented,
            rankGreaterThanOrEqual: float = NotImplemented,
            totalRankLessThanOrEqual: int = NotImplemented,
            totalRankGreaterThanOrEqual: int = NotImplemented,
            groupIdEqual: int = NotImplemented,
            searchTextMatchAnd: str = NotImplemented,
            searchTextMatchOr: str = NotImplemented,
            accessControlIdEqual: int = NotImplemented,
            accessControlIdIn: str = NotImplemented,
            startDateGreaterThanOrEqual: int = NotImplemented,
            startDateLessThanOrEqual: int = NotImplemented,
            startDateGreaterThanOrEqualOrNull: int = NotImplemented,
            startDateLessThanOrEqualOrNull: int = NotImplemented,
            endDateGreaterThanOrEqual: int = NotImplemented,
            endDateLessThanOrEqual: int = NotImplemented,
            endDateGreaterThanOrEqualOrNull: int = NotImplemented,
            endDateLessThanOrEqualOrNull: int = NotImplemented,
            referenceIdEqual: str = NotImplemented,
            referenceIdIn: str = NotImplemented,
            replacingEntryIdEqual: str = NotImplemented,
            replacingEntryIdIn: str = NotImplemented,
            replacedEntryIdEqual: str = NotImplemented,
            replacedEntryIdIn: str = NotImplemented,
            replacementStatusEqual: KalturaEntryReplacementStatus = NotImplemented,
            replacementStatusIn: str = NotImplemented,
            partnerSortValueGreaterThanOrEqual: int = NotImplemented,
            partnerSortValueLessThanOrEqual: int = NotImplemented,
            rootEntryIdEqual: str = NotImplemented,
            rootEntryIdIn: str = NotImplemented,
            parentEntryIdEqual: str = NotImplemented,
            entitledUsersEditMatchAnd: str = NotImplemented,
            entitledUsersEditMatchOr: str = NotImplemented,
            entitledUsersPublishMatchAnd: str = NotImplemented,
            entitledUsersPublishMatchOr: str = NotImplemented,
            entitledUsersViewMatchAnd: str = NotImplemented,
            entitledUsersViewMatchOr: str = NotImplemented,
            tagsNameMultiLikeOr: str = NotImplemented,
            tagsAdminTagsMultiLikeOr: str = NotImplemented,
            tagsAdminTagsNameMultiLikeOr: str = NotImplemented,
            tagsNameMultiLikeAnd: str = NotImplemented,
            tagsAdminTagsMultiLikeAnd: str = NotImplemented,
            tagsAdminTagsNameMultiLikeAnd: str = NotImplemented,
            displayInSearchEqual: KalturaEntryDisplayInSearchType = NotImplemented,
            displayInSearchIn: str = NotImplemented,
            freeText: str = NotImplemented,
            excludedFreeTextGroups: str = NotImplemented,
            descriptionLike: str = NotImplemented,
            isRoot: KalturaNullableBoolean = NotImplemented,
            categoriesFullNameIn: str = NotImplemented,
            categoryAncestorIdIn: str = NotImplemented,
            redirectFromEntryId: str = NotImplemented,
            conversionProfileIdEqual: int = NotImplemented,
            playListTypeEqual: KalturaPlaylistType = NotImplemented,
            playListTypeIn: str = NotImplemented): ...

    def getPlayListTypeEqual(self) -> KalturaPlaylistType: ...
    def setPlayListTypeEqual(self, newPlayListTypeEqual: KalturaPlaylistType) -> None: ...
    def getPlayListTypeIn(self) -> str: ...
    def setPlayListTypeIn(self, newPlayListTypeIn: str) -> None: ...

class KalturaThumbAssetFilter(KalturaThumbAssetBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: str = NotImplemented,
            idIn: str = NotImplemented,
            entryIdEqual: str = NotImplemented,
            entryIdIn: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            sizeGreaterThanOrEqual: int = NotImplemented,
            sizeLessThanOrEqual: int = NotImplemented,
            tagsLike: str = NotImplemented,
            tagsMultiLikeOr: str = NotImplemented,
            tagsMultiLikeAnd: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            deletedAtGreaterThanOrEqual: int = NotImplemented,
            deletedAtLessThanOrEqual: int = NotImplemented,
            typeIn: str = NotImplemented,
            thumbParamsIdEqual: int = NotImplemented,
            thumbParamsIdIn: str = NotImplemented,
            statusEqual: KalturaThumbAssetStatus = NotImplemented,
            statusIn: str = NotImplemented,
            statusNotIn: str = NotImplemented): ...
        pass

class KalturaThumbParamsFilter(KalturaThumbParamsBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            systemNameEqual: str = NotImplemented,
            systemNameIn: str = NotImplemented,
            isSystemDefaultEqual: KalturaNullableBoolean = NotImplemented,
            tagsEqual: str = NotImplemented,
            formatEqual: KalturaContainerFormat = NotImplemented): ...
        pass

class KalturaAdminUserBaseFilter(KalturaUserFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            screenNameLike: str = NotImplemented,
            screenNameStartsWith: str = NotImplemented,
            emailLike: str = NotImplemented,
            emailStartsWith: str = NotImplemented,
            tagsMultiLikeOr: str = NotImplemented,
            tagsMultiLikeAnd: str = NotImplemented,
            statusEqual: KalturaUserStatus = NotImplemented,
            statusIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            idEqual: str = NotImplemented,
            idIn: str = NotImplemented,
            typeEqual: KalturaUserType = NotImplemented,
            typeIn: str = NotImplemented,
            isAdminEqual: KalturaNullableBoolean = NotImplemented,
            firstNameStartsWith: str = NotImplemented,
            lastNameStartsWith: str = NotImplemented,
            idOrScreenNameStartsWith: str = NotImplemented,
            loginEnabledEqual: KalturaNullableBoolean = NotImplemented,
            roleIdEqual: str = NotImplemented,
            roleIdsEqual: str = NotImplemented,
            roleIdsIn: str = NotImplemented,
            firstNameOrLastNameStartsWith: str = NotImplemented,
            permissionNamesMultiLikeOr: str = NotImplemented,
            permissionNamesMultiLikeAnd: str = NotImplemented): ...
        pass

class KalturaDeliveryProfileGenericRtmpFilter(KalturaDeliveryProfileGenericRtmpBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            systemNameEqual: str = NotImplemented,
            systemNameIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            streamerTypeEqual: KalturaPlaybackProtocol = NotImplemented,
            statusEqual: KalturaDeliveryStatus = NotImplemented,
            statusIn: str = NotImplemented,
            isLive: KalturaNullableBoolean = NotImplemented): ...
        pass

class KalturaEdgeServerNodeFilter(KalturaEdgeServerNodeBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            heartbeatTimeGreaterThanOrEqual: int = NotImplemented,
            heartbeatTimeLessThanOrEqual: int = NotImplemented,
            nameEqual: str = NotImplemented,
            nameIn: str = NotImplemented,
            systemNameEqual: str = NotImplemented,
            systemNameIn: str = NotImplemented,
            hostNameLike: str = NotImplemented,
            hostNameMultiLikeOr: str = NotImplemented,
            hostNameMultiLikeAnd: str = NotImplemented,
            statusEqual: KalturaServerNodeStatus = NotImplemented,
            statusIn: str = NotImplemented,
            typeEqual: KalturaServerNodeType = NotImplemented,
            typeIn: str = NotImplemented,
            tagsLike: str = NotImplemented,
            tagsMultiLikeOr: str = NotImplemented,
            tagsMultiLikeAnd: str = NotImplemented,
            dcEqual: int = NotImplemented,
            dcIn: str = NotImplemented,
            parentIdLike: str = NotImplemented,
            parentIdMultiLikeOr: str = NotImplemented,
            parentIdMultiLikeAnd: str = NotImplemented,
            environmentEqual: str = NotImplemented,
            environmentIn: str = NotImplemented,
            playbackDomainLike: str = NotImplemented,
            playbackDomainMultiLikeOr: str = NotImplemented,
            playbackDomainMultiLikeAnd: str = NotImplemented): ...
        pass

class KalturaFlavorParamsOutputBaseFilter(KalturaFlavorParamsFilter):
    flavorParamsIdEqual: int
    flavorParamsVersionEqual: str
    flavorAssetIdEqual: str
    flavorAssetVersionEqual: str
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            systemNameEqual: str = NotImplemented,
            systemNameIn: str = NotImplemented,
            isSystemDefaultEqual: KalturaNullableBoolean = NotImplemented,
            tagsEqual: str = NotImplemented,
            formatEqual: KalturaContainerFormat = NotImplemented,
            flavorParamsIdEqual: int = NotImplemented,
            flavorParamsVersionEqual: str = NotImplemented,
            flavorAssetIdEqual: str = NotImplemented,
            flavorAssetVersionEqual: str = NotImplemented): ...

    def getFlavorParamsIdEqual(self) -> int: ...
    def setFlavorParamsIdEqual(self, newFlavorParamsIdEqual: int) -> None: ...
    def getFlavorParamsVersionEqual(self) -> str: ...
    def setFlavorParamsVersionEqual(self, newFlavorParamsVersionEqual: str) -> None: ...
    def getFlavorAssetIdEqual(self) -> str: ...
    def setFlavorAssetIdEqual(self, newFlavorAssetIdEqual: str) -> None: ...
    def getFlavorAssetVersionEqual(self) -> str: ...
    def setFlavorAssetVersionEqual(self, newFlavorAssetVersionEqual: str) -> None: ...

class KalturaGenericXsltSyndicationFeedFilter(KalturaGenericXsltSyndicationFeedBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented): ...
        pass

class KalturaLiveAssetBaseFilter(KalturaFlavorAssetFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: str = NotImplemented,
            idIn: str = NotImplemented,
            entryIdEqual: str = NotImplemented,
            entryIdIn: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            sizeGreaterThanOrEqual: int = NotImplemented,
            sizeLessThanOrEqual: int = NotImplemented,
            tagsLike: str = NotImplemented,
            tagsMultiLikeOr: str = NotImplemented,
            tagsMultiLikeAnd: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            deletedAtGreaterThanOrEqual: int = NotImplemented,
            deletedAtLessThanOrEqual: int = NotImplemented,
            typeIn: str = NotImplemented,
            flavorParamsIdEqual: int = NotImplemented,
            flavorParamsIdIn: str = NotImplemented,
            statusEqual: KalturaFlavorAssetStatus = NotImplemented,
            statusIn: str = NotImplemented,
            statusNotIn: str = NotImplemented): ...
        pass

class KalturaLiveParamsBaseFilter(KalturaFlavorParamsFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            systemNameEqual: str = NotImplemented,
            systemNameIn: str = NotImplemented,
            isSystemDefaultEqual: KalturaNullableBoolean = NotImplemented,
            tagsEqual: str = NotImplemented,
            formatEqual: KalturaContainerFormat = NotImplemented): ...
        pass

class KalturaMediaFlavorParamsBaseFilter(KalturaFlavorParamsFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            systemNameEqual: str = NotImplemented,
            systemNameIn: str = NotImplemented,
            isSystemDefaultEqual: KalturaNullableBoolean = NotImplemented,
            tagsEqual: str = NotImplemented,
            formatEqual: KalturaContainerFormat = NotImplemented): ...
        pass

class KalturaMediaServerNodeFilter(KalturaMediaServerNodeBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            heartbeatTimeGreaterThanOrEqual: int = NotImplemented,
            heartbeatTimeLessThanOrEqual: int = NotImplemented,
            nameEqual: str = NotImplemented,
            nameIn: str = NotImplemented,
            systemNameEqual: str = NotImplemented,
            systemNameIn: str = NotImplemented,
            hostNameLike: str = NotImplemented,
            hostNameMultiLikeOr: str = NotImplemented,
            hostNameMultiLikeAnd: str = NotImplemented,
            statusEqual: KalturaServerNodeStatus = NotImplemented,
            statusIn: str = NotImplemented,
            typeEqual: KalturaServerNodeType = NotImplemented,
            typeIn: str = NotImplemented,
            tagsLike: str = NotImplemented,
            tagsMultiLikeOr: str = NotImplemented,
            tagsMultiLikeAnd: str = NotImplemented,
            dcEqual: int = NotImplemented,
            dcIn: str = NotImplemented,
            parentIdLike: str = NotImplemented,
            parentIdMultiLikeOr: str = NotImplemented,
            parentIdMultiLikeAnd: str = NotImplemented,
            environmentEqual: str = NotImplemented,
            environmentIn: str = NotImplemented): ...
        pass

class KalturaMixEntryBaseFilter(KalturaPlayableEntryFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: str = NotImplemented,
            idIn: str = NotImplemented,
            idNotIn: str = NotImplemented,
            nameLike: str = NotImplemented,
            nameMultiLikeOr: str = NotImplemented,
            nameMultiLikeAnd: str = NotImplemented,
            nameEqual: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            userIdEqual: str = NotImplemented,
            userIdIn: str = NotImplemented,
            userIdNotIn: str = NotImplemented,
            creatorIdEqual: str = NotImplemented,
            tagsLike: str = NotImplemented,
            tagsMultiLikeOr: str = NotImplemented,
            tagsMultiLikeAnd: str = NotImplemented,
            adminTagsLike: str = NotImplemented,
            adminTagsMultiLikeOr: str = NotImplemented,
            adminTagsMultiLikeAnd: str = NotImplemented,
            categoriesMatchAnd: str = NotImplemented,
            categoriesMatchOr: str = NotImplemented,
            categoriesNotContains: str = NotImplemented,
            categoriesIdsMatchAnd: str = NotImplemented,
            categoriesIdsMatchOr: str = NotImplemented,
            categoriesIdsNotContains: str = NotImplemented,
            categoriesIdsEmpty: KalturaNullableBoolean = NotImplemented,
            statusEqual: KalturaEntryStatus = NotImplemented,
            statusNotEqual: KalturaEntryStatus = NotImplemented,
            statusIn: str = NotImplemented,
            statusNotIn: str = NotImplemented,
            moderationStatusEqual: KalturaEntryModerationStatus = NotImplemented,
            moderationStatusNotEqual: KalturaEntryModerationStatus = NotImplemented,
            moderationStatusIn: str = NotImplemented,
            moderationStatusNotIn: str = NotImplemented,
            typeEqual: KalturaEntryType = NotImplemented,
            typeIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            rankLessThanOrEqual: float = NotImplemented,
            rankGreaterThanOrEqual: float = NotImplemented,
            totalRankLessThanOrEqual: int = NotImplemented,
            totalRankGreaterThanOrEqual: int = NotImplemented,
            groupIdEqual: int = NotImplemented,
            searchTextMatchAnd: str = NotImplemented,
            searchTextMatchOr: str = NotImplemented,
            accessControlIdEqual: int = NotImplemented,
            accessControlIdIn: str = NotImplemented,
            startDateGreaterThanOrEqual: int = NotImplemented,
            startDateLessThanOrEqual: int = NotImplemented,
            startDateGreaterThanOrEqualOrNull: int = NotImplemented,
            startDateLessThanOrEqualOrNull: int = NotImplemented,
            endDateGreaterThanOrEqual: int = NotImplemented,
            endDateLessThanOrEqual: int = NotImplemented,
            endDateGreaterThanOrEqualOrNull: int = NotImplemented,
            endDateLessThanOrEqualOrNull: int = NotImplemented,
            referenceIdEqual: str = NotImplemented,
            referenceIdIn: str = NotImplemented,
            replacingEntryIdEqual: str = NotImplemented,
            replacingEntryIdIn: str = NotImplemented,
            replacedEntryIdEqual: str = NotImplemented,
            replacedEntryIdIn: str = NotImplemented,
            replacementStatusEqual: KalturaEntryReplacementStatus = NotImplemented,
            replacementStatusIn: str = NotImplemented,
            partnerSortValueGreaterThanOrEqual: int = NotImplemented,
            partnerSortValueLessThanOrEqual: int = NotImplemented,
            rootEntryIdEqual: str = NotImplemented,
            rootEntryIdIn: str = NotImplemented,
            parentEntryIdEqual: str = NotImplemented,
            entitledUsersEditMatchAnd: str = NotImplemented,
            entitledUsersEditMatchOr: str = NotImplemented,
            entitledUsersPublishMatchAnd: str = NotImplemented,
            entitledUsersPublishMatchOr: str = NotImplemented,
            entitledUsersViewMatchAnd: str = NotImplemented,
            entitledUsersViewMatchOr: str = NotImplemented,
            tagsNameMultiLikeOr: str = NotImplemented,
            tagsAdminTagsMultiLikeOr: str = NotImplemented,
            tagsAdminTagsNameMultiLikeOr: str = NotImplemented,
            tagsNameMultiLikeAnd: str = NotImplemented,
            tagsAdminTagsMultiLikeAnd: str = NotImplemented,
            tagsAdminTagsNameMultiLikeAnd: str = NotImplemented,
            displayInSearchEqual: KalturaEntryDisplayInSearchType = NotImplemented,
            displayInSearchIn: str = NotImplemented,
            freeText: str = NotImplemented,
            excludedFreeTextGroups: str = NotImplemented,
            descriptionLike: str = NotImplemented,
            isRoot: KalturaNullableBoolean = NotImplemented,
            categoriesFullNameIn: str = NotImplemented,
            categoryAncestorIdIn: str = NotImplemented,
            redirectFromEntryId: str = NotImplemented,
            conversionProfileIdEqual: int = NotImplemented,
            lastPlayedAtGreaterThanOrEqual: int = NotImplemented,
            lastPlayedAtLessThanOrEqual: int = NotImplemented,
            lastPlayedAtLessThanOrEqualOrNull: int = NotImplemented,
            durationLessThan: int = NotImplemented,
            durationGreaterThan: int = NotImplemented,
            durationLessThanOrEqual: int = NotImplemented,
            durationGreaterThanOrEqual: int = NotImplemented,
            durationTypeMatchOr: str = NotImplemented): ...
        pass

class KalturaThumbParamsOutputBaseFilter(KalturaThumbParamsFilter):
    thumbParamsIdEqual: int
    thumbParamsVersionEqual: str
    thumbAssetIdEqual: str
    thumbAssetVersionEqual: str
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            systemNameEqual: str = NotImplemented,
            systemNameIn: str = NotImplemented,
            isSystemDefaultEqual: KalturaNullableBoolean = NotImplemented,
            tagsEqual: str = NotImplemented,
            formatEqual: KalturaContainerFormat = NotImplemented,
            thumbParamsIdEqual: int = NotImplemented,
            thumbParamsVersionEqual: str = NotImplemented,
            thumbAssetIdEqual: str = NotImplemented,
            thumbAssetVersionEqual: str = NotImplemented): ...

    def getThumbParamsIdEqual(self) -> int: ...
    def setThumbParamsIdEqual(self, newThumbParamsIdEqual: int) -> None: ...
    def getThumbParamsVersionEqual(self) -> str: ...
    def setThumbParamsVersionEqual(self, newThumbParamsVersionEqual: str) -> None: ...
    def getThumbAssetIdEqual(self) -> str: ...
    def setThumbAssetIdEqual(self, newThumbAssetIdEqual: str) -> None: ...
    def getThumbAssetVersionEqual(self) -> str: ...
    def setThumbAssetVersionEqual(self, newThumbAssetVersionEqual: str) -> None: ...

class KalturaAdminUserFilter(KalturaAdminUserBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            screenNameLike: str = NotImplemented,
            screenNameStartsWith: str = NotImplemented,
            emailLike: str = NotImplemented,
            emailStartsWith: str = NotImplemented,
            tagsMultiLikeOr: str = NotImplemented,
            tagsMultiLikeAnd: str = NotImplemented,
            statusEqual: KalturaUserStatus = NotImplemented,
            statusIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            idEqual: str = NotImplemented,
            idIn: str = NotImplemented,
            typeEqual: KalturaUserType = NotImplemented,
            typeIn: str = NotImplemented,
            isAdminEqual: KalturaNullableBoolean = NotImplemented,
            firstNameStartsWith: str = NotImplemented,
            lastNameStartsWith: str = NotImplemented,
            idOrScreenNameStartsWith: str = NotImplemented,
            loginEnabledEqual: KalturaNullableBoolean = NotImplemented,
            roleIdEqual: str = NotImplemented,
            roleIdsEqual: str = NotImplemented,
            roleIdsIn: str = NotImplemented,
            firstNameOrLastNameStartsWith: str = NotImplemented,
            permissionNamesMultiLikeOr: str = NotImplemented,
            permissionNamesMultiLikeAnd: str = NotImplemented): ...
        pass

class KalturaFlavorParamsOutputFilter(KalturaFlavorParamsOutputBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            systemNameEqual: str = NotImplemented,
            systemNameIn: str = NotImplemented,
            isSystemDefaultEqual: KalturaNullableBoolean = NotImplemented,
            tagsEqual: str = NotImplemented,
            formatEqual: KalturaContainerFormat = NotImplemented,
            flavorParamsIdEqual: int = NotImplemented,
            flavorParamsVersionEqual: str = NotImplemented,
            flavorAssetIdEqual: str = NotImplemented,
            flavorAssetVersionEqual: str = NotImplemented): ...
        pass

class KalturaLiveAssetFilter(KalturaLiveAssetBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: str = NotImplemented,
            idIn: str = NotImplemented,
            entryIdEqual: str = NotImplemented,
            entryIdIn: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            sizeGreaterThanOrEqual: int = NotImplemented,
            sizeLessThanOrEqual: int = NotImplemented,
            tagsLike: str = NotImplemented,
            tagsMultiLikeOr: str = NotImplemented,
            tagsMultiLikeAnd: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            deletedAtGreaterThanOrEqual: int = NotImplemented,
            deletedAtLessThanOrEqual: int = NotImplemented,
            typeIn: str = NotImplemented,
            flavorParamsIdEqual: int = NotImplemented,
            flavorParamsIdIn: str = NotImplemented,
            statusEqual: KalturaFlavorAssetStatus = NotImplemented,
            statusIn: str = NotImplemented,
            statusNotIn: str = NotImplemented): ...
        pass

class KalturaLiveParamsFilter(KalturaLiveParamsBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            systemNameEqual: str = NotImplemented,
            systemNameIn: str = NotImplemented,
            isSystemDefaultEqual: KalturaNullableBoolean = NotImplemented,
            tagsEqual: str = NotImplemented,
            formatEqual: KalturaContainerFormat = NotImplemented): ...
        pass

class KalturaMediaFlavorParamsFilter(KalturaMediaFlavorParamsBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            systemNameEqual: str = NotImplemented,
            systemNameIn: str = NotImplemented,
            isSystemDefaultEqual: KalturaNullableBoolean = NotImplemented,
            tagsEqual: str = NotImplemented,
            formatEqual: KalturaContainerFormat = NotImplemented): ...
        pass

class KalturaMixEntryFilter(KalturaMixEntryBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: str = NotImplemented,
            idIn: str = NotImplemented,
            idNotIn: str = NotImplemented,
            nameLike: str = NotImplemented,
            nameMultiLikeOr: str = NotImplemented,
            nameMultiLikeAnd: str = NotImplemented,
            nameEqual: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            userIdEqual: str = NotImplemented,
            userIdIn: str = NotImplemented,
            userIdNotIn: str = NotImplemented,
            creatorIdEqual: str = NotImplemented,
            tagsLike: str = NotImplemented,
            tagsMultiLikeOr: str = NotImplemented,
            tagsMultiLikeAnd: str = NotImplemented,
            adminTagsLike: str = NotImplemented,
            adminTagsMultiLikeOr: str = NotImplemented,
            adminTagsMultiLikeAnd: str = NotImplemented,
            categoriesMatchAnd: str = NotImplemented,
            categoriesMatchOr: str = NotImplemented,
            categoriesNotContains: str = NotImplemented,
            categoriesIdsMatchAnd: str = NotImplemented,
            categoriesIdsMatchOr: str = NotImplemented,
            categoriesIdsNotContains: str = NotImplemented,
            categoriesIdsEmpty: KalturaNullableBoolean = NotImplemented,
            statusEqual: KalturaEntryStatus = NotImplemented,
            statusNotEqual: KalturaEntryStatus = NotImplemented,
            statusIn: str = NotImplemented,
            statusNotIn: str = NotImplemented,
            moderationStatusEqual: KalturaEntryModerationStatus = NotImplemented,
            moderationStatusNotEqual: KalturaEntryModerationStatus = NotImplemented,
            moderationStatusIn: str = NotImplemented,
            moderationStatusNotIn: str = NotImplemented,
            typeEqual: KalturaEntryType = NotImplemented,
            typeIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            rankLessThanOrEqual: float = NotImplemented,
            rankGreaterThanOrEqual: float = NotImplemented,
            totalRankLessThanOrEqual: int = NotImplemented,
            totalRankGreaterThanOrEqual: int = NotImplemented,
            groupIdEqual: int = NotImplemented,
            searchTextMatchAnd: str = NotImplemented,
            searchTextMatchOr: str = NotImplemented,
            accessControlIdEqual: int = NotImplemented,
            accessControlIdIn: str = NotImplemented,
            startDateGreaterThanOrEqual: int = NotImplemented,
            startDateLessThanOrEqual: int = NotImplemented,
            startDateGreaterThanOrEqualOrNull: int = NotImplemented,
            startDateLessThanOrEqualOrNull: int = NotImplemented,
            endDateGreaterThanOrEqual: int = NotImplemented,
            endDateLessThanOrEqual: int = NotImplemented,
            endDateGreaterThanOrEqualOrNull: int = NotImplemented,
            endDateLessThanOrEqualOrNull: int = NotImplemented,
            referenceIdEqual: str = NotImplemented,
            referenceIdIn: str = NotImplemented,
            replacingEntryIdEqual: str = NotImplemented,
            replacingEntryIdIn: str = NotImplemented,
            replacedEntryIdEqual: str = NotImplemented,
            replacedEntryIdIn: str = NotImplemented,
            replacementStatusEqual: KalturaEntryReplacementStatus = NotImplemented,
            replacementStatusIn: str = NotImplemented,
            partnerSortValueGreaterThanOrEqual: int = NotImplemented,
            partnerSortValueLessThanOrEqual: int = NotImplemented,
            rootEntryIdEqual: str = NotImplemented,
            rootEntryIdIn: str = NotImplemented,
            parentEntryIdEqual: str = NotImplemented,
            entitledUsersEditMatchAnd: str = NotImplemented,
            entitledUsersEditMatchOr: str = NotImplemented,
            entitledUsersPublishMatchAnd: str = NotImplemented,
            entitledUsersPublishMatchOr: str = NotImplemented,
            entitledUsersViewMatchAnd: str = NotImplemented,
            entitledUsersViewMatchOr: str = NotImplemented,
            tagsNameMultiLikeOr: str = NotImplemented,
            tagsAdminTagsMultiLikeOr: str = NotImplemented,
            tagsAdminTagsNameMultiLikeOr: str = NotImplemented,
            tagsNameMultiLikeAnd: str = NotImplemented,
            tagsAdminTagsMultiLikeAnd: str = NotImplemented,
            tagsAdminTagsNameMultiLikeAnd: str = NotImplemented,
            displayInSearchEqual: KalturaEntryDisplayInSearchType = NotImplemented,
            displayInSearchIn: str = NotImplemented,
            freeText: str = NotImplemented,
            excludedFreeTextGroups: str = NotImplemented,
            descriptionLike: str = NotImplemented,
            isRoot: KalturaNullableBoolean = NotImplemented,
            categoriesFullNameIn: str = NotImplemented,
            categoryAncestorIdIn: str = NotImplemented,
            redirectFromEntryId: str = NotImplemented,
            conversionProfileIdEqual: int = NotImplemented,
            lastPlayedAtGreaterThanOrEqual: int = NotImplemented,
            lastPlayedAtLessThanOrEqual: int = NotImplemented,
            lastPlayedAtLessThanOrEqualOrNull: int = NotImplemented,
            durationLessThan: int = NotImplemented,
            durationGreaterThan: int = NotImplemented,
            durationLessThanOrEqual: int = NotImplemented,
            durationGreaterThanOrEqual: int = NotImplemented,
            durationTypeMatchOr: str = NotImplemented): ...
        pass

class KalturaThumbParamsOutputFilter(KalturaThumbParamsOutputBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            systemNameEqual: str = NotImplemented,
            systemNameIn: str = NotImplemented,
            isSystemDefaultEqual: KalturaNullableBoolean = NotImplemented,
            tagsEqual: str = NotImplemented,
            formatEqual: KalturaContainerFormat = NotImplemented,
            thumbParamsIdEqual: int = NotImplemented,
            thumbParamsVersionEqual: str = NotImplemented,
            thumbAssetIdEqual: str = NotImplemented,
            thumbAssetVersionEqual: str = NotImplemented): ...
        pass

class KalturaLiveEntryBaseFilter(KalturaMediaEntryFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: str = NotImplemented,
            idIn: str = NotImplemented,
            idNotIn: str = NotImplemented,
            nameLike: str = NotImplemented,
            nameMultiLikeOr: str = NotImplemented,
            nameMultiLikeAnd: str = NotImplemented,
            nameEqual: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            userIdEqual: str = NotImplemented,
            userIdIn: str = NotImplemented,
            userIdNotIn: str = NotImplemented,
            creatorIdEqual: str = NotImplemented,
            tagsLike: str = NotImplemented,
            tagsMultiLikeOr: str = NotImplemented,
            tagsMultiLikeAnd: str = NotImplemented,
            adminTagsLike: str = NotImplemented,
            adminTagsMultiLikeOr: str = NotImplemented,
            adminTagsMultiLikeAnd: str = NotImplemented,
            categoriesMatchAnd: str = NotImplemented,
            categoriesMatchOr: str = NotImplemented,
            categoriesNotContains: str = NotImplemented,
            categoriesIdsMatchAnd: str = NotImplemented,
            categoriesIdsMatchOr: str = NotImplemented,
            categoriesIdsNotContains: str = NotImplemented,
            categoriesIdsEmpty: KalturaNullableBoolean = NotImplemented,
            statusEqual: KalturaEntryStatus = NotImplemented,
            statusNotEqual: KalturaEntryStatus = NotImplemented,
            statusIn: str = NotImplemented,
            statusNotIn: str = NotImplemented,
            moderationStatusEqual: KalturaEntryModerationStatus = NotImplemented,
            moderationStatusNotEqual: KalturaEntryModerationStatus = NotImplemented,
            moderationStatusIn: str = NotImplemented,
            moderationStatusNotIn: str = NotImplemented,
            typeEqual: KalturaEntryType = NotImplemented,
            typeIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            rankLessThanOrEqual: float = NotImplemented,
            rankGreaterThanOrEqual: float = NotImplemented,
            totalRankLessThanOrEqual: int = NotImplemented,
            totalRankGreaterThanOrEqual: int = NotImplemented,
            groupIdEqual: int = NotImplemented,
            searchTextMatchAnd: str = NotImplemented,
            searchTextMatchOr: str = NotImplemented,
            accessControlIdEqual: int = NotImplemented,
            accessControlIdIn: str = NotImplemented,
            startDateGreaterThanOrEqual: int = NotImplemented,
            startDateLessThanOrEqual: int = NotImplemented,
            startDateGreaterThanOrEqualOrNull: int = NotImplemented,
            startDateLessThanOrEqualOrNull: int = NotImplemented,
            endDateGreaterThanOrEqual: int = NotImplemented,
            endDateLessThanOrEqual: int = NotImplemented,
            endDateGreaterThanOrEqualOrNull: int = NotImplemented,
            endDateLessThanOrEqualOrNull: int = NotImplemented,
            referenceIdEqual: str = NotImplemented,
            referenceIdIn: str = NotImplemented,
            replacingEntryIdEqual: str = NotImplemented,
            replacingEntryIdIn: str = NotImplemented,
            replacedEntryIdEqual: str = NotImplemented,
            replacedEntryIdIn: str = NotImplemented,
            replacementStatusEqual: KalturaEntryReplacementStatus = NotImplemented,
            replacementStatusIn: str = NotImplemented,
            partnerSortValueGreaterThanOrEqual: int = NotImplemented,
            partnerSortValueLessThanOrEqual: int = NotImplemented,
            rootEntryIdEqual: str = NotImplemented,
            rootEntryIdIn: str = NotImplemented,
            parentEntryIdEqual: str = NotImplemented,
            entitledUsersEditMatchAnd: str = NotImplemented,
            entitledUsersEditMatchOr: str = NotImplemented,
            entitledUsersPublishMatchAnd: str = NotImplemented,
            entitledUsersPublishMatchOr: str = NotImplemented,
            entitledUsersViewMatchAnd: str = NotImplemented,
            entitledUsersViewMatchOr: str = NotImplemented,
            tagsNameMultiLikeOr: str = NotImplemented,
            tagsAdminTagsMultiLikeOr: str = NotImplemented,
            tagsAdminTagsNameMultiLikeOr: str = NotImplemented,
            tagsNameMultiLikeAnd: str = NotImplemented,
            tagsAdminTagsMultiLikeAnd: str = NotImplemented,
            tagsAdminTagsNameMultiLikeAnd: str = NotImplemented,
            displayInSearchEqual: KalturaEntryDisplayInSearchType = NotImplemented,
            displayInSearchIn: str = NotImplemented,
            freeText: str = NotImplemented,
            excludedFreeTextGroups: str = NotImplemented,
            descriptionLike: str = NotImplemented,
            isRoot: KalturaNullableBoolean = NotImplemented,
            categoriesFullNameIn: str = NotImplemented,
            categoryAncestorIdIn: str = NotImplemented,
            redirectFromEntryId: str = NotImplemented,
            conversionProfileIdEqual: int = NotImplemented,
            lastPlayedAtGreaterThanOrEqual: int = NotImplemented,
            lastPlayedAtLessThanOrEqual: int = NotImplemented,
            lastPlayedAtLessThanOrEqualOrNull: int = NotImplemented,
            durationLessThan: int = NotImplemented,
            durationGreaterThan: int = NotImplemented,
            durationLessThanOrEqual: int = NotImplemented,
            durationGreaterThanOrEqual: int = NotImplemented,
            durationTypeMatchOr: str = NotImplemented,
            mediaTypeEqual: KalturaMediaType = NotImplemented,
            mediaTypeIn: str = NotImplemented,
            sourceTypeEqual: KalturaSourceType = NotImplemented,
            sourceTypeNotEqual: KalturaSourceType = NotImplemented,
            sourceTypeIn: str = NotImplemented,
            sourceTypeNotIn: str = NotImplemented,
            mediaDateGreaterThanOrEqual: int = NotImplemented,
            mediaDateLessThanOrEqual: int = NotImplemented,
            flavorParamsIdsMatchOr: str = NotImplemented,
            flavorParamsIdsMatchAnd: str = NotImplemented): ...
        pass

class KalturaMediaFlavorParamsOutputBaseFilter(KalturaFlavorParamsOutputFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            systemNameEqual: str = NotImplemented,
            systemNameIn: str = NotImplemented,
            isSystemDefaultEqual: KalturaNullableBoolean = NotImplemented,
            tagsEqual: str = NotImplemented,
            formatEqual: KalturaContainerFormat = NotImplemented,
            flavorParamsIdEqual: int = NotImplemented,
            flavorParamsVersionEqual: str = NotImplemented,
            flavorAssetIdEqual: str = NotImplemented,
            flavorAssetVersionEqual: str = NotImplemented): ...
        pass

class KalturaLiveEntryFilter(KalturaLiveEntryBaseFilter):
    isLive: KalturaNullableBoolean
    isRecordedEntryIdEmpty: KalturaNullableBoolean
    hasMediaServerHostname: str
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: str = NotImplemented,
            idIn: str = NotImplemented,
            idNotIn: str = NotImplemented,
            nameLike: str = NotImplemented,
            nameMultiLikeOr: str = NotImplemented,
            nameMultiLikeAnd: str = NotImplemented,
            nameEqual: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            userIdEqual: str = NotImplemented,
            userIdIn: str = NotImplemented,
            userIdNotIn: str = NotImplemented,
            creatorIdEqual: str = NotImplemented,
            tagsLike: str = NotImplemented,
            tagsMultiLikeOr: str = NotImplemented,
            tagsMultiLikeAnd: str = NotImplemented,
            adminTagsLike: str = NotImplemented,
            adminTagsMultiLikeOr: str = NotImplemented,
            adminTagsMultiLikeAnd: str = NotImplemented,
            categoriesMatchAnd: str = NotImplemented,
            categoriesMatchOr: str = NotImplemented,
            categoriesNotContains: str = NotImplemented,
            categoriesIdsMatchAnd: str = NotImplemented,
            categoriesIdsMatchOr: str = NotImplemented,
            categoriesIdsNotContains: str = NotImplemented,
            categoriesIdsEmpty: KalturaNullableBoolean = NotImplemented,
            statusEqual: KalturaEntryStatus = NotImplemented,
            statusNotEqual: KalturaEntryStatus = NotImplemented,
            statusIn: str = NotImplemented,
            statusNotIn: str = NotImplemented,
            moderationStatusEqual: KalturaEntryModerationStatus = NotImplemented,
            moderationStatusNotEqual: KalturaEntryModerationStatus = NotImplemented,
            moderationStatusIn: str = NotImplemented,
            moderationStatusNotIn: str = NotImplemented,
            typeEqual: KalturaEntryType = NotImplemented,
            typeIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            rankLessThanOrEqual: float = NotImplemented,
            rankGreaterThanOrEqual: float = NotImplemented,
            totalRankLessThanOrEqual: int = NotImplemented,
            totalRankGreaterThanOrEqual: int = NotImplemented,
            groupIdEqual: int = NotImplemented,
            searchTextMatchAnd: str = NotImplemented,
            searchTextMatchOr: str = NotImplemented,
            accessControlIdEqual: int = NotImplemented,
            accessControlIdIn: str = NotImplemented,
            startDateGreaterThanOrEqual: int = NotImplemented,
            startDateLessThanOrEqual: int = NotImplemented,
            startDateGreaterThanOrEqualOrNull: int = NotImplemented,
            startDateLessThanOrEqualOrNull: int = NotImplemented,
            endDateGreaterThanOrEqual: int = NotImplemented,
            endDateLessThanOrEqual: int = NotImplemented,
            endDateGreaterThanOrEqualOrNull: int = NotImplemented,
            endDateLessThanOrEqualOrNull: int = NotImplemented,
            referenceIdEqual: str = NotImplemented,
            referenceIdIn: str = NotImplemented,
            replacingEntryIdEqual: str = NotImplemented,
            replacingEntryIdIn: str = NotImplemented,
            replacedEntryIdEqual: str = NotImplemented,
            replacedEntryIdIn: str = NotImplemented,
            replacementStatusEqual: KalturaEntryReplacementStatus = NotImplemented,
            replacementStatusIn: str = NotImplemented,
            partnerSortValueGreaterThanOrEqual: int = NotImplemented,
            partnerSortValueLessThanOrEqual: int = NotImplemented,
            rootEntryIdEqual: str = NotImplemented,
            rootEntryIdIn: str = NotImplemented,
            parentEntryIdEqual: str = NotImplemented,
            entitledUsersEditMatchAnd: str = NotImplemented,
            entitledUsersEditMatchOr: str = NotImplemented,
            entitledUsersPublishMatchAnd: str = NotImplemented,
            entitledUsersPublishMatchOr: str = NotImplemented,
            entitledUsersViewMatchAnd: str = NotImplemented,
            entitledUsersViewMatchOr: str = NotImplemented,
            tagsNameMultiLikeOr: str = NotImplemented,
            tagsAdminTagsMultiLikeOr: str = NotImplemented,
            tagsAdminTagsNameMultiLikeOr: str = NotImplemented,
            tagsNameMultiLikeAnd: str = NotImplemented,
            tagsAdminTagsMultiLikeAnd: str = NotImplemented,
            tagsAdminTagsNameMultiLikeAnd: str = NotImplemented,
            displayInSearchEqual: KalturaEntryDisplayInSearchType = NotImplemented,
            displayInSearchIn: str = NotImplemented,
            freeText: str = NotImplemented,
            excludedFreeTextGroups: str = NotImplemented,
            descriptionLike: str = NotImplemented,
            isRoot: KalturaNullableBoolean = NotImplemented,
            categoriesFullNameIn: str = NotImplemented,
            categoryAncestorIdIn: str = NotImplemented,
            redirectFromEntryId: str = NotImplemented,
            conversionProfileIdEqual: int = NotImplemented,
            lastPlayedAtGreaterThanOrEqual: int = NotImplemented,
            lastPlayedAtLessThanOrEqual: int = NotImplemented,
            lastPlayedAtLessThanOrEqualOrNull: int = NotImplemented,
            durationLessThan: int = NotImplemented,
            durationGreaterThan: int = NotImplemented,
            durationLessThanOrEqual: int = NotImplemented,
            durationGreaterThanOrEqual: int = NotImplemented,
            durationTypeMatchOr: str = NotImplemented,
            mediaTypeEqual: KalturaMediaType = NotImplemented,
            mediaTypeIn: str = NotImplemented,
            sourceTypeEqual: KalturaSourceType = NotImplemented,
            sourceTypeNotEqual: KalturaSourceType = NotImplemented,
            sourceTypeIn: str = NotImplemented,
            sourceTypeNotIn: str = NotImplemented,
            mediaDateGreaterThanOrEqual: int = NotImplemented,
            mediaDateLessThanOrEqual: int = NotImplemented,
            flavorParamsIdsMatchOr: str = NotImplemented,
            flavorParamsIdsMatchAnd: str = NotImplemented,
            isLive: KalturaNullableBoolean = NotImplemented,
            isRecordedEntryIdEmpty: KalturaNullableBoolean = NotImplemented,
            hasMediaServerHostname: str = NotImplemented): ...

    def getIsLive(self) -> KalturaNullableBoolean: ...
    def setIsLive(self, newIsLive: KalturaNullableBoolean) -> None: ...
    def getIsRecordedEntryIdEmpty(self) -> KalturaNullableBoolean: ...
    def setIsRecordedEntryIdEmpty(self, newIsRecordedEntryIdEmpty: KalturaNullableBoolean) -> None: ...
    def getHasMediaServerHostname(self) -> str: ...
    def setHasMediaServerHostname(self, newHasMediaServerHostname: str) -> None: ...

class KalturaMediaFlavorParamsOutputFilter(KalturaMediaFlavorParamsOutputBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            systemNameEqual: str = NotImplemented,
            systemNameIn: str = NotImplemented,
            isSystemDefaultEqual: KalturaNullableBoolean = NotImplemented,
            tagsEqual: str = NotImplemented,
            formatEqual: KalturaContainerFormat = NotImplemented,
            flavorParamsIdEqual: int = NotImplemented,
            flavorParamsVersionEqual: str = NotImplemented,
            flavorAssetIdEqual: str = NotImplemented,
            flavorAssetVersionEqual: str = NotImplemented): ...
        pass

class KalturaLiveChannelBaseFilter(KalturaLiveEntryFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: str = NotImplemented,
            idIn: str = NotImplemented,
            idNotIn: str = NotImplemented,
            nameLike: str = NotImplemented,
            nameMultiLikeOr: str = NotImplemented,
            nameMultiLikeAnd: str = NotImplemented,
            nameEqual: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            userIdEqual: str = NotImplemented,
            userIdIn: str = NotImplemented,
            userIdNotIn: str = NotImplemented,
            creatorIdEqual: str = NotImplemented,
            tagsLike: str = NotImplemented,
            tagsMultiLikeOr: str = NotImplemented,
            tagsMultiLikeAnd: str = NotImplemented,
            adminTagsLike: str = NotImplemented,
            adminTagsMultiLikeOr: str = NotImplemented,
            adminTagsMultiLikeAnd: str = NotImplemented,
            categoriesMatchAnd: str = NotImplemented,
            categoriesMatchOr: str = NotImplemented,
            categoriesNotContains: str = NotImplemented,
            categoriesIdsMatchAnd: str = NotImplemented,
            categoriesIdsMatchOr: str = NotImplemented,
            categoriesIdsNotContains: str = NotImplemented,
            categoriesIdsEmpty: KalturaNullableBoolean = NotImplemented,
            statusEqual: KalturaEntryStatus = NotImplemented,
            statusNotEqual: KalturaEntryStatus = NotImplemented,
            statusIn: str = NotImplemented,
            statusNotIn: str = NotImplemented,
            moderationStatusEqual: KalturaEntryModerationStatus = NotImplemented,
            moderationStatusNotEqual: KalturaEntryModerationStatus = NotImplemented,
            moderationStatusIn: str = NotImplemented,
            moderationStatusNotIn: str = NotImplemented,
            typeEqual: KalturaEntryType = NotImplemented,
            typeIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            rankLessThanOrEqual: float = NotImplemented,
            rankGreaterThanOrEqual: float = NotImplemented,
            totalRankLessThanOrEqual: int = NotImplemented,
            totalRankGreaterThanOrEqual: int = NotImplemented,
            groupIdEqual: int = NotImplemented,
            searchTextMatchAnd: str = NotImplemented,
            searchTextMatchOr: str = NotImplemented,
            accessControlIdEqual: int = NotImplemented,
            accessControlIdIn: str = NotImplemented,
            startDateGreaterThanOrEqual: int = NotImplemented,
            startDateLessThanOrEqual: int = NotImplemented,
            startDateGreaterThanOrEqualOrNull: int = NotImplemented,
            startDateLessThanOrEqualOrNull: int = NotImplemented,
            endDateGreaterThanOrEqual: int = NotImplemented,
            endDateLessThanOrEqual: int = NotImplemented,
            endDateGreaterThanOrEqualOrNull: int = NotImplemented,
            endDateLessThanOrEqualOrNull: int = NotImplemented,
            referenceIdEqual: str = NotImplemented,
            referenceIdIn: str = NotImplemented,
            replacingEntryIdEqual: str = NotImplemented,
            replacingEntryIdIn: str = NotImplemented,
            replacedEntryIdEqual: str = NotImplemented,
            replacedEntryIdIn: str = NotImplemented,
            replacementStatusEqual: KalturaEntryReplacementStatus = NotImplemented,
            replacementStatusIn: str = NotImplemented,
            partnerSortValueGreaterThanOrEqual: int = NotImplemented,
            partnerSortValueLessThanOrEqual: int = NotImplemented,
            rootEntryIdEqual: str = NotImplemented,
            rootEntryIdIn: str = NotImplemented,
            parentEntryIdEqual: str = NotImplemented,
            entitledUsersEditMatchAnd: str = NotImplemented,
            entitledUsersEditMatchOr: str = NotImplemented,
            entitledUsersPublishMatchAnd: str = NotImplemented,
            entitledUsersPublishMatchOr: str = NotImplemented,
            entitledUsersViewMatchAnd: str = NotImplemented,
            entitledUsersViewMatchOr: str = NotImplemented,
            tagsNameMultiLikeOr: str = NotImplemented,
            tagsAdminTagsMultiLikeOr: str = NotImplemented,
            tagsAdminTagsNameMultiLikeOr: str = NotImplemented,
            tagsNameMultiLikeAnd: str = NotImplemented,
            tagsAdminTagsMultiLikeAnd: str = NotImplemented,
            tagsAdminTagsNameMultiLikeAnd: str = NotImplemented,
            displayInSearchEqual: KalturaEntryDisplayInSearchType = NotImplemented,
            displayInSearchIn: str = NotImplemented,
            freeText: str = NotImplemented,
            excludedFreeTextGroups: str = NotImplemented,
            descriptionLike: str = NotImplemented,
            isRoot: KalturaNullableBoolean = NotImplemented,
            categoriesFullNameIn: str = NotImplemented,
            categoryAncestorIdIn: str = NotImplemented,
            redirectFromEntryId: str = NotImplemented,
            conversionProfileIdEqual: int = NotImplemented,
            lastPlayedAtGreaterThanOrEqual: int = NotImplemented,
            lastPlayedAtLessThanOrEqual: int = NotImplemented,
            lastPlayedAtLessThanOrEqualOrNull: int = NotImplemented,
            durationLessThan: int = NotImplemented,
            durationGreaterThan: int = NotImplemented,
            durationLessThanOrEqual: int = NotImplemented,
            durationGreaterThanOrEqual: int = NotImplemented,
            durationTypeMatchOr: str = NotImplemented,
            mediaTypeEqual: KalturaMediaType = NotImplemented,
            mediaTypeIn: str = NotImplemented,
            sourceTypeEqual: KalturaSourceType = NotImplemented,
            sourceTypeNotEqual: KalturaSourceType = NotImplemented,
            sourceTypeIn: str = NotImplemented,
            sourceTypeNotIn: str = NotImplemented,
            mediaDateGreaterThanOrEqual: int = NotImplemented,
            mediaDateLessThanOrEqual: int = NotImplemented,
            flavorParamsIdsMatchOr: str = NotImplemented,
            flavorParamsIdsMatchAnd: str = NotImplemented,
            isLive: KalturaNullableBoolean = NotImplemented,
            isRecordedEntryIdEmpty: KalturaNullableBoolean = NotImplemented,
            hasMediaServerHostname: str = NotImplemented): ...
        pass

class KalturaLiveStreamEntryBaseFilter(KalturaLiveEntryFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: str = NotImplemented,
            idIn: str = NotImplemented,
            idNotIn: str = NotImplemented,
            nameLike: str = NotImplemented,
            nameMultiLikeOr: str = NotImplemented,
            nameMultiLikeAnd: str = NotImplemented,
            nameEqual: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            userIdEqual: str = NotImplemented,
            userIdIn: str = NotImplemented,
            userIdNotIn: str = NotImplemented,
            creatorIdEqual: str = NotImplemented,
            tagsLike: str = NotImplemented,
            tagsMultiLikeOr: str = NotImplemented,
            tagsMultiLikeAnd: str = NotImplemented,
            adminTagsLike: str = NotImplemented,
            adminTagsMultiLikeOr: str = NotImplemented,
            adminTagsMultiLikeAnd: str = NotImplemented,
            categoriesMatchAnd: str = NotImplemented,
            categoriesMatchOr: str = NotImplemented,
            categoriesNotContains: str = NotImplemented,
            categoriesIdsMatchAnd: str = NotImplemented,
            categoriesIdsMatchOr: str = NotImplemented,
            categoriesIdsNotContains: str = NotImplemented,
            categoriesIdsEmpty: KalturaNullableBoolean = NotImplemented,
            statusEqual: KalturaEntryStatus = NotImplemented,
            statusNotEqual: KalturaEntryStatus = NotImplemented,
            statusIn: str = NotImplemented,
            statusNotIn: str = NotImplemented,
            moderationStatusEqual: KalturaEntryModerationStatus = NotImplemented,
            moderationStatusNotEqual: KalturaEntryModerationStatus = NotImplemented,
            moderationStatusIn: str = NotImplemented,
            moderationStatusNotIn: str = NotImplemented,
            typeEqual: KalturaEntryType = NotImplemented,
            typeIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            rankLessThanOrEqual: float = NotImplemented,
            rankGreaterThanOrEqual: float = NotImplemented,
            totalRankLessThanOrEqual: int = NotImplemented,
            totalRankGreaterThanOrEqual: int = NotImplemented,
            groupIdEqual: int = NotImplemented,
            searchTextMatchAnd: str = NotImplemented,
            searchTextMatchOr: str = NotImplemented,
            accessControlIdEqual: int = NotImplemented,
            accessControlIdIn: str = NotImplemented,
            startDateGreaterThanOrEqual: int = NotImplemented,
            startDateLessThanOrEqual: int = NotImplemented,
            startDateGreaterThanOrEqualOrNull: int = NotImplemented,
            startDateLessThanOrEqualOrNull: int = NotImplemented,
            endDateGreaterThanOrEqual: int = NotImplemented,
            endDateLessThanOrEqual: int = NotImplemented,
            endDateGreaterThanOrEqualOrNull: int = NotImplemented,
            endDateLessThanOrEqualOrNull: int = NotImplemented,
            referenceIdEqual: str = NotImplemented,
            referenceIdIn: str = NotImplemented,
            replacingEntryIdEqual: str = NotImplemented,
            replacingEntryIdIn: str = NotImplemented,
            replacedEntryIdEqual: str = NotImplemented,
            replacedEntryIdIn: str = NotImplemented,
            replacementStatusEqual: KalturaEntryReplacementStatus = NotImplemented,
            replacementStatusIn: str = NotImplemented,
            partnerSortValueGreaterThanOrEqual: int = NotImplemented,
            partnerSortValueLessThanOrEqual: int = NotImplemented,
            rootEntryIdEqual: str = NotImplemented,
            rootEntryIdIn: str = NotImplemented,
            parentEntryIdEqual: str = NotImplemented,
            entitledUsersEditMatchAnd: str = NotImplemented,
            entitledUsersEditMatchOr: str = NotImplemented,
            entitledUsersPublishMatchAnd: str = NotImplemented,
            entitledUsersPublishMatchOr: str = NotImplemented,
            entitledUsersViewMatchAnd: str = NotImplemented,
            entitledUsersViewMatchOr: str = NotImplemented,
            tagsNameMultiLikeOr: str = NotImplemented,
            tagsAdminTagsMultiLikeOr: str = NotImplemented,
            tagsAdminTagsNameMultiLikeOr: str = NotImplemented,
            tagsNameMultiLikeAnd: str = NotImplemented,
            tagsAdminTagsMultiLikeAnd: str = NotImplemented,
            tagsAdminTagsNameMultiLikeAnd: str = NotImplemented,
            displayInSearchEqual: KalturaEntryDisplayInSearchType = NotImplemented,
            displayInSearchIn: str = NotImplemented,
            freeText: str = NotImplemented,
            excludedFreeTextGroups: str = NotImplemented,
            descriptionLike: str = NotImplemented,
            isRoot: KalturaNullableBoolean = NotImplemented,
            categoriesFullNameIn: str = NotImplemented,
            categoryAncestorIdIn: str = NotImplemented,
            redirectFromEntryId: str = NotImplemented,
            conversionProfileIdEqual: int = NotImplemented,
            lastPlayedAtGreaterThanOrEqual: int = NotImplemented,
            lastPlayedAtLessThanOrEqual: int = NotImplemented,
            lastPlayedAtLessThanOrEqualOrNull: int = NotImplemented,
            durationLessThan: int = NotImplemented,
            durationGreaterThan: int = NotImplemented,
            durationLessThanOrEqual: int = NotImplemented,
            durationGreaterThanOrEqual: int = NotImplemented,
            durationTypeMatchOr: str = NotImplemented,
            mediaTypeEqual: KalturaMediaType = NotImplemented,
            mediaTypeIn: str = NotImplemented,
            sourceTypeEqual: KalturaSourceType = NotImplemented,
            sourceTypeNotEqual: KalturaSourceType = NotImplemented,
            sourceTypeIn: str = NotImplemented,
            sourceTypeNotIn: str = NotImplemented,
            mediaDateGreaterThanOrEqual: int = NotImplemented,
            mediaDateLessThanOrEqual: int = NotImplemented,
            flavorParamsIdsMatchOr: str = NotImplemented,
            flavorParamsIdsMatchAnd: str = NotImplemented,
            isLive: KalturaNullableBoolean = NotImplemented,
            isRecordedEntryIdEmpty: KalturaNullableBoolean = NotImplemented,
            hasMediaServerHostname: str = NotImplemented): ...
        pass

class KalturaLiveChannelFilter(KalturaLiveChannelBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: str = NotImplemented,
            idIn: str = NotImplemented,
            idNotIn: str = NotImplemented,
            nameLike: str = NotImplemented,
            nameMultiLikeOr: str = NotImplemented,
            nameMultiLikeAnd: str = NotImplemented,
            nameEqual: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            userIdEqual: str = NotImplemented,
            userIdIn: str = NotImplemented,
            userIdNotIn: str = NotImplemented,
            creatorIdEqual: str = NotImplemented,
            tagsLike: str = NotImplemented,
            tagsMultiLikeOr: str = NotImplemented,
            tagsMultiLikeAnd: str = NotImplemented,
            adminTagsLike: str = NotImplemented,
            adminTagsMultiLikeOr: str = NotImplemented,
            adminTagsMultiLikeAnd: str = NotImplemented,
            categoriesMatchAnd: str = NotImplemented,
            categoriesMatchOr: str = NotImplemented,
            categoriesNotContains: str = NotImplemented,
            categoriesIdsMatchAnd: str = NotImplemented,
            categoriesIdsMatchOr: str = NotImplemented,
            categoriesIdsNotContains: str = NotImplemented,
            categoriesIdsEmpty: KalturaNullableBoolean = NotImplemented,
            statusEqual: KalturaEntryStatus = NotImplemented,
            statusNotEqual: KalturaEntryStatus = NotImplemented,
            statusIn: str = NotImplemented,
            statusNotIn: str = NotImplemented,
            moderationStatusEqual: KalturaEntryModerationStatus = NotImplemented,
            moderationStatusNotEqual: KalturaEntryModerationStatus = NotImplemented,
            moderationStatusIn: str = NotImplemented,
            moderationStatusNotIn: str = NotImplemented,
            typeEqual: KalturaEntryType = NotImplemented,
            typeIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            rankLessThanOrEqual: float = NotImplemented,
            rankGreaterThanOrEqual: float = NotImplemented,
            totalRankLessThanOrEqual: int = NotImplemented,
            totalRankGreaterThanOrEqual: int = NotImplemented,
            groupIdEqual: int = NotImplemented,
            searchTextMatchAnd: str = NotImplemented,
            searchTextMatchOr: str = NotImplemented,
            accessControlIdEqual: int = NotImplemented,
            accessControlIdIn: str = NotImplemented,
            startDateGreaterThanOrEqual: int = NotImplemented,
            startDateLessThanOrEqual: int = NotImplemented,
            startDateGreaterThanOrEqualOrNull: int = NotImplemented,
            startDateLessThanOrEqualOrNull: int = NotImplemented,
            endDateGreaterThanOrEqual: int = NotImplemented,
            endDateLessThanOrEqual: int = NotImplemented,
            endDateGreaterThanOrEqualOrNull: int = NotImplemented,
            endDateLessThanOrEqualOrNull: int = NotImplemented,
            referenceIdEqual: str = NotImplemented,
            referenceIdIn: str = NotImplemented,
            replacingEntryIdEqual: str = NotImplemented,
            replacingEntryIdIn: str = NotImplemented,
            replacedEntryIdEqual: str = NotImplemented,
            replacedEntryIdIn: str = NotImplemented,
            replacementStatusEqual: KalturaEntryReplacementStatus = NotImplemented,
            replacementStatusIn: str = NotImplemented,
            partnerSortValueGreaterThanOrEqual: int = NotImplemented,
            partnerSortValueLessThanOrEqual: int = NotImplemented,
            rootEntryIdEqual: str = NotImplemented,
            rootEntryIdIn: str = NotImplemented,
            parentEntryIdEqual: str = NotImplemented,
            entitledUsersEditMatchAnd: str = NotImplemented,
            entitledUsersEditMatchOr: str = NotImplemented,
            entitledUsersPublishMatchAnd: str = NotImplemented,
            entitledUsersPublishMatchOr: str = NotImplemented,
            entitledUsersViewMatchAnd: str = NotImplemented,
            entitledUsersViewMatchOr: str = NotImplemented,
            tagsNameMultiLikeOr: str = NotImplemented,
            tagsAdminTagsMultiLikeOr: str = NotImplemented,
            tagsAdminTagsNameMultiLikeOr: str = NotImplemented,
            tagsNameMultiLikeAnd: str = NotImplemented,
            tagsAdminTagsMultiLikeAnd: str = NotImplemented,
            tagsAdminTagsNameMultiLikeAnd: str = NotImplemented,
            displayInSearchEqual: KalturaEntryDisplayInSearchType = NotImplemented,
            displayInSearchIn: str = NotImplemented,
            freeText: str = NotImplemented,
            excludedFreeTextGroups: str = NotImplemented,
            descriptionLike: str = NotImplemented,
            isRoot: KalturaNullableBoolean = NotImplemented,
            categoriesFullNameIn: str = NotImplemented,
            categoryAncestorIdIn: str = NotImplemented,
            redirectFromEntryId: str = NotImplemented,
            conversionProfileIdEqual: int = NotImplemented,
            lastPlayedAtGreaterThanOrEqual: int = NotImplemented,
            lastPlayedAtLessThanOrEqual: int = NotImplemented,
            lastPlayedAtLessThanOrEqualOrNull: int = NotImplemented,
            durationLessThan: int = NotImplemented,
            durationGreaterThan: int = NotImplemented,
            durationLessThanOrEqual: int = NotImplemented,
            durationGreaterThanOrEqual: int = NotImplemented,
            durationTypeMatchOr: str = NotImplemented,
            mediaTypeEqual: KalturaMediaType = NotImplemented,
            mediaTypeIn: str = NotImplemented,
            sourceTypeEqual: KalturaSourceType = NotImplemented,
            sourceTypeNotEqual: KalturaSourceType = NotImplemented,
            sourceTypeIn: str = NotImplemented,
            sourceTypeNotIn: str = NotImplemented,
            mediaDateGreaterThanOrEqual: int = NotImplemented,
            mediaDateLessThanOrEqual: int = NotImplemented,
            flavorParamsIdsMatchOr: str = NotImplemented,
            flavorParamsIdsMatchAnd: str = NotImplemented,
            isLive: KalturaNullableBoolean = NotImplemented,
            isRecordedEntryIdEmpty: KalturaNullableBoolean = NotImplemented,
            hasMediaServerHostname: str = NotImplemented): ...
        pass

class KalturaLiveStreamEntryFilter(KalturaLiveStreamEntryBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: str = NotImplemented,
            idIn: str = NotImplemented,
            idNotIn: str = NotImplemented,
            nameLike: str = NotImplemented,
            nameMultiLikeOr: str = NotImplemented,
            nameMultiLikeAnd: str = NotImplemented,
            nameEqual: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            userIdEqual: str = NotImplemented,
            userIdIn: str = NotImplemented,
            userIdNotIn: str = NotImplemented,
            creatorIdEqual: str = NotImplemented,
            tagsLike: str = NotImplemented,
            tagsMultiLikeOr: str = NotImplemented,
            tagsMultiLikeAnd: str = NotImplemented,
            adminTagsLike: str = NotImplemented,
            adminTagsMultiLikeOr: str = NotImplemented,
            adminTagsMultiLikeAnd: str = NotImplemented,
            categoriesMatchAnd: str = NotImplemented,
            categoriesMatchOr: str = NotImplemented,
            categoriesNotContains: str = NotImplemented,
            categoriesIdsMatchAnd: str = NotImplemented,
            categoriesIdsMatchOr: str = NotImplemented,
            categoriesIdsNotContains: str = NotImplemented,
            categoriesIdsEmpty: KalturaNullableBoolean = NotImplemented,
            statusEqual: KalturaEntryStatus = NotImplemented,
            statusNotEqual: KalturaEntryStatus = NotImplemented,
            statusIn: str = NotImplemented,
            statusNotIn: str = NotImplemented,
            moderationStatusEqual: KalturaEntryModerationStatus = NotImplemented,
            moderationStatusNotEqual: KalturaEntryModerationStatus = NotImplemented,
            moderationStatusIn: str = NotImplemented,
            moderationStatusNotIn: str = NotImplemented,
            typeEqual: KalturaEntryType = NotImplemented,
            typeIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            rankLessThanOrEqual: float = NotImplemented,
            rankGreaterThanOrEqual: float = NotImplemented,
            totalRankLessThanOrEqual: int = NotImplemented,
            totalRankGreaterThanOrEqual: int = NotImplemented,
            groupIdEqual: int = NotImplemented,
            searchTextMatchAnd: str = NotImplemented,
            searchTextMatchOr: str = NotImplemented,
            accessControlIdEqual: int = NotImplemented,
            accessControlIdIn: str = NotImplemented,
            startDateGreaterThanOrEqual: int = NotImplemented,
            startDateLessThanOrEqual: int = NotImplemented,
            startDateGreaterThanOrEqualOrNull: int = NotImplemented,
            startDateLessThanOrEqualOrNull: int = NotImplemented,
            endDateGreaterThanOrEqual: int = NotImplemented,
            endDateLessThanOrEqual: int = NotImplemented,
            endDateGreaterThanOrEqualOrNull: int = NotImplemented,
            endDateLessThanOrEqualOrNull: int = NotImplemented,
            referenceIdEqual: str = NotImplemented,
            referenceIdIn: str = NotImplemented,
            replacingEntryIdEqual: str = NotImplemented,
            replacingEntryIdIn: str = NotImplemented,
            replacedEntryIdEqual: str = NotImplemented,
            replacedEntryIdIn: str = NotImplemented,
            replacementStatusEqual: KalturaEntryReplacementStatus = NotImplemented,
            replacementStatusIn: str = NotImplemented,
            partnerSortValueGreaterThanOrEqual: int = NotImplemented,
            partnerSortValueLessThanOrEqual: int = NotImplemented,
            rootEntryIdEqual: str = NotImplemented,
            rootEntryIdIn: str = NotImplemented,
            parentEntryIdEqual: str = NotImplemented,
            entitledUsersEditMatchAnd: str = NotImplemented,
            entitledUsersEditMatchOr: str = NotImplemented,
            entitledUsersPublishMatchAnd: str = NotImplemented,
            entitledUsersPublishMatchOr: str = NotImplemented,
            entitledUsersViewMatchAnd: str = NotImplemented,
            entitledUsersViewMatchOr: str = NotImplemented,
            tagsNameMultiLikeOr: str = NotImplemented,
            tagsAdminTagsMultiLikeOr: str = NotImplemented,
            tagsAdminTagsNameMultiLikeOr: str = NotImplemented,
            tagsNameMultiLikeAnd: str = NotImplemented,
            tagsAdminTagsMultiLikeAnd: str = NotImplemented,
            tagsAdminTagsNameMultiLikeAnd: str = NotImplemented,
            displayInSearchEqual: KalturaEntryDisplayInSearchType = NotImplemented,
            displayInSearchIn: str = NotImplemented,
            freeText: str = NotImplemented,
            excludedFreeTextGroups: str = NotImplemented,
            descriptionLike: str = NotImplemented,
            isRoot: KalturaNullableBoolean = NotImplemented,
            categoriesFullNameIn: str = NotImplemented,
            categoryAncestorIdIn: str = NotImplemented,
            redirectFromEntryId: str = NotImplemented,
            conversionProfileIdEqual: int = NotImplemented,
            lastPlayedAtGreaterThanOrEqual: int = NotImplemented,
            lastPlayedAtLessThanOrEqual: int = NotImplemented,
            lastPlayedAtLessThanOrEqualOrNull: int = NotImplemented,
            durationLessThan: int = NotImplemented,
            durationGreaterThan: int = NotImplemented,
            durationLessThanOrEqual: int = NotImplemented,
            durationGreaterThanOrEqual: int = NotImplemented,
            durationTypeMatchOr: str = NotImplemented,
            mediaTypeEqual: KalturaMediaType = NotImplemented,
            mediaTypeIn: str = NotImplemented,
            sourceTypeEqual: KalturaSourceType = NotImplemented,
            sourceTypeNotEqual: KalturaSourceType = NotImplemented,
            sourceTypeIn: str = NotImplemented,
            sourceTypeNotIn: str = NotImplemented,
            mediaDateGreaterThanOrEqual: int = NotImplemented,
            mediaDateLessThanOrEqual: int = NotImplemented,
            flavorParamsIdsMatchOr: str = NotImplemented,
            flavorParamsIdsMatchAnd: str = NotImplemented,
            isLive: KalturaNullableBoolean = NotImplemented,
            isRecordedEntryIdEmpty: KalturaNullableBoolean = NotImplemented,
            hasMediaServerHostname: str = NotImplemented): ...
        pass

class KalturaLiveStreamAdminEntryBaseFilter(KalturaLiveStreamEntryFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: str = NotImplemented,
            idIn: str = NotImplemented,
            idNotIn: str = NotImplemented,
            nameLike: str = NotImplemented,
            nameMultiLikeOr: str = NotImplemented,
            nameMultiLikeAnd: str = NotImplemented,
            nameEqual: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            userIdEqual: str = NotImplemented,
            userIdIn: str = NotImplemented,
            userIdNotIn: str = NotImplemented,
            creatorIdEqual: str = NotImplemented,
            tagsLike: str = NotImplemented,
            tagsMultiLikeOr: str = NotImplemented,
            tagsMultiLikeAnd: str = NotImplemented,
            adminTagsLike: str = NotImplemented,
            adminTagsMultiLikeOr: str = NotImplemented,
            adminTagsMultiLikeAnd: str = NotImplemented,
            categoriesMatchAnd: str = NotImplemented,
            categoriesMatchOr: str = NotImplemented,
            categoriesNotContains: str = NotImplemented,
            categoriesIdsMatchAnd: str = NotImplemented,
            categoriesIdsMatchOr: str = NotImplemented,
            categoriesIdsNotContains: str = NotImplemented,
            categoriesIdsEmpty: KalturaNullableBoolean = NotImplemented,
            statusEqual: KalturaEntryStatus = NotImplemented,
            statusNotEqual: KalturaEntryStatus = NotImplemented,
            statusIn: str = NotImplemented,
            statusNotIn: str = NotImplemented,
            moderationStatusEqual: KalturaEntryModerationStatus = NotImplemented,
            moderationStatusNotEqual: KalturaEntryModerationStatus = NotImplemented,
            moderationStatusIn: str = NotImplemented,
            moderationStatusNotIn: str = NotImplemented,
            typeEqual: KalturaEntryType = NotImplemented,
            typeIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            rankLessThanOrEqual: float = NotImplemented,
            rankGreaterThanOrEqual: float = NotImplemented,
            totalRankLessThanOrEqual: int = NotImplemented,
            totalRankGreaterThanOrEqual: int = NotImplemented,
            groupIdEqual: int = NotImplemented,
            searchTextMatchAnd: str = NotImplemented,
            searchTextMatchOr: str = NotImplemented,
            accessControlIdEqual: int = NotImplemented,
            accessControlIdIn: str = NotImplemented,
            startDateGreaterThanOrEqual: int = NotImplemented,
            startDateLessThanOrEqual: int = NotImplemented,
            startDateGreaterThanOrEqualOrNull: int = NotImplemented,
            startDateLessThanOrEqualOrNull: int = NotImplemented,
            endDateGreaterThanOrEqual: int = NotImplemented,
            endDateLessThanOrEqual: int = NotImplemented,
            endDateGreaterThanOrEqualOrNull: int = NotImplemented,
            endDateLessThanOrEqualOrNull: int = NotImplemented,
            referenceIdEqual: str = NotImplemented,
            referenceIdIn: str = NotImplemented,
            replacingEntryIdEqual: str = NotImplemented,
            replacingEntryIdIn: str = NotImplemented,
            replacedEntryIdEqual: str = NotImplemented,
            replacedEntryIdIn: str = NotImplemented,
            replacementStatusEqual: KalturaEntryReplacementStatus = NotImplemented,
            replacementStatusIn: str = NotImplemented,
            partnerSortValueGreaterThanOrEqual: int = NotImplemented,
            partnerSortValueLessThanOrEqual: int = NotImplemented,
            rootEntryIdEqual: str = NotImplemented,
            rootEntryIdIn: str = NotImplemented,
            parentEntryIdEqual: str = NotImplemented,
            entitledUsersEditMatchAnd: str = NotImplemented,
            entitledUsersEditMatchOr: str = NotImplemented,
            entitledUsersPublishMatchAnd: str = NotImplemented,
            entitledUsersPublishMatchOr: str = NotImplemented,
            entitledUsersViewMatchAnd: str = NotImplemented,
            entitledUsersViewMatchOr: str = NotImplemented,
            tagsNameMultiLikeOr: str = NotImplemented,
            tagsAdminTagsMultiLikeOr: str = NotImplemented,
            tagsAdminTagsNameMultiLikeOr: str = NotImplemented,
            tagsNameMultiLikeAnd: str = NotImplemented,
            tagsAdminTagsMultiLikeAnd: str = NotImplemented,
            tagsAdminTagsNameMultiLikeAnd: str = NotImplemented,
            displayInSearchEqual: KalturaEntryDisplayInSearchType = NotImplemented,
            displayInSearchIn: str = NotImplemented,
            freeText: str = NotImplemented,
            excludedFreeTextGroups: str = NotImplemented,
            descriptionLike: str = NotImplemented,
            isRoot: KalturaNullableBoolean = NotImplemented,
            categoriesFullNameIn: str = NotImplemented,
            categoryAncestorIdIn: str = NotImplemented,
            redirectFromEntryId: str = NotImplemented,
            conversionProfileIdEqual: int = NotImplemented,
            lastPlayedAtGreaterThanOrEqual: int = NotImplemented,
            lastPlayedAtLessThanOrEqual: int = NotImplemented,
            lastPlayedAtLessThanOrEqualOrNull: int = NotImplemented,
            durationLessThan: int = NotImplemented,
            durationGreaterThan: int = NotImplemented,
            durationLessThanOrEqual: int = NotImplemented,
            durationGreaterThanOrEqual: int = NotImplemented,
            durationTypeMatchOr: str = NotImplemented,
            mediaTypeEqual: KalturaMediaType = NotImplemented,
            mediaTypeIn: str = NotImplemented,
            sourceTypeEqual: KalturaSourceType = NotImplemented,
            sourceTypeNotEqual: KalturaSourceType = NotImplemented,
            sourceTypeIn: str = NotImplemented,
            sourceTypeNotIn: str = NotImplemented,
            mediaDateGreaterThanOrEqual: int = NotImplemented,
            mediaDateLessThanOrEqual: int = NotImplemented,
            flavorParamsIdsMatchOr: str = NotImplemented,
            flavorParamsIdsMatchAnd: str = NotImplemented,
            isLive: KalturaNullableBoolean = NotImplemented,
            isRecordedEntryIdEmpty: KalturaNullableBoolean = NotImplemented,
            hasMediaServerHostname: str = NotImplemented): ...
        pass

class KalturaLiveStreamAdminEntryFilter(KalturaLiveStreamAdminEntryBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: str = NotImplemented,
            idIn: str = NotImplemented,
            idNotIn: str = NotImplemented,
            nameLike: str = NotImplemented,
            nameMultiLikeOr: str = NotImplemented,
            nameMultiLikeAnd: str = NotImplemented,
            nameEqual: str = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            userIdEqual: str = NotImplemented,
            userIdIn: str = NotImplemented,
            userIdNotIn: str = NotImplemented,
            creatorIdEqual: str = NotImplemented,
            tagsLike: str = NotImplemented,
            tagsMultiLikeOr: str = NotImplemented,
            tagsMultiLikeAnd: str = NotImplemented,
            adminTagsLike: str = NotImplemented,
            adminTagsMultiLikeOr: str = NotImplemented,
            adminTagsMultiLikeAnd: str = NotImplemented,
            categoriesMatchAnd: str = NotImplemented,
            categoriesMatchOr: str = NotImplemented,
            categoriesNotContains: str = NotImplemented,
            categoriesIdsMatchAnd: str = NotImplemented,
            categoriesIdsMatchOr: str = NotImplemented,
            categoriesIdsNotContains: str = NotImplemented,
            categoriesIdsEmpty: KalturaNullableBoolean = NotImplemented,
            statusEqual: KalturaEntryStatus = NotImplemented,
            statusNotEqual: KalturaEntryStatus = NotImplemented,
            statusIn: str = NotImplemented,
            statusNotIn: str = NotImplemented,
            moderationStatusEqual: KalturaEntryModerationStatus = NotImplemented,
            moderationStatusNotEqual: KalturaEntryModerationStatus = NotImplemented,
            moderationStatusIn: str = NotImplemented,
            moderationStatusNotIn: str = NotImplemented,
            typeEqual: KalturaEntryType = NotImplemented,
            typeIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            rankLessThanOrEqual: float = NotImplemented,
            rankGreaterThanOrEqual: float = NotImplemented,
            totalRankLessThanOrEqual: int = NotImplemented,
            totalRankGreaterThanOrEqual: int = NotImplemented,
            groupIdEqual: int = NotImplemented,
            searchTextMatchAnd: str = NotImplemented,
            searchTextMatchOr: str = NotImplemented,
            accessControlIdEqual: int = NotImplemented,
            accessControlIdIn: str = NotImplemented,
            startDateGreaterThanOrEqual: int = NotImplemented,
            startDateLessThanOrEqual: int = NotImplemented,
            startDateGreaterThanOrEqualOrNull: int = NotImplemented,
            startDateLessThanOrEqualOrNull: int = NotImplemented,
            endDateGreaterThanOrEqual: int = NotImplemented,
            endDateLessThanOrEqual: int = NotImplemented,
            endDateGreaterThanOrEqualOrNull: int = NotImplemented,
            endDateLessThanOrEqualOrNull: int = NotImplemented,
            referenceIdEqual: str = NotImplemented,
            referenceIdIn: str = NotImplemented,
            replacingEntryIdEqual: str = NotImplemented,
            replacingEntryIdIn: str = NotImplemented,
            replacedEntryIdEqual: str = NotImplemented,
            replacedEntryIdIn: str = NotImplemented,
            replacementStatusEqual: KalturaEntryReplacementStatus = NotImplemented,
            replacementStatusIn: str = NotImplemented,
            partnerSortValueGreaterThanOrEqual: int = NotImplemented,
            partnerSortValueLessThanOrEqual: int = NotImplemented,
            rootEntryIdEqual: str = NotImplemented,
            rootEntryIdIn: str = NotImplemented,
            parentEntryIdEqual: str = NotImplemented,
            entitledUsersEditMatchAnd: str = NotImplemented,
            entitledUsersEditMatchOr: str = NotImplemented,
            entitledUsersPublishMatchAnd: str = NotImplemented,
            entitledUsersPublishMatchOr: str = NotImplemented,
            entitledUsersViewMatchAnd: str = NotImplemented,
            entitledUsersViewMatchOr: str = NotImplemented,
            tagsNameMultiLikeOr: str = NotImplemented,
            tagsAdminTagsMultiLikeOr: str = NotImplemented,
            tagsAdminTagsNameMultiLikeOr: str = NotImplemented,
            tagsNameMultiLikeAnd: str = NotImplemented,
            tagsAdminTagsMultiLikeAnd: str = NotImplemented,
            tagsAdminTagsNameMultiLikeAnd: str = NotImplemented,
            displayInSearchEqual: KalturaEntryDisplayInSearchType = NotImplemented,
            displayInSearchIn: str = NotImplemented,
            freeText: str = NotImplemented,
            excludedFreeTextGroups: str = NotImplemented,
            descriptionLike: str = NotImplemented,
            isRoot: KalturaNullableBoolean = NotImplemented,
            categoriesFullNameIn: str = NotImplemented,
            categoryAncestorIdIn: str = NotImplemented,
            redirectFromEntryId: str = NotImplemented,
            conversionProfileIdEqual: int = NotImplemented,
            lastPlayedAtGreaterThanOrEqual: int = NotImplemented,
            lastPlayedAtLessThanOrEqual: int = NotImplemented,
            lastPlayedAtLessThanOrEqualOrNull: int = NotImplemented,
            durationLessThan: int = NotImplemented,
            durationGreaterThan: int = NotImplemented,
            durationLessThanOrEqual: int = NotImplemented,
            durationGreaterThanOrEqual: int = NotImplemented,
            durationTypeMatchOr: str = NotImplemented,
            mediaTypeEqual: KalturaMediaType = NotImplemented,
            mediaTypeIn: str = NotImplemented,
            sourceTypeEqual: KalturaSourceType = NotImplemented,
            sourceTypeNotEqual: KalturaSourceType = NotImplemented,
            sourceTypeIn: str = NotImplemented,
            sourceTypeNotIn: str = NotImplemented,
            mediaDateGreaterThanOrEqual: int = NotImplemented,
            mediaDateLessThanOrEqual: int = NotImplemented,
            flavorParamsIdsMatchOr: str = NotImplemented,
            flavorParamsIdsMatchAnd: str = NotImplemented,
            isLive: KalturaNullableBoolean = NotImplemented,
            isRecordedEntryIdEmpty: KalturaNullableBoolean = NotImplemented,
            hasMediaServerHostname: str = NotImplemented): ...
        pass

class KalturaAccessControlProfileService(KalturaServiceBase):
    def add(self, accessControlProfile: KalturaAccessControlProfile) -> KalturaAccessControlProfile: ...
    def delete(self, id: int) -> None: ...
    def get(self, id: int) -> KalturaAccessControlProfile: ...
    def list(self, filter: KalturaAccessControlProfileFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaAccessControlProfileListResponse: ...
    def update(self, id: int, accessControlProfile: KalturaAccessControlProfile) -> KalturaAccessControlProfile: ...

class KalturaAccessControlService(KalturaServiceBase):
    def add(self, accessControl: KalturaAccessControl) -> KalturaAccessControl: ...
    def delete(self, id: int) -> None: ...
    def get(self, id: int) -> KalturaAccessControl: ...
    def list(self, filter: KalturaAccessControlFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaAccessControlListResponse: ...
    def update(self, id: int, accessControl: KalturaAccessControl) -> KalturaAccessControl: ...

class KalturaAdminUserService(KalturaServiceBase):
    def login(self, email: str, password: str, partnerId: int = NotImplemented) -> str: ...
    def resetPassword(self, email: str) -> None: ...
    def setInitialPassword(self, hashKey: str, newPassword: str) -> KalturaAuthentication: ...
    def updatePassword(self, email: str, password: str, newEmail: str = "", newPassword: str = "", otp: str = NotImplemented) -> KalturaAdminUser: ...

class KalturaAnalyticsService(KalturaServiceBase):
    def query(self, filter: KalturaAnalyticsFilter, pager: KalturaFilterPager = NotImplemented) -> KalturaReportResponse: ...

class KalturaAppTokenService(KalturaServiceBase):
    def add(self, appToken: KalturaAppToken) -> KalturaAppToken: ...
    def delete(self, id: str) -> None: ...
    def get(self, id: str) -> KalturaAppToken: ...
    def list(self, filter: KalturaAppTokenFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaAppTokenListResponse: ...
    def startSession(self, id: str, tokenHash: str, userId: str = NotImplemented, type: int = NotImplemented, expiry: int = NotImplemented, sessionPrivileges: str = NotImplemented) -> KalturaSessionInfo: ...
    def update(self, id: str, appToken: KalturaAppToken) -> KalturaAppToken: ...

class KalturaBaseEntryService(KalturaServiceBase):
    def add(self, entry: KalturaBaseEntry, type: str = NotImplemented) -> KalturaBaseEntry: ...
    def addContent(self, entryId: str, resource: KalturaResource) -> KalturaBaseEntry: ...
    def addFromUploadedFile(self, entry: KalturaBaseEntry, uploadTokenId: str, type: str = NotImplemented) -> KalturaBaseEntry: ...
    def anonymousRank(self, entryId: str, rank: int) -> None: ...
    def approve(self, entryId: str) -> None: ...
    def bulkDelete(self, filter: KalturaBaseEntryFilter) -> int: ...
    def clone(self, entryId: str, cloneOptions: List[None] = NotImplemented) -> KalturaBaseEntry: ...
    def count(self, filter: KalturaBaseEntryFilter = NotImplemented) -> int: ...
    def delete(self, entryId: str) -> None: ...
    def export(self, entryId: str, storageProfileId: int) -> KalturaBaseEntry: ...
    def exportToCsv(self, filter: KalturaBaseEntryFilter = NotImplemented, metadataProfileId: int = NotImplemented, additionalFields: List[None] = NotImplemented, mappedFields: List[None] = NotImplemented, options: KalturaExportToCsvOptions = NotImplemented) -> str: ...
    def flag(self, moderationFlag: KalturaModerationFlag) -> None: ...
    def get(self, entryId: str, version: int = -1) -> KalturaBaseEntry: ...
    def getByIds(self, entryIds: str) -> List[KalturaBaseEntry]: ...
    def getContextData(self, entryId: str, contextDataParams: KalturaEntryContextDataParams) -> KalturaEntryContextDataResult: ...
    def getPlaybackContext(self, entryId: str, contextDataParams: KalturaPlaybackContextOptions) -> KalturaPlaybackContext: ...
    def getRemotePaths(self, entryId: str) -> KalturaRemotePathListResponse: ...
    def index(self, id: str, shouldUpdate: bool = True) -> int: ...
    def list(self, filter: KalturaBaseEntryFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaBaseEntryListResponse: ...
    def listByReferenceId(self, refId: str, pager: KalturaFilterPager = NotImplemented) -> KalturaBaseEntryListResponse: ...
    def listFlags(self, entryId: str, pager: KalturaFilterPager = NotImplemented) -> KalturaModerationFlagListResponse: ...
    def recycle(self, entryId: str) -> KalturaBaseEntry: ...
    def reject(self, entryId: str) -> None: ...
    def restoreRecycled(self, entryId: str) -> KalturaBaseEntry: ...
    def servePlaybackKey(self, entryId: str) -> IO[Any]: ...
    def update(self, entryId: str, baseEntry: KalturaBaseEntry) -> KalturaBaseEntry: ...
    def updateContent(self, entryId: str, resource: KalturaResource, conversionProfileId: int = NotImplemented, advancedOptions: KalturaEntryReplacementOptions = NotImplemented) -> KalturaBaseEntry: ...
    def updateThumbnailFromSourceEntry(self, entryId: str, sourceEntryId: str, timeOffset: int) -> KalturaBaseEntry: ...
    def updateThumbnailFromUrl(self, entryId: str, url: str) -> KalturaBaseEntry: ...
    def updateThumbnailJpeg(self, entryId: str, fileData: IO[Any]) -> KalturaBaseEntry: ...
    def upload(self, fileData: IO[Any]) -> str: ...

class KalturaBulkUploadService(KalturaServiceBase):
    def abort(self, id: int) -> KalturaBulkUpload: ...
    def add(self, conversionProfileId: int, csvFileData: IO[Any], bulkUploadType: str = NotImplemented, uploadedBy: str = NotImplemented, fileName: str = NotImplemented) -> KalturaBulkUpload: ...
    def get(self, id: int) -> KalturaBulkUpload: ...
    def list(self, pager: KalturaFilterPager = NotImplemented) -> KalturaBulkUploadListResponse: ...
    def serve(self, id: int) -> IO[Any]: ...
    def serveLog(self, id: int) -> IO[Any]: ...

class KalturaCategoryEntryService(KalturaServiceBase):
    def activate(self, entryId: str, categoryId: int) -> None: ...
    def add(self, categoryEntry: KalturaCategoryEntry) -> KalturaCategoryEntry: ...
    def addFromBulkUpload(self, bulkUploadData: KalturaBulkServiceData, bulkUploadCategoryEntryData: KalturaBulkUploadCategoryEntryData = NotImplemented) -> KalturaBulkUpload: ...
    def delete(self, entryId: str, categoryId: int) -> None: ...
    def index(self, entryId: str, categoryId: int, shouldUpdate: bool = True) -> int: ...
    def list(self, filter: KalturaCategoryEntryFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaCategoryEntryListResponse: ...
    def reject(self, entryId: str, categoryId: int) -> None: ...
    def syncPrivacyContext(self, entryId: str, categoryId: int) -> None: ...
    def updateStatusFromBulk(self, fileData: IO[Any], bulkUploadData: KalturaBulkUploadJobData = NotImplemented, bulkUploadCategoryEntryData: KalturaBulkUploadCategoryEntryData = NotImplemented) -> KalturaBulkUpload: ...

class KalturaCategoryService(KalturaServiceBase):
    def add(self, category: KalturaCategory) -> KalturaCategory: ...
    def addFromBulkUpload(self, fileData: IO[Any], bulkUploadData: KalturaBulkUploadJobData = NotImplemented, bulkUploadCategoryData: KalturaBulkUploadCategoryData = NotImplemented) -> KalturaBulkUpload: ...
    def clone(self, categoryId: int, fromPartnerId: int, parentCategoryId: int = NotImplemented) -> KalturaCategory: ...
    def delete(self, id: int, moveEntriesToParentCategory: int = 1) -> None: ...
    def exportToCsv(self, filter: KalturaCategoryFilter = NotImplemented, metadataProfileId: int = NotImplemented, additionalFields: List[None] = NotImplemented, mappedFields: List[None] = NotImplemented, options: KalturaExportToCsvOptions = NotImplemented) -> str: ...
    def get(self, id: int) -> KalturaCategory: ...
    def index(self, id: int, shouldUpdate: bool = True) -> int: ...
    def list(self, filter: KalturaCategoryFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaCategoryListResponse: ...
    def move(self, categoryIds: str, targetCategoryParentId: int) -> bool: ...
    def unlockCategories(self) -> None: ...
    def update(self, id: int, category: KalturaCategory) -> KalturaCategory: ...

class KalturaCategoryUserService(KalturaServiceBase):
    def activate(self, categoryId: int, userId: str) -> KalturaCategoryUser: ...
    def add(self, categoryUser: KalturaCategoryUser) -> KalturaCategoryUser: ...
    def addFromBulkUpload(self, fileData: IO[Any], bulkUploadData: KalturaBulkUploadJobData = NotImplemented, bulkUploadCategoryUserData: KalturaBulkUploadCategoryUserData = NotImplemented) -> KalturaBulkUpload: ...
    def copyFromCategory(self, categoryId: int) -> None: ...
    def deactivate(self, categoryId: int, userId: str) -> KalturaCategoryUser: ...
    def delete(self, categoryId: int, userId: str) -> None: ...
    def get(self, categoryId: int, userId: str) -> KalturaCategoryUser: ...
    def index(self, userId: str, categoryId: int, shouldUpdate: bool = True) -> int: ...
    def list(self, filter: KalturaCategoryUserFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaCategoryUserListResponse: ...
    def update(self, categoryId: int, userId: str, categoryUser: KalturaCategoryUser, override: bool = False) -> KalturaCategoryUser: ...

class KalturaConversionProfileAssetParamsService(KalturaServiceBase):
    def list(self, filter: KalturaConversionProfileAssetParamsFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaConversionProfileAssetParamsListResponse: ...
    def update(self, conversionProfileId: int, assetParamsId: int, conversionProfileAssetParams: KalturaConversionProfileAssetParams) -> KalturaConversionProfileAssetParams: ...

class KalturaConversionProfileService(KalturaServiceBase):
    def add(self, conversionProfile: KalturaConversionProfile) -> KalturaConversionProfile: ...
    def delete(self, id: int) -> None: ...
    def get(self, id: int) -> KalturaConversionProfile: ...
    def getDefault(self, type: str = NotImplemented) -> KalturaConversionProfile: ...
    def list(self, filter: KalturaConversionProfileFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaConversionProfileListResponse: ...
    def setAsDefault(self, id: int) -> KalturaConversionProfile: ...
    def update(self, id: int, conversionProfile: KalturaConversionProfile) -> KalturaConversionProfile: ...

class KalturaDataService(KalturaServiceBase):
    def add(self, dataEntry: KalturaDataEntry) -> KalturaDataEntry: ...
    def addContent(self, entryId: str, resource: KalturaGenericDataCenterContentResource) -> str: ...
    def delete(self, entryId: str) -> None: ...
    def get(self, entryId: str, version: int = -1) -> KalturaDataEntry: ...
    def list(self, filter: KalturaDataEntryFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaDataListResponse: ...
    def serve(self, entryId: str, version: int = -1, forceProxy: bool = False) -> IO[Any]: ...
    def update(self, entryId: str, documentEntry: KalturaDataEntry) -> KalturaDataEntry: ...

class KalturaDeliveryProfileService(KalturaServiceBase):
    def add(self, delivery: KalturaDeliveryProfile) -> KalturaDeliveryProfile: ...
    def clone(self, deliveryId: int) -> KalturaDeliveryProfile: ...
    def get(self, id: str) -> KalturaDeliveryProfile: ...
    def list(self, filter: KalturaDeliveryProfileFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaDeliveryProfileListResponse: ...
    def update(self, id: str, delivery: KalturaDeliveryProfile) -> KalturaDeliveryProfile: ...

class KalturaEmailIngestionProfileService(KalturaServiceBase):
    def add(self, EmailIP: KalturaEmailIngestionProfile) -> KalturaEmailIngestionProfile: ...
    def addMediaEntry(self, mediaEntry: KalturaMediaEntry, uploadTokenId: str, emailProfId: int, fromAddress: str, emailMsgId: str) -> KalturaMediaEntry: ...
    def delete(self, id: int) -> None: ...
    def get(self, id: int) -> KalturaEmailIngestionProfile: ...
    def getByEmailAddress(self, emailAddress: str) -> KalturaEmailIngestionProfile: ...
    def update(self, id: int, EmailIP: KalturaEmailIngestionProfile) -> KalturaEmailIngestionProfile: ...

class KalturaEntryServerNodeService(KalturaServiceBase):
    def get(self, id: str) -> KalturaEntryServerNode: ...
    def list(self, filter: KalturaEntryServerNodeFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaEntryServerNodeListResponse: ...
    def update(self, id: int, entryServerNode: KalturaEntryServerNode) -> KalturaEntryServerNode: ...
    def updateStatus(self, id: str, status: int) -> KalturaEntryServerNode: ...
    def validateRegisteredEntryServerNode(self, id: int) -> None: ...

class KalturaExportcsvService(KalturaServiceBase):
    def serveCsv(self, id: str) -> str: ...

class KalturaFileAssetService(KalturaServiceBase):
    def add(self, fileAsset: KalturaFileAsset) -> KalturaFileAsset: ...
    def delete(self, id: int) -> None: ...
    def get(self, id: int) -> KalturaFileAsset: ...
    def list(self, filter: KalturaFileAssetFilter, pager: KalturaFilterPager = NotImplemented) -> KalturaFileAssetListResponse: ...
    def serve(self, id: int) -> IO[Any]: ...
    def setContent(self, id: int, contentResource: KalturaContentResource) -> KalturaFileAsset: ...
    def update(self, id: int, fileAsset: KalturaFileAsset) -> KalturaFileAsset: ...

class KalturaFlavorAssetService(KalturaServiceBase):
    def add(self, entryId: str, flavorAsset: KalturaFlavorAsset) -> KalturaFlavorAsset: ...
    def convert(self, entryId: str, flavorParamsId: int, priority: int = 0) -> None: ...
    def delete(self, id: str) -> None: ...
    def deleteLocalContent(self, assetId: str) -> None: ...
    def export(self, assetId: str, storageProfileId: int) -> KalturaFlavorAsset: ...
    def get(self, id: str) -> KalturaFlavorAsset: ...
    def getByEntryId(self, entryId: str) -> List[KalturaFlavorAsset]: ...
    def getDownloadUrl(self, id: str, useCdn: bool = False) -> str: ...
    def getFlavorAssetsWithParams(self, entryId: str) -> List[KalturaFlavorAssetWithParams]: ...
    def getRemotePaths(self, id: str) -> KalturaRemotePathListResponse: ...
    def getUrl(self, id: str, storageId: int = NotImplemented, forceProxy: bool = False, options: KalturaFlavorAssetUrlOptions = NotImplemented) -> str: ...
    def getVolumeMap(self, flavorId: str) -> IO[Any]: ...
    def getWebPlayableByEntryId(self, entryId: str) -> List[KalturaFlavorAsset]: ...
    def list(self, filter: KalturaAssetFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaFlavorAssetListResponse: ...
    def reconvert(self, id: str) -> None: ...
    def serveAdStitchCmd(self, assetId: str, ffprobeJson: str = NotImplemented, duration: str = NotImplemented) -> str: ...
    def setAsSource(self, assetId: str) -> None: ...
    def setContent(self, id: str, contentResource: KalturaContentResource) -> KalturaFlavorAsset: ...
    def update(self, id: str, flavorAsset: KalturaFlavorAsset) -> KalturaFlavorAsset: ...

class KalturaFlavorParamsOutputService(KalturaServiceBase):
    def get(self, id: int) -> KalturaFlavorParamsOutput: ...
    def list(self, filter: KalturaFlavorParamsOutputFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaFlavorParamsOutputListResponse: ...

class KalturaFlavorParamsService(KalturaServiceBase):
    def add(self, flavorParams: KalturaFlavorParams) -> KalturaFlavorParams: ...
    def delete(self, id: int) -> None: ...
    def get(self, id: int) -> KalturaFlavorParams: ...
    def getByConversionProfileId(self, conversionProfileId: int) -> List[KalturaFlavorParams]: ...
    def list(self, filter: KalturaFlavorParamsFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaFlavorParamsListResponse: ...
    def update(self, id: int, flavorParams: KalturaFlavorParams) -> KalturaFlavorParams: ...

class KalturaGroupUserService(KalturaServiceBase):
    def add(self, groupUser: KalturaGroupUser) -> KalturaGroupUser: ...
    def delete(self, userId: str, groupId: str) -> None: ...
    def list(self, filter: KalturaGroupUserFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaGroupUserListResponse: ...
    def sync(self, userId: str, groupIds: str = NotImplemented, removeFromExistingGroups: bool = True, createNewGroups: bool = True) -> KalturaBulkUpload: ...
    def update(self, groupUserId: str, groupUser: KalturaGroupUser) -> KalturaGroupUser: ...

class KalturaLiveChannelSegmentService(KalturaServiceBase):
    def add(self, liveChannelSegment: KalturaLiveChannelSegment) -> KalturaLiveChannelSegment: ...
    def delete(self, id: int) -> None: ...
    def get(self, id: int) -> KalturaLiveChannelSegment: ...
    def list(self, filter: KalturaLiveChannelSegmentFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaLiveChannelSegmentListResponse: ...
    def update(self, id: int, liveChannelSegment: KalturaLiveChannelSegment) -> KalturaLiveChannelSegment: ...

class KalturaLiveChannelService(KalturaServiceBase):
    def add(self, liveChannel: KalturaLiveChannel) -> KalturaLiveChannel: ...
    def appendRecording(self, entryId: str, assetId: str, mediaServerIndex: str, resource: KalturaDataCenterContentResource, duration: float, isLastChunk: bool = False) -> KalturaLiveEntry: ...
    def createRecordedEntry(self, entryId: str, mediaServerIndex: str, liveEntryStatus: int) -> KalturaLiveEntry: ...
    def delete(self, id: str) -> None: ...
    def get(self, id: str) -> KalturaLiveChannel: ...
    def isLive(self, id: str) -> bool: ...
    def list(self, filter: KalturaLiveChannelFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaLiveChannelListResponse: ...
    def registerMediaServer(self, entryId: str, hostname: str, mediaServerIndex: str, applicationName: str = NotImplemented, liveEntryStatus: int = 1, shouldCreateRecordedEntry: bool = True) -> KalturaLiveEntry: ...
    def setRecordedContent(self, entryId: str, mediaServerIndex: str, resource: KalturaDataCenterContentResource, duration: float, recordedEntryId: str = NotImplemented, flavorParamsId: int = NotImplemented) -> KalturaLiveEntry: ...
    def unregisterMediaServer(self, entryId: str, hostname: str, mediaServerIndex: str) -> KalturaLiveEntry: ...
    def update(self, id: str, liveChannel: KalturaLiveChannel) -> KalturaLiveChannel: ...
    def validateRegisteredMediaServers(self, entryId: str) -> None: ...

class KalturaLiveReportsService(KalturaServiceBase):
    def exportToCsv(self, reportType: int, params: KalturaLiveReportExportParams) -> KalturaLiveReportExportResponse: ...
    def getEvents(self, reportType: str, filter: KalturaLiveReportInputFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> List[KalturaReportGraph]: ...
    def getReport(self, reportType: str, filter: KalturaLiveReportInputFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaLiveStatsListResponse: ...
    def serveReport(self, id: str) -> str: ...

class KalturaLiveStatsService(KalturaServiceBase):
    def collect(self, event: KalturaLiveStatsEvent) -> bool: ...

class KalturaLiveStreamService(KalturaServiceBase):
    def add(self, liveStreamEntry: KalturaLiveStreamEntry, sourceType: str = NotImplemented) -> KalturaLiveStreamEntry: ...
    def addLiveStreamPushPublishConfiguration(self, entryId: str, protocol: str, url: str = NotImplemented, liveStreamConfiguration: KalturaLiveStreamConfiguration = NotImplemented) -> KalturaLiveStreamEntry: ...
    def allocateConferenceRoom(self, entryId: str, env: str = "") -> KalturaRoomDetails: ...
    def appendRecording(self, entryId: str, assetId: str, mediaServerIndex: str, resource: KalturaDataCenterContentResource, duration: float, isLastChunk: bool = False) -> KalturaLiveEntry: ...
    def archive(self, liveEntryId: str, vodEntryId: str) -> bool: ...
    def authenticate(self, entryId: str, token: str, hostname: str = NotImplemented, mediaServerIndex: str = NotImplemented, applicationName: str = NotImplemented) -> KalturaLiveStreamEntry: ...
    def createPeriodicSyncPoints(self, entryId: str, interval: int, duration: int) -> None: ...
    def createRecordedEntry(self, entryId: str, mediaServerIndex: str, liveEntryStatus: int) -> KalturaLiveEntry: ...
    def delete(self, entryId: str) -> None: ...
    def finishConf(self, entryId: str, serverNodeId: int = NotImplemented) -> bool: ...
    def get(self, entryId: str, version: int = -1) -> KalturaLiveStreamEntry: ...
    def getDetails(self, id: str) -> KalturaLiveStreamDetails: ...
    def getLiveStreamStats(self, entryId: str) -> KalturaLiveStreamStats: ...
    def isLive(self, id: str, protocol: str = NotImplemented) -> bool: ...
    def list(self, filter: KalturaLiveStreamEntryFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaLiveStreamListResponse: ...
    def regenerateStreamToken(self, entryId: str) -> KalturaLiveEntry: ...
    def registerConf(self, entryId: str) -> bool: ...
    def registerMediaServer(self, entryId: str, hostname: str, mediaServerIndex: str, applicationName: str = NotImplemented, liveEntryStatus: int = 1, shouldCreateRecordedEntry: bool = True) -> KalturaLiveEntry: ...
    def removeLiveStreamPushPublishConfiguration(self, entryId: str, protocol: str) -> KalturaLiveStreamEntry: ...
    def setRecordedContent(self, entryId: str, mediaServerIndex: str, resource: KalturaDataCenterContentResource, duration: float, recordedEntryId: str = NotImplemented, flavorParamsId: int = NotImplemented) -> KalturaLiveEntry: ...
    def unregisterMediaServer(self, entryId: str, hostname: str, mediaServerIndex: str) -> KalturaLiveEntry: ...
    def update(self, entryId: str, liveStreamEntry: KalturaLiveStreamEntry) -> KalturaLiveStreamEntry: ...
    def updateOfflineThumbnailFromUrl(self, entryId: str, url: str) -> KalturaLiveStreamEntry: ...
    def updateOfflineThumbnailJpeg(self, entryId: str, fileData: IO[Any]) -> KalturaLiveStreamEntry: ...
    def validateRegisteredMediaServers(self, entryId: str) -> None: ...

class KalturaMediaInfoService(KalturaServiceBase):
    def list(self, filter: KalturaMediaInfoFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaMediaInfoListResponse: ...

class KalturaMediaService(KalturaServiceBase):
    def add(self, entry: KalturaMediaEntry) -> KalturaMediaEntry: ...
    def addContent(self, entryId: str, resource: KalturaResource = NotImplemented) -> KalturaMediaEntry: ...
    def addFromBulk(self, mediaEntry: KalturaMediaEntry, url: str, bulkUploadId: int) -> KalturaMediaEntry: ...
    def addFromEntry(self, sourceEntryId: str, mediaEntry: KalturaMediaEntry = NotImplemented, sourceFlavorParamsId: int = NotImplemented) -> KalturaMediaEntry: ...
    def addFromFlavorAsset(self, sourceFlavorAssetId: str, mediaEntry: KalturaMediaEntry = NotImplemented) -> KalturaMediaEntry: ...
    def addFromRecordedWebcam(self, mediaEntry: KalturaMediaEntry, webcamTokenId: str) -> KalturaMediaEntry: ...
    def addFromSearchResult(self, mediaEntry: KalturaMediaEntry = NotImplemented, searchResult: KalturaSearchResult = NotImplemented) -> KalturaMediaEntry: ...
    def addFromUploadedFile(self, mediaEntry: KalturaMediaEntry, uploadTokenId: str) -> KalturaMediaEntry: ...
    def addFromUrl(self, mediaEntry: KalturaMediaEntry, url: str) -> KalturaMediaEntry: ...
    def anonymousRank(self, entryId: str, rank: int) -> None: ...
    def approve(self, entryId: str) -> None: ...
    def approveReplace(self, entryId: str) -> KalturaMediaEntry: ...
    def bulkUploadAdd(self, fileData: IO[Any], bulkUploadData: KalturaBulkUploadJobData = NotImplemented, bulkUploadEntryData: KalturaBulkUploadEntryData = NotImplemented) -> KalturaBulkUpload: ...
    def cancelReplace(self, entryId: str) -> KalturaMediaEntry: ...
    def convert(self, entryId: str, conversionProfileId: int = NotImplemented, dynamicConversionAttributes: List[None] = NotImplemented) -> int: ...
    def count(self, filter: KalturaMediaEntryFilter = NotImplemented) -> int: ...
    def delete(self, entryId: str) -> None: ...
    def exportToCsv(self, data: KalturaMediaEsearchExportToCsvJobData) -> str: ...
    def flag(self, moderationFlag: KalturaModerationFlag) -> None: ...
    def get(self, entryId: str, version: int = -1) -> KalturaMediaEntry: ...
    def getMrss(self, entryId: str, extendingItemsArray: List[None] = NotImplemented, features: str = NotImplemented) -> str: ...
    def getVolumeMap(self, entryId: str) -> IO[Any]: ...
    def list(self, filter: KalturaMediaEntryFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaMediaListResponse: ...
    def listFlags(self, entryId: str, pager: KalturaFilterPager = NotImplemented) -> KalturaModerationFlagListResponse: ...
    def reject(self, entryId: str) -> None: ...
    def requestConversion(self, entryId: str, fileFormat: str) -> int: ...
    def update(self, entryId: str, mediaEntry: KalturaMediaEntry) -> KalturaMediaEntry: ...
    def updateContent(self, entryId: str, resource: KalturaResource, conversionProfileId: int = NotImplemented, advancedOptions: KalturaEntryReplacementOptions = NotImplemented) -> KalturaMediaEntry: ...
    def updateThumbnail(self, entryId: str, timeOffset: int, flavorParamsId: int = NotImplemented) -> KalturaMediaEntry: ...
    def updateThumbnailFromSourceEntry(self, entryId: str, sourceEntryId: str, timeOffset: int, flavorParamsId: int = NotImplemented) -> KalturaMediaEntry: ...
    def updateThumbnailFromUrl(self, entryId: str, url: str) -> KalturaBaseEntry: ...
    def updateThumbnailJpeg(self, entryId: str, fileData: IO[Any]) -> KalturaMediaEntry: ...
    def upload(self, fileData: IO[Any]) -> str: ...

class KalturaMixingService(KalturaServiceBase):
    def add(self, mixEntry: KalturaMixEntry) -> KalturaMixEntry: ...
    def anonymousRank(self, entryId: str, rank: int) -> None: ...
    def appendMediaEntry(self, mixEntryId: str, mediaEntryId: str) -> KalturaMixEntry: ...
    def clone(self, entryId: str) -> KalturaMixEntry: ...
    def count(self, filter: KalturaMediaEntryFilter = NotImplemented) -> int: ...
    def delete(self, entryId: str) -> None: ...
    def get(self, entryId: str, version: int = -1) -> KalturaMixEntry: ...
    def getMixesByMediaId(self, mediaEntryId: str) -> List[KalturaMixEntry]: ...
    def getReadyMediaEntries(self, mixId: str, version: int = -1) -> List[KalturaMediaEntry]: ...
    def list(self, filter: KalturaMixEntryFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaMixListResponse: ...
    def update(self, entryId: str, mixEntry: KalturaMixEntry) -> KalturaMixEntry: ...

class KalturaNotificationService(KalturaServiceBase):
    def getClientNotification(self, entryId: str, type: int) -> KalturaClientNotification: ...

class KalturaPartnerService(KalturaServiceBase):
    def count(self, filter: KalturaPartnerFilter = NotImplemented) -> int: ...
    def get(self, id: int = NotImplemented) -> KalturaPartner: ...
    def getInfo(self) -> KalturaPartner: ...
    def getPublicInfo(self, id: int = NotImplemented) -> KalturaPartnerPublicInfo: ...
    def getSecrets(self, partnerId: int, adminEmail: str, cmsPassword: str, otp: str = NotImplemented) -> KalturaPartner: ...
    def getStatistics(self) -> KalturaPartnerStatistics: ...
    def getUsage(self, year: int = "", month: int = 1, resolution: str = NotImplemented) -> KalturaPartnerUsage: ...
    def list(self, filter: KalturaPartnerFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaPartnerListResponse: ...
    def listFeatureStatus(self) -> KalturaFeatureStatusListResponse: ...
    def listPartnersForUser(self, partnerFilter: KalturaPartnerFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaPartnerListResponse: ...
    def register(self, partner: KalturaPartner, cmsPassword: str = "", templatePartnerId: int = NotImplemented, silent: bool = False) -> KalturaPartner: ...
    def registrationValidation(self, partner: KalturaPartner, cmsPassword: str = "", templatePartnerId: int = NotImplemented, silent: bool = False) -> bool: ...
    def update(self, partner: KalturaPartner, allowEmpty: bool = False) -> KalturaPartner: ...

class KalturaPermissionItemService(KalturaServiceBase):
    def add(self, permissionItem: KalturaPermissionItem) -> KalturaPermissionItem: ...
    def delete(self, permissionItemId: int) -> KalturaPermissionItem: ...
    def get(self, permissionItemId: int) -> KalturaPermissionItem: ...
    def list(self, filter: KalturaPermissionItemFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaPermissionItemListResponse: ...
    def update(self, permissionItemId: int, permissionItem: KalturaPermissionItem) -> KalturaPermissionItem: ...

class KalturaPermissionService(KalturaServiceBase):
    def add(self, permission: KalturaPermission) -> KalturaPermission: ...
    def delete(self, permissionName: str) -> KalturaPermission: ...
    def get(self, permissionName: str) -> KalturaPermission: ...
    def getCurrentPermissions(self) -> str: ...
    def list(self, filter: KalturaPermissionFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaPermissionListResponse: ...
    def update(self, permissionName: str, permission: KalturaPermission) -> KalturaPermission: ...

class KalturaPlaylistService(KalturaServiceBase):
    def add(self, playlist: KalturaPlaylist, updateStats: bool = False) -> KalturaPlaylist: ...
    def clone(self, id: str, newPlaylist: KalturaPlaylist = NotImplemented) -> KalturaPlaylist: ...
    def delete(self, id: str) -> None: ...
    def execute(self, id: str, detailed: str = "", playlistContext: KalturaContext = NotImplemented, filter: KalturaMediaEntryFilterForPlaylist = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> List[KalturaBaseEntry]: ...
    def executeFromContent(self, playlistType: int, playlistContent: str, detailed: str = "", pager: KalturaFilterPager = NotImplemented) -> List[KalturaBaseEntry]: ...
    def executeFromFilters(self, filters: List[None], totalResults: int, detailed: str = "1", pager: KalturaFilterPager = NotImplemented) -> List[KalturaBaseEntry]: ...
    def get(self, id: str, version: int = -1) -> KalturaPlaylist: ...
    def getStatsFromContent(self, playlistType: int, playlistContent: str) -> KalturaPlaylist: ...
    def list(self, filter: KalturaPlaylistFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaPlaylistListResponse: ...
    def update(self, id: str, playlist: KalturaPlaylist, updateStats: bool = False) -> KalturaPlaylist: ...

class KalturaReportService(KalturaServiceBase):
    def execute(self, id: int, params: List[None] = NotImplemented) -> KalturaReportResponse: ...
    def exportToCsv(self, params: KalturaReportExportParams) -> KalturaReportExportResponse: ...
    def getBaseTotal(self, reportType: str, reportInputFilter: KalturaReportInputFilter, objectIds: str = NotImplemented, responseOptions: KalturaReportResponseOptions = NotImplemented) -> List[KalturaReportBaseTotal]: ...
    def getCsv(self, id: int, params: List[None] = NotImplemented, excludedFields: str = NotImplemented) -> IO[Any]: ...
    def getCsvFromStringParams(self, id: int, params: str = NotImplemented, excludedFields: str = NotImplemented) -> IO[Any]: ...
    def getGraphs(self, reportType: str, reportInputFilter: KalturaReportInputFilter, dimension: str = NotImplemented, objectIds: str = NotImplemented, responseOptions: KalturaReportResponseOptions = NotImplemented) -> List[KalturaReportGraph]: ...
    def getTable(self, reportType: str, reportInputFilter: KalturaReportInputFilter, pager: KalturaFilterPager, order: str = NotImplemented, objectIds: str = NotImplemented, responseOptions: KalturaReportResponseOptions = NotImplemented) -> KalturaReportTable: ...
    def getTotal(self, reportType: str, reportInputFilter: KalturaReportInputFilter, objectIds: str = NotImplemented, responseOptions: KalturaReportResponseOptions = NotImplemented) -> KalturaReportTotal: ...
    def getUrlForReportAsCsv(self, reportTitle: str, reportText: str, headers: str, reportType: str, reportInputFilter: KalturaReportInputFilter, dimension: str = NotImplemented, pager: KalturaFilterPager = NotImplemented, order: str = NotImplemented, objectIds: str = NotImplemented, responseOptions: KalturaReportResponseOptions = NotImplemented) -> str: ...
    def serve(self, id: str) -> str: ...

class KalturaResponseProfileService(KalturaServiceBase):
    def add(self, addResponseProfile: KalturaResponseProfile) -> KalturaResponseProfile: ...
    def clone(self, id: int, profile: KalturaResponseProfile) -> KalturaResponseProfile: ...
    def delete(self, id: int) -> None: ...
    def get(self, id: int) -> KalturaResponseProfile: ...
    def list(self, filter: KalturaResponseProfileFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaResponseProfileListResponse: ...
    def recalculate(self, options: KalturaResponseProfileCacheRecalculateOptions) -> KalturaResponseProfileCacheRecalculateResults: ...
    def update(self, id: int, updateResponseProfile: KalturaResponseProfile) -> KalturaResponseProfile: ...
    def updateStatus(self, id: int, status: int) -> KalturaResponseProfile: ...

class KalturaSchemaService(KalturaServiceBase):
    def serve(self, type: str) -> IO[Any]: ...

class KalturaSearchService(KalturaServiceBase):
    def externalLogin(self, searchSource: int, userName: str, password: str) -> KalturaSearchAuthData: ...
    def getMediaInfo(self, searchResult: KalturaSearchResult) -> KalturaSearchResult: ...
    def search(self, search: KalturaSearch, pager: KalturaFilterPager = NotImplemented) -> KalturaSearchResultResponse: ...
    def searchUrl(self, mediaType: int, url: str) -> KalturaSearchResult: ...

class KalturaServerNodeService(KalturaServiceBase):
    def add(self, serverNode: KalturaServerNode) -> KalturaServerNode: ...
    def delete(self, serverNodeId: str) -> None: ...
    def disable(self, serverNodeId: str) -> KalturaServerNode: ...
    def enable(self, serverNodeId: str) -> KalturaServerNode: ...
    def get(self, serverNodeId: int) -> KalturaServerNode: ...
    def getFullPath(self, hostName: str, protocol: str = "http", deliveryFormat: str = NotImplemented, deliveryType: str = NotImplemented) -> str: ...
    def list(self, filter: KalturaServerNodeFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaServerNodeListResponse: ...
    def markOffline(self, serverNodeId: str) -> KalturaServerNode: ...
    def reportStatus(self, hostName: str, serverNode: KalturaServerNode = NotImplemented, serverNodeStatus: int = 1) -> KalturaServerNode: ...
    def update(self, serverNodeId: int, serverNode: KalturaServerNode) -> KalturaServerNode: ...

class KalturaSessionService(KalturaServiceBase):
    def end(self) -> None: ...
    def get(self, session: str = NotImplemented) -> KalturaSessionInfo: ...
    def impersonate(self, secret: str, impersonatedPartnerId: int, userId: str = "", type: int = 0, partnerId: int = NotImplemented, expiry: int = 86400, privileges: str = NotImplemented) -> str: ...
    def impersonateByKs(self, session: str, type: int = NotImplemented, expiry: int = NotImplemented, privileges: str = NotImplemented) -> KalturaSessionInfo: ...
    def start(self, secret: str, userId: str = "", type: int = 0, partnerId: int = NotImplemented, expiry: int = 86400, privileges: str = NotImplemented) -> str: ...
    def startWidgetSession(self, widgetId: str, expiry: int = 86400) -> KalturaStartWidgetSessionResponse: ...

class KalturaStatsService(KalturaServiceBase):
    def collect(self, event: KalturaStatsEvent) -> bool: ...
    def kmcCollect(self, kmcEvent: KalturaStatsKmcEvent) -> None: ...
    def reportDeviceCapabilities(self, data: str) -> None: ...
    def reportError(self, errorCode: str, errorMessage: str) -> None: ...
    def reportKceError(self, kalturaCEError: KalturaCEError) -> KalturaCEError: ...

class KalturaStorageProfileService(KalturaServiceBase):
    def add(self, storageProfile: KalturaStorageProfile) -> KalturaStorageProfile: ...
    def get(self, storageProfileId: int) -> KalturaStorageProfile: ...
    def list(self, filter: KalturaStorageProfileFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaStorageProfileListResponse: ...
    def update(self, storageProfileId: int, storageProfile: KalturaStorageProfile) -> KalturaStorageProfile: ...
    def updateStatus(self, storageId: int, status: int) -> None: ...

class KalturaSyndicationFeedService(KalturaServiceBase):
    def add(self, syndicationFeed: KalturaBaseSyndicationFeed) -> KalturaBaseSyndicationFeed: ...
    def delete(self, id: str) -> None: ...
    def get(self, id: str) -> KalturaBaseSyndicationFeed: ...
    def getEntryCount(self, feedId: str) -> KalturaSyndicationFeedEntryCount: ...
    def list(self, filter: KalturaBaseSyndicationFeedFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaBaseSyndicationFeedListResponse: ...
    def requestConversion(self, feedId: str) -> str: ...
    def update(self, id: str, syndicationFeed: KalturaBaseSyndicationFeed) -> KalturaBaseSyndicationFeed: ...

class KalturaSystemService(KalturaServiceBase):
    def getHealthCheck(self) -> str: ...
    def getTime(self) -> int: ...
    def getVersion(self) -> str: ...
    def ping(self) -> bool: ...
    def pingDatabase(self) -> bool: ...

class KalturaThumbAssetService(KalturaServiceBase):
    def add(self, entryId: str, thumbAsset: KalturaThumbAsset) -> KalturaThumbAsset: ...
    def addFromImage(self, entryId: str, fileData: IO[Any]) -> KalturaThumbAsset: ...
    def addFromUrl(self, entryId: str, url: str) -> KalturaThumbAsset: ...
    def delete(self, thumbAssetId: str) -> None: ...
    def export(self, assetId: str, storageProfileId: int) -> KalturaFlavorAsset: ...
    def generate(self, entryId: str, thumbParams: KalturaThumbParams, sourceAssetId: str = NotImplemented) -> KalturaThumbAsset: ...
    def generateByEntryId(self, entryId: str, destThumbParamsId: int) -> KalturaThumbAsset: ...
    def get(self, thumbAssetId: str) -> KalturaThumbAsset: ...
    def getByEntryId(self, entryId: str) -> List[KalturaThumbAsset]: ...
    def getRemotePaths(self, id: str) -> KalturaRemotePathListResponse: ...
    def getUrl(self, id: str, storageId: int = NotImplemented, thumbParams: KalturaThumbParams = NotImplemented) -> str: ...
    def list(self, filter: KalturaAssetFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaThumbAssetListResponse: ...
    def regenerate(self, thumbAssetId: str) -> KalturaThumbAsset: ...
    def serve(self, thumbAssetId: str, version: int = NotImplemented, thumbParams: KalturaThumbParams = NotImplemented, options: KalturaThumbnailServeOptions = NotImplemented) -> IO[Any]: ...
    def serveByEntryId(self, entryId: str, thumbParamId: int = NotImplemented) -> IO[Any]: ...
    def setAsDefault(self, thumbAssetId: str) -> None: ...
    def setContent(self, id: str, contentResource: KalturaContentResource) -> KalturaThumbAsset: ...
    def update(self, id: str, thumbAsset: KalturaThumbAsset) -> KalturaThumbAsset: ...

class KalturaThumbParamsOutputService(KalturaServiceBase):
    def get(self, id: int) -> KalturaThumbParamsOutput: ...
    def list(self, filter: KalturaThumbParamsOutputFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaThumbParamsOutputListResponse: ...

class KalturaThumbParamsService(KalturaServiceBase):
    def add(self, thumbParams: KalturaThumbParams) -> KalturaThumbParams: ...
    def delete(self, id: int) -> None: ...
    def get(self, id: int) -> KalturaThumbParams: ...
    def getByConversionProfileId(self, conversionProfileId: int) -> List[KalturaThumbParams]: ...
    def list(self, filter: KalturaThumbParamsFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaThumbParamsListResponse: ...
    def update(self, id: int, thumbParams: KalturaThumbParams) -> KalturaThumbParams: ...

class KalturaUiConfService(KalturaServiceBase):
    def add(self, uiConf: KalturaUiConf) -> KalturaUiConf: ...
    def clone(self, id: int) -> KalturaUiConf: ...
    def delete(self, id: int) -> None: ...
    def get(self, id: int) -> KalturaUiConf: ...
    def getAvailableTypes(self) -> List[KalturaUiConfTypeInfo]: ...
    def list(self, filter: KalturaUiConfFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaUiConfListResponse: ...
    def listTemplates(self, filter: KalturaUiConfFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaUiConfListResponse: ...
    def update(self, id: int, uiConf: KalturaUiConf) -> KalturaUiConf: ...

class KalturaUploadService(KalturaServiceBase):
    def getUploadedFileTokenByFileName(self, fileName: str) -> KalturaUploadResponse: ...
    def upload(self, fileData: IO[Any]) -> str: ...

class KalturaUploadTokenService(KalturaServiceBase):
    def add(self, uploadToken: KalturaUploadToken = NotImplemented) -> KalturaUploadToken: ...
    def delete(self, uploadTokenId: str) -> None: ...
    def get(self, uploadTokenId: str) -> KalturaUploadToken: ...
    def list(self, filter: KalturaUploadTokenFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaUploadTokenListResponse: ...
    def upload(self, uploadTokenId: str, fileData: IO[Any], resume: bool = False, finalChunk: bool = True, resumeAt: float = -1) -> KalturaUploadToken: ...

class KalturaUserAppRoleService(KalturaServiceBase):
    def add(self, userAppRole: KalturaUserAppRole) -> KalturaUserAppRole: ...
    def delete(self, userId: str, appGuid: str) -> bool: ...
    def get(self, userId: str, appGuid: str) -> KalturaUserAppRole: ...
    def list(self, filter: KalturaUserAppRoleFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaUserAppRoleListResponse: ...
    def update(self, userId: str, appGuid: str, userAppRole: KalturaUserAppRole) -> KalturaUserAppRole: ...

class KalturaUserEntryService(KalturaServiceBase):
    def add(self, userEntry: KalturaUserEntry) -> KalturaUserEntry: ...
    def bulkDelete(self, filter: KalturaUserEntryFilter) -> int: ...
    def delete(self, id: int) -> KalturaUserEntry: ...
    def get(self, id: str) -> KalturaUserEntry: ...
    def list(self, filter: KalturaUserEntryFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaUserEntryListResponse: ...
    def submitQuiz(self, id: int) -> KalturaQuizUserEntry: ...
    def update(self, id: int, userEntry: KalturaUserEntry) -> KalturaUserEntry: ...

class KalturaUserRoleService(KalturaServiceBase):
    def add(self, userRole: KalturaUserRole) -> KalturaUserRole: ...
    def clone(self, userRoleId: int) -> KalturaUserRole: ...
    def delete(self, userRoleId: int) -> KalturaUserRole: ...
    def get(self, userRoleId: int) -> KalturaUserRole: ...
    def list(self, filter: KalturaUserRoleFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaUserRoleListResponse: ...
    def update(self, userRoleId: int, userRole: KalturaUserRole) -> KalturaUserRole: ...

class KalturaUserService(KalturaServiceBase):
    def add(self, user: KalturaUser) -> KalturaUser: ...
    def addFromBulkUpload(self, fileData: IO[Any], bulkUploadData: KalturaBulkUploadJobData = NotImplemented, bulkUploadUserData: KalturaBulkUploadUserData = NotImplemented) -> KalturaBulkUpload: ...
    def checkLoginDataExists(self, filter: KalturaUserLoginDataFilter) -> bool: ...
    def delete(self, userId: str) -> KalturaUser: ...
    def disableLogin(self, userId: str = NotImplemented, loginId: str = NotImplemented) -> KalturaUser: ...
    def enableLogin(self, userId: str, loginId: str, password: str = NotImplemented) -> KalturaUser: ...
    def exportToCsv(self, filter: KalturaUserFilter = NotImplemented, metadataProfileId: int = NotImplemented, additionalFields: List[None] = NotImplemented, mappedFields: List[None] = NotImplemented, options: KalturaExportToCsvOptions = NotImplemented) -> str: ...
    def generateQrCode(self, hashKey: str) -> str: ...
    def get(self, userId: str = NotImplemented) -> KalturaUser: ...
    def getByLoginId(self, loginId: str) -> KalturaUser: ...
    def index(self, id: str, shouldUpdate: bool = True) -> str: ...
    def list(self, filter: KalturaUserFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaUserListResponse: ...
    def login(self, partnerId: int, userId: str, password: str, expiry: int = 86400, privileges: str = "*") -> str: ...
    def loginByKs(self, requestedPartnerId: int) -> KalturaSessionResponse: ...
    def loginByLoginId(self, loginId: str, password: str, partnerId: int = NotImplemented, expiry: int = 86400, privileges: str = "*", otp: str = NotImplemented) -> str: ...
    def loginDataResetPassword(self, loginDataId: str, newPassword: str) -> KalturaUser: ...
    def notifyBan(self, userId: str) -> None: ...
    def replaceUserLoginData(self, userId: str, newLoginId: str, existingLoginId: str = NotImplemented) -> KalturaUser: ...
    def resetPassword(self, email: str, linkType: str = NotImplemented) -> None: ...
    def serveCsv(self, id: str) -> str: ...
    def setInitialPassword(self, hashKey: str, newPassword: str) -> KalturaAuthentication: ...
    def update(self, userId: str, user: KalturaUser) -> KalturaUser: ...
    def updateLoginData(self, oldLoginId: str, password: str, newLoginId: str = "", newPassword: str = "", newFirstName: str = NotImplemented, newLastName: str = NotImplemented, otp: str = NotImplemented) -> None: ...
    def validateHashKey(self, hashKey: str) -> KalturaAuthentication: ...

class KalturaWidgetService(KalturaServiceBase):
    def add(self, widget: KalturaWidget) -> KalturaWidget: ...
    def clone(self, widget: KalturaWidget) -> KalturaWidget: ...
    def get(self, id: str) -> KalturaWidget: ...
    def list(self, filter: KalturaWidgetFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaWidgetListResponse: ...
    def update(self, id: str, widget: KalturaWidget) -> KalturaWidget: ...
