# ===================================================================================================
#                           _  __     _ _
#                          | |/ /__ _| | |_ _  _ _ _ __ _
#                          | ' </ _` | |  _| || | '_/ _` |
#                          |_|\_\__,_|_|\__|\_,_|_| \__,_|
#
# This file is part of the Kaltura Collaborative Media Suite which allows users
# to do with audio, video, and animation what Wiki platforms allow them to do with
# text.
#
# Copyright (C) 2006-2023  Kaltura Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http:#www.gnu.org/licenses/>.
#
# @ignore
# ===================================================================================================
from typing import List, IO, Any
from .Core import *
from .Metadata import *
from KalturaClient.Base import KalturaObjectBase, KalturaServiceBase

class KalturaDistributeTrigger(object):
    ENTRY_READY = 1
    MODERATION_APPROVED = 2

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaDistributionAction(object):
    SUBMIT = 1
    UPDATE = 2
    DELETE = 3
    FETCH_REPORT = 4

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaDistributionErrorType(object):
    MISSING_FLAVOR = 1
    MISSING_THUMBNAIL = 2
    MISSING_METADATA = 3
    INVALID_DATA = 4
    MISSING_ASSET = 5
    CONDITION_NOT_MET = 6

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaDistributionFieldRequiredStatus(object):
    NOT_REQUIRED = 0
    REQUIRED_BY_PROVIDER = 1
    REQUIRED_BY_PARTNER = 2
    REQUIRED_FOR_AUTOMATIC_DISTRIBUTION = 3

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaDistributionProfileActionStatus(object):
    DISABLED = 1
    AUTOMATIC = 2
    MANUAL = 3

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaDistributionProfileStatus(object):
    DISABLED = 1
    ENABLED = 2
    DELETED = 3

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaDistributionProtocol(object):
    FTP = 1
    SCP = 2
    SFTP = 3
    HTTP = 4
    HTTPS = 5
    ASPERA = 10

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaDistributionValidationErrorType(object):
    CUSTOM_ERROR = 0
    STRING_EMPTY = 1
    STRING_TOO_LONG = 2
    STRING_TOO_SHORT = 3
    INVALID_FORMAT = 4

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaEntryDistributionFlag(object):
    NONE = 0
    SUBMIT_REQUIRED = 1
    DELETE_REQUIRED = 2
    UPDATE_REQUIRED = 3
    ENABLE_REQUIRED = 4
    DISABLE_REQUIRED = 5

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaEntryDistributionStatus(object):
    PENDING = 0
    QUEUED = 1
    READY = 2
    DELETED = 3
    SUBMITTING = 4
    UPDATING = 5
    DELETING = 6
    ERROR_SUBMITTING = 7
    ERROR_UPDATING = 8
    ERROR_DELETING = 9
    REMOVED = 10
    IMPORT_SUBMITTING = 11
    IMPORT_UPDATING = 12

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaEntryDistributionSunStatus(object):
    BEFORE_SUNRISE = 1
    AFTER_SUNRISE = 2
    AFTER_SUNSET = 3

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaGenericDistributionProviderParser(object):
    XSL = 1
    XPATH = 2
    REGEX = 3

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaGenericDistributionProviderStatus(object):
    ACTIVE = 2
    DELETED = 3

    def __init__(self, value: int): ...

    def getValue(self) -> int: ...

class KalturaConfigurableDistributionProfileOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    UPDATED_AT_ASC = "+updatedAt"
    CREATED_AT_DESC = "-createdAt"
    UPDATED_AT_DESC = "-updatedAt"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaDistributionProfileOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    UPDATED_AT_ASC = "+updatedAt"
    CREATED_AT_DESC = "-createdAt"
    UPDATED_AT_DESC = "-updatedAt"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaDistributionProviderOrderBy(object):

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaDistributionProviderType(object):
    ATT_UVERSE = "attUverseDistribution.ATT_UVERSE"
    AVN = "avnDistribution.AVN"
    COMCAST_MRSS = "comcastMrssDistribution.COMCAST_MRSS"
    CORTEX_API = "cortexApiDistribution.CORTEX_API"
    CROSS_KALTURA = "crossKalturaDistribution.CROSS_KALTURA"
    DAILYMOTION = "dailymotionDistribution.DAILYMOTION"
    DOUBLECLICK = "doubleClickDistribution.DOUBLECLICK"
    FACEBOOK = "facebookDistribution.FACEBOOK"
    FREEWHEEL = "freewheelDistribution.FREEWHEEL"
    FREEWHEEL_GENERIC = "freewheelGenericDistribution.FREEWHEEL_GENERIC"
    FTP = "ftpDistribution.FTP"
    FTP_SCHEDULED = "ftpDistribution.FTP_SCHEDULED"
    HULU = "huluDistribution.HULU"
    IDETIC = "ideticDistribution.IDETIC"
    METRO_PCS = "metroPcsDistribution.METRO_PCS"
    MSN = "msnDistribution.MSN"
    NDN = "ndnDistribution.NDN"
    PODCAST = "podcastDistribution.PODCAST"
    PUSH_TO_NEWS = "pushToNewsDistribution.PUSH_TO_NEWS"
    QUICKPLAY = "quickPlayDistribution.QUICKPLAY"
    SYNACOR_HBO = "synacorHboDistribution.SYNACOR_HBO"
    TIME_WARNER = "timeWarnerDistribution.TIME_WARNER"
    TVCOM = "tvComDistribution.TVCOM"
    TVINCI = "tvinciDistribution.TVINCI"
    UNICORN = "unicornDistribution.UNICORN"
    UVERSE_CLICK_TO_ORDER = "uverseClickToOrderDistribution.UVERSE_CLICK_TO_ORDER"
    UVERSE = "uverseDistribution.UVERSE"
    VERIZON_VCAST = "verizonVcastDistribution.VERIZON_VCAST"
    YAHOO = "yahooDistribution.YAHOO"
    YOUTUBE = "youTubeDistribution.YOUTUBE"
    YOUTUBE_API = "youtubeApiDistribution.YOUTUBE_API"
    GENERIC = "1"
    SYNDICATION = "2"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaEntryDistributionOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    SUBMITTED_AT_ASC = "+submittedAt"
    SUNRISE_ASC = "+sunrise"
    SUNSET_ASC = "+sunset"
    UPDATED_AT_ASC = "+updatedAt"
    CREATED_AT_DESC = "-createdAt"
    SUBMITTED_AT_DESC = "-submittedAt"
    SUNRISE_DESC = "-sunrise"
    SUNSET_DESC = "-sunset"
    UPDATED_AT_DESC = "-updatedAt"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaGenericDistributionProfileOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    UPDATED_AT_ASC = "+updatedAt"
    CREATED_AT_DESC = "-createdAt"
    UPDATED_AT_DESC = "-updatedAt"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaGenericDistributionProviderActionOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    UPDATED_AT_ASC = "+updatedAt"
    CREATED_AT_DESC = "-createdAt"
    UPDATED_AT_DESC = "-updatedAt"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaGenericDistributionProviderOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    UPDATED_AT_ASC = "+updatedAt"
    CREATED_AT_DESC = "-createdAt"
    UPDATED_AT_DESC = "-updatedAt"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaSyndicationDistributionProfileOrderBy(object):
    CREATED_AT_ASC = "+createdAt"
    UPDATED_AT_ASC = "+updatedAt"
    CREATED_AT_DESC = "-createdAt"
    UPDATED_AT_DESC = "-updatedAt"

    def __init__(self, value: str): ...

    def getValue(self) -> str: ...

class KalturaAssetDistributionCondition(KalturaObjectBase):
    def __init__(self): ...
        pass

class KalturaAssetDistributionRule(KalturaObjectBase):
    validationError: str
    assetDistributionConditions: List[KalturaAssetDistributionCondition]
    def __init__(self,
            validationError: str = NotImplemented,
            assetDistributionConditions: List[KalturaAssetDistributionCondition] = NotImplemented): ...

    def getValidationError(self) -> str: ...
    def setValidationError(self, newValidationError: str) -> None: ...
    def getAssetDistributionConditions(self) -> List[KalturaAssetDistributionCondition]: ...
    def setAssetDistributionConditions(self, newAssetDistributionConditions: List[KalturaAssetDistributionCondition]) -> None: ...

class KalturaDistributionFieldConfig(KalturaObjectBase):
    fieldName: str
    userFriendlyFieldName: str
    entryMrssXslt: str
    isRequired: KalturaDistributionFieldRequiredStatus
    type: str
    updateOnChange: bool
    updateParams: List[KalturaString]
    isDefault: bool
    triggerDeleteOnError: bool
    def __init__(self,
            fieldName: str = NotImplemented,
            userFriendlyFieldName: str = NotImplemented,
            entryMrssXslt: str = NotImplemented,
            isRequired: KalturaDistributionFieldRequiredStatus = NotImplemented,
            type: str = NotImplemented,
            updateOnChange: bool = NotImplemented,
            updateParams: List[KalturaString] = NotImplemented,
            isDefault: bool = NotImplemented,
            triggerDeleteOnError: bool = NotImplemented): ...

    def getFieldName(self) -> str: ...
    def setFieldName(self, newFieldName: str) -> None: ...
    def getUserFriendlyFieldName(self) -> str: ...
    def setUserFriendlyFieldName(self, newUserFriendlyFieldName: str) -> None: ...
    def getEntryMrssXslt(self) -> str: ...
    def setEntryMrssXslt(self, newEntryMrssXslt: str) -> None: ...
    def getIsRequired(self) -> KalturaDistributionFieldRequiredStatus: ...
    def setIsRequired(self, newIsRequired: KalturaDistributionFieldRequiredStatus) -> None: ...
    def getType(self) -> str: ...
    def setType(self, newType: str) -> None: ...
    def getUpdateOnChange(self) -> bool: ...
    def setUpdateOnChange(self, newUpdateOnChange: bool) -> None: ...
    def getUpdateParams(self) -> List[KalturaString]: ...
    def setUpdateParams(self, newUpdateParams: List[KalturaString]) -> None: ...
    def getIsDefault(self) -> bool: ...
    def getTriggerDeleteOnError(self) -> bool: ...
    def setTriggerDeleteOnError(self, newTriggerDeleteOnError: bool) -> None: ...

class KalturaDistributionJobProviderData(KalturaObjectBase):
    def __init__(self): ...
        pass

class KalturaDistributionThumbDimensions(KalturaObjectBase):
    width: int
    height: int
    def __init__(self,
            width: int = NotImplemented,
            height: int = NotImplemented): ...

    def getWidth(self) -> int: ...
    def setWidth(self, newWidth: int) -> None: ...
    def getHeight(self) -> int: ...
    def setHeight(self, newHeight: int) -> None: ...

class KalturaDistributionProfile(KalturaObjectBase):
    id: int
    createdAt: int
    updatedAt: int
    partnerId: int
    providerType: KalturaDistributionProviderType
    name: str
    status: KalturaDistributionProfileStatus
    submitEnabled: KalturaDistributionProfileActionStatus
    updateEnabled: KalturaDistributionProfileActionStatus
    deleteEnabled: KalturaDistributionProfileActionStatus
    reportEnabled: KalturaDistributionProfileActionStatus
    autoCreateFlavors: str
    autoCreateThumb: str
    optionalFlavorParamsIds: str
    requiredFlavorParamsIds: str
    optionalThumbDimensions: List[KalturaDistributionThumbDimensions]
    requiredThumbDimensions: List[KalturaDistributionThumbDimensions]
    optionalAssetDistributionRules: List[KalturaAssetDistributionRule]
    requiredAssetDistributionRules: List[KalturaAssetDistributionRule]
    sunriseDefaultOffset: int
    sunsetDefaultOffset: int
    recommendedStorageProfileForDownload: int
    recommendedDcForDownload: int
    recommendedDcForExecute: int
    distributeTrigger: KalturaDistributeTrigger
    supportImageEntry: bool
    def __init__(self,
            id: int = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            partnerId: int = NotImplemented,
            providerType: KalturaDistributionProviderType = NotImplemented,
            name: str = NotImplemented,
            status: KalturaDistributionProfileStatus = NotImplemented,
            submitEnabled: KalturaDistributionProfileActionStatus = NotImplemented,
            updateEnabled: KalturaDistributionProfileActionStatus = NotImplemented,
            deleteEnabled: KalturaDistributionProfileActionStatus = NotImplemented,
            reportEnabled: KalturaDistributionProfileActionStatus = NotImplemented,
            autoCreateFlavors: str = NotImplemented,
            autoCreateThumb: str = NotImplemented,
            optionalFlavorParamsIds: str = NotImplemented,
            requiredFlavorParamsIds: str = NotImplemented,
            optionalThumbDimensions: List[KalturaDistributionThumbDimensions] = NotImplemented,
            requiredThumbDimensions: List[KalturaDistributionThumbDimensions] = NotImplemented,
            optionalAssetDistributionRules: List[KalturaAssetDistributionRule] = NotImplemented,
            requiredAssetDistributionRules: List[KalturaAssetDistributionRule] = NotImplemented,
            sunriseDefaultOffset: int = NotImplemented,
            sunsetDefaultOffset: int = NotImplemented,
            recommendedStorageProfileForDownload: int = NotImplemented,
            recommendedDcForDownload: int = NotImplemented,
            recommendedDcForExecute: int = NotImplemented,
            distributeTrigger: KalturaDistributeTrigger = NotImplemented,
            supportImageEntry: bool = NotImplemented): ...

    def getId(self) -> int: ...
    def getCreatedAt(self) -> int: ...
    def getUpdatedAt(self) -> int: ...
    def getPartnerId(self) -> int: ...
    def getProviderType(self) -> KalturaDistributionProviderType: ...
    def setProviderType(self, newProviderType: KalturaDistributionProviderType) -> None: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getStatus(self) -> KalturaDistributionProfileStatus: ...
    def setStatus(self, newStatus: KalturaDistributionProfileStatus) -> None: ...
    def getSubmitEnabled(self) -> KalturaDistributionProfileActionStatus: ...
    def setSubmitEnabled(self, newSubmitEnabled: KalturaDistributionProfileActionStatus) -> None: ...
    def getUpdateEnabled(self) -> KalturaDistributionProfileActionStatus: ...
    def setUpdateEnabled(self, newUpdateEnabled: KalturaDistributionProfileActionStatus) -> None: ...
    def getDeleteEnabled(self) -> KalturaDistributionProfileActionStatus: ...
    def setDeleteEnabled(self, newDeleteEnabled: KalturaDistributionProfileActionStatus) -> None: ...
    def getReportEnabled(self) -> KalturaDistributionProfileActionStatus: ...
    def setReportEnabled(self, newReportEnabled: KalturaDistributionProfileActionStatus) -> None: ...
    def getAutoCreateFlavors(self) -> str: ...
    def setAutoCreateFlavors(self, newAutoCreateFlavors: str) -> None: ...
    def getAutoCreateThumb(self) -> str: ...
    def setAutoCreateThumb(self, newAutoCreateThumb: str) -> None: ...
    def getOptionalFlavorParamsIds(self) -> str: ...
    def setOptionalFlavorParamsIds(self, newOptionalFlavorParamsIds: str) -> None: ...
    def getRequiredFlavorParamsIds(self) -> str: ...
    def setRequiredFlavorParamsIds(self, newRequiredFlavorParamsIds: str) -> None: ...
    def getOptionalThumbDimensions(self) -> List[KalturaDistributionThumbDimensions]: ...
    def setOptionalThumbDimensions(self, newOptionalThumbDimensions: List[KalturaDistributionThumbDimensions]) -> None: ...
    def getRequiredThumbDimensions(self) -> List[KalturaDistributionThumbDimensions]: ...
    def setRequiredThumbDimensions(self, newRequiredThumbDimensions: List[KalturaDistributionThumbDimensions]) -> None: ...
    def getOptionalAssetDistributionRules(self) -> List[KalturaAssetDistributionRule]: ...
    def setOptionalAssetDistributionRules(self, newOptionalAssetDistributionRules: List[KalturaAssetDistributionRule]) -> None: ...
    def getRequiredAssetDistributionRules(self) -> List[KalturaAssetDistributionRule]: ...
    def setRequiredAssetDistributionRules(self, newRequiredAssetDistributionRules: List[KalturaAssetDistributionRule]) -> None: ...
    def getSunriseDefaultOffset(self) -> int: ...
    def setSunriseDefaultOffset(self, newSunriseDefaultOffset: int) -> None: ...
    def getSunsetDefaultOffset(self) -> int: ...
    def setSunsetDefaultOffset(self, newSunsetDefaultOffset: int) -> None: ...
    def getRecommendedStorageProfileForDownload(self) -> int: ...
    def setRecommendedStorageProfileForDownload(self, newRecommendedStorageProfileForDownload: int) -> None: ...
    def getRecommendedDcForDownload(self) -> int: ...
    def setRecommendedDcForDownload(self, newRecommendedDcForDownload: int) -> None: ...
    def getRecommendedDcForExecute(self) -> int: ...
    def setRecommendedDcForExecute(self, newRecommendedDcForExecute: int) -> None: ...
    def getDistributeTrigger(self) -> KalturaDistributeTrigger: ...
    def setDistributeTrigger(self, newDistributeTrigger: KalturaDistributeTrigger) -> None: ...
    def getSupportImageEntry(self) -> bool: ...

class KalturaDistributionProvider(KalturaObjectBase):
    type: KalturaDistributionProviderType
    name: str
    scheduleUpdateEnabled: bool
    availabilityUpdateEnabled: bool
    deleteInsteadUpdate: bool
    intervalBeforeSunrise: int
    intervalBeforeSunset: int
    updateRequiredEntryFields: str
    updateRequiredMetadataXPaths: str
    def __init__(self,
            type: KalturaDistributionProviderType = NotImplemented,
            name: str = NotImplemented,
            scheduleUpdateEnabled: bool = NotImplemented,
            availabilityUpdateEnabled: bool = NotImplemented,
            deleteInsteadUpdate: bool = NotImplemented,
            intervalBeforeSunrise: int = NotImplemented,
            intervalBeforeSunset: int = NotImplemented,
            updateRequiredEntryFields: str = NotImplemented,
            updateRequiredMetadataXPaths: str = NotImplemented): ...

    def getType(self) -> KalturaDistributionProviderType: ...
    def getName(self) -> str: ...
    def setName(self, newName: str) -> None: ...
    def getScheduleUpdateEnabled(self) -> bool: ...
    def setScheduleUpdateEnabled(self, newScheduleUpdateEnabled: bool) -> None: ...
    def getAvailabilityUpdateEnabled(self) -> bool: ...
    def setAvailabilityUpdateEnabled(self, newAvailabilityUpdateEnabled: bool) -> None: ...
    def getDeleteInsteadUpdate(self) -> bool: ...
    def setDeleteInsteadUpdate(self, newDeleteInsteadUpdate: bool) -> None: ...
    def getIntervalBeforeSunrise(self) -> int: ...
    def setIntervalBeforeSunrise(self, newIntervalBeforeSunrise: int) -> None: ...
    def getIntervalBeforeSunset(self) -> int: ...
    def setIntervalBeforeSunset(self, newIntervalBeforeSunset: int) -> None: ...
    def getUpdateRequiredEntryFields(self) -> str: ...
    def setUpdateRequiredEntryFields(self, newUpdateRequiredEntryFields: str) -> None: ...
    def getUpdateRequiredMetadataXPaths(self) -> str: ...
    def setUpdateRequiredMetadataXPaths(self, newUpdateRequiredMetadataXPaths: str) -> None: ...

class KalturaDistributionRemoteMediaFile(KalturaObjectBase):
    version: str
    assetId: str
    remoteId: str
    def __init__(self,
            version: str = NotImplemented,
            assetId: str = NotImplemented,
            remoteId: str = NotImplemented): ...

    def getVersion(self) -> str: ...
    def setVersion(self, newVersion: str) -> None: ...
    def getAssetId(self) -> str: ...
    def setAssetId(self, newAssetId: str) -> None: ...
    def getRemoteId(self) -> str: ...
    def setRemoteId(self, newRemoteId: str) -> None: ...

class KalturaDistributionValidationError(KalturaObjectBase):
    action: KalturaDistributionAction
    errorType: KalturaDistributionErrorType
    description: str
    def __init__(self,
            action: KalturaDistributionAction = NotImplemented,
            errorType: KalturaDistributionErrorType = NotImplemented,
            description: str = NotImplemented): ...

    def getAction(self) -> KalturaDistributionAction: ...
    def setAction(self, newAction: KalturaDistributionAction) -> None: ...
    def getErrorType(self) -> KalturaDistributionErrorType: ...
    def setErrorType(self, newErrorType: KalturaDistributionErrorType) -> None: ...
    def getDescription(self) -> str: ...
    def setDescription(self, newDescription: str) -> None: ...

class KalturaEntryDistribution(KalturaObjectBase):
    id: int
    createdAt: int
    updatedAt: int
    submittedAt: int
    entryId: str
    partnerId: int
    distributionProfileId: int
    status: KalturaEntryDistributionStatus
    sunStatus: KalturaEntryDistributionSunStatus
    dirtyStatus: KalturaEntryDistributionFlag
    thumbAssetIds: str
    flavorAssetIds: str
    assetIds: str
    sunrise: int
    sunset: int
    remoteId: str
    plays: int
    views: int
    validationErrors: List[KalturaDistributionValidationError]
    errorType: KalturaBatchJobErrorTypes
    errorNumber: int
    errorDescription: str
    hasSubmitResultsLog: KalturaNullableBoolean
    hasSubmitSentDataLog: KalturaNullableBoolean
    hasUpdateResultsLog: KalturaNullableBoolean
    hasUpdateSentDataLog: KalturaNullableBoolean
    hasDeleteResultsLog: KalturaNullableBoolean
    hasDeleteSentDataLog: KalturaNullableBoolean
    def __init__(self,
            id: int = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            submittedAt: int = NotImplemented,
            entryId: str = NotImplemented,
            partnerId: int = NotImplemented,
            distributionProfileId: int = NotImplemented,
            status: KalturaEntryDistributionStatus = NotImplemented,
            sunStatus: KalturaEntryDistributionSunStatus = NotImplemented,
            dirtyStatus: KalturaEntryDistributionFlag = NotImplemented,
            thumbAssetIds: str = NotImplemented,
            flavorAssetIds: str = NotImplemented,
            assetIds: str = NotImplemented,
            sunrise: int = NotImplemented,
            sunset: int = NotImplemented,
            remoteId: str = NotImplemented,
            plays: int = NotImplemented,
            views: int = NotImplemented,
            validationErrors: List[KalturaDistributionValidationError] = NotImplemented,
            errorType: KalturaBatchJobErrorTypes = NotImplemented,
            errorNumber: int = NotImplemented,
            errorDescription: str = NotImplemented,
            hasSubmitResultsLog: KalturaNullableBoolean = NotImplemented,
            hasSubmitSentDataLog: KalturaNullableBoolean = NotImplemented,
            hasUpdateResultsLog: KalturaNullableBoolean = NotImplemented,
            hasUpdateSentDataLog: KalturaNullableBoolean = NotImplemented,
            hasDeleteResultsLog: KalturaNullableBoolean = NotImplemented,
            hasDeleteSentDataLog: KalturaNullableBoolean = NotImplemented): ...

    def getId(self) -> int: ...
    def getCreatedAt(self) -> int: ...
    def getUpdatedAt(self) -> int: ...
    def getSubmittedAt(self) -> int: ...
    def getEntryId(self) -> str: ...
    def setEntryId(self, newEntryId: str) -> None: ...
    def getPartnerId(self) -> int: ...
    def getDistributionProfileId(self) -> int: ...
    def setDistributionProfileId(self, newDistributionProfileId: int) -> None: ...
    def getStatus(self) -> KalturaEntryDistributionStatus: ...
    def getSunStatus(self) -> KalturaEntryDistributionSunStatus: ...
    def getDirtyStatus(self) -> KalturaEntryDistributionFlag: ...
    def getThumbAssetIds(self) -> str: ...
    def setThumbAssetIds(self, newThumbAssetIds: str) -> None: ...
    def getFlavorAssetIds(self) -> str: ...
    def setFlavorAssetIds(self, newFlavorAssetIds: str) -> None: ...
    def getAssetIds(self) -> str: ...
    def setAssetIds(self, newAssetIds: str) -> None: ...
    def getSunrise(self) -> int: ...
    def setSunrise(self, newSunrise: int) -> None: ...
    def getSunset(self) -> int: ...
    def setSunset(self, newSunset: int) -> None: ...
    def getRemoteId(self) -> str: ...
    def getPlays(self) -> int: ...
    def getViews(self) -> int: ...
    def getValidationErrors(self) -> List[KalturaDistributionValidationError]: ...
    def setValidationErrors(self, newValidationErrors: List[KalturaDistributionValidationError]) -> None: ...
    def getErrorType(self) -> KalturaBatchJobErrorTypes: ...
    def getErrorNumber(self) -> int: ...
    def getErrorDescription(self) -> str: ...
    def getHasSubmitResultsLog(self) -> KalturaNullableBoolean: ...
    def getHasSubmitSentDataLog(self) -> KalturaNullableBoolean: ...
    def getHasUpdateResultsLog(self) -> KalturaNullableBoolean: ...
    def getHasUpdateSentDataLog(self) -> KalturaNullableBoolean: ...
    def getHasDeleteResultsLog(self) -> KalturaNullableBoolean: ...
    def getHasDeleteSentDataLog(self) -> KalturaNullableBoolean: ...

class KalturaGenericDistributionProfileAction(KalturaObjectBase):
    protocol: KalturaDistributionProtocol
    serverUrl: str
    serverPath: str
    username: str
    password: str
    ftpPassiveMode: bool
    httpFieldName: str
    httpFileName: str
    def __init__(self,
            protocol: KalturaDistributionProtocol = NotImplemented,
            serverUrl: str = NotImplemented,
            serverPath: str = NotImplemented,
            username: str = NotImplemented,
            password: str = NotImplemented,
            ftpPassiveMode: bool = NotImplemented,
            httpFieldName: str = NotImplemented,
            httpFileName: str = NotImplemented): ...

    def getProtocol(self) -> KalturaDistributionProtocol: ...
    def setProtocol(self, newProtocol: KalturaDistributionProtocol) -> None: ...
    def getServerUrl(self) -> str: ...
    def setServerUrl(self, newServerUrl: str) -> None: ...
    def getServerPath(self) -> str: ...
    def setServerPath(self, newServerPath: str) -> None: ...
    def getUsername(self) -> str: ...
    def setUsername(self, newUsername: str) -> None: ...
    def getPassword(self) -> str: ...
    def setPassword(self, newPassword: str) -> None: ...
    def getFtpPassiveMode(self) -> bool: ...
    def setFtpPassiveMode(self, newFtpPassiveMode: bool) -> None: ...
    def getHttpFieldName(self) -> str: ...
    def setHttpFieldName(self, newHttpFieldName: str) -> None: ...
    def getHttpFileName(self) -> str: ...
    def setHttpFileName(self, newHttpFileName: str) -> None: ...

class KalturaGenericDistributionProviderAction(KalturaObjectBase):
    id: int
    createdAt: int
    updatedAt: int
    genericDistributionProviderId: int
    action: KalturaDistributionAction
    status: KalturaGenericDistributionProviderStatus
    resultsParser: KalturaGenericDistributionProviderParser
    protocol: KalturaDistributionProtocol
    serverAddress: str
    remotePath: str
    remoteUsername: str
    remotePassword: str
    editableFields: str
    mandatoryFields: str
    mrssTransformer: str
    mrssValidator: str
    resultsTransformer: str
    def __init__(self,
            id: int = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            genericDistributionProviderId: int = NotImplemented,
            action: KalturaDistributionAction = NotImplemented,
            status: KalturaGenericDistributionProviderStatus = NotImplemented,
            resultsParser: KalturaGenericDistributionProviderParser = NotImplemented,
            protocol: KalturaDistributionProtocol = NotImplemented,
            serverAddress: str = NotImplemented,
            remotePath: str = NotImplemented,
            remoteUsername: str = NotImplemented,
            remotePassword: str = NotImplemented,
            editableFields: str = NotImplemented,
            mandatoryFields: str = NotImplemented,
            mrssTransformer: str = NotImplemented,
            mrssValidator: str = NotImplemented,
            resultsTransformer: str = NotImplemented): ...

    def getId(self) -> int: ...
    def getCreatedAt(self) -> int: ...
    def getUpdatedAt(self) -> int: ...
    def getGenericDistributionProviderId(self) -> int: ...
    def setGenericDistributionProviderId(self, newGenericDistributionProviderId: int) -> None: ...
    def getAction(self) -> KalturaDistributionAction: ...
    def setAction(self, newAction: KalturaDistributionAction) -> None: ...
    def getStatus(self) -> KalturaGenericDistributionProviderStatus: ...
    def getResultsParser(self) -> KalturaGenericDistributionProviderParser: ...
    def setResultsParser(self, newResultsParser: KalturaGenericDistributionProviderParser) -> None: ...
    def getProtocol(self) -> KalturaDistributionProtocol: ...
    def setProtocol(self, newProtocol: KalturaDistributionProtocol) -> None: ...
    def getServerAddress(self) -> str: ...
    def setServerAddress(self, newServerAddress: str) -> None: ...
    def getRemotePath(self) -> str: ...
    def setRemotePath(self, newRemotePath: str) -> None: ...
    def getRemoteUsername(self) -> str: ...
    def setRemoteUsername(self, newRemoteUsername: str) -> None: ...
    def getRemotePassword(self) -> str: ...
    def setRemotePassword(self, newRemotePassword: str) -> None: ...
    def getEditableFields(self) -> str: ...
    def setEditableFields(self, newEditableFields: str) -> None: ...
    def getMandatoryFields(self) -> str: ...
    def setMandatoryFields(self, newMandatoryFields: str) -> None: ...
    def getMrssTransformer(self) -> str: ...
    def getMrssValidator(self) -> str: ...
    def getResultsTransformer(self) -> str: ...

class KalturaGenericDistributionProvider(KalturaDistributionProvider):
    id: int
    createdAt: int
    updatedAt: int
    partnerId: int
    isDefault: bool
    status: KalturaGenericDistributionProviderStatus
    optionalFlavorParamsIds: str
    requiredFlavorParamsIds: str
    optionalThumbDimensions: List[KalturaDistributionThumbDimensions]
    requiredThumbDimensions: List[KalturaDistributionThumbDimensions]
    editableFields: str
    mandatoryFields: str
    def __init__(self,
            type: KalturaDistributionProviderType = NotImplemented,
            name: str = NotImplemented,
            scheduleUpdateEnabled: bool = NotImplemented,
            availabilityUpdateEnabled: bool = NotImplemented,
            deleteInsteadUpdate: bool = NotImplemented,
            intervalBeforeSunrise: int = NotImplemented,
            intervalBeforeSunset: int = NotImplemented,
            updateRequiredEntryFields: str = NotImplemented,
            updateRequiredMetadataXPaths: str = NotImplemented,
            id: int = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            partnerId: int = NotImplemented,
            isDefault: bool = NotImplemented,
            status: KalturaGenericDistributionProviderStatus = NotImplemented,
            optionalFlavorParamsIds: str = NotImplemented,
            requiredFlavorParamsIds: str = NotImplemented,
            optionalThumbDimensions: List[KalturaDistributionThumbDimensions] = NotImplemented,
            requiredThumbDimensions: List[KalturaDistributionThumbDimensions] = NotImplemented,
            editableFields: str = NotImplemented,
            mandatoryFields: str = NotImplemented): ...

    def getId(self) -> int: ...
    def getCreatedAt(self) -> int: ...
    def getUpdatedAt(self) -> int: ...
    def getPartnerId(self) -> int: ...
    def getIsDefault(self) -> bool: ...
    def setIsDefault(self, newIsDefault: bool) -> None: ...
    def getStatus(self) -> KalturaGenericDistributionProviderStatus: ...
    def getOptionalFlavorParamsIds(self) -> str: ...
    def setOptionalFlavorParamsIds(self, newOptionalFlavorParamsIds: str) -> None: ...
    def getRequiredFlavorParamsIds(self) -> str: ...
    def setRequiredFlavorParamsIds(self, newRequiredFlavorParamsIds: str) -> None: ...
    def getOptionalThumbDimensions(self) -> List[KalturaDistributionThumbDimensions]: ...
    def setOptionalThumbDimensions(self, newOptionalThumbDimensions: List[KalturaDistributionThumbDimensions]) -> None: ...
    def getRequiredThumbDimensions(self) -> List[KalturaDistributionThumbDimensions]: ...
    def setRequiredThumbDimensions(self, newRequiredThumbDimensions: List[KalturaDistributionThumbDimensions]) -> None: ...
    def getEditableFields(self) -> str: ...
    def setEditableFields(self, newEditableFields: str) -> None: ...
    def getMandatoryFields(self) -> str: ...
    def setMandatoryFields(self, newMandatoryFields: str) -> None: ...

class KalturaAssetDistributionPropertyCondition(KalturaAssetDistributionCondition):
    propertyName: str
    propertyValue: str
    def __init__(self,
            propertyName: str = NotImplemented,
            propertyValue: str = NotImplemented): ...

    def getPropertyName(self) -> str: ...
    def setPropertyName(self, newPropertyName: str) -> None: ...
    def getPropertyValue(self) -> str: ...
    def setPropertyValue(self, newPropertyValue: str) -> None: ...

class KalturaConfigurableDistributionJobProviderData(KalturaDistributionJobProviderData):
    fieldValues: str
    def __init__(self,
            fieldValues: str = NotImplemented): ...

    def getFieldValues(self) -> str: ...
    def setFieldValues(self, newFieldValues: str) -> None: ...

class KalturaConfigurableDistributionProfile(KalturaDistributionProfile):
    fieldConfigArray: List[KalturaDistributionFieldConfig]
    itemXpathsToExtend: List[KalturaExtendingItemMrssParameter]
    useCategoryEntries: bool
    def __init__(self,
            id: int = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            partnerId: int = NotImplemented,
            providerType: KalturaDistributionProviderType = NotImplemented,
            name: str = NotImplemented,
            status: KalturaDistributionProfileStatus = NotImplemented,
            submitEnabled: KalturaDistributionProfileActionStatus = NotImplemented,
            updateEnabled: KalturaDistributionProfileActionStatus = NotImplemented,
            deleteEnabled: KalturaDistributionProfileActionStatus = NotImplemented,
            reportEnabled: KalturaDistributionProfileActionStatus = NotImplemented,
            autoCreateFlavors: str = NotImplemented,
            autoCreateThumb: str = NotImplemented,
            optionalFlavorParamsIds: str = NotImplemented,
            requiredFlavorParamsIds: str = NotImplemented,
            optionalThumbDimensions: List[KalturaDistributionThumbDimensions] = NotImplemented,
            requiredThumbDimensions: List[KalturaDistributionThumbDimensions] = NotImplemented,
            optionalAssetDistributionRules: List[KalturaAssetDistributionRule] = NotImplemented,
            requiredAssetDistributionRules: List[KalturaAssetDistributionRule] = NotImplemented,
            sunriseDefaultOffset: int = NotImplemented,
            sunsetDefaultOffset: int = NotImplemented,
            recommendedStorageProfileForDownload: int = NotImplemented,
            recommendedDcForDownload: int = NotImplemented,
            recommendedDcForExecute: int = NotImplemented,
            distributeTrigger: KalturaDistributeTrigger = NotImplemented,
            supportImageEntry: bool = NotImplemented,
            fieldConfigArray: List[KalturaDistributionFieldConfig] = NotImplemented,
            itemXpathsToExtend: List[KalturaExtendingItemMrssParameter] = NotImplemented,
            useCategoryEntries: bool = NotImplemented): ...

    def getFieldConfigArray(self) -> List[KalturaDistributionFieldConfig]: ...
    def setFieldConfigArray(self, newFieldConfigArray: List[KalturaDistributionFieldConfig]) -> None: ...
    def getItemXpathsToExtend(self) -> List[KalturaExtendingItemMrssParameter]: ...
    def setItemXpathsToExtend(self, newItemXpathsToExtend: List[KalturaExtendingItemMrssParameter]) -> None: ...
    def getUseCategoryEntries(self) -> bool: ...
    def setUseCategoryEntries(self, newUseCategoryEntries: bool) -> None: ...

class KalturaContentDistributionSearchItem(KalturaSearchItem):
    noDistributionProfiles: bool
    distributionProfileId: int
    distributionSunStatus: KalturaEntryDistributionSunStatus
    entryDistributionFlag: KalturaEntryDistributionFlag
    entryDistributionStatus: KalturaEntryDistributionStatus
    hasEntryDistributionValidationErrors: bool
    entryDistributionValidationErrors: str
    def __init__(self,
            noDistributionProfiles: bool = NotImplemented,
            distributionProfileId: int = NotImplemented,
            distributionSunStatus: KalturaEntryDistributionSunStatus = NotImplemented,
            entryDistributionFlag: KalturaEntryDistributionFlag = NotImplemented,
            entryDistributionStatus: KalturaEntryDistributionStatus = NotImplemented,
            hasEntryDistributionValidationErrors: bool = NotImplemented,
            entryDistributionValidationErrors: str = NotImplemented): ...

    def getNoDistributionProfiles(self) -> bool: ...
    def setNoDistributionProfiles(self, newNoDistributionProfiles: bool) -> None: ...
    def getDistributionProfileId(self) -> int: ...
    def setDistributionProfileId(self, newDistributionProfileId: int) -> None: ...
    def getDistributionSunStatus(self) -> KalturaEntryDistributionSunStatus: ...
    def setDistributionSunStatus(self, newDistributionSunStatus: KalturaEntryDistributionSunStatus) -> None: ...
    def getEntryDistributionFlag(self) -> KalturaEntryDistributionFlag: ...
    def setEntryDistributionFlag(self, newEntryDistributionFlag: KalturaEntryDistributionFlag) -> None: ...
    def getEntryDistributionStatus(self) -> KalturaEntryDistributionStatus: ...
    def setEntryDistributionStatus(self, newEntryDistributionStatus: KalturaEntryDistributionStatus) -> None: ...
    def getHasEntryDistributionValidationErrors(self) -> bool: ...
    def setHasEntryDistributionValidationErrors(self, newHasEntryDistributionValidationErrors: bool) -> None: ...
    def getEntryDistributionValidationErrors(self) -> str: ...
    def setEntryDistributionValidationErrors(self, newEntryDistributionValidationErrors: str) -> None: ...

class KalturaDistributionJobData(KalturaJobData):
    distributionProfileId: int
    distributionProfile: KalturaDistributionProfile
    entryDistributionId: int
    entryDistribution: KalturaEntryDistribution
    remoteId: str
    providerType: KalturaDistributionProviderType
    providerData: KalturaDistributionJobProviderData
    results: str
    sentData: str
    mediaFiles: List[KalturaDistributionRemoteMediaFile]
    def __init__(self,
            distributionProfileId: int = NotImplemented,
            distributionProfile: KalturaDistributionProfile = NotImplemented,
            entryDistributionId: int = NotImplemented,
            entryDistribution: KalturaEntryDistribution = NotImplemented,
            remoteId: str = NotImplemented,
            providerType: KalturaDistributionProviderType = NotImplemented,
            providerData: KalturaDistributionJobProviderData = NotImplemented,
            results: str = NotImplemented,
            sentData: str = NotImplemented,
            mediaFiles: List[KalturaDistributionRemoteMediaFile] = NotImplemented): ...

    def getDistributionProfileId(self) -> int: ...
    def setDistributionProfileId(self, newDistributionProfileId: int) -> None: ...
    def getDistributionProfile(self) -> KalturaDistributionProfile: ...
    def setDistributionProfile(self, newDistributionProfile: KalturaDistributionProfile) -> None: ...
    def getEntryDistributionId(self) -> int: ...
    def setEntryDistributionId(self, newEntryDistributionId: int) -> None: ...
    def getEntryDistribution(self) -> KalturaEntryDistribution: ...
    def setEntryDistribution(self, newEntryDistribution: KalturaEntryDistribution) -> None: ...
    def getRemoteId(self) -> str: ...
    def setRemoteId(self, newRemoteId: str) -> None: ...
    def getProviderType(self) -> KalturaDistributionProviderType: ...
    def setProviderType(self, newProviderType: KalturaDistributionProviderType) -> None: ...
    def getProviderData(self) -> KalturaDistributionJobProviderData: ...
    def setProviderData(self, newProviderData: KalturaDistributionJobProviderData) -> None: ...
    def getResults(self) -> str: ...
    def setResults(self, newResults: str) -> None: ...
    def getSentData(self) -> str: ...
    def setSentData(self, newSentData: str) -> None: ...
    def getMediaFiles(self) -> List[KalturaDistributionRemoteMediaFile]: ...
    def setMediaFiles(self, newMediaFiles: List[KalturaDistributionRemoteMediaFile]) -> None: ...

class KalturaDistributionProfileBaseFilter(KalturaFilter):
    idEqual: int
    idIn: str
    createdAtGreaterThanOrEqual: int
    createdAtLessThanOrEqual: int
    updatedAtGreaterThanOrEqual: int
    updatedAtLessThanOrEqual: int
    statusEqual: KalturaDistributionProfileStatus
    statusIn: str
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            statusEqual: KalturaDistributionProfileStatus = NotImplemented,
            statusIn: str = NotImplemented): ...

    def getIdEqual(self) -> int: ...
    def setIdEqual(self, newIdEqual: int) -> None: ...
    def getIdIn(self) -> str: ...
    def setIdIn(self, newIdIn: str) -> None: ...
    def getCreatedAtGreaterThanOrEqual(self) -> int: ...
    def setCreatedAtGreaterThanOrEqual(self, newCreatedAtGreaterThanOrEqual: int) -> None: ...
    def getCreatedAtLessThanOrEqual(self) -> int: ...
    def setCreatedAtLessThanOrEqual(self, newCreatedAtLessThanOrEqual: int) -> None: ...
    def getUpdatedAtGreaterThanOrEqual(self) -> int: ...
    def setUpdatedAtGreaterThanOrEqual(self, newUpdatedAtGreaterThanOrEqual: int) -> None: ...
    def getUpdatedAtLessThanOrEqual(self) -> int: ...
    def setUpdatedAtLessThanOrEqual(self, newUpdatedAtLessThanOrEqual: int) -> None: ...
    def getStatusEqual(self) -> KalturaDistributionProfileStatus: ...
    def setStatusEqual(self, newStatusEqual: KalturaDistributionProfileStatus) -> None: ...
    def getStatusIn(self) -> str: ...
    def setStatusIn(self, newStatusIn: str) -> None: ...

class KalturaDistributionProfileListResponse(KalturaListResponse):
    objects: List[KalturaDistributionProfile]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaDistributionProfile] = NotImplemented): ...

    def getObjects(self) -> List[KalturaDistributionProfile]: ...

class KalturaDistributionProviderBaseFilter(KalturaFilter):
    typeEqual: KalturaDistributionProviderType
    typeIn: str
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            typeEqual: KalturaDistributionProviderType = NotImplemented,
            typeIn: str = NotImplemented): ...

    def getTypeEqual(self) -> KalturaDistributionProviderType: ...
    def setTypeEqual(self, newTypeEqual: KalturaDistributionProviderType) -> None: ...
    def getTypeIn(self) -> str: ...
    def setTypeIn(self, newTypeIn: str) -> None: ...

class KalturaDistributionProviderListResponse(KalturaListResponse):
    objects: List[KalturaDistributionProvider]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaDistributionProvider] = NotImplemented): ...

    def getObjects(self) -> List[KalturaDistributionProvider]: ...

class KalturaDistributionValidationErrorConditionNotMet(KalturaDistributionValidationError):
    conditionName: str
    def __init__(self,
            action: KalturaDistributionAction = NotImplemented,
            errorType: KalturaDistributionErrorType = NotImplemented,
            description: str = NotImplemented,
            conditionName: str = NotImplemented): ...

    def getConditionName(self) -> str: ...
    def setConditionName(self, newConditionName: str) -> None: ...

class KalturaDistributionValidationErrorInvalidData(KalturaDistributionValidationError):
    fieldName: str
    validationErrorType: KalturaDistributionValidationErrorType
    validationErrorParam: str
    def __init__(self,
            action: KalturaDistributionAction = NotImplemented,
            errorType: KalturaDistributionErrorType = NotImplemented,
            description: str = NotImplemented,
            fieldName: str = NotImplemented,
            validationErrorType: KalturaDistributionValidationErrorType = NotImplemented,
            validationErrorParam: str = NotImplemented): ...

    def getFieldName(self) -> str: ...
    def setFieldName(self, newFieldName: str) -> None: ...
    def getValidationErrorType(self) -> KalturaDistributionValidationErrorType: ...
    def setValidationErrorType(self, newValidationErrorType: KalturaDistributionValidationErrorType) -> None: ...
    def getValidationErrorParam(self) -> str: ...
    def setValidationErrorParam(self, newValidationErrorParam: str) -> None: ...

class KalturaDistributionValidationErrorMissingAsset(KalturaDistributionValidationError):
    data: str
    def __init__(self,
            action: KalturaDistributionAction = NotImplemented,
            errorType: KalturaDistributionErrorType = NotImplemented,
            description: str = NotImplemented,
            data: str = NotImplemented): ...

    def getData(self) -> str: ...
    def setData(self, newData: str) -> None: ...

class KalturaDistributionValidationErrorMissingFlavor(KalturaDistributionValidationError):
    flavorParamsId: str
    def __init__(self,
            action: KalturaDistributionAction = NotImplemented,
            errorType: KalturaDistributionErrorType = NotImplemented,
            description: str = NotImplemented,
            flavorParamsId: str = NotImplemented): ...

    def getFlavorParamsId(self) -> str: ...
    def setFlavorParamsId(self, newFlavorParamsId: str) -> None: ...

class KalturaDistributionValidationErrorMissingMetadata(KalturaDistributionValidationError):
    fieldName: str
    def __init__(self,
            action: KalturaDistributionAction = NotImplemented,
            errorType: KalturaDistributionErrorType = NotImplemented,
            description: str = NotImplemented,
            fieldName: str = NotImplemented): ...

    def getFieldName(self) -> str: ...
    def setFieldName(self, newFieldName: str) -> None: ...

class KalturaDistributionValidationErrorMissingThumbnail(KalturaDistributionValidationError):
    dimensions: KalturaDistributionThumbDimensions
    def __init__(self,
            action: KalturaDistributionAction = NotImplemented,
            errorType: KalturaDistributionErrorType = NotImplemented,
            description: str = NotImplemented,
            dimensions: KalturaDistributionThumbDimensions = NotImplemented): ...

    def getDimensions(self) -> KalturaDistributionThumbDimensions: ...
    def setDimensions(self, newDimensions: KalturaDistributionThumbDimensions) -> None: ...

class KalturaEntryDistributionListResponse(KalturaListResponse):
    objects: List[KalturaEntryDistribution]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaEntryDistribution] = NotImplemented): ...

    def getObjects(self) -> List[KalturaEntryDistribution]: ...

class KalturaGenericDistributionJobProviderData(KalturaDistributionJobProviderData):
    xml: str
    resultParseData: str
    resultParserType: KalturaGenericDistributionProviderParser
    def __init__(self,
            xml: str = NotImplemented,
            resultParseData: str = NotImplemented,
            resultParserType: KalturaGenericDistributionProviderParser = NotImplemented): ...

    def getXml(self) -> str: ...
    def setXml(self, newXml: str) -> None: ...
    def getResultParseData(self) -> str: ...
    def setResultParseData(self, newResultParseData: str) -> None: ...
    def getResultParserType(self) -> KalturaGenericDistributionProviderParser: ...
    def setResultParserType(self, newResultParserType: KalturaGenericDistributionProviderParser) -> None: ...

class KalturaGenericDistributionProfile(KalturaDistributionProfile):
    genericProviderId: int
    submitAction: KalturaGenericDistributionProfileAction
    updateAction: KalturaGenericDistributionProfileAction
    deleteAction: KalturaGenericDistributionProfileAction
    fetchReportAction: KalturaGenericDistributionProfileAction
    updateRequiredEntryFields: str
    updateRequiredMetadataXPaths: str
    def __init__(self,
            id: int = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            partnerId: int = NotImplemented,
            providerType: KalturaDistributionProviderType = NotImplemented,
            name: str = NotImplemented,
            status: KalturaDistributionProfileStatus = NotImplemented,
            submitEnabled: KalturaDistributionProfileActionStatus = NotImplemented,
            updateEnabled: KalturaDistributionProfileActionStatus = NotImplemented,
            deleteEnabled: KalturaDistributionProfileActionStatus = NotImplemented,
            reportEnabled: KalturaDistributionProfileActionStatus = NotImplemented,
            autoCreateFlavors: str = NotImplemented,
            autoCreateThumb: str = NotImplemented,
            optionalFlavorParamsIds: str = NotImplemented,
            requiredFlavorParamsIds: str = NotImplemented,
            optionalThumbDimensions: List[KalturaDistributionThumbDimensions] = NotImplemented,
            requiredThumbDimensions: List[KalturaDistributionThumbDimensions] = NotImplemented,
            optionalAssetDistributionRules: List[KalturaAssetDistributionRule] = NotImplemented,
            requiredAssetDistributionRules: List[KalturaAssetDistributionRule] = NotImplemented,
            sunriseDefaultOffset: int = NotImplemented,
            sunsetDefaultOffset: int = NotImplemented,
            recommendedStorageProfileForDownload: int = NotImplemented,
            recommendedDcForDownload: int = NotImplemented,
            recommendedDcForExecute: int = NotImplemented,
            distributeTrigger: KalturaDistributeTrigger = NotImplemented,
            supportImageEntry: bool = NotImplemented,
            genericProviderId: int = NotImplemented,
            submitAction: KalturaGenericDistributionProfileAction = NotImplemented,
            updateAction: KalturaGenericDistributionProfileAction = NotImplemented,
            deleteAction: KalturaGenericDistributionProfileAction = NotImplemented,
            fetchReportAction: KalturaGenericDistributionProfileAction = NotImplemented,
            updateRequiredEntryFields: str = NotImplemented,
            updateRequiredMetadataXPaths: str = NotImplemented): ...

    def getGenericProviderId(self) -> int: ...
    def setGenericProviderId(self, newGenericProviderId: int) -> None: ...
    def getSubmitAction(self) -> KalturaGenericDistributionProfileAction: ...
    def setSubmitAction(self, newSubmitAction: KalturaGenericDistributionProfileAction) -> None: ...
    def getUpdateAction(self) -> KalturaGenericDistributionProfileAction: ...
    def setUpdateAction(self, newUpdateAction: KalturaGenericDistributionProfileAction) -> None: ...
    def getDeleteAction(self) -> KalturaGenericDistributionProfileAction: ...
    def setDeleteAction(self, newDeleteAction: KalturaGenericDistributionProfileAction) -> None: ...
    def getFetchReportAction(self) -> KalturaGenericDistributionProfileAction: ...
    def setFetchReportAction(self, newFetchReportAction: KalturaGenericDistributionProfileAction) -> None: ...
    def getUpdateRequiredEntryFields(self) -> str: ...
    def setUpdateRequiredEntryFields(self, newUpdateRequiredEntryFields: str) -> None: ...
    def getUpdateRequiredMetadataXPaths(self) -> str: ...
    def setUpdateRequiredMetadataXPaths(self, newUpdateRequiredMetadataXPaths: str) -> None: ...

class KalturaGenericDistributionProviderActionBaseFilter(KalturaFilter):
    idEqual: int
    idIn: str
    createdAtGreaterThanOrEqual: int
    createdAtLessThanOrEqual: int
    updatedAtGreaterThanOrEqual: int
    updatedAtLessThanOrEqual: int
    genericDistributionProviderIdEqual: int
    genericDistributionProviderIdIn: str
    actionEqual: KalturaDistributionAction
    actionIn: str
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            genericDistributionProviderIdEqual: int = NotImplemented,
            genericDistributionProviderIdIn: str = NotImplemented,
            actionEqual: KalturaDistributionAction = NotImplemented,
            actionIn: str = NotImplemented): ...

    def getIdEqual(self) -> int: ...
    def setIdEqual(self, newIdEqual: int) -> None: ...
    def getIdIn(self) -> str: ...
    def setIdIn(self, newIdIn: str) -> None: ...
    def getCreatedAtGreaterThanOrEqual(self) -> int: ...
    def setCreatedAtGreaterThanOrEqual(self, newCreatedAtGreaterThanOrEqual: int) -> None: ...
    def getCreatedAtLessThanOrEqual(self) -> int: ...
    def setCreatedAtLessThanOrEqual(self, newCreatedAtLessThanOrEqual: int) -> None: ...
    def getUpdatedAtGreaterThanOrEqual(self) -> int: ...
    def setUpdatedAtGreaterThanOrEqual(self, newUpdatedAtGreaterThanOrEqual: int) -> None: ...
    def getUpdatedAtLessThanOrEqual(self) -> int: ...
    def setUpdatedAtLessThanOrEqual(self, newUpdatedAtLessThanOrEqual: int) -> None: ...
    def getGenericDistributionProviderIdEqual(self) -> int: ...
    def setGenericDistributionProviderIdEqual(self, newGenericDistributionProviderIdEqual: int) -> None: ...
    def getGenericDistributionProviderIdIn(self) -> str: ...
    def setGenericDistributionProviderIdIn(self, newGenericDistributionProviderIdIn: str) -> None: ...
    def getActionEqual(self) -> KalturaDistributionAction: ...
    def setActionEqual(self, newActionEqual: KalturaDistributionAction) -> None: ...
    def getActionIn(self) -> str: ...
    def setActionIn(self, newActionIn: str) -> None: ...

class KalturaGenericDistributionProviderActionListResponse(KalturaListResponse):
    objects: List[KalturaGenericDistributionProviderAction]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaGenericDistributionProviderAction] = NotImplemented): ...

    def getObjects(self) -> List[KalturaGenericDistributionProviderAction]: ...

class KalturaGenericDistributionProviderListResponse(KalturaListResponse):
    objects: List[KalturaGenericDistributionProvider]
    def __init__(self,
            totalCount: int = NotImplemented,
            objects: List[KalturaGenericDistributionProvider] = NotImplemented): ...

    def getObjects(self) -> List[KalturaGenericDistributionProvider]: ...

class KalturaSyndicationDistributionProfile(KalturaDistributionProfile):
    xsl: str
    feedId: str
    def __init__(self,
            id: int = NotImplemented,
            createdAt: int = NotImplemented,
            updatedAt: int = NotImplemented,
            partnerId: int = NotImplemented,
            providerType: KalturaDistributionProviderType = NotImplemented,
            name: str = NotImplemented,
            status: KalturaDistributionProfileStatus = NotImplemented,
            submitEnabled: KalturaDistributionProfileActionStatus = NotImplemented,
            updateEnabled: KalturaDistributionProfileActionStatus = NotImplemented,
            deleteEnabled: KalturaDistributionProfileActionStatus = NotImplemented,
            reportEnabled: KalturaDistributionProfileActionStatus = NotImplemented,
            autoCreateFlavors: str = NotImplemented,
            autoCreateThumb: str = NotImplemented,
            optionalFlavorParamsIds: str = NotImplemented,
            requiredFlavorParamsIds: str = NotImplemented,
            optionalThumbDimensions: List[KalturaDistributionThumbDimensions] = NotImplemented,
            requiredThumbDimensions: List[KalturaDistributionThumbDimensions] = NotImplemented,
            optionalAssetDistributionRules: List[KalturaAssetDistributionRule] = NotImplemented,
            requiredAssetDistributionRules: List[KalturaAssetDistributionRule] = NotImplemented,
            sunriseDefaultOffset: int = NotImplemented,
            sunsetDefaultOffset: int = NotImplemented,
            recommendedStorageProfileForDownload: int = NotImplemented,
            recommendedDcForDownload: int = NotImplemented,
            recommendedDcForExecute: int = NotImplemented,
            distributeTrigger: KalturaDistributeTrigger = NotImplemented,
            supportImageEntry: bool = NotImplemented,
            xsl: str = NotImplemented,
            feedId: str = NotImplemented): ...

    def getXsl(self) -> str: ...
    def setXsl(self, newXsl: str) -> None: ...
    def getFeedId(self) -> str: ...

class KalturaSyndicationDistributionProvider(KalturaDistributionProvider):
    def __init__(self,
            type: KalturaDistributionProviderType = NotImplemented,
            name: str = NotImplemented,
            scheduleUpdateEnabled: bool = NotImplemented,
            availabilityUpdateEnabled: bool = NotImplemented,
            deleteInsteadUpdate: bool = NotImplemented,
            intervalBeforeSunrise: int = NotImplemented,
            intervalBeforeSunset: int = NotImplemented,
            updateRequiredEntryFields: str = NotImplemented,
            updateRequiredMetadataXPaths: str = NotImplemented): ...
        pass

class KalturaDistributionDeleteJobData(KalturaDistributionJobData):
    keepDistributionItem: bool
    def __init__(self,
            distributionProfileId: int = NotImplemented,
            distributionProfile: KalturaDistributionProfile = NotImplemented,
            entryDistributionId: int = NotImplemented,
            entryDistribution: KalturaEntryDistribution = NotImplemented,
            remoteId: str = NotImplemented,
            providerType: KalturaDistributionProviderType = NotImplemented,
            providerData: KalturaDistributionJobProviderData = NotImplemented,
            results: str = NotImplemented,
            sentData: str = NotImplemented,
            mediaFiles: List[KalturaDistributionRemoteMediaFile] = NotImplemented,
            keepDistributionItem: bool = NotImplemented): ...

    def getKeepDistributionItem(self) -> bool: ...
    def setKeepDistributionItem(self, newKeepDistributionItem: bool) -> None: ...

class KalturaDistributionFetchReportJobData(KalturaDistributionJobData):
    plays: int
    views: int
    def __init__(self,
            distributionProfileId: int = NotImplemented,
            distributionProfile: KalturaDistributionProfile = NotImplemented,
            entryDistributionId: int = NotImplemented,
            entryDistribution: KalturaEntryDistribution = NotImplemented,
            remoteId: str = NotImplemented,
            providerType: KalturaDistributionProviderType = NotImplemented,
            providerData: KalturaDistributionJobProviderData = NotImplemented,
            results: str = NotImplemented,
            sentData: str = NotImplemented,
            mediaFiles: List[KalturaDistributionRemoteMediaFile] = NotImplemented,
            plays: int = NotImplemented,
            views: int = NotImplemented): ...

    def getPlays(self) -> int: ...
    def setPlays(self, newPlays: int) -> None: ...
    def getViews(self) -> int: ...
    def setViews(self, newViews: int) -> None: ...

class KalturaDistributionProfileFilter(KalturaDistributionProfileBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            statusEqual: KalturaDistributionProfileStatus = NotImplemented,
            statusIn: str = NotImplemented): ...
        pass

class KalturaDistributionProviderFilter(KalturaDistributionProviderBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            typeEqual: KalturaDistributionProviderType = NotImplemented,
            typeIn: str = NotImplemented): ...
        pass

class KalturaDistributionSubmitJobData(KalturaDistributionJobData):
    def __init__(self,
            distributionProfileId: int = NotImplemented,
            distributionProfile: KalturaDistributionProfile = NotImplemented,
            entryDistributionId: int = NotImplemented,
            entryDistribution: KalturaEntryDistribution = NotImplemented,
            remoteId: str = NotImplemented,
            providerType: KalturaDistributionProviderType = NotImplemented,
            providerData: KalturaDistributionJobProviderData = NotImplemented,
            results: str = NotImplemented,
            sentData: str = NotImplemented,
            mediaFiles: List[KalturaDistributionRemoteMediaFile] = NotImplemented): ...
        pass

class KalturaDistributionUpdateJobData(KalturaDistributionJobData):
    def __init__(self,
            distributionProfileId: int = NotImplemented,
            distributionProfile: KalturaDistributionProfile = NotImplemented,
            entryDistributionId: int = NotImplemented,
            entryDistribution: KalturaEntryDistribution = NotImplemented,
            remoteId: str = NotImplemented,
            providerType: KalturaDistributionProviderType = NotImplemented,
            providerData: KalturaDistributionJobProviderData = NotImplemented,
            results: str = NotImplemented,
            sentData: str = NotImplemented,
            mediaFiles: List[KalturaDistributionRemoteMediaFile] = NotImplemented): ...
        pass

class KalturaDistributionValidationErrorInvalidMetadata(KalturaDistributionValidationErrorInvalidData):
    metadataProfileId: int
    def __init__(self,
            action: KalturaDistributionAction = NotImplemented,
            errorType: KalturaDistributionErrorType = NotImplemented,
            description: str = NotImplemented,
            fieldName: str = NotImplemented,
            validationErrorType: KalturaDistributionValidationErrorType = NotImplemented,
            validationErrorParam: str = NotImplemented,
            metadataProfileId: int = NotImplemented): ...

    def getMetadataProfileId(self) -> int: ...
    def setMetadataProfileId(self, newMetadataProfileId: int) -> None: ...

class KalturaEntryDistributionBaseFilter(KalturaRelatedFilter):
    idEqual: int
    idIn: str
    createdAtGreaterThanOrEqual: int
    createdAtLessThanOrEqual: int
    updatedAtGreaterThanOrEqual: int
    updatedAtLessThanOrEqual: int
    submittedAtGreaterThanOrEqual: int
    submittedAtLessThanOrEqual: int
    entryIdEqual: str
    entryIdIn: str
    distributionProfileIdEqual: int
    distributionProfileIdIn: str
    statusEqual: KalturaEntryDistributionStatus
    statusIn: str
    dirtyStatusEqual: KalturaEntryDistributionFlag
    dirtyStatusIn: str
    sunriseGreaterThanOrEqual: int
    sunriseLessThanOrEqual: int
    sunsetGreaterThanOrEqual: int
    sunsetLessThanOrEqual: int
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            submittedAtGreaterThanOrEqual: int = NotImplemented,
            submittedAtLessThanOrEqual: int = NotImplemented,
            entryIdEqual: str = NotImplemented,
            entryIdIn: str = NotImplemented,
            distributionProfileIdEqual: int = NotImplemented,
            distributionProfileIdIn: str = NotImplemented,
            statusEqual: KalturaEntryDistributionStatus = NotImplemented,
            statusIn: str = NotImplemented,
            dirtyStatusEqual: KalturaEntryDistributionFlag = NotImplemented,
            dirtyStatusIn: str = NotImplemented,
            sunriseGreaterThanOrEqual: int = NotImplemented,
            sunriseLessThanOrEqual: int = NotImplemented,
            sunsetGreaterThanOrEqual: int = NotImplemented,
            sunsetLessThanOrEqual: int = NotImplemented): ...

    def getIdEqual(self) -> int: ...
    def setIdEqual(self, newIdEqual: int) -> None: ...
    def getIdIn(self) -> str: ...
    def setIdIn(self, newIdIn: str) -> None: ...
    def getCreatedAtGreaterThanOrEqual(self) -> int: ...
    def setCreatedAtGreaterThanOrEqual(self, newCreatedAtGreaterThanOrEqual: int) -> None: ...
    def getCreatedAtLessThanOrEqual(self) -> int: ...
    def setCreatedAtLessThanOrEqual(self, newCreatedAtLessThanOrEqual: int) -> None: ...
    def getUpdatedAtGreaterThanOrEqual(self) -> int: ...
    def setUpdatedAtGreaterThanOrEqual(self, newUpdatedAtGreaterThanOrEqual: int) -> None: ...
    def getUpdatedAtLessThanOrEqual(self) -> int: ...
    def setUpdatedAtLessThanOrEqual(self, newUpdatedAtLessThanOrEqual: int) -> None: ...
    def getSubmittedAtGreaterThanOrEqual(self) -> int: ...
    def setSubmittedAtGreaterThanOrEqual(self, newSubmittedAtGreaterThanOrEqual: int) -> None: ...
    def getSubmittedAtLessThanOrEqual(self) -> int: ...
    def setSubmittedAtLessThanOrEqual(self, newSubmittedAtLessThanOrEqual: int) -> None: ...
    def getEntryIdEqual(self) -> str: ...
    def setEntryIdEqual(self, newEntryIdEqual: str) -> None: ...
    def getEntryIdIn(self) -> str: ...
    def setEntryIdIn(self, newEntryIdIn: str) -> None: ...
    def getDistributionProfileIdEqual(self) -> int: ...
    def setDistributionProfileIdEqual(self, newDistributionProfileIdEqual: int) -> None: ...
    def getDistributionProfileIdIn(self) -> str: ...
    def setDistributionProfileIdIn(self, newDistributionProfileIdIn: str) -> None: ...
    def getStatusEqual(self) -> KalturaEntryDistributionStatus: ...
    def setStatusEqual(self, newStatusEqual: KalturaEntryDistributionStatus) -> None: ...
    def getStatusIn(self) -> str: ...
    def setStatusIn(self, newStatusIn: str) -> None: ...
    def getDirtyStatusEqual(self) -> KalturaEntryDistributionFlag: ...
    def setDirtyStatusEqual(self, newDirtyStatusEqual: KalturaEntryDistributionFlag) -> None: ...
    def getDirtyStatusIn(self) -> str: ...
    def setDirtyStatusIn(self, newDirtyStatusIn: str) -> None: ...
    def getSunriseGreaterThanOrEqual(self) -> int: ...
    def setSunriseGreaterThanOrEqual(self, newSunriseGreaterThanOrEqual: int) -> None: ...
    def getSunriseLessThanOrEqual(self) -> int: ...
    def setSunriseLessThanOrEqual(self, newSunriseLessThanOrEqual: int) -> None: ...
    def getSunsetGreaterThanOrEqual(self) -> int: ...
    def setSunsetGreaterThanOrEqual(self, newSunsetGreaterThanOrEqual: int) -> None: ...
    def getSunsetLessThanOrEqual(self) -> int: ...
    def setSunsetLessThanOrEqual(self, newSunsetLessThanOrEqual: int) -> None: ...

class KalturaGenericDistributionProviderActionFilter(KalturaGenericDistributionProviderActionBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            genericDistributionProviderIdEqual: int = NotImplemented,
            genericDistributionProviderIdIn: str = NotImplemented,
            actionEqual: KalturaDistributionAction = NotImplemented,
            actionIn: str = NotImplemented): ...
        pass

class KalturaConfigurableDistributionProfileBaseFilter(KalturaDistributionProfileFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            statusEqual: KalturaDistributionProfileStatus = NotImplemented,
            statusIn: str = NotImplemented): ...
        pass

class KalturaDistributionDisableJobData(KalturaDistributionUpdateJobData):
    def __init__(self,
            distributionProfileId: int = NotImplemented,
            distributionProfile: KalturaDistributionProfile = NotImplemented,
            entryDistributionId: int = NotImplemented,
            entryDistribution: KalturaEntryDistribution = NotImplemented,
            remoteId: str = NotImplemented,
            providerType: KalturaDistributionProviderType = NotImplemented,
            providerData: KalturaDistributionJobProviderData = NotImplemented,
            results: str = NotImplemented,
            sentData: str = NotImplemented,
            mediaFiles: List[KalturaDistributionRemoteMediaFile] = NotImplemented): ...
        pass

class KalturaDistributionEnableJobData(KalturaDistributionUpdateJobData):
    def __init__(self,
            distributionProfileId: int = NotImplemented,
            distributionProfile: KalturaDistributionProfile = NotImplemented,
            entryDistributionId: int = NotImplemented,
            entryDistribution: KalturaEntryDistribution = NotImplemented,
            remoteId: str = NotImplemented,
            providerType: KalturaDistributionProviderType = NotImplemented,
            providerData: KalturaDistributionJobProviderData = NotImplemented,
            results: str = NotImplemented,
            sentData: str = NotImplemented,
            mediaFiles: List[KalturaDistributionRemoteMediaFile] = NotImplemented): ...
        pass

class KalturaEntryDistributionFilter(KalturaEntryDistributionBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            submittedAtGreaterThanOrEqual: int = NotImplemented,
            submittedAtLessThanOrEqual: int = NotImplemented,
            entryIdEqual: str = NotImplemented,
            entryIdIn: str = NotImplemented,
            distributionProfileIdEqual: int = NotImplemented,
            distributionProfileIdIn: str = NotImplemented,
            statusEqual: KalturaEntryDistributionStatus = NotImplemented,
            statusIn: str = NotImplemented,
            dirtyStatusEqual: KalturaEntryDistributionFlag = NotImplemented,
            dirtyStatusIn: str = NotImplemented,
            sunriseGreaterThanOrEqual: int = NotImplemented,
            sunriseLessThanOrEqual: int = NotImplemented,
            sunsetGreaterThanOrEqual: int = NotImplemented,
            sunsetLessThanOrEqual: int = NotImplemented): ...
        pass

class KalturaGenericDistributionProfileBaseFilter(KalturaDistributionProfileFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            statusEqual: KalturaDistributionProfileStatus = NotImplemented,
            statusIn: str = NotImplemented): ...
        pass

class KalturaGenericDistributionProviderBaseFilter(KalturaDistributionProviderFilter):
    idEqual: int
    idIn: str
    createdAtGreaterThanOrEqual: int
    createdAtLessThanOrEqual: int
    updatedAtGreaterThanOrEqual: int
    updatedAtLessThanOrEqual: int
    partnerIdEqual: int
    partnerIdIn: str
    isDefaultEqual: KalturaNullableBoolean
    isDefaultIn: str
    statusEqual: KalturaGenericDistributionProviderStatus
    statusIn: str
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            typeEqual: KalturaDistributionProviderType = NotImplemented,
            typeIn: str = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            isDefaultEqual: KalturaNullableBoolean = NotImplemented,
            isDefaultIn: str = NotImplemented,
            statusEqual: KalturaGenericDistributionProviderStatus = NotImplemented,
            statusIn: str = NotImplemented): ...

    def getIdEqual(self) -> int: ...
    def setIdEqual(self, newIdEqual: int) -> None: ...
    def getIdIn(self) -> str: ...
    def setIdIn(self, newIdIn: str) -> None: ...
    def getCreatedAtGreaterThanOrEqual(self) -> int: ...
    def setCreatedAtGreaterThanOrEqual(self, newCreatedAtGreaterThanOrEqual: int) -> None: ...
    def getCreatedAtLessThanOrEqual(self) -> int: ...
    def setCreatedAtLessThanOrEqual(self, newCreatedAtLessThanOrEqual: int) -> None: ...
    def getUpdatedAtGreaterThanOrEqual(self) -> int: ...
    def setUpdatedAtGreaterThanOrEqual(self, newUpdatedAtGreaterThanOrEqual: int) -> None: ...
    def getUpdatedAtLessThanOrEqual(self) -> int: ...
    def setUpdatedAtLessThanOrEqual(self, newUpdatedAtLessThanOrEqual: int) -> None: ...
    def getPartnerIdEqual(self) -> int: ...
    def setPartnerIdEqual(self, newPartnerIdEqual: int) -> None: ...
    def getPartnerIdIn(self) -> str: ...
    def setPartnerIdIn(self, newPartnerIdIn: str) -> None: ...
    def getIsDefaultEqual(self) -> KalturaNullableBoolean: ...
    def setIsDefaultEqual(self, newIsDefaultEqual: KalturaNullableBoolean) -> None: ...
    def getIsDefaultIn(self) -> str: ...
    def setIsDefaultIn(self, newIsDefaultIn: str) -> None: ...
    def getStatusEqual(self) -> KalturaGenericDistributionProviderStatus: ...
    def setStatusEqual(self, newStatusEqual: KalturaGenericDistributionProviderStatus) -> None: ...
    def getStatusIn(self) -> str: ...
    def setStatusIn(self, newStatusIn: str) -> None: ...

class KalturaSyndicationDistributionProfileBaseFilter(KalturaDistributionProfileFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            statusEqual: KalturaDistributionProfileStatus = NotImplemented,
            statusIn: str = NotImplemented): ...
        pass

class KalturaSyndicationDistributionProviderBaseFilter(KalturaDistributionProviderFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            typeEqual: KalturaDistributionProviderType = NotImplemented,
            typeIn: str = NotImplemented): ...
        pass

class KalturaConfigurableDistributionProfileFilter(KalturaConfigurableDistributionProfileBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            statusEqual: KalturaDistributionProfileStatus = NotImplemented,
            statusIn: str = NotImplemented): ...
        pass

class KalturaGenericDistributionProfileFilter(KalturaGenericDistributionProfileBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            statusEqual: KalturaDistributionProfileStatus = NotImplemented,
            statusIn: str = NotImplemented): ...
        pass

class KalturaGenericDistributionProviderFilter(KalturaGenericDistributionProviderBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            typeEqual: KalturaDistributionProviderType = NotImplemented,
            typeIn: str = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            partnerIdEqual: int = NotImplemented,
            partnerIdIn: str = NotImplemented,
            isDefaultEqual: KalturaNullableBoolean = NotImplemented,
            isDefaultIn: str = NotImplemented,
            statusEqual: KalturaGenericDistributionProviderStatus = NotImplemented,
            statusIn: str = NotImplemented): ...
        pass

class KalturaSyndicationDistributionProfileFilter(KalturaSyndicationDistributionProfileBaseFilter):
    def __init__(self,
            orderBy: str = NotImplemented,
            advancedSearch: KalturaSearchItem = NotImplemented,
            idEqual: int = NotImplemented,
            idIn: str = NotImplemented,
            createdAtGreaterThanOrEqual: int = NotImplemented,
            createdAtLessThanOrEqual: int = NotImplemented,
            updatedAtGreaterThanOrEqual: int = NotImplemented,
            updatedAtLessThanOrEqual: int = NotImplemented,
            statusEqual: KalturaDistributionProfileStatus = NotImplemented,
            statusIn: str = NotImplemented): ...
        pass

class KalturaDistributionProfileService(KalturaServiceBase):
    def add(self, distributionProfile: KalturaDistributionProfile) -> KalturaDistributionProfile: ...
    def delete(self, id: int) -> None: ...
    def get(self, id: int) -> KalturaDistributionProfile: ...
    def list(self, filter: KalturaDistributionProfileFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaDistributionProfileListResponse: ...
    def listByPartner(self, filter: KalturaPartnerFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaDistributionProfileListResponse: ...
    def update(self, id: int, distributionProfile: KalturaDistributionProfile) -> KalturaDistributionProfile: ...
    def updateStatus(self, id: int, status: int) -> KalturaDistributionProfile: ...

class KalturaEntryDistributionService(KalturaServiceBase):
    def add(self, entryDistribution: KalturaEntryDistribution) -> KalturaEntryDistribution: ...
    def delete(self, id: int) -> None: ...
    def get(self, id: int) -> KalturaEntryDistribution: ...
    def list(self, filter: KalturaEntryDistributionFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaEntryDistributionListResponse: ...
    def retrySubmit(self, id: int) -> KalturaEntryDistribution: ...
    def serveReturnedData(self, id: int, actionType: int) -> IO[Any]: ...
    def serveSentData(self, id: int, actionType: int) -> IO[Any]: ...
    def submitAdd(self, id: int, submitWhenReady: bool = False) -> KalturaEntryDistribution: ...
    def submitDelete(self, id: int) -> KalturaEntryDistribution: ...
    def submitFetchReport(self, id: int) -> KalturaEntryDistribution: ...
    def submitUpdate(self, id: int) -> KalturaEntryDistribution: ...
    def update(self, id: int, entryDistribution: KalturaEntryDistribution) -> KalturaEntryDistribution: ...
    def validate(self, id: int) -> KalturaEntryDistribution: ...

class KalturaDistributionProviderService(KalturaServiceBase):
    def list(self, filter: KalturaDistributionProviderFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaDistributionProviderListResponse: ...

class KalturaGenericDistributionProviderService(KalturaServiceBase):
    def add(self, genericDistributionProvider: KalturaGenericDistributionProvider) -> KalturaGenericDistributionProvider: ...
    def delete(self, id: int) -> None: ...
    def get(self, id: int) -> KalturaGenericDistributionProvider: ...
    def list(self, filter: KalturaGenericDistributionProviderFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaGenericDistributionProviderListResponse: ...
    def update(self, id: int, genericDistributionProvider: KalturaGenericDistributionProvider) -> KalturaGenericDistributionProvider: ...

class KalturaGenericDistributionProviderActionService(KalturaServiceBase):
    def add(self, genericDistributionProviderAction: KalturaGenericDistributionProviderAction) -> KalturaGenericDistributionProviderAction: ...
    def addMrssTransform(self, id: int, xslData: str) -> KalturaGenericDistributionProviderAction: ...
    def addMrssTransformFromFile(self, id: int, xslFile: IO[Any]) -> KalturaGenericDistributionProviderAction: ...
    def addMrssValidate(self, id: int, xsdData: str) -> KalturaGenericDistributionProviderAction: ...
    def addMrssValidateFromFile(self, id: int, xsdFile: IO[Any]) -> KalturaGenericDistributionProviderAction: ...
    def addResultsTransform(self, id: int, transformData: str) -> KalturaGenericDistributionProviderAction: ...
    def addResultsTransformFromFile(self, id: int, transformFile: IO[Any]) -> KalturaGenericDistributionProviderAction: ...
    def delete(self, id: int) -> None: ...
    def deleteByProviderId(self, genericDistributionProviderId: int, actionType: int) -> None: ...
    def get(self, id: int) -> KalturaGenericDistributionProviderAction: ...
    def getByProviderId(self, genericDistributionProviderId: int, actionType: int) -> KalturaGenericDistributionProviderAction: ...
    def list(self, filter: KalturaGenericDistributionProviderActionFilter = NotImplemented, pager: KalturaFilterPager = NotImplemented) -> KalturaGenericDistributionProviderActionListResponse: ...
    def update(self, id: int, genericDistributionProviderAction: KalturaGenericDistributionProviderAction) -> KalturaGenericDistributionProviderAction: ...
    def updateByProviderId(self, genericDistributionProviderId: int, actionType: int, genericDistributionProviderAction: KalturaGenericDistributionProviderAction) -> KalturaGenericDistributionProviderAction: ...

class KalturaContentDistributionClientPluginServicesProxy:
    distributionProfile: KalturaDistributionProfileService
    entryDistribution: KalturaEntryDistributionService
    distributionProvider: KalturaDistributionProviderService
    genericDistributionProvider: KalturaGenericDistributionProviderService
    genericDistributionProviderAction: KalturaGenericDistributionProviderActionService